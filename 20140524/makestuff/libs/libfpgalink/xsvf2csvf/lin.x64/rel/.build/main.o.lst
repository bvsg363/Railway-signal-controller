   1              		.file	"main.c"
   2              		.section	.rodata.str1.8,"aMS",@progbits,1
   3              		.align 8
   4              	.LC0:
   5 0000 53796E6F 		.string	"Synopsis: %s [-u] <src.xsvf|src.svf> <dst.csvf>\n"
   5      70736973 
   5      3A202573 
   5      205B2D75 
   5      5D203C73 
   6              		.section	.rodata.str1.1,"aMS",@progbits,1
   7              	.LC1:
   8 0000 2E737666 		.string	".svf"
   8      00
   9              	.LC2:
  10 0005 2E787376 		.string	".xsvf"
  10      6600
  11              		.section	.rodata.str1.8
  12 0031 00000000 		.align 8
  12      000000
  13              	.LC3:
  14 0038 536F7572 		.string	"Source filename should have an .svf or an .xsvf extension\n"
  14      63652066 
  14      696C656E 
  14      616D6520 
  14      73686F75 
  15              		.section	.rodata.str1.1
  16              	.LC4:
  17 000b 25730A00 		.string	"%s\n"
  18              		.section	.text.startup,"ax",@progbits
  19              		.p2align 4,,15
  20              		.globl	main
  22              	main:
  23              	.LFB35:
  24              		.cfi_startproc
  25 0000 4156     		pushq	%r14
  26              		.cfi_def_cfa_offset 16
  27              		.cfi_offset 14, -16
  28 0002 4155     		pushq	%r13
  29              		.cfi_def_cfa_offset 24
  30              		.cfi_offset 13, -24
  31 0004 4154     		pushq	%r12
  32              		.cfi_def_cfa_offset 32
  33              		.cfi_offset 12, -32
  34 0006 55       		pushq	%rbp
  35              		.cfi_def_cfa_offset 40
  36              		.cfi_offset 6, -40
  37 0007 53       		pushq	%rbx
  38              		.cfi_def_cfa_offset 48
  39              		.cfi_offset 3, -48
  40 0008 660FEFC0 		pxor	%xmm0, %xmm0
  41 000c 4883EC40 		subq	$64, %rsp
  42              		.cfi_def_cfa_offset 112
  43 0010 64488B04 		movq	%fs:40, %rax
  43      25280000 
  43      00
  44 0019 48894424 		movq	%rax, 56(%rsp)
  44      38
  45 001e 31C0     		xorl	%eax, %eax
  46 0020 83FF03   		cmpl	$3, %edi
  47 0023 48C74424 		movq	$0, 8(%rsp)
  47      08000000 
  47      00
  48 002c C7442404 		movl	$0, 4(%rsp)
  48      00000000 
  49 0034 0F294424 		movaps	%xmm0, 16(%rsp)
  49      10
  50 0039 0F294424 		movaps	%xmm0, 32(%rsp)
  50      20
  51 003e 747E     		je	.L2
  52 0040 488D1500 		leaq	.LC0(%rip), %rdx
  52      000000
  53 0047 488D5C24 		leaq	16(%rsp), %rbx
  53      10
  54 004c BD010000 		movl	$1, %ebp
  54      00
  55 0051 488B0E   		movq	(%rsi), %rcx
  56 0054 488B3D00 		movq	stderr(%rip), %rdi
  56      000000
  57 005b BE010000 		movl	$1, %esi
  57      00
  58 0060 E8000000 		call	__fprintf_chk@PLT
  58      00
  59              	.L3:
  60 0065 4889DF   		movq	%rbx, %rdi
  61 0068 E8000000 		call	bufDestroy@PLT
  61      00
  62 006d 488B4C24 		movq	8(%rsp), %rcx
  62      08
  63 0072 4885C9   		testq	%rcx, %rcx
  64 0075 7424     		je	.L1
  65 0077 488B3D00 		movq	stderr(%rip), %rdi
  65      000000
  66 007e 488D1500 		leaq	.LC4(%rip), %rdx
  66      000000
  67 0085 BE010000 		movl	$1, %esi
  67      00
  68 008a 31C0     		xorl	%eax, %eax
  69 008c E8000000 		call	__fprintf_chk@PLT
  69      00
  70 0091 488B7C24 		movq	8(%rsp), %rdi
  70      08
  71 0096 E8000000 		call	bufFreeError@PLT
  71      00
  72              	.L1:
  73 009b 488B5424 		movq	56(%rsp), %rdx
  73      38
  74 00a0 64483314 		xorq	%fs:40, %rdx
  74      25280000 
  74      00
  75 00a9 89E8     		movl	%ebp, %eax
  76 00ab 0F85FD00 		jne	.L17
  76      0000
  77 00b1 4883C440 		addq	$64, %rsp
  78              		.cfi_remember_state
  79              		.cfi_def_cfa_offset 48
  80 00b5 5B       		popq	%rbx
  81              		.cfi_def_cfa_offset 40
  82 00b6 5D       		popq	%rbp
  83              		.cfi_def_cfa_offset 32
  84 00b7 415C     		popq	%r12
  85              		.cfi_def_cfa_offset 24
  86 00b9 415D     		popq	%r13
  87              		.cfi_def_cfa_offset 16
  88 00bb 415E     		popq	%r14
  89              		.cfi_def_cfa_offset 8
  90 00bd C3       		ret
  91              	.L2:
  92              		.cfi_restore_state
  93 00be 488B6E08 		movq	8(%rsi), %rbp
  94 00c2 31C0     		xorl	%eax, %eax
  95 00c4 4883C9FF 		orq	$-1, %rcx
  96 00c8 4C8D7424 		leaq	8(%rsp), %r14
  96      08
  97 00cd 488D5C24 		leaq	16(%rsp), %rbx
  97      10
  98 00d2 4C8B6610 		movq	16(%rsi), %r12
  99 00d6 31D2     		xorl	%edx, %edx
 100 00d8 BE002800 		movl	$10240, %esi
 100      00
 101 00dd 4889EF   		movq	%rbp, %rdi
 102 00e0 F2AE     		repnz scasb
 103 00e2 4889DF   		movq	%rbx, %rdi
 104 00e5 48F7D1   		notq	%rcx
 105 00e8 4989CD   		movq	%rcx, %r13
 106 00eb 4C89F1   		movq	%r14, %rcx
 107 00ee E8000000 		call	bufInitialise@PLT
 107      00
 108 00f3 85C0     		testl	%eax, %eax
 109 00f5 0F858500 		jne	.L9
 109      0000
 110 00fb 4E8D6C2D 		leaq	-6(%rbp,%r13), %r13
 110      FA
 111 0100 488D3D00 		leaq	.LC1(%rip), %rdi
 111      000000
 112 0107 498D7501 		leaq	1(%r13), %rsi
 113 010b E8000000 		call	strcmp@PLT
 113      00
 114 0110 85C0     		testl	%eax, %eax
 115 0112 7457     		je	.L18
 116 0114 488D3D00 		leaq	.LC2(%rip), %rdi
 116      000000
 117 011b 4C89EE   		movq	%r13, %rsi
 118 011e E8000000 		call	strcmp@PLT
 118      00
 119 0123 85C0     		testl	%eax, %eax
 120 0125 7563     		jne	.L6
 121 0127 488D5424 		leaq	4(%rsp), %rdx
 121      04
 122 012c 4C89F1   		movq	%r14, %rcx
 123 012f 4889DE   		movq	%rbx, %rsi
 124 0132 4889EF   		movq	%rbp, %rdi
 125 0135 E8000000 		call	flLoadXsvfAndConvertToCsvf@PLT
 125      00
 126              	.L5:
 127 013a 85C0     		testl	%eax, %eax
 128 013c BD040000 		movl	$4, %ebp
 128      00
 129 0141 0F851EFF 		jne	.L3
 129      FFFF
 130 0147 488B4C24 		movq	24(%rsp), %rcx
 130      18
 131 014c 31D2     		xorl	%edx, %edx
 132 014e 4D89F0   		movq	%r14, %r8
 133 0151 4C89E6   		movq	%r12, %rsi
 134 0154 4889DF   		movq	%rbx, %rdi
 135 0157 E8000000 		call	bufWriteBinaryFile@PLT
 135      00
 136 015c 83F801   		cmpl	$1, %eax
 137 015f 19ED     		sbbl	%ebp, %ebp
 138 0161 F7D5     		notl	%ebp
 139 0163 83E506   		andl	$6, %ebp
 140 0166 E9FAFEFF 		jmp	.L3
 140      FF
 141              	.L18:
 142 016b 488D5424 		leaq	4(%rsp), %rdx
 142      04
 143 0170 4C89F1   		movq	%r14, %rcx
 144 0173 4889DE   		movq	%rbx, %rsi
 145 0176 4889EF   		movq	%rbp, %rdi
 146 0179 E8000000 		call	flLoadSvfAndConvertToCsvf@PLT
 146      00
 147 017e EBBA     		jmp	.L5
 148              	.L9:
 149 0180 BD020000 		movl	$2, %ebp
 149      00
 150 0185 E9DBFEFF 		jmp	.L3
 150      FF
 151              	.L6:
 152 018a 488B3D00 		movq	stderr(%rip), %rdi
 152      000000
 153 0191 488D1500 		leaq	.LC3(%rip), %rdx
 153      000000
 154 0198 BE010000 		movl	$1, %esi
 154      00
 155 019d 31C0     		xorl	%eax, %eax
 156 019f BD030000 		movl	$3, %ebp
 156      00
 157 01a4 E8000000 		call	__fprintf_chk@PLT
 157      00
 158 01a9 E9B7FEFF 		jmp	.L3
 158      FF
 159              	.L17:
 160 01ae E8000000 		call	__stack_chk_fail@PLT
 160      00
 161              		.cfi_endproc
 162              	.LFE35:
 164              		.ident	"GCC: (Ubuntu 7.2.0-8ubuntu3.2) 7.2.0"
 165              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccI9wndV.s:22     .text.startup:0000000000000000 main
     /tmp/ccI9wndV.s:4      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccI9wndV.s:16     .rodata.str1.1:000000000000000b .LC4
     /tmp/ccI9wndV.s:7      .rodata.str1.1:0000000000000000 .LC1
     /tmp/ccI9wndV.s:9      .rodata.str1.1:0000000000000005 .LC2
     /tmp/ccI9wndV.s:13     .rodata.str1.8:0000000000000038 .LC3

UNDEFINED SYMBOLS
stderr
_GLOBAL_OFFSET_TABLE_
__fprintf_chk
bufDestroy
bufFreeError
bufInitialise
strcmp
flLoadXsvfAndConvertToCsvf
bufWriteBinaryFile
flLoadSvfAndConvertToCsvf
__stack_chk_fail
