   1              		.file	"TestDeferredTestReporter.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 44656661 		.string	"DefaultSuite"
   6      756C7453 
   6      75697465 
   6      00
   7              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   8              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  10              	_ZN13UnitTestSuite12GetSuiteNameEv:
  11              	.LFB0:
  12              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  13              		.loc 1 7 0
  14              		.cfi_startproc
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0001 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  20              		.loc 1 8 0
  21 0004 488D0500 		leaq	.LC0(%rip), %rax
  21      000000
   9:../TestSuite.h ****     }
  22              		.loc 1 9 0
  23 000b 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 000c C3       		ret
  26              		.cfi_endproc
  27              	.LFE0:
  29              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  30              		.align 2
  31              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  33              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  34              	.LFB1076:
  35              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  36              		.loc 2 16 0
  37              		.cfi_startproc
  38              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  39              		.cfi_lsda 0x1b,.LLSDA1076
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
  45 0004 53       		pushq	%rbx
  46 0005 4883EC18 		subq	$24, %rsp
  47              		.cfi_offset 3, -24
  48 0009 48897DE8 		movq	%rdi, -24(%rbp)
  49              	.LBB2:
  50              		.loc 2 16 0
  51 000d 488B45E8 		movq	-24(%rbp), %rax
  52 0011 48059000 		addq	$144, %rax
  52      0000
  53 0017 4889C7   		movq	%rax, %rdi
  54              	.LEHB0:
  55 001a E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev@PLT
  55      00
  56              	.LEHE0:
  57 001f 488B45E8 		movq	-24(%rbp), %rax
  58 0023 488D0D00 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rcx
  58      000000
  59 002a BA100000 		movl	$16, %edx
  59      00
  60 002f 4889CE   		movq	%rcx, %rsi
  61 0032 4889C7   		movq	%rax, %rdi
  62              	.LEHB1:
  63 0035 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode@PLT
  63      00
  64              	.LEHE1:
  65              		.loc 2 16 0 is_stmt 0 discriminator 8
  66 003a 488D1500 		leaq	24+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
  66      000000
  67 0041 488B45E8 		movq	-24(%rbp), %rax
  68 0045 488910   		movq	%rdx, (%rax)
  69 0048 488B45E8 		movq	-24(%rbp), %rax
  70 004c 488D9090 		leaq	144(%rax), %rdx
  70      000000
  71 0053 488D0500 		leaq	64+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rax
  71      000000
  72 005a 488902   		movq	%rax, (%rdx)
  73 005d 488B45E8 		movq	-24(%rbp), %rax
  74 0061 4883C070 		addq	$112, %rax
  75 0065 4889C7   		movq	%rax, %rdi
  76              	.LEHB2:
  77 0068 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@PLT
  77      00
  78              	.LEHE2:
  79              	.LBE2:
  80              		.loc 2 16 0
  81 006d EB3B     		jmp	.L9
  82              	.L7:
  83 006f 4889C3   		movq	%rax, %rbx
  84              	.LBB3:
  85 0072 488B45E8 		movq	-24(%rbp), %rax
  86 0076 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
  86      000000
  87 007d 4889D6   		movq	%rdx, %rsi
  88 0080 4889C7   		movq	%rax, %rdi
  89 0083 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
  89      00
  90 0088 EB03     		jmp	.L8
  91              	.L6:
  92 008a 4889C3   		movq	%rax, %rbx
  93              	.L8:
  94              		.loc 2 16 0 discriminator 11
  95 008d 488B45E8 		movq	-24(%rbp), %rax
  96 0091 48059000 		addq	$144, %rax
  96      0000
  97 0097 4889C7   		movq	%rax, %rdi
  98 009a E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
  98      00
  99 009f 4889D8   		movq	%rbx, %rax
 100 00a2 4889C7   		movq	%rax, %rdi
 101              	.LEHB3:
 102 00a5 E8000000 		call	_Unwind_Resume@PLT
 102      00
 103              	.LEHE3:
 104              	.L9:
 105              	.LBE3:
 106              		.loc 2 16 0
 107 00aa 4883C418 		addq	$24, %rsp
 108 00ae 5B       		popq	%rbx
 109 00af 5D       		popq	%rbp
 110              		.cfi_def_cfa 7, 8
 111 00b0 C3       		ret
 112              		.cfi_endproc
 113              	.LFE1076:
 114              		.globl	__gxx_personality_v0
 115              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 116              	.LLSDA1076:
 117 0000 FF       		.byte	0xff
 118 0001 FF       		.byte	0xff
 119 0002 01       		.byte	0x1
 120 0003 12       		.uleb128 .LLSDACSE1076-.LLSDACSB1076
 121              	.LLSDACSB1076:
 122 0004 1A       		.uleb128 .LEHB0-.LFB1076
 123 0005 05       		.uleb128 .LEHE0-.LEHB0
 124 0006 00       		.uleb128 0
 125 0007 00       		.uleb128 0
 126 0008 35       		.uleb128 .LEHB1-.LFB1076
 127 0009 05       		.uleb128 .LEHE1-.LEHB1
 128 000a 8A01     		.uleb128 .L6-.LFB1076
 129 000c 00       		.uleb128 0
 130 000d 68       		.uleb128 .LEHB2-.LFB1076
 131 000e 05       		.uleb128 .LEHE2-.LEHB2
 132 000f 6F       		.uleb128 .L7-.LFB1076
 133 0010 00       		.uleb128 0
 134 0011 A501     		.uleb128 .LEHB3-.LFB1076
 135 0013 05       		.uleb128 .LEHE3-.LEHB3
 136 0014 00       		.uleb128 0
 137 0015 00       		.uleb128 0
 138              	.LLSDACSE1076:
 139              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 141              		.text
 142              		.align 2
 144              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif:
 145              	.LFB1355:
 146              		.file 3 "TestDeferredTestReporter.cpp"
   1:TestDeferredTestReporter.cpp **** #include "../UnitTest++.h"
   2:TestDeferredTestReporter.cpp **** #include "../DeferredTestReporter.h"
   3:TestDeferredTestReporter.cpp **** #include "../Config.h"
   4:TestDeferredTestReporter.cpp **** #include <cstring>
   5:TestDeferredTestReporter.cpp **** 
   6:TestDeferredTestReporter.cpp **** namespace UnitTest
   7:TestDeferredTestReporter.cpp **** {
   8:TestDeferredTestReporter.cpp **** 
   9:TestDeferredTestReporter.cpp **** namespace 
  10:TestDeferredTestReporter.cpp **** {
  11:TestDeferredTestReporter.cpp **** 
  12:TestDeferredTestReporter.cpp **** #ifdef UNITTEST_USE_CUSTOM_STREAMS
  13:TestDeferredTestReporter.cpp **** 	MemoryOutStream& operator <<(MemoryOutStream& lhs, const std::string& rhs)
  14:TestDeferredTestReporter.cpp **** 	{
  15:TestDeferredTestReporter.cpp **** 		lhs << rhs.c_str();
  16:TestDeferredTestReporter.cpp **** 		return lhs;
  17:TestDeferredTestReporter.cpp **** 	}
  18:TestDeferredTestReporter.cpp **** #endif
  19:TestDeferredTestReporter.cpp **** 
  20:TestDeferredTestReporter.cpp **** struct MockDeferredTestReporter : public DeferredTestReporter
  21:TestDeferredTestReporter.cpp **** {
  22:TestDeferredTestReporter.cpp ****     virtual void ReportSummary(int, int, int, float) 
 147              		.loc 3 22 0 is_stmt 1
 148              		.cfi_startproc
 149 0000 55       		pushq	%rbp
 150              		.cfi_def_cfa_offset 16
 151              		.cfi_offset 6, -16
 152 0001 4889E5   		movq	%rsp, %rbp
 153              		.cfi_def_cfa_register 6
 154 0004 48897DF8 		movq	%rdi, -8(%rbp)
 155 0008 8975F4   		movl	%esi, -12(%rbp)
 156 000b 8955F0   		movl	%edx, -16(%rbp)
 157 000e 894DEC   		movl	%ecx, -20(%rbp)
 158 0011 F30F1145 		movss	%xmm0, -24(%rbp)
 158      E8
  23:TestDeferredTestReporter.cpp ****     {
  24:TestDeferredTestReporter.cpp ****     }
 159              		.loc 3 24 0
 160 0016 90       		nop
 161 0017 5D       		popq	%rbp
 162              		.cfi_def_cfa 7, 8
 163 0018 C3       		ret
 164              		.cfi_endproc
 165              	.LFE1355:
 167              		.section	.text._ZN8UnitTest12TestReporterC2Ev,"axG",@progbits,_ZN8UnitTest12TestReporterC5Ev,comda
 168              		.align 2
 169              		.weak	_ZN8UnitTest12TestReporterC2Ev
 171              	_ZN8UnitTest12TestReporterC2Ev:
 172              	.LFB1360:
 173              		.file 4 "../TestReporter.h"
   1:../TestReporter.h **** #ifndef UNITTEST_TESTREPORTER_H
   2:../TestReporter.h **** #define UNITTEST_TESTREPORTER_H
   3:../TestReporter.h **** 
   4:../TestReporter.h **** namespace UnitTest {
   5:../TestReporter.h **** 
   6:../TestReporter.h **** class TestDetails;
   7:../TestReporter.h **** 
   8:../TestReporter.h **** class TestReporter
 174              		.loc 4 8 0
 175              		.cfi_startproc
 176 0000 55       		pushq	%rbp
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 6, -16
 179 0001 4889E5   		movq	%rsp, %rbp
 180              		.cfi_def_cfa_register 6
 181 0004 48897DF8 		movq	%rdi, -8(%rbp)
 182              	.LBB4:
 183              		.loc 4 8 0
 184 0008 488D1500 		leaq	16+_ZTVN8UnitTest12TestReporterE(%rip), %rdx
 184      000000
 185 000f 488B45F8 		movq	-8(%rbp), %rax
 186 0013 488910   		movq	%rdx, (%rax)
 187              	.LBE4:
 188 0016 90       		nop
 189 0017 5D       		popq	%rbp
 190              		.cfi_def_cfa 7, 8
 191 0018 C3       		ret
 192              		.cfi_endproc
 193              	.LFE1360:
 195              		.weak	_ZN8UnitTest12TestReporterC1Ev
 196              		.set	_ZN8UnitTest12TestReporterC1Ev,_ZN8UnitTest12TestReporterC2Ev
 197              		.section	.text._ZN8UnitTest20DeferredTestReporterC2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 198              		.align 2
 199              		.weak	_ZN8UnitTest20DeferredTestReporterC2Ev
 201              	_ZN8UnitTest20DeferredTestReporterC2Ev:
 202              	.LFB1362:
 203              		.file 5 "../DeferredTestReporter.h"
   1:../DeferredTestReporter.h **** #ifndef UNITTEST_DEFERREDTESTREPORTER_H
   2:../DeferredTestReporter.h **** #define UNITTEST_DEFERREDTESTREPORTER_H
   3:../DeferredTestReporter.h **** 
   4:../DeferredTestReporter.h **** #include "TestReporter.h"
   5:../DeferredTestReporter.h **** #include "DeferredTestResult.h"
   6:../DeferredTestReporter.h **** 
   7:../DeferredTestReporter.h **** #include <vector>
   8:../DeferredTestReporter.h **** 
   9:../DeferredTestReporter.h **** namespace UnitTest
  10:../DeferredTestReporter.h **** {
  11:../DeferredTestReporter.h **** 
  12:../DeferredTestReporter.h **** class DeferredTestReporter : public TestReporter
 204              		.loc 5 12 0
 205              		.cfi_startproc
 206              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 207              		.cfi_lsda 0x1b,.LLSDA1362
 208 0000 55       		pushq	%rbp
 209              		.cfi_def_cfa_offset 16
 210              		.cfi_offset 6, -16
 211 0001 4889E5   		movq	%rsp, %rbp
 212              		.cfi_def_cfa_register 6
 213 0004 53       		pushq	%rbx
 214 0005 4883EC18 		subq	$24, %rsp
 215              		.cfi_offset 3, -24
 216 0009 48897DE8 		movq	%rdi, -24(%rbp)
 217              	.LBB5:
 218              		.loc 5 12 0
 219 000d 488B45E8 		movq	-24(%rbp), %rax
 220 0011 4889C7   		movq	%rax, %rdi
 221 0014 E8000000 		call	_ZN8UnitTest12TestReporterC2Ev
 221      00
 222 0019 488D1500 		leaq	16+_ZTVN8UnitTest20DeferredTestReporterE(%rip), %rdx
 222      000000
 223 0020 488B45E8 		movq	-24(%rbp), %rax
 224 0024 488910   		movq	%rdx, (%rax)
 225 0027 488B45E8 		movq	-24(%rbp), %rax
 226 002b 4883C008 		addq	$8, %rax
 227 002f 4889C7   		movq	%rax, %rdi
 228              	.LEHB4:
 229 0032 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 229      00
 230              	.LEHE4:
 231              	.LBE5:
 232 0037 EB1A     		jmp	.L15
 233              	.L14:
 234 0039 4889C3   		movq	%rax, %rbx
 235              	.LBB6:
 236 003c 488B45E8 		movq	-24(%rbp), %rax
 237 0040 4889C7   		movq	%rax, %rdi
 238 0043 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev@PLT
 238      00
 239 0048 4889D8   		movq	%rbx, %rax
 240 004b 4889C7   		movq	%rax, %rdi
 241              	.LEHB5:
 242 004e E8000000 		call	_Unwind_Resume@PLT
 242      00
 243              	.LEHE5:
 244              	.L15:
 245              	.LBE6:
 246 0053 4883C418 		addq	$24, %rsp
 247 0057 5B       		popq	%rbx
 248 0058 5D       		popq	%rbp
 249              		.cfi_def_cfa 7, 8
 250 0059 C3       		ret
 251              		.cfi_endproc
 252              	.LFE1362:
 253              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterC2Ev,"aG",@progbits,_ZN8UnitTest20Def
 254              	.LLSDA1362:
 255 0000 FF       		.byte	0xff
 256 0001 FF       		.byte	0xff
 257 0002 01       		.byte	0x1
 258 0003 08       		.uleb128 .LLSDACSE1362-.LLSDACSB1362
 259              	.LLSDACSB1362:
 260 0004 32       		.uleb128 .LEHB4-.LFB1362
 261 0005 05       		.uleb128 .LEHE4-.LEHB4
 262 0006 39       		.uleb128 .L14-.LFB1362
 263 0007 00       		.uleb128 0
 264 0008 4E       		.uleb128 .LEHB5-.LFB1362
 265 0009 05       		.uleb128 .LEHE5-.LEHB5
 266 000a 00       		.uleb128 0
 267 000b 00       		.uleb128 0
 268              	.LLSDACSE1362:
 269              		.section	.text._ZN8UnitTest20DeferredTestReporterC2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 271              		.weak	_ZN8UnitTest20DeferredTestReporterC1Ev
 272              		.set	_ZN8UnitTest20DeferredTestReporterC1Ev,_ZN8UnitTest20DeferredTestReporterC2Ev
 273              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 274              		.align 2
 275              		.weak	_ZN8UnitTest20DeferredTestReporterD2Ev
 277              	_ZN8UnitTest20DeferredTestReporterD2Ev:
 278              	.LFB1365:
 279              		.loc 5 12 0
 280              		.cfi_startproc
 281              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 282              		.cfi_lsda 0x1b,.LLSDA1365
 283 0000 55       		pushq	%rbp
 284              		.cfi_def_cfa_offset 16
 285              		.cfi_offset 6, -16
 286 0001 4889E5   		movq	%rsp, %rbp
 287              		.cfi_def_cfa_register 6
 288 0004 53       		pushq	%rbx
 289 0005 4883EC18 		subq	$24, %rsp
 290              		.cfi_offset 3, -24
 291 0009 48897DE8 		movq	%rdi, -24(%rbp)
 292              	.LBB7:
 293              		.loc 5 12 0
 294 000d 488D1500 		leaq	16+_ZTVN8UnitTest20DeferredTestReporterE(%rip), %rdx
 294      000000
 295 0014 488B45E8 		movq	-24(%rbp), %rax
 296 0018 488910   		movq	%rdx, (%rax)
 297 001b 488B45E8 		movq	-24(%rbp), %rax
 298 001f 4883C008 		addq	$8, %rax
 299 0023 4889C7   		movq	%rax, %rdi
 300              	.LEHB6:
 301 0026 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 301      00
 302              	.LEHE6:
 303              		.loc 5 12 0 is_stmt 0 discriminator 2
 304 002b 488B45E8 		movq	-24(%rbp), %rax
 305 002f 4889C7   		movq	%rax, %rdi
 306              	.LEHB7:
 307 0032 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev@PLT
 307      00
 308              	.LEHE7:
 309              	.LBE7:
 310 0037 EB1A     		jmp	.L19
 311              	.L18:
 312 0039 4889C3   		movq	%rax, %rbx
 313              	.LBB8:
 314              		.loc 5 12 0
 315 003c 488B45E8 		movq	-24(%rbp), %rax
 316 0040 4889C7   		movq	%rax, %rdi
 317 0043 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev@PLT
 317      00
 318 0048 4889D8   		movq	%rbx, %rax
 319 004b 4889C7   		movq	%rax, %rdi
 320              	.LEHB8:
 321 004e E8000000 		call	_Unwind_Resume@PLT
 321      00
 322              	.LEHE8:
 323              	.L19:
 324              	.LBE8:
 325 0053 4883C418 		addq	$24, %rsp
 326 0057 5B       		popq	%rbx
 327 0058 5D       		popq	%rbp
 328              		.cfi_def_cfa 7, 8
 329 0059 C3       		ret
 330              		.cfi_endproc
 331              	.LFE1365:
 332              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterD2Ev,"aG",@progbits,_ZN8UnitTest20Def
 333              	.LLSDA1365:
 334 0000 FF       		.byte	0xff
 335 0001 FF       		.byte	0xff
 336 0002 01       		.byte	0x1
 337 0003 0C       		.uleb128 .LLSDACSE1365-.LLSDACSB1365
 338              	.LLSDACSB1365:
 339 0004 26       		.uleb128 .LEHB6-.LFB1365
 340 0005 05       		.uleb128 .LEHE6-.LEHB6
 341 0006 39       		.uleb128 .L18-.LFB1365
 342 0007 00       		.uleb128 0
 343 0008 32       		.uleb128 .LEHB7-.LFB1365
 344 0009 05       		.uleb128 .LEHE7-.LEHB7
 345 000a 00       		.uleb128 0
 346 000b 00       		.uleb128 0
 347 000c 4E       		.uleb128 .LEHB8-.LFB1365
 348 000d 05       		.uleb128 .LEHE8-.LEHB8
 349 000e 00       		.uleb128 0
 350 000f 00       		.uleb128 0
 351              	.LLSDACSE1365:
 352              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 354              		.weak	_ZN8UnitTest20DeferredTestReporterD1Ev
 355              		.set	_ZN8UnitTest20DeferredTestReporterD1Ev,_ZN8UnitTest20DeferredTestReporterD2Ev
 356              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 357              		.align 2
 358              		.weak	_ZN8UnitTest20DeferredTestReporterD0Ev
 360              	_ZN8UnitTest20DeferredTestReporterD0Ev:
 361              	.LFB1367:
 362              		.loc 5 12 0 is_stmt 1
 363              		.cfi_startproc
 364              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 365              		.cfi_lsda 0x1b,.LLSDA1367
 366 0000 55       		pushq	%rbp
 367              		.cfi_def_cfa_offset 16
 368              		.cfi_offset 6, -16
 369 0001 4889E5   		movq	%rsp, %rbp
 370              		.cfi_def_cfa_register 6
 371 0004 53       		pushq	%rbx
 372 0005 4883EC18 		subq	$24, %rsp
 373              		.cfi_offset 3, -24
 374 0009 48897DE8 		movq	%rdi, -24(%rbp)
 375              		.loc 5 12 0
 376 000d 488B45E8 		movq	-24(%rbp), %rax
 377 0011 4889C7   		movq	%rax, %rdi
 378              	.LEHB9:
 379 0014 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD1Ev
 379      00
 380              	.LEHE9:
 381              		.loc 5 12 0 is_stmt 0 discriminator 2
 382 0019 488B45E8 		movq	-24(%rbp), %rax
 383 001d 4889C7   		movq	%rax, %rdi
 384 0020 E8000000 		call	_ZdlPv@PLT
 384      00
 385 0025 EB1A     		jmp	.L23
 386              	.L22:
 387 0027 4889C3   		movq	%rax, %rbx
 388              		.loc 5 12 0
 389 002a 488B45E8 		movq	-24(%rbp), %rax
 390 002e 4889C7   		movq	%rax, %rdi
 391 0031 E8000000 		call	_ZdlPv@PLT
 391      00
 392 0036 4889D8   		movq	%rbx, %rax
 393 0039 4889C7   		movq	%rax, %rdi
 394              	.LEHB10:
 395 003c E8000000 		call	_Unwind_Resume@PLT
 395      00
 396              	.LEHE10:
 397              	.L23:
 398 0041 4883C418 		addq	$24, %rsp
 399 0045 5B       		popq	%rbx
 400 0046 5D       		popq	%rbp
 401              		.cfi_def_cfa 7, 8
 402 0047 C3       		ret
 403              		.cfi_endproc
 404              	.LFE1367:
 405              		.section	.gcc_except_table._ZN8UnitTest20DeferredTestReporterD0Ev,"aG",@progbits,_ZN8UnitTest20Def
 406              	.LLSDA1367:
 407 0000 FF       		.byte	0xff
 408 0001 FF       		.byte	0xff
 409 0002 01       		.byte	0x1
 410 0003 08       		.uleb128 .LLSDACSE1367-.LLSDACSB1367
 411              	.LLSDACSB1367:
 412 0004 14       		.uleb128 .LEHB9-.LFB1367
 413 0005 05       		.uleb128 .LEHE9-.LEHB9
 414 0006 27       		.uleb128 .L22-.LFB1367
 415 0007 00       		.uleb128 0
 416 0008 3C       		.uleb128 .LEHB10-.LFB1367
 417 0009 05       		.uleb128 .LEHE10-.LEHB10
 418 000a 00       		.uleb128 0
 419 000b 00       		.uleb128 0
 420              	.LLSDACSE1367:
 421              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 423              		.text
 424 0019 90       		.align 2
 426              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev:
 427              	.LFB1368:
  20:TestDeferredTestReporter.cpp **** {
 428              		.loc 3 20 0 is_stmt 1
 429              		.cfi_startproc
 430 001a 55       		pushq	%rbp
 431              		.cfi_def_cfa_offset 16
 432              		.cfi_offset 6, -16
 433 001b 4889E5   		movq	%rsp, %rbp
 434              		.cfi_def_cfa_register 6
 435 001e 4883EC10 		subq	$16, %rsp
 436 0022 48897DF8 		movq	%rdi, -8(%rbp)
 437              	.LBB9:
  20:TestDeferredTestReporter.cpp **** {
 438              		.loc 3 20 0
 439 0026 488B45F8 		movq	-8(%rbp), %rax
 440 002a 4889C7   		movq	%rax, %rdi
 441 002d E8000000 		call	_ZN8UnitTest20DeferredTestReporterC2Ev
 441      00
 442 0032 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE(%rip), %rdx
 442      000000
 443 0039 488B45F8 		movq	-8(%rbp), %rax
 444 003d 488910   		movq	%rdx, (%rax)
 445              	.LBE9:
 446 0040 90       		nop
 447 0041 C9       		leave
 448              		.cfi_def_cfa 7, 8
 449 0042 C3       		ret
 450              		.cfi_endproc
 451              	.LFE1368:
 453              		.set	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev,_ZN8UnitTest12_GLOBAL__N_124MockDefe
 454              		.section	.rodata
 455              	.LC1:
 456 000d 556E6971 		.string	"UniqueTestName"
 456      75655465 
 456      73744E61 
 456      6D6500
 457              	.LC2:
 458 001c 556E6971 		.string	"UniqueTestSuite"
 458      75655465 
 458      73745375 
 458      69746500 
 459              	.LC3:
 460 002c 66696C65 		.string	"filename.h"
 460      6E616D65 
 460      2E6800
 461              		.text
 462 0043 90       		.align 2
 464              	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev:
 465              	.LFB1370:
  25:TestDeferredTestReporter.cpp **** };
  26:TestDeferredTestReporter.cpp **** 
  27:TestDeferredTestReporter.cpp **** struct DeferredTestReporterFixture
  28:TestDeferredTestReporter.cpp **** {
  29:TestDeferredTestReporter.cpp ****     DeferredTestReporterFixture()
 466              		.loc 3 29 0
 467              		.cfi_startproc
 468              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 469              		.cfi_lsda 0x1b,.LLSDA1370
 470 0044 55       		pushq	%rbp
 471              		.cfi_def_cfa_offset 16
 472              		.cfi_offset 6, -16
 473 0045 4889E5   		movq	%rsp, %rbp
 474              		.cfi_def_cfa_register 6
 475 0048 4156     		pushq	%r14
 476 004a 4155     		pushq	%r13
 477 004c 4154     		pushq	%r12
 478 004e 53       		pushq	%rbx
 479 004f 4883EC20 		subq	$32, %rsp
 480              		.cfi_offset 14, -24
 481              		.cfi_offset 13, -32
 482              		.cfi_offset 12, -40
 483              		.cfi_offset 3, -48
 484 0053 48897DC8 		movq	%rdi, -56(%rbp)
 485              		.loc 3 29 0
 486 0057 64488B04 		movq	%fs:40, %rax
 486      25280000 
 486      00
 487 0060 488945D8 		movq	%rax, -40(%rbp)
 488 0064 31C0     		xorl	%eax, %eax
 489              	.LBB10:
  30:TestDeferredTestReporter.cpp ****         : testName("UniqueTestName")
  31:TestDeferredTestReporter.cpp ****         , testSuite("UniqueTestSuite")
  32:TestDeferredTestReporter.cpp ****         , fileName("filename.h")
  33:TestDeferredTestReporter.cpp ****         , lineNumber(12)
  34:TestDeferredTestReporter.cpp ****         , details(testName.c_str(), testSuite.c_str(), fileName.c_str(), lineNumber)
 490              		.loc 3 34 0
 491 0066 488B45C8 		movq	-56(%rbp), %rax
 492 006a 4889C7   		movq	%rax, %rdi
 493              	.LEHB11:
 494 006d E8A8FFFF 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev
 494      FF
 495              	.LEHE11:
 496 0072 488B45C8 		movq	-56(%rbp), %rax
 497 0076 488D5820 		leaq	32(%rax), %rbx
 498 007a 488D45D7 		leaq	-41(%rbp), %rax
 499 007e 4889C7   		movq	%rax, %rdi
 500 0081 E8000000 		call	_ZNSaIcEC1Ev@PLT
 500      00
 501 0086 488D45D7 		leaq	-41(%rbp), %rax
 502 008a 4889C2   		movq	%rax, %rdx
 503 008d 488D3500 		leaq	.LC1(%rip), %rsi
 503      000000
 504 0094 4889DF   		movq	%rbx, %rdi
 505              	.LEHB12:
 506 0097 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
 506      00
 507              	.LEHE12:
 508              		.loc 3 34 0 is_stmt 0 discriminator 2
 509 009c 488D45D7 		leaq	-41(%rbp), %rax
 510 00a0 4889C7   		movq	%rax, %rdi
 511 00a3 E8000000 		call	_ZNSaIcED1Ev@PLT
 511      00
 512 00a8 488B45C8 		movq	-56(%rbp), %rax
 513 00ac 488D5840 		leaq	64(%rax), %rbx
 514 00b0 488D45D7 		leaq	-41(%rbp), %rax
 515 00b4 4889C7   		movq	%rax, %rdi
 516 00b7 E8000000 		call	_ZNSaIcEC1Ev@PLT
 516      00
 517 00bc 488D45D7 		leaq	-41(%rbp), %rax
 518 00c0 4889C2   		movq	%rax, %rdx
 519 00c3 488D3500 		leaq	.LC2(%rip), %rsi
 519      000000
 520 00ca 4889DF   		movq	%rbx, %rdi
 521              	.LEHB13:
 522 00cd E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
 522      00
 523              	.LEHE13:
 524              		.loc 3 34 0 discriminator 4
 525 00d2 488D45D7 		leaq	-41(%rbp), %rax
 526 00d6 4889C7   		movq	%rax, %rdi
 527 00d9 E8000000 		call	_ZNSaIcED1Ev@PLT
 527      00
 528 00de 488B45C8 		movq	-56(%rbp), %rax
 529 00e2 488D5860 		leaq	96(%rax), %rbx
 530 00e6 488D45D7 		leaq	-41(%rbp), %rax
 531 00ea 4889C7   		movq	%rax, %rdi
 532 00ed E8000000 		call	_ZNSaIcEC1Ev@PLT
 532      00
 533 00f2 488D45D7 		leaq	-41(%rbp), %rax
 534 00f6 4889C2   		movq	%rax, %rdx
 535 00f9 488D3500 		leaq	.LC3(%rip), %rsi
 535      000000
 536 0100 4889DF   		movq	%rbx, %rdi
 537              	.LEHB14:
 538 0103 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
 538      00
 539              	.LEHE14:
 540              		.loc 3 34 0 discriminator 6
 541 0108 488D45D7 		leaq	-41(%rbp), %rax
 542 010c 4889C7   		movq	%rax, %rdi
 543 010f E8000000 		call	_ZNSaIcED1Ev@PLT
 543      00
 544 0114 488B45C8 		movq	-56(%rbp), %rax
 545 0118 C7808000 		movl	$12, 128(%rax)
 545      00000C00 
 545      0000
 546 0122 488B45C8 		movq	-56(%rbp), %rax
 547 0126 488D9888 		leaq	136(%rax), %rbx
 547      000000
 548 012d 488B45C8 		movq	-56(%rbp), %rax
 549 0131 448BA080 		movl	128(%rax), %r12d
 549      000000
 550 0138 488B45C8 		movq	-56(%rbp), %rax
 551 013c 4883C060 		addq	$96, %rax
 552 0140 4889C7   		movq	%rax, %rdi
 553              	.LEHB15:
 554 0143 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 554      00
 555 0148 4989C6   		movq	%rax, %r14
 556 014b 488B45C8 		movq	-56(%rbp), %rax
 557 014f 4883C040 		addq	$64, %rax
 558 0153 4889C7   		movq	%rax, %rdi
 559 0156 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 559      00
 560              		.loc 3 34 0 discriminator 8
 561 015b 4989C5   		movq	%rax, %r13
 562 015e 488B45C8 		movq	-56(%rbp), %rax
 563 0162 4883C020 		addq	$32, %rax
 564 0166 4889C7   		movq	%rax, %rdi
 565 0169 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 565      00
 566              		.loc 3 34 0 discriminator 10
 567 016e 4589E0   		movl	%r12d, %r8d
 568 0171 4C89F1   		movq	%r14, %rcx
 569 0174 4C89EA   		movq	%r13, %rdx
 570 0177 4889C6   		movq	%rax, %rsi
 571 017a 4889DF   		movq	%rbx, %rdi
 572 017d E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 572      00
 573              	.LEHE15:
 574              	.LBE10:
  35:TestDeferredTestReporter.cpp ****     {
  36:TestDeferredTestReporter.cpp ****     }
 575              		.loc 3 36 0 is_stmt 1
 576 0182 EB7D     		jmp	.L38
 577              	.L34:
 578 0184 4889C3   		movq	%rax, %rbx
 579              	.LBB11:
  34:TestDeferredTestReporter.cpp ****     {
 580              		.loc 3 34 0
 581 0187 488D45D7 		leaq	-41(%rbp), %rax
 582 018b 4889C7   		movq	%rax, %rdi
 583 018e E8000000 		call	_ZNSaIcED1Ev@PLT
 583      00
 584 0193 EB55     		jmp	.L27
 585              	.L35:
 586 0195 4889C3   		movq	%rax, %rbx
 587 0198 488D45D7 		leaq	-41(%rbp), %rax
 588 019c 4889C7   		movq	%rax, %rdi
 589 019f E8000000 		call	_ZNSaIcED1Ev@PLT
 589      00
 590 01a4 EB34     		jmp	.L29
 591              	.L36:
 592 01a6 4889C3   		movq	%rax, %rbx
 593 01a9 488D45D7 		leaq	-41(%rbp), %rax
 594 01ad 4889C7   		movq	%rax, %rdi
 595 01b0 E8000000 		call	_ZNSaIcED1Ev@PLT
 595      00
 596 01b5 EB13     		jmp	.L31
 597              	.L37:
 598 01b7 4889C3   		movq	%rax, %rbx
 599 01ba 488B45C8 		movq	-56(%rbp), %rax
 600 01be 4883C060 		addq	$96, %rax
 601 01c2 4889C7   		movq	%rax, %rdi
 602 01c5 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 602      00
 603              	.L31:
 604 01ca 488B45C8 		movq	-56(%rbp), %rax
 605 01ce 4883C040 		addq	$64, %rax
 606 01d2 4889C7   		movq	%rax, %rdi
 607 01d5 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 607      00
 608              	.L29:
 609 01da 488B45C8 		movq	-56(%rbp), %rax
 610 01de 4883C020 		addq	$32, %rax
 611 01e2 4889C7   		movq	%rax, %rdi
 612 01e5 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 612      00
 613              	.L27:
 614 01ea 488B45C8 		movq	-56(%rbp), %rax
 615 01ee 4889C7   		movq	%rax, %rdi
 616 01f1 E8D23400 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 616      00
 617 01f6 4889D8   		movq	%rbx, %rax
 618 01f9 4889C7   		movq	%rax, %rdi
 619              	.LEHB16:
 620 01fc E8000000 		call	_Unwind_Resume@PLT
 620      00
 621              	.LEHE16:
 622              	.L38:
 623              	.LBE11:
 624              		.loc 3 36 0
 625 0201 488B45D8 		movq	-40(%rbp), %rax
 626 0205 64483304 		xorq	%fs:40, %rax
 626      25280000 
 626      00
 627 020e 7405     		je	.L33
 628 0210 E8000000 		call	__stack_chk_fail@PLT
 628      00
 629              	.L33:
 630 0215 4883C420 		addq	$32, %rsp
 631 0219 5B       		popq	%rbx
 632 021a 415C     		popq	%r12
 633 021c 415D     		popq	%r13
 634 021e 415E     		popq	%r14
 635 0220 5D       		popq	%rbp
 636              		.cfi_def_cfa 7, 8
 637 0221 C3       		ret
 638              		.cfi_endproc
 639              	.LFE1370:
 640              		.section	.gcc_except_table,"a",@progbits
 641              	.LLSDA1370:
 642 0000 FF       		.byte	0xff
 643 0001 FF       		.byte	0xff
 644 0002 01       		.byte	0x1
 645 0003 20       		.uleb128 .LLSDACSE1370-.LLSDACSB1370
 646              	.LLSDACSB1370:
 647 0004 29       		.uleb128 .LEHB11-.LFB1370
 648 0005 05       		.uleb128 .LEHE11-.LEHB11
 649 0006 00       		.uleb128 0
 650 0007 00       		.uleb128 0
 651 0008 53       		.uleb128 .LEHB12-.LFB1370
 652 0009 05       		.uleb128 .LEHE12-.LEHB12
 653 000a C002     		.uleb128 .L34-.LFB1370
 654 000c 00       		.uleb128 0
 655 000d 8901     		.uleb128 .LEHB13-.LFB1370
 656 000f 05       		.uleb128 .LEHE13-.LEHB13
 657 0010 D102     		.uleb128 .L35-.LFB1370
 658 0012 00       		.uleb128 0
 659 0013 BF01     		.uleb128 .LEHB14-.LFB1370
 660 0015 05       		.uleb128 .LEHE14-.LEHB14
 661 0016 E202     		.uleb128 .L36-.LFB1370
 662 0018 00       		.uleb128 0
 663 0019 FF01     		.uleb128 .LEHB15-.LFB1370
 664 001b 3F       		.uleb128 .LEHE15-.LEHB15
 665 001c F302     		.uleb128 .L37-.LFB1370
 666 001e 00       		.uleb128 0
 667 001f B803     		.uleb128 .LEHB16-.LFB1370
 668 0021 05       		.uleb128 .LEHE16-.LEHB16
 669 0022 00       		.uleb128 0
 670 0023 00       		.uleb128 0
 671              	.LLSDACSE1370:
 672              		.text
 674              		.align 2
 676              	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev:
 677              	.LFB1374:
  27:TestDeferredTestReporter.cpp **** {
 678              		.loc 3 27 0
 679              		.cfi_startproc
 680              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 681              		.cfi_lsda 0x1b,.LLSDA1374
 682 0222 55       		pushq	%rbp
 683              		.cfi_def_cfa_offset 16
 684              		.cfi_offset 6, -16
 685 0223 4889E5   		movq	%rsp, %rbp
 686              		.cfi_def_cfa_register 6
 687 0226 53       		pushq	%rbx
 688 0227 4883EC18 		subq	$24, %rsp
 689              		.cfi_offset 3, -24
 690 022b 48897DE8 		movq	%rdi, -24(%rbp)
 691              	.LBB12:
  27:TestDeferredTestReporter.cpp **** {
 692              		.loc 3 27 0
 693 022f 488B45E8 		movq	-24(%rbp), %rax
 694 0233 4883C060 		addq	$96, %rax
 695 0237 4889C7   		movq	%rax, %rdi
 696              	.LEHB17:
 697 023a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 697      00
 698              	.LEHE17:
  27:TestDeferredTestReporter.cpp **** {
 699              		.loc 3 27 0 is_stmt 0 discriminator 2
 700 023f 488B45E8 		movq	-24(%rbp), %rax
 701 0243 4883C040 		addq	$64, %rax
 702 0247 4889C7   		movq	%rax, %rdi
 703              	.LEHB18:
 704 024a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 704      00
 705              	.LEHE18:
  27:TestDeferredTestReporter.cpp **** {
 706              		.loc 3 27 0 discriminator 4
 707 024f 488B45E8 		movq	-24(%rbp), %rax
 708 0253 4883C020 		addq	$32, %rax
 709 0257 4889C7   		movq	%rax, %rdi
 710              	.LEHB19:
 711 025a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 711      00
 712              	.LEHE19:
  27:TestDeferredTestReporter.cpp **** {
 713              		.loc 3 27 0 discriminator 6
 714 025f 488B45E8 		movq	-24(%rbp), %rax
 715 0263 4889C7   		movq	%rax, %rdi
 716              	.LEHB20:
 717 0266 E85D3400 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 717      00
 718              	.LEHE20:
 719              	.LBE12:
 720 026b EB44     		jmp	.L46
 721              	.L43:
 722 026d 4889C3   		movq	%rax, %rbx
 723              	.LBB13:
  27:TestDeferredTestReporter.cpp **** {
 724              		.loc 3 27 0
 725 0270 488B45E8 		movq	-24(%rbp), %rax
 726 0274 4883C040 		addq	$64, %rax
 727 0278 4889C7   		movq	%rax, %rdi
 728 027b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 728      00
 729 0280 EB03     		jmp	.L41
 730              	.L44:
 731 0282 4889C3   		movq	%rax, %rbx
 732              	.L41:
  27:TestDeferredTestReporter.cpp **** {
 733              		.loc 3 27 0 discriminator 3
 734 0285 488B45E8 		movq	-24(%rbp), %rax
 735 0289 4883C020 		addq	$32, %rax
 736 028d 4889C7   		movq	%rax, %rdi
 737 0290 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 737      00
 738 0295 EB03     		jmp	.L42
 739              	.L45:
 740 0297 4889C3   		movq	%rax, %rbx
 741              	.L42:
  27:TestDeferredTestReporter.cpp **** {
 742              		.loc 3 27 0 discriminator 5
 743 029a 488B45E8 		movq	-24(%rbp), %rax
 744 029e 4889C7   		movq	%rax, %rdi
 745 02a1 E8223400 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 745      00
 746 02a6 4889D8   		movq	%rbx, %rax
 747 02a9 4889C7   		movq	%rax, %rdi
 748              	.LEHB21:
 749 02ac E8000000 		call	_Unwind_Resume@PLT
 749      00
 750              	.LEHE21:
 751              	.L46:
 752              	.LBE13:
  27:TestDeferredTestReporter.cpp **** {
 753              		.loc 3 27 0
 754 02b1 4883C418 		addq	$24, %rsp
 755 02b5 5B       		popq	%rbx
 756 02b6 5D       		popq	%rbp
 757              		.cfi_def_cfa 7, 8
 758 02b7 C3       		ret
 759              		.cfi_endproc
 760              	.LFE1374:
 761              		.section	.gcc_except_table
 762              	.LLSDA1374:
 763 0024 FF       		.byte	0xff
 764 0025 FF       		.byte	0xff
 765 0026 01       		.byte	0x1
 766 0027 15       		.uleb128 .LLSDACSE1374-.LLSDACSB1374
 767              	.LLSDACSB1374:
 768 0028 18       		.uleb128 .LEHB17-.LFB1374
 769 0029 05       		.uleb128 .LEHE17-.LEHB17
 770 002a 4B       		.uleb128 .L43-.LFB1374
 771 002b 00       		.uleb128 0
 772 002c 28       		.uleb128 .LEHB18-.LFB1374
 773 002d 05       		.uleb128 .LEHE18-.LEHB18
 774 002e 60       		.uleb128 .L44-.LFB1374
 775 002f 00       		.uleb128 0
 776 0030 38       		.uleb128 .LEHB19-.LFB1374
 777 0031 05       		.uleb128 .LEHE19-.LEHB19
 778 0032 75       		.uleb128 .L45-.LFB1374
 779 0033 00       		.uleb128 0
 780 0034 44       		.uleb128 .LEHB20-.LFB1374
 781 0035 05       		.uleb128 .LEHE20-.LEHB20
 782 0036 00       		.uleb128 0
 783 0037 00       		.uleb128 0
 784 0038 8A01     		.uleb128 .LEHB21-.LFB1374
 785 003a 05       		.uleb128 .LEHE21-.LEHB21
 786 003b 00       		.uleb128 0
 787 003c 00       		.uleb128 0
 788              	.LLSDACSE1374:
 789              		.text
 791              		.align 2
 793              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 794              	.LFB1376:
  37:TestDeferredTestReporter.cpp **** 
  38:TestDeferredTestReporter.cpp ****     MockDeferredTestReporter reporter;
  39:TestDeferredTestReporter.cpp ****     std::string const testName;
  40:TestDeferredTestReporter.cpp ****     std::string const testSuite;
  41:TestDeferredTestReporter.cpp ****     std::string const fileName;
  42:TestDeferredTestReporter.cpp ****     int const lineNumber;
  43:TestDeferredTestReporter.cpp ****     TestDetails const details;
  44:TestDeferredTestReporter.cpp **** };
  45:TestDeferredTestReporter.cpp **** 
  46:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestStartCreatesANewDeferredTest)
 795              		.loc 3 46 0 is_stmt 1
 796              		.cfi_startproc
 797 02b8 55       		pushq	%rbp
 798              		.cfi_def_cfa_offset 16
 799              		.cfi_offset 6, -16
 800 02b9 4889E5   		movq	%rsp, %rbp
 801              		.cfi_def_cfa_register 6
 802 02bc 4883EC10 		subq	$16, %rsp
 803 02c0 48897DF8 		movq	%rdi, -8(%rbp)
 804 02c4 488975F0 		movq	%rsi, -16(%rbp)
 805              	.LBB14:
 806              		.loc 3 46 0
 807 02c8 488B45F8 		movq	-8(%rbp), %rax
 808 02cc 4889C7   		movq	%rax, %rdi
 809 02cf E870FDFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 809      FF
 810 02d4 488B45F8 		movq	-8(%rbp), %rax
 811 02d8 488B55F0 		movq	-16(%rbp), %rdx
 812 02dc 488990A8 		movq	%rdx, 168(%rax)
 812      000000
 813              	.LBE14:
 814 02e3 90       		nop
 815 02e4 C9       		leave
 816              		.cfi_def_cfa 7, 8
 817 02e5 C3       		ret
 818              		.cfi_endproc
 819              	.LFE1376:
 821              		.set	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 822              		.section	.rodata
 823              	.LC4:
 824 0037 54657374 		.string	"TestDeferredTestReporter.cpp"
 824      44656665 
 824      72726564 
 824      54657374 
 824      5265706F 
 825 0054 00000000 		.align 8
 826              	.LC5:
 827 0058 5265706F 		.string	"ReportTestStartCreatesANewDeferredTest"
 827      72745465 
 827      73745374 
 827      61727443 
 827      72656174 
 828              		.text
 829              		.align 2
 831              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC2
 832              	.LFB1379:
 833              		.loc 3 46 0
 834              		.cfi_startproc
 835 02e6 55       		pushq	%rbp
 836              		.cfi_def_cfa_offset 16
 837              		.cfi_offset 6, -16
 838 02e7 4889E5   		movq	%rsp, %rbp
 839              		.cfi_def_cfa_register 6
 840 02ea 53       		pushq	%rbx
 841 02eb 4883EC18 		subq	$24, %rsp
 842              		.cfi_offset 3, -24
 843 02ef 48897DE8 		movq	%rdi, -24(%rbp)
 844              	.LBB15:
 845              		.loc 3 46 0
 846 02f3 488B5DE8 		movq	-24(%rbp), %rbx
 847 02f7 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 847      00
 848 02fc 41B82E00 		movl	$46, %r8d
 848      0000
 849 0302 488D0D00 		leaq	.LC4(%rip), %rcx
 849      000000
 850 0309 4889C2   		movq	%rax, %rdx
 851 030c 488D3500 		leaq	.LC5(%rip), %rsi
 851      000000
 852 0313 4889DF   		movq	%rbx, %rdi
 853 0316 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 853      00
 854 031b 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDef
 854      000000
 855 0322 488B45E8 		movq	-24(%rbp), %rax
 856 0326 488910   		movq	%rdx, (%rax)
 857              	.LBE15:
 858 0329 90       		nop
 859 032a 4883C418 		addq	$24, %rsp
 860 032e 5B       		popq	%rbx
 861 032f 5D       		popq	%rbp
 862              		.cfi_def_cfa 7, 8
 863 0330 C3       		ret
 864              		.cfi_endproc
 865              	.LFE1379:
 867              		.set	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 868              		.local	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 869              		.comm	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 870              		.local	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 871              		.comm	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 872 0331 90       		.align 2
 874              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 875              	.LFB1383:
 876              		.loc 3 46 0
 877              		.cfi_startproc
 878 0332 55       		pushq	%rbp
 879              		.cfi_def_cfa_offset 16
 880              		.cfi_offset 6, -16
 881 0333 4889E5   		movq	%rsp, %rbp
 882              		.cfi_def_cfa_register 6
 883 0336 4883EC10 		subq	$16, %rsp
 884 033a 48897DF8 		movq	%rdi, -8(%rbp)
 885              	.LBB16:
 886              		.loc 3 46 0
 887 033e 488B45F8 		movq	-8(%rbp), %rax
 888 0342 4889C7   		movq	%rax, %rdi
 889 0345 E8D8FEFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 889      FF
 890              	.LBE16:
 891 034a 90       		nop
 892 034b C9       		leave
 893              		.cfi_def_cfa 7, 8
 894 034c C3       		ret
 895              		.cfi_endproc
 896              	.LFE1383:
 898              		.set	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 899              		.section	.rodata
 900              	.LC6:
 901 007f 556E6861 		.string	"Unhandled exception: "
 901      6E646C65 
 901      64206578 
 901      63657074 
 901      696F6E3A 
 902 0095 000000   		.align 8
 903              	.LC7:
 904 0098 556E6861 		.string	"Unhandled exception while destroying fixture DeferredTestReporterFixture"
 904      6E646C65 
 904      64206578 
 904      63657074 
 904      696F6E20 
 905 00e1 00000000 		.align 8
 905      000000
 906              	.LC8:
 907 00e8 556E6861 		.string	"Unhandled exception while constructing fixture DeferredTestReporterFixture"
 907      6E646C65 
 907      64206578 
 907      63657074 
 907      696F6E20 
 908              		.text
 909 034d 90       		.align 2
 911              	_ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest7
 912              	.LFB1381:
 913              		.loc 3 46 0
 914              		.cfi_startproc
 915              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 916              		.cfi_lsda 0x1b,.LLSDA1381
 917 034e 55       		pushq	%rbp
 918              		.cfi_def_cfa_offset 16
 919              		.cfi_offset 6, -16
 920 034f 4889E5   		movq	%rsp, %rbp
 921              		.cfi_def_cfa_register 6
 922 0352 4155     		pushq	%r13
 923 0354 4154     		pushq	%r12
 924 0356 53       		pushq	%rbx
 925 0357 4881ECF8 		subq	$504, %rsp
 925      010000
 926              		.cfi_offset 13, -24
 927              		.cfi_offset 12, -32
 928              		.cfi_offset 3, -40
 929 035e 4889BDF8 		movq	%rdi, -520(%rbp)
 929      FDFFFF
 930              		.loc 3 46 0
 931 0365 64488B04 		movq	%fs:40, %rax
 931      25280000 
 931      00
 932 036e 488945D8 		movq	%rax, -40(%rbp)
 933 0372 31C0     		xorl	%eax, %eax
 934 0374 C6850FFE 		movb	$0, -497(%rbp)
 934      FFFF00
 935              	.LBB17:
 936 037b 488B85F8 		movq	-520(%rbp), %rax
 936      FDFFFF
 937 0382 488D5008 		leaq	8(%rax), %rdx
 938 0386 488D8540 		leaq	-448(%rbp), %rax
 938      FEFFFF
 939 038d 4889D6   		movq	%rdx, %rsi
 940 0390 4889C7   		movq	%rax, %rdi
 941              	.LEHB22:
 942 0393 E820FFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 942      FF
 943              	.LEHE22:
 944              		.loc 3 46 0 is_stmt 0 discriminator 1
 945 0398 C6850FFE 		movb	$1, -497(%rbp)
 945      FFFF01
 946 039f 488B85F8 		movq	-520(%rbp), %rax
 946      FDFFFF
 947 03a6 488D5008 		leaq	8(%rax), %rdx
 948 03aa 488D8540 		leaq	-448(%rbp), %rax
 948      FEFFFF
 949 03b1 4889D6   		movq	%rdx, %rsi
 950 03b4 4889C7   		movq	%rax, %rdi
 951              	.LEHB23:
 952 03b7 E8A91F00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreate
 952      00
 953              	.LEHE23:
 954              		.loc 3 46 0 discriminator 3
 955 03bc 488D8540 		leaq	-448(%rbp), %rax
 955      FEFFFF
 956 03c3 4889C7   		movq	%rax, %rdi
 957              	.LEHB24:
 958 03c6 E867FFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 958      FF
 959              	.LEHE24:
 960              	.LBE17:
 961              		.loc 3 46 0
 962 03cb E9690200 		jmp	.L50
 962      00
 963              	.L65:
 964 03d0 4989C4   		movq	%rax, %r12
 965 03d3 4889D3   		movq	%rdx, %rbx
 966              	.LBB18:
 967 03d6 488D8540 		leaq	-448(%rbp), %rax
 967      FEFFFF
 968 03dd 4889C7   		movq	%rax, %rdi
 969 03e0 E84DFFFF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 969      FF
 970 03e5 4C89E0   		movq	%r12, %rax
 971 03e8 4889DA   		movq	%rbx, %rdx
 972 03eb EB00     		jmp	.L52
 973              	.L64:
 974              	.L52:
 975 03ed 4883FA01 		cmpq	$1, %rdx
 976 03f1 740F     		je	.L54
 977 03f3 4883FA02 		cmpq	$2, %rdx
 978 03f7 0F84A700 		je	.L55
 978      0000
 979 03fd E94A0100 		jmp	.L70
 979      00
 980              	.L54:
 981              	.LBE18:
 982              	.LBB19:
 983 0402 4889C7   		movq	%rax, %rdi
 984 0405 E8000000 		call	__cxa_begin_catch@PLT
 984      00
 985 040a 48898518 		movq	%rax, -488(%rbp)
 985      FEFFFF
 986              	.LEHB25:
 987 0411 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 987      00
 988 0416 488B18   		movq	(%rax), %rbx
 989 0419 488B8518 		movq	-488(%rbp), %rax
 989      FEFFFF
 990 0420 488B00   		movq	(%rax), %rax
 991 0423 4883C010 		addq	$16, %rax
 992 0427 488B00   		movq	(%rax), %rax
 993 042a 488B9518 		movq	-488(%rbp), %rdx
 993      FEFFFF
 994 0431 4889D7   		movq	%rdx, %rdi
 995 0434 FFD0     		call	*%rax
 996              	.LVL0:
 997 0436 4989C4   		movq	%rax, %r12
 998 0439 488B8518 		movq	-488(%rbp), %rax
 998      FEFFFF
 999 0440 4889C7   		movq	%rax, %rdi
 1000 0443 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 1000      00
 1001              		.loc 3 46 0 discriminator 5
 1002 0448 4189C5   		movl	%eax, %r13d
 1003 044b 488B8518 		movq	-488(%rbp), %rax
 1003      FEFFFF
 1004 0452 4889C7   		movq	%rax, %rdi
 1005 0455 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 1005      00
 1006              		.loc 3 46 0 discriminator 7
 1007 045a 4889C1   		movq	%rax, %rcx
 1008 045d 488B85F8 		movq	-520(%rbp), %rax
 1008      FDFFFF
 1009 0464 488B5008 		movq	8(%rax), %rdx
 1010 0468 488B85F8 		movq	-520(%rbp), %rax
 1010      FDFFFF
 1011 046f 488B7010 		movq	16(%rax), %rsi
 1012 0473 488D8520 		leaq	-480(%rbp), %rax
 1012      FEFFFF
 1013 047a 4589E8   		movl	%r13d, %r8d
 1014 047d 4889C7   		movq	%rax, %rdi
 1015 0480 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 1015      00
 1016              		.loc 3 46 0 discriminator 11
 1017 0485 488D8520 		leaq	-480(%rbp), %rax
 1017      FEFFFF
 1018 048c 4C89E2   		movq	%r12, %rdx
 1019 048f 4889C6   		movq	%rax, %rsi
 1020 0492 4889DF   		movq	%rbx, %rdi
 1021 0495 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1021      00
 1022              	.LEHE25:
 1023              		.loc 3 46 0 discriminator 13
 1024 049a E8000000 		call	__cxa_end_catch@PLT
 1024      00
 1025              	.LBE19:
 1026 049f E9950100 		jmp	.L50
 1026      00
 1027              	.L55:
 1028              	.LBB20:
 1029              		.loc 3 46 0
 1030 04a4 4889C7   		movq	%rax, %rdi
 1031 04a7 E8000000 		call	__cxa_begin_catch@PLT
 1031      00
 1032 04ac 48898510 		movq	%rax, -496(%rbp)
 1032      FEFFFF
 1033              	.LBB21:
 1034 04b3 488D8540 		leaq	-448(%rbp), %rax
 1034      FEFFFF
 1035 04ba 4889C7   		movq	%rax, %rdi
 1036              	.LEHB26:
 1037 04bd E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1037      00
 1038              	.LEHE26:
 1039              		.loc 3 46 0 discriminator 15
 1040 04c2 488D8540 		leaq	-448(%rbp), %rax
 1040      FEFFFF
 1041 04c9 488D3500 		leaq	.LC6(%rip), %rsi
 1041      000000
 1042 04d0 4889C7   		movq	%rax, %rdi
 1043              	.LEHB27:
 1044 04d3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1044      00
 1045 04d8 4889C3   		movq	%rax, %rbx
 1046 04db 488B8510 		movq	-496(%rbp), %rax
 1046      FEFFFF
 1047 04e2 488B00   		movq	(%rax), %rax
 1048 04e5 4883C010 		addq	$16, %rax
 1049 04e9 488B00   		movq	(%rax), %rax
 1050 04ec 488B9510 		movq	-496(%rbp), %rdx
 1050      FEFFFF
 1051 04f3 4889D7   		movq	%rdx, %rdi
 1052 04f6 FFD0     		call	*%rax
 1053              	.LVL1:
 1054 04f8 4889C6   		movq	%rax, %rsi
 1055 04fb 4889DF   		movq	%rbx, %rdi
 1056 04fe E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1056      00
 1057              		.loc 3 46 0 discriminator 19
 1058 0503 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1058      00
 1059 0508 488B18   		movq	(%rax), %rbx
 1060 050b 488D8540 		leaq	-448(%rbp), %rax
 1060      FEFFFF
 1061 0512 4889C7   		movq	%rax, %rdi
 1062 0515 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 1062      00
 1063              		.loc 3 46 0 discriminator 21
 1064 051a 4889C2   		movq	%rax, %rdx
 1065 051d 488B85F8 		movq	-520(%rbp), %rax
 1065      FDFFFF
 1066 0524 4883C008 		addq	$8, %rax
 1067 0528 4889C6   		movq	%rax, %rsi
 1068 052b 4889DF   		movq	%rbx, %rdi
 1069 052e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1069      00
 1070              	.LEHE27:
 1071              		.loc 3 46 0 discriminator 25
 1072 0533 488D8540 		leaq	-448(%rbp), %rax
 1072      FEFFFF
 1073 053a 4889C7   		movq	%rax, %rdi
 1074              	.LEHB28:
 1075 053d E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1075      00
 1076              	.LEHE28:
 1077              	.LBE21:
 1078              		.loc 3 46 0 discriminator 26
 1079 0542 E8000000 		call	__cxa_end_catch@PLT
 1079      00
 1080              	.LBE20:
 1081 0547 E9ED0000 		jmp	.L50
 1081      00
 1082              	.L70:
 1083              		.loc 3 46 0
 1084 054c 4889C7   		movq	%rax, %rdi
 1085 054f E8000000 		call	__cxa_begin_catch@PLT
 1085      00
 1086 0554 80BD0FFE 		cmpb	$0, -497(%rbp)
 1086      FFFF00
 1087 055b 7445     		je	.L57
 1088              	.LEHB29:
 1089              		.loc 3 46 0 discriminator 28
 1090 055d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1090      00
 1091 0562 488B18   		movq	(%rax), %rbx
 1092 0565 488B85F8 		movq	-520(%rbp), %rax
 1092      FDFFFF
 1093 056c 488D4808 		leaq	8(%rax), %rcx
 1094 0570 488D8520 		leaq	-480(%rbp), %rax
 1094      FEFFFF
 1095 0577 BA2E0000 		movl	$46, %edx
 1095      00
 1096 057c 4889CE   		movq	%rcx, %rsi
 1097 057f 4889C7   		movq	%rax, %rdi
 1098 0582 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1098      00
 1099              		.loc 3 46 0 discriminator 33
 1100 0587 488D8520 		leaq	-480(%rbp), %rax
 1100      FEFFFF
 1101 058e 488D1500 		leaq	.LC7(%rip), %rdx
 1101      000000
 1102 0595 4889C6   		movq	%rax, %rsi
 1103 0598 4889DF   		movq	%rbx, %rdi
 1104 059b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1104      00
 1105 05a0 EB43     		jmp	.L58
 1106              	.L57:
 1107              		.loc 3 46 0 discriminator 29
 1108 05a2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1108      00
 1109 05a7 488B18   		movq	(%rax), %rbx
 1110 05aa 488B85F8 		movq	-520(%rbp), %rax
 1110      FDFFFF
 1111 05b1 488D4808 		leaq	8(%rax), %rcx
 1112 05b5 488D8520 		leaq	-480(%rbp), %rax
 1112      FEFFFF
 1113 05bc BA2E0000 		movl	$46, %edx
 1113      00
 1114 05c1 4889CE   		movq	%rcx, %rsi
 1115 05c4 4889C7   		movq	%rax, %rdi
 1116 05c7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1116      00
 1117              		.loc 3 46 0 discriminator 40
 1118 05cc 488D8520 		leaq	-480(%rbp), %rax
 1118      FEFFFF
 1119 05d3 488D1500 		leaq	.LC8(%rip), %rdx
 1119      000000
 1120 05da 4889C6   		movq	%rax, %rsi
 1121 05dd 4889DF   		movq	%rbx, %rdi
 1122 05e0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1122      00
 1123              	.LEHE29:
 1124              	.L58:
 1125              	.LEHB30:
 1126              		.loc 3 46 0 discriminator 43
 1127 05e5 E8000000 		call	__cxa_end_catch@PLT
 1127      00
 1128 05ea EB4D     		jmp	.L50
 1129              	.L66:
 1130 05ec 4889C3   		movq	%rax, %rbx
 1131              	.LBB23:
 1132              		.loc 3 46 0
 1133 05ef E8000000 		call	__cxa_end_catch@PLT
 1133      00
 1134 05f4 4889D8   		movq	%rbx, %rax
 1135 05f7 4889C7   		movq	%rax, %rdi
 1136 05fa E8000000 		call	_Unwind_Resume@PLT
 1136      00
 1137              	.LEHE30:
 1138              	.L68:
 1139 05ff 4889C3   		movq	%rax, %rbx
 1140              	.LBE23:
 1141              	.LBB24:
 1142              	.LBB22:
 1143 0602 488D8540 		leaq	-448(%rbp), %rax
 1143      FEFFFF
 1144 0609 4889C7   		movq	%rax, %rdi
 1145 060c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1145      00
 1146 0611 EB03     		jmp	.L61
 1147              	.L67:
 1148 0613 4889C3   		movq	%rax, %rbx
 1149              	.L61:
 1150              	.LBE22:
 1151 0616 E8000000 		call	__cxa_end_catch@PLT
 1151      00
 1152 061b 4889D8   		movq	%rbx, %rax
 1153 061e 4889C7   		movq	%rax, %rdi
 1154              	.LEHB31:
 1155 0621 E8000000 		call	_Unwind_Resume@PLT
 1155      00
 1156              	.LEHE31:
 1157              	.L69:
 1158 0626 4889C3   		movq	%rax, %rbx
 1159              	.LBE24:
 1160 0629 E8000000 		call	__cxa_end_catch@PLT
 1160      00
 1161 062e 4889D8   		movq	%rbx, %rax
 1162 0631 4889C7   		movq	%rax, %rdi
 1163              	.LEHB32:
 1164 0634 E8000000 		call	_Unwind_Resume@PLT
 1164      00
 1165              	.LEHE32:
 1166              	.L50:
 1167 0639 488B45D8 		movq	-40(%rbp), %rax
 1168 063d 64483304 		xorq	%fs:40, %rax
 1168      25280000 
 1168      00
 1169 0646 7405     		je	.L63
 1170 0648 E8000000 		call	__stack_chk_fail@PLT
 1170      00
 1171              	.L63:
 1172 064d 4881C4F8 		addq	$504, %rsp
 1172      010000
 1173 0654 5B       		popq	%rbx
 1174 0655 415C     		popq	%r12
 1175 0657 415D     		popq	%r13
 1176 0659 5D       		popq	%rbp
 1177              		.cfi_def_cfa 7, 8
 1178 065a C3       		ret
 1179              		.cfi_endproc
 1180              	.LFE1381:
 1181              		.section	.gcc_except_table
 1182 003d 000000   		.align 4
 1183              	.LLSDA1381:
 1184 0040 FF       		.byte	0xff
 1185 0041 9B       		.byte	0x9b
 1186 0042 55       		.uleb128 .LLSDATT1381-.LLSDATTD1381
 1187              	.LLSDATTD1381:
 1188 0043 01       		.byte	0x1
 1189 0044 3E       		.uleb128 .LLSDACSE1381-.LLSDACSB1381
 1190              	.LLSDACSB1381:
 1191 0045 45       		.uleb128 .LEHB22-.LFB1381
 1192 0046 05       		.uleb128 .LEHE22-.LEHB22
 1193 0047 9F01     		.uleb128 .L64-.LFB1381
 1194 0049 05       		.uleb128 0x5
 1195 004a 69       		.uleb128 .LEHB23-.LFB1381
 1196 004b 05       		.uleb128 .LEHE23-.LEHB23
 1197 004c 8201     		.uleb128 .L65-.LFB1381
 1198 004e 07       		.uleb128 0x7
 1199 004f 78       		.uleb128 .LEHB24-.LFB1381
 1200 0050 05       		.uleb128 .LEHE24-.LEHB24
 1201 0051 9F01     		.uleb128 .L64-.LFB1381
 1202 0053 05       		.uleb128 0x5
 1203 0054 C301     		.uleb128 .LEHB25-.LFB1381
 1204 0056 8901     		.uleb128 .LEHE25-.LEHB25
 1205 0058 9E05     		.uleb128 .L66-.LFB1381
 1206 005a 00       		.uleb128 0
 1207 005b EF02     		.uleb128 .LEHB26-.LFB1381
 1208 005d 05       		.uleb128 .LEHE26-.LEHB26
 1209 005e C505     		.uleb128 .L67-.LFB1381
 1210 0060 00       		.uleb128 0
 1211 0061 8503     		.uleb128 .LEHB27-.LFB1381
 1212 0063 60       		.uleb128 .LEHE27-.LEHB27
 1213 0064 B105     		.uleb128 .L68-.LFB1381
 1214 0066 00       		.uleb128 0
 1215 0067 EF03     		.uleb128 .LEHB28-.LFB1381
 1216 0069 05       		.uleb128 .LEHE28-.LEHB28
 1217 006a C505     		.uleb128 .L67-.LFB1381
 1218 006c 00       		.uleb128 0
 1219 006d 8F04     		.uleb128 .LEHB29-.LFB1381
 1220 006f 8801     		.uleb128 .LEHE29-.LEHB29
 1221 0071 D805     		.uleb128 .L69-.LFB1381
 1222 0073 00       		.uleb128 0
 1223 0074 9705     		.uleb128 .LEHB30-.LFB1381
 1224 0076 1A       		.uleb128 .LEHE30-.LEHB30
 1225 0077 00       		.uleb128 0
 1226 0078 00       		.uleb128 0
 1227 0079 D305     		.uleb128 .LEHB31-.LFB1381
 1228 007b 05       		.uleb128 .LEHE31-.LEHB31
 1229 007c 00       		.uleb128 0
 1230 007d 00       		.uleb128 0
 1231 007e E605     		.uleb128 .LEHB32-.LFB1381
 1232 0080 05       		.uleb128 .LEHE32-.LEHB32
 1233 0081 00       		.uleb128 0
 1234 0082 00       		.uleb128 0
 1235              	.LLSDACSE1381:
 1236 0083 03       		.byte	0x3
 1237 0084 00       		.byte	0
 1238 0085 02       		.byte	0x2
 1239 0086 7D       		.byte	0x7d
 1240 0087 01       		.byte	0x1
 1241 0088 7D       		.byte	0x7d
 1242 0089 00       		.byte	0
 1243 008a 7D       		.byte	0x7d
 1244 008b 00       		.align 4
 1245 008c 00000000 		.long	0
 1246              	
 1247 0090 00000000 		.long	DW.ref._ZTISt9exception-.
 1248 0094 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 1249              	.LLSDATT1381:
 1250              		.text
 1252              		.section	.rodata
 1253 0133 00000000 		.align 8
 1253      00
 1254              	.LC9:
 1255 0138 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, (int)reporter.GetResults().size())"
 1255      6E646C65 
 1255      64206578 
 1255      63657074 
 1255      696F6E20 
 1256              		.text
 1257 065b 90       		.align 2
 1259              	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper
 1260              	.LFB1385:
  47:TestDeferredTestReporter.cpp **** {
 1261              		.loc 3 47 0 is_stmt 1
 1262              		.cfi_startproc
 1263              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1264              		.cfi_lsda 0x1b,.LLSDA1385
 1265 065c 55       		pushq	%rbp
 1266              		.cfi_def_cfa_offset 16
 1267              		.cfi_offset 6, -16
 1268 065d 4889E5   		movq	%rsp, %rbp
 1269              		.cfi_def_cfa_register 6
 1270 0660 53       		pushq	%rbx
 1271 0661 4883EC58 		subq	$88, %rsp
 1272              		.cfi_offset 3, -24
 1273 0665 48897DA8 		movq	%rdi, -88(%rbp)
 1274              		.loc 3 47 0
 1275 0669 64488B04 		movq	%fs:40, %rax
 1275      25280000 
 1275      00
 1276 0672 488945E8 		movq	%rax, -24(%rbp)
 1277 0676 31C0     		xorl	%eax, %eax
  48:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 1278              		.loc 3 48 0
 1279 0678 488B45A8 		movq	-88(%rbp), %rax
 1280 067c 488B55A8 		movq	-88(%rbp), %rdx
 1281 0680 4881C288 		addq	$136, %rdx
 1281      000000
 1282 0687 4889D6   		movq	%rdx, %rsi
 1283 068a 4889C7   		movq	%rax, %rdi
 1284              	.LEHB33:
 1285 068d E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 1285      00
 1286              	.LEHE33:
 1287              	.LEHB34:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1288              		.loc 3 49 0
 1289 0692 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1289      00
 1290 0697 488B08   		movq	(%rax), %rcx
 1291 069a 488D45C0 		leaq	-64(%rbp), %rax
 1292 069e BA310000 		movl	$49, %edx
 1292      00
 1293 06a3 4889CE   		movq	%rcx, %rsi
 1294 06a6 4889C7   		movq	%rax, %rdi
 1295 06a9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1295      00
 1296              		.loc 3 49 0 is_stmt 0 discriminator 2
 1297 06ae 488B45A8 		movq	-88(%rbp), %rax
 1298 06b2 4889C7   		movq	%rax, %rdi
 1299 06b5 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 1299      00
 1300              	.LEHE34:
 1301 06ba 4889C7   		movq	%rax, %rdi
 1302 06bd E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 1302      00
 1303 06c2 8945BC   		movl	%eax, -68(%rbp)
 1304 06c5 C745B801 		movl	$1, -72(%rbp)
 1304      000000
 1305              	.LEHB35:
 1306 06cc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1306      00
 1307              		.loc 3 49 0 discriminator 4
 1308 06d1 488B00   		movq	(%rax), %rax
 1309 06d4 488D4DC0 		leaq	-64(%rbp), %rcx
 1310 06d8 488D55BC 		leaq	-68(%rbp), %rdx
 1311 06dc 488D75B8 		leaq	-72(%rbp), %rsi
 1312 06e0 4889C7   		movq	%rax, %rdi
 1313 06e3 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 1313      00
 1314              	.LEHE35:
  50:TestDeferredTestReporter.cpp **** }
 1315              		.loc 3 50 0 is_stmt 1
 1316 06e8 EB5E     		jmp	.L71
 1317              	.L78:
 1318 06ea EB00     		jmp	.L73
 1319              	.L77:
 1320              	.L73:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1321              		.loc 3 49 0
 1322 06ec 4889C7   		movq	%rax, %rdi
 1323 06ef E8000000 		call	__cxa_begin_catch@PLT
 1323      00
 1324              	.LEHB36:
 1325 06f4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1325      00
 1326 06f9 488B18   		movq	(%rax), %rbx
 1327 06fc E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1327      00
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1328              		.loc 3 49 0 is_stmt 0 discriminator 10
 1329 0701 488B08   		movq	(%rax), %rcx
 1330 0704 488D45C0 		leaq	-64(%rbp), %rax
 1331 0708 BA310000 		movl	$49, %edx
 1331      00
 1332 070d 4889CE   		movq	%rcx, %rsi
 1333 0710 4889C7   		movq	%rax, %rdi
 1334 0713 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1334      00
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1335              		.loc 3 49 0 discriminator 14
 1336 0718 488D45C0 		leaq	-64(%rbp), %rax
 1337 071c 488D1500 		leaq	.LC9(%rip), %rdx
 1337      000000
 1338 0723 4889C6   		movq	%rax, %rsi
 1339 0726 4889DF   		movq	%rbx, %rdi
 1340 0729 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1340      00
 1341              	.LEHE36:
 1342              	.LEHB37:
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1343              		.loc 3 49 0 discriminator 16
 1344 072e E8000000 		call	__cxa_end_catch@PLT
 1344      00
 1345              	.LEHE37:
 1346              		.loc 3 50 0 is_stmt 1 discriminator 16
 1347 0733 EB13     		jmp	.L71
 1348              	.L79:
 1349 0735 4889C3   		movq	%rax, %rbx
  49:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(1, (int)reporter.GetResults().size());
 1350              		.loc 3 49 0
 1351 0738 E8000000 		call	__cxa_end_catch@PLT
 1351      00
 1352 073d 4889D8   		movq	%rbx, %rax
 1353 0740 4889C7   		movq	%rax, %rdi
 1354              	.LEHB38:
 1355 0743 E8000000 		call	_Unwind_Resume@PLT
 1355      00
 1356              	.LEHE38:
 1357              	.L71:
 1358              		.loc 3 50 0
 1359 0748 488B45E8 		movq	-24(%rbp), %rax
 1360 074c 64483304 		xorq	%fs:40, %rax
 1360      25280000 
 1360      00
 1361 0755 7405     		je	.L76
 1362 0757 E8000000 		call	__stack_chk_fail@PLT
 1362      00
 1363              	.L76:
 1364 075c 4883C458 		addq	$88, %rsp
 1365 0760 5B       		popq	%rbx
 1366 0761 5D       		popq	%rbp
 1367              		.cfi_def_cfa 7, 8
 1368 0762 C3       		ret
 1369              		.cfi_endproc
 1370              	.LFE1385:
 1371              		.section	.gcc_except_table
 1372              		.align 4
 1373              	.LLSDA1385:
 1374 0098 FF       		.byte	0xff
 1375 0099 9B       		.byte	0x9b
 1376 009a 29       		.uleb128 .LLSDATT1385-.LLSDATTD1385
 1377              	.LLSDATTD1385:
 1378 009b 01       		.byte	0x1
 1379 009c 1E       		.uleb128 .LLSDACSE1385-.LLSDACSB1385
 1380              	.LLSDACSB1385:
 1381 009d 31       		.uleb128 .LEHB33-.LFB1385
 1382 009e 05       		.uleb128 .LEHE33-.LEHB33
 1383 009f 00       		.uleb128 0
 1384 00a0 00       		.uleb128 0
 1385 00a1 36       		.uleb128 .LEHB34-.LFB1385
 1386 00a2 28       		.uleb128 .LEHE34-.LEHB34
 1387 00a3 9001     		.uleb128 .L77-.LFB1385
 1388 00a5 01       		.uleb128 0x1
 1389 00a6 70       		.uleb128 .LEHB35-.LFB1385
 1390 00a7 1C       		.uleb128 .LEHE35-.LEHB35
 1391 00a8 8E01     		.uleb128 .L78-.LFB1385
 1392 00aa 03       		.uleb128 0x3
 1393 00ab 9801     		.uleb128 .LEHB36-.LFB1385
 1394 00ad 3A       		.uleb128 .LEHE36-.LEHB36
 1395 00ae D901     		.uleb128 .L79-.LFB1385
 1396 00b0 00       		.uleb128 0
 1397 00b1 D201     		.uleb128 .LEHB37-.LFB1385
 1398 00b3 05       		.uleb128 .LEHE37-.LEHB37
 1399 00b4 00       		.uleb128 0
 1400 00b5 00       		.uleb128 0
 1401 00b6 E701     		.uleb128 .LEHB38-.LFB1385
 1402 00b8 05       		.uleb128 .LEHE38-.LEHB38
 1403 00b9 00       		.uleb128 0
 1404 00ba 00       		.uleb128 0
 1405              	.LLSDACSE1385:
 1406 00bb 01       		.byte	0x1
 1407 00bc 00       		.byte	0
 1408 00bd 00       		.byte	0
 1409 00be 7D       		.byte	0x7d
 1410 00bf 00       		.align 4
 1411 00c0 00000000 		.long	0
 1412              	
 1413              	.LLSDATT1385:
 1414              		.text
 1416 0763 90       		.align 2
 1418              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1419              	.LFB1387:
  51:TestDeferredTestReporter.cpp **** 
  52:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestStartCapturesTestNameAndSuite)
 1420              		.loc 3 52 0
 1421              		.cfi_startproc
 1422 0764 55       		pushq	%rbp
 1423              		.cfi_def_cfa_offset 16
 1424              		.cfi_offset 6, -16
 1425 0765 4889E5   		movq	%rsp, %rbp
 1426              		.cfi_def_cfa_register 6
 1427 0768 4883EC10 		subq	$16, %rsp
 1428 076c 48897DF8 		movq	%rdi, -8(%rbp)
 1429 0770 488975F0 		movq	%rsi, -16(%rbp)
 1430              	.LBB25:
 1431              		.loc 3 52 0
 1432 0774 488B45F8 		movq	-8(%rbp), %rax
 1433 0778 4889C7   		movq	%rax, %rdi
 1434 077b E8C4F8FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 1434      FF
 1435 0780 488B45F8 		movq	-8(%rbp), %rax
 1436 0784 488B55F0 		movq	-16(%rbp), %rdx
 1437 0788 488990A8 		movq	%rdx, 168(%rax)
 1437      000000
 1438              	.LBE25:
 1439 078f 90       		nop
 1440 0790 C9       		leave
 1441              		.cfi_def_cfa 7, 8
 1442 0791 C3       		ret
 1443              		.cfi_endproc
 1444              	.LFE1387:
 1446              		.set	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1447              		.section	.rodata
 1448 0181 00000000 		.align 8
 1448      000000
 1449              	.LC10:
 1450 0188 5265706F 		.string	"ReportTestStartCapturesTestNameAndSuite"
 1450      72745465 
 1450      73745374 
 1450      61727443 
 1450      61707475 
 1451              		.text
 1452              		.align 2
 1454              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC
 1455              	.LFB1390:
 1456              		.loc 3 52 0
 1457              		.cfi_startproc
 1458 0792 55       		pushq	%rbp
 1459              		.cfi_def_cfa_offset 16
 1460              		.cfi_offset 6, -16
 1461 0793 4889E5   		movq	%rsp, %rbp
 1462              		.cfi_def_cfa_register 6
 1463 0796 53       		pushq	%rbx
 1464 0797 4883EC18 		subq	$24, %rsp
 1465              		.cfi_offset 3, -24
 1466 079b 48897DE8 		movq	%rdi, -24(%rbp)
 1467              	.LBB26:
 1468              		.loc 3 52 0
 1469 079f 488B5DE8 		movq	-24(%rbp), %rbx
 1470 07a3 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1470      00
 1471 07a8 41B83400 		movl	$52, %r8d
 1471      0000
 1472 07ae 488D0D00 		leaq	.LC4(%rip), %rcx
 1472      000000
 1473 07b5 4889C2   		movq	%rax, %rdx
 1474 07b8 488D3500 		leaq	.LC10(%rip), %rsi
 1474      000000
 1475 07bf 4889DF   		movq	%rbx, %rdi
 1476 07c2 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 1476      00
 1477 07c7 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNa
 1477      000000
 1478 07ce 488B45E8 		movq	-24(%rbp), %rax
 1479 07d2 488910   		movq	%rdx, (%rax)
 1480              	.LBE26:
 1481 07d5 90       		nop
 1482 07d6 4883C418 		addq	$24, %rsp
 1483 07da 5B       		popq	%rbx
 1484 07db 5D       		popq	%rbp
 1485              		.cfi_def_cfa 7, 8
 1486 07dc C3       		ret
 1487              		.cfi_endproc
 1488              	.LFE1390:
 1490              		.set	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 1491              		.local	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 1492              		.comm	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 1493              		.local	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestName
 1494              		.comm	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 1495 07dd 90       		.align 2
 1497              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1498              	.LFB1394:
 1499              		.loc 3 52 0
 1500              		.cfi_startproc
 1501 07de 55       		pushq	%rbp
 1502              		.cfi_def_cfa_offset 16
 1503              		.cfi_offset 6, -16
 1504 07df 4889E5   		movq	%rsp, %rbp
 1505              		.cfi_def_cfa_register 6
 1506 07e2 4883EC10 		subq	$16, %rsp
 1507 07e6 48897DF8 		movq	%rdi, -8(%rbp)
 1508              	.LBB27:
 1509              		.loc 3 52 0
 1510 07ea 488B45F8 		movq	-8(%rbp), %rax
 1511 07ee 4889C7   		movq	%rax, %rdi
 1512 07f1 E82CFAFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 1512      FF
 1513              	.LBE27:
 1514 07f6 90       		nop
 1515 07f7 C9       		leave
 1516              		.cfi_def_cfa 7, 8
 1517 07f8 C3       		ret
 1518              		.cfi_endproc
 1519              	.LFE1394:
 1521              		.set	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1522 07f9 90       		.align 2
 1524              	_ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuite
 1525              	.LFB1392:
 1526              		.loc 3 52 0
 1527              		.cfi_startproc
 1528              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1529              		.cfi_lsda 0x1b,.LLSDA1392
 1530 07fa 55       		pushq	%rbp
 1531              		.cfi_def_cfa_offset 16
 1532              		.cfi_offset 6, -16
 1533 07fb 4889E5   		movq	%rsp, %rbp
 1534              		.cfi_def_cfa_register 6
 1535 07fe 4155     		pushq	%r13
 1536 0800 4154     		pushq	%r12
 1537 0802 53       		pushq	%rbx
 1538 0803 4881ECF8 		subq	$504, %rsp
 1538      010000
 1539              		.cfi_offset 13, -24
 1540              		.cfi_offset 12, -32
 1541              		.cfi_offset 3, -40
 1542 080a 4889BDF8 		movq	%rdi, -520(%rbp)
 1542      FDFFFF
 1543              		.loc 3 52 0
 1544 0811 64488B04 		movq	%fs:40, %rax
 1544      25280000 
 1544      00
 1545 081a 488945D8 		movq	%rax, -40(%rbp)
 1546 081e 31C0     		xorl	%eax, %eax
 1547 0820 C6850FFE 		movb	$0, -497(%rbp)
 1547      FFFF00
 1548              	.LBB28:
 1549 0827 488B85F8 		movq	-520(%rbp), %rax
 1549      FDFFFF
 1550 082e 488D5008 		leaq	8(%rax), %rdx
 1551 0832 488D8540 		leaq	-448(%rbp), %rax
 1551      FEFFFF
 1552 0839 4889D6   		movq	%rdx, %rsi
 1553 083c 4889C7   		movq	%rax, %rdi
 1554              	.LEHB39:
 1555 083f E820FFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1555      FF
 1556              	.LEHE39:
 1557              		.loc 3 52 0 is_stmt 0 discriminator 1
 1558 0844 C6850FFE 		movb	$1, -497(%rbp)
 1558      FFFF01
 1559 084b 488B85F8 		movq	-520(%rbp), %rax
 1559      FDFFFF
 1560 0852 488D5008 		leaq	8(%rax), %rdx
 1561 0856 488D8540 		leaq	-448(%rbp), %rax
 1561      FEFFFF
 1562 085d 4889D6   		movq	%rdx, %rsi
 1563 0860 4889C7   		movq	%rax, %rdi
 1564              	.LEHB40:
 1565 0863 E8C61D00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCaptur
 1565      00
 1566              	.LEHE40:
 1567              		.loc 3 52 0 discriminator 3
 1568 0868 488D8540 		leaq	-448(%rbp), %rax
 1568      FEFFFF
 1569 086f 4889C7   		movq	%rax, %rdi
 1570              	.LEHB41:
 1571 0872 E867FFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1571      FF
 1572              	.LEHE41:
 1573              	.LBE28:
 1574              		.loc 3 52 0
 1575 0877 E9690200 		jmp	.L83
 1575      00
 1576              	.L98:
 1577 087c 4989C4   		movq	%rax, %r12
 1578 087f 4889D3   		movq	%rdx, %rbx
 1579              	.LBB29:
 1580 0882 488D8540 		leaq	-448(%rbp), %rax
 1580      FEFFFF
 1581 0889 4889C7   		movq	%rax, %rdi
 1582 088c E84DFFFF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 1582      FF
 1583 0891 4C89E0   		movq	%r12, %rax
 1584 0894 4889DA   		movq	%rbx, %rdx
 1585 0897 EB00     		jmp	.L85
 1586              	.L97:
 1587              	.L85:
 1588 0899 4883FA01 		cmpq	$1, %rdx
 1589 089d 740F     		je	.L87
 1590 089f 4883FA02 		cmpq	$2, %rdx
 1591 08a3 0F84A700 		je	.L88
 1591      0000
 1592 08a9 E94A0100 		jmp	.L103
 1592      00
 1593              	.L87:
 1594              	.LBE29:
 1595              	.LBB30:
 1596 08ae 4889C7   		movq	%rax, %rdi
 1597 08b1 E8000000 		call	__cxa_begin_catch@PLT
 1597      00
 1598 08b6 48898518 		movq	%rax, -488(%rbp)
 1598      FEFFFF
 1599              	.LEHB42:
 1600 08bd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1600      00
 1601 08c2 488B18   		movq	(%rax), %rbx
 1602 08c5 488B8518 		movq	-488(%rbp), %rax
 1602      FEFFFF
 1603 08cc 488B00   		movq	(%rax), %rax
 1604 08cf 4883C010 		addq	$16, %rax
 1605 08d3 488B00   		movq	(%rax), %rax
 1606 08d6 488B9518 		movq	-488(%rbp), %rdx
 1606      FEFFFF
 1607 08dd 4889D7   		movq	%rdx, %rdi
 1608 08e0 FFD0     		call	*%rax
 1609              	.LVL2:
 1610 08e2 4989C4   		movq	%rax, %r12
 1611 08e5 488B8518 		movq	-488(%rbp), %rax
 1611      FEFFFF
 1612 08ec 4889C7   		movq	%rax, %rdi
 1613 08ef E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 1613      00
 1614              		.loc 3 52 0 discriminator 5
 1615 08f4 4189C5   		movl	%eax, %r13d
 1616 08f7 488B8518 		movq	-488(%rbp), %rax
 1616      FEFFFF
 1617 08fe 4889C7   		movq	%rax, %rdi
 1618 0901 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 1618      00
 1619              		.loc 3 52 0 discriminator 7
 1620 0906 4889C1   		movq	%rax, %rcx
 1621 0909 488B85F8 		movq	-520(%rbp), %rax
 1621      FDFFFF
 1622 0910 488B5008 		movq	8(%rax), %rdx
 1623 0914 488B85F8 		movq	-520(%rbp), %rax
 1623      FDFFFF
 1624 091b 488B7010 		movq	16(%rax), %rsi
 1625 091f 488D8520 		leaq	-480(%rbp), %rax
 1625      FEFFFF
 1626 0926 4589E8   		movl	%r13d, %r8d
 1627 0929 4889C7   		movq	%rax, %rdi
 1628 092c E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 1628      00
 1629              		.loc 3 52 0 discriminator 11
 1630 0931 488D8520 		leaq	-480(%rbp), %rax
 1630      FEFFFF
 1631 0938 4C89E2   		movq	%r12, %rdx
 1632 093b 4889C6   		movq	%rax, %rsi
 1633 093e 4889DF   		movq	%rbx, %rdi
 1634 0941 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1634      00
 1635              	.LEHE42:
 1636              		.loc 3 52 0 discriminator 13
 1637 0946 E8000000 		call	__cxa_end_catch@PLT
 1637      00
 1638              	.LBE30:
 1639 094b E9950100 		jmp	.L83
 1639      00
 1640              	.L88:
 1641              	.LBB31:
 1642              		.loc 3 52 0
 1643 0950 4889C7   		movq	%rax, %rdi
 1644 0953 E8000000 		call	__cxa_begin_catch@PLT
 1644      00
 1645 0958 48898510 		movq	%rax, -496(%rbp)
 1645      FEFFFF
 1646              	.LBB32:
 1647 095f 488D8540 		leaq	-448(%rbp), %rax
 1647      FEFFFF
 1648 0966 4889C7   		movq	%rax, %rdi
 1649              	.LEHB43:
 1650 0969 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1650      00
 1651              	.LEHE43:
 1652              		.loc 3 52 0 discriminator 15
 1653 096e 488D8540 		leaq	-448(%rbp), %rax
 1653      FEFFFF
 1654 0975 488D3500 		leaq	.LC6(%rip), %rsi
 1654      000000
 1655 097c 4889C7   		movq	%rax, %rdi
 1656              	.LEHB44:
 1657 097f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1657      00
 1658 0984 4889C3   		movq	%rax, %rbx
 1659 0987 488B8510 		movq	-496(%rbp), %rax
 1659      FEFFFF
 1660 098e 488B00   		movq	(%rax), %rax
 1661 0991 4883C010 		addq	$16, %rax
 1662 0995 488B00   		movq	(%rax), %rax
 1663 0998 488B9510 		movq	-496(%rbp), %rdx
 1663      FEFFFF
 1664 099f 4889D7   		movq	%rdx, %rdi
 1665 09a2 FFD0     		call	*%rax
 1666              	.LVL3:
 1667 09a4 4889C6   		movq	%rax, %rsi
 1668 09a7 4889DF   		movq	%rbx, %rdi
 1669 09aa E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1669      00
 1670              		.loc 3 52 0 discriminator 19
 1671 09af E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1671      00
 1672 09b4 488B18   		movq	(%rax), %rbx
 1673 09b7 488D8540 		leaq	-448(%rbp), %rax
 1673      FEFFFF
 1674 09be 4889C7   		movq	%rax, %rdi
 1675 09c1 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 1675      00
 1676              		.loc 3 52 0 discriminator 21
 1677 09c6 4889C2   		movq	%rax, %rdx
 1678 09c9 488B85F8 		movq	-520(%rbp), %rax
 1678      FDFFFF
 1679 09d0 4883C008 		addq	$8, %rax
 1680 09d4 4889C6   		movq	%rax, %rsi
 1681 09d7 4889DF   		movq	%rbx, %rdi
 1682 09da E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1682      00
 1683              	.LEHE44:
 1684              		.loc 3 52 0 discriminator 25
 1685 09df 488D8540 		leaq	-448(%rbp), %rax
 1685      FEFFFF
 1686 09e6 4889C7   		movq	%rax, %rdi
 1687              	.LEHB45:
 1688 09e9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1688      00
 1689              	.LEHE45:
 1690              	.LBE32:
 1691              		.loc 3 52 0 discriminator 26
 1692 09ee E8000000 		call	__cxa_end_catch@PLT
 1692      00
 1693              	.LBE31:
 1694 09f3 E9ED0000 		jmp	.L83
 1694      00
 1695              	.L103:
 1696              		.loc 3 52 0
 1697 09f8 4889C7   		movq	%rax, %rdi
 1698 09fb E8000000 		call	__cxa_begin_catch@PLT
 1698      00
 1699 0a00 80BD0FFE 		cmpb	$0, -497(%rbp)
 1699      FFFF00
 1700 0a07 7445     		je	.L90
 1701              	.LEHB46:
 1702              		.loc 3 52 0 discriminator 28
 1703 0a09 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1703      00
 1704 0a0e 488B18   		movq	(%rax), %rbx
 1705 0a11 488B85F8 		movq	-520(%rbp), %rax
 1705      FDFFFF
 1706 0a18 488D4808 		leaq	8(%rax), %rcx
 1707 0a1c 488D8520 		leaq	-480(%rbp), %rax
 1707      FEFFFF
 1708 0a23 BA340000 		movl	$52, %edx
 1708      00
 1709 0a28 4889CE   		movq	%rcx, %rsi
 1710 0a2b 4889C7   		movq	%rax, %rdi
 1711 0a2e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1711      00
 1712              		.loc 3 52 0 discriminator 33
 1713 0a33 488D8520 		leaq	-480(%rbp), %rax
 1713      FEFFFF
 1714 0a3a 488D1500 		leaq	.LC7(%rip), %rdx
 1714      000000
 1715 0a41 4889C6   		movq	%rax, %rsi
 1716 0a44 4889DF   		movq	%rbx, %rdi
 1717 0a47 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1717      00
 1718 0a4c EB43     		jmp	.L91
 1719              	.L90:
 1720              		.loc 3 52 0 discriminator 29
 1721 0a4e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1721      00
 1722 0a53 488B18   		movq	(%rax), %rbx
 1723 0a56 488B85F8 		movq	-520(%rbp), %rax
 1723      FDFFFF
 1724 0a5d 488D4808 		leaq	8(%rax), %rcx
 1725 0a61 488D8520 		leaq	-480(%rbp), %rax
 1725      FEFFFF
 1726 0a68 BA340000 		movl	$52, %edx
 1726      00
 1727 0a6d 4889CE   		movq	%rcx, %rsi
 1728 0a70 4889C7   		movq	%rax, %rdi
 1729 0a73 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1729      00
 1730              		.loc 3 52 0 discriminator 40
 1731 0a78 488D8520 		leaq	-480(%rbp), %rax
 1731      FEFFFF
 1732 0a7f 488D1500 		leaq	.LC8(%rip), %rdx
 1732      000000
 1733 0a86 4889C6   		movq	%rax, %rsi
 1734 0a89 4889DF   		movq	%rbx, %rdi
 1735 0a8c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1735      00
 1736              	.LEHE46:
 1737              	.L91:
 1738              	.LEHB47:
 1739              		.loc 3 52 0 discriminator 43
 1740 0a91 E8000000 		call	__cxa_end_catch@PLT
 1740      00
 1741 0a96 EB4D     		jmp	.L83
 1742              	.L99:
 1743 0a98 4889C3   		movq	%rax, %rbx
 1744              	.LBB34:
 1745              		.loc 3 52 0
 1746 0a9b E8000000 		call	__cxa_end_catch@PLT
 1746      00
 1747 0aa0 4889D8   		movq	%rbx, %rax
 1748 0aa3 4889C7   		movq	%rax, %rdi
 1749 0aa6 E8000000 		call	_Unwind_Resume@PLT
 1749      00
 1750              	.LEHE47:
 1751              	.L101:
 1752 0aab 4889C3   		movq	%rax, %rbx
 1753              	.LBE34:
 1754              	.LBB35:
 1755              	.LBB33:
 1756 0aae 488D8540 		leaq	-448(%rbp), %rax
 1756      FEFFFF
 1757 0ab5 4889C7   		movq	%rax, %rdi
 1758 0ab8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1758      00
 1759 0abd EB03     		jmp	.L94
 1760              	.L100:
 1761 0abf 4889C3   		movq	%rax, %rbx
 1762              	.L94:
 1763              	.LBE33:
 1764 0ac2 E8000000 		call	__cxa_end_catch@PLT
 1764      00
 1765 0ac7 4889D8   		movq	%rbx, %rax
 1766 0aca 4889C7   		movq	%rax, %rdi
 1767              	.LEHB48:
 1768 0acd E8000000 		call	_Unwind_Resume@PLT
 1768      00
 1769              	.LEHE48:
 1770              	.L102:
 1771 0ad2 4889C3   		movq	%rax, %rbx
 1772              	.LBE35:
 1773 0ad5 E8000000 		call	__cxa_end_catch@PLT
 1773      00
 1774 0ada 4889D8   		movq	%rbx, %rax
 1775 0add 4889C7   		movq	%rax, %rdi
 1776              	.LEHB49:
 1777 0ae0 E8000000 		call	_Unwind_Resume@PLT
 1777      00
 1778              	.LEHE49:
 1779              	.L83:
 1780 0ae5 488B45D8 		movq	-40(%rbp), %rax
 1781 0ae9 64483304 		xorq	%fs:40, %rax
 1781      25280000 
 1781      00
 1782 0af2 7405     		je	.L96
 1783 0af4 E8000000 		call	__stack_chk_fail@PLT
 1783      00
 1784              	.L96:
 1785 0af9 4881C4F8 		addq	$504, %rsp
 1785      010000
 1786 0b00 5B       		popq	%rbx
 1787 0b01 415C     		popq	%r12
 1788 0b03 415D     		popq	%r13
 1789 0b05 5D       		popq	%rbp
 1790              		.cfi_def_cfa 7, 8
 1791 0b06 C3       		ret
 1792              		.cfi_endproc
 1793              	.LFE1392:
 1794              		.section	.gcc_except_table
 1795              		.align 4
 1796              	.LLSDA1392:
 1797 00c4 FF       		.byte	0xff
 1798 00c5 9B       		.byte	0x9b
 1799 00c6 55       		.uleb128 .LLSDATT1392-.LLSDATTD1392
 1800              	.LLSDATTD1392:
 1801 00c7 01       		.byte	0x1
 1802 00c8 3E       		.uleb128 .LLSDACSE1392-.LLSDACSB1392
 1803              	.LLSDACSB1392:
 1804 00c9 45       		.uleb128 .LEHB39-.LFB1392
 1805 00ca 05       		.uleb128 .LEHE39-.LEHB39
 1806 00cb 9F01     		.uleb128 .L97-.LFB1392
 1807 00cd 05       		.uleb128 0x5
 1808 00ce 69       		.uleb128 .LEHB40-.LFB1392
 1809 00cf 05       		.uleb128 .LEHE40-.LEHB40
 1810 00d0 8201     		.uleb128 .L98-.LFB1392
 1811 00d2 07       		.uleb128 0x7
 1812 00d3 78       		.uleb128 .LEHB41-.LFB1392
 1813 00d4 05       		.uleb128 .LEHE41-.LEHB41
 1814 00d5 9F01     		.uleb128 .L97-.LFB1392
 1815 00d7 05       		.uleb128 0x5
 1816 00d8 C301     		.uleb128 .LEHB42-.LFB1392
 1817 00da 8901     		.uleb128 .LEHE42-.LEHB42
 1818 00dc 9E05     		.uleb128 .L99-.LFB1392
 1819 00de 00       		.uleb128 0
 1820 00df EF02     		.uleb128 .LEHB43-.LFB1392
 1821 00e1 05       		.uleb128 .LEHE43-.LEHB43
 1822 00e2 C505     		.uleb128 .L100-.LFB1392
 1823 00e4 00       		.uleb128 0
 1824 00e5 8503     		.uleb128 .LEHB44-.LFB1392
 1825 00e7 60       		.uleb128 .LEHE44-.LEHB44
 1826 00e8 B105     		.uleb128 .L101-.LFB1392
 1827 00ea 00       		.uleb128 0
 1828 00eb EF03     		.uleb128 .LEHB45-.LFB1392
 1829 00ed 05       		.uleb128 .LEHE45-.LEHB45
 1830 00ee C505     		.uleb128 .L100-.LFB1392
 1831 00f0 00       		.uleb128 0
 1832 00f1 8F04     		.uleb128 .LEHB46-.LFB1392
 1833 00f3 8801     		.uleb128 .LEHE46-.LEHB46
 1834 00f5 D805     		.uleb128 .L102-.LFB1392
 1835 00f7 00       		.uleb128 0
 1836 00f8 9705     		.uleb128 .LEHB47-.LFB1392
 1837 00fa 1A       		.uleb128 .LEHE47-.LEHB47
 1838 00fb 00       		.uleb128 0
 1839 00fc 00       		.uleb128 0
 1840 00fd D305     		.uleb128 .LEHB48-.LFB1392
 1841 00ff 05       		.uleb128 .LEHE48-.LEHB48
 1842 0100 00       		.uleb128 0
 1843 0101 00       		.uleb128 0
 1844 0102 E605     		.uleb128 .LEHB49-.LFB1392
 1845 0104 05       		.uleb128 .LEHE49-.LEHB49
 1846 0105 00       		.uleb128 0
 1847 0106 00       		.uleb128 0
 1848              	.LLSDACSE1392:
 1849 0107 03       		.byte	0x3
 1850 0108 00       		.byte	0
 1851 0109 02       		.byte	0x2
 1852 010a 7D       		.byte	0x7d
 1853 010b 01       		.byte	0x1
 1854 010c 7D       		.byte	0x7d
 1855 010d 00       		.byte	0
 1856 010e 7D       		.byte	0x7d
 1857 010f 00       		.align 4
 1858 0110 00000000 		.long	0
 1859              	
 1860 0114 00000000 		.long	DW.ref._ZTISt9exception-.
 1861 0118 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 1862              	.LLSDATT1392:
 1863              		.text
 1865              		.section	.rodata
 1866              		.align 8
 1867              	.LC11:
 1868 01b0 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(testName.c_str(), result.testName)"
 1868      6E646C65 
 1868      64206578 
 1868      63657074 
 1868      696F6E20 
 1869 01f6 0000     		.align 8
 1870              	.LC12:
 1871 01f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(testSuite.c_str(), result.suiteName)"
 1871      6E646C65 
 1871      64206578 
 1871      63657074 
 1871      696F6E20 
 1872              		.text
 1873 0b07 90       		.align 2
 1875              	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelpe
 1876              	.LFB1396:
  53:TestDeferredTestReporter.cpp **** {
 1877              		.loc 3 53 0 is_stmt 1
 1878              		.cfi_startproc
 1879              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1880              		.cfi_lsda 0x1b,.LLSDA1396
 1881 0b08 55       		pushq	%rbp
 1882              		.cfi_def_cfa_offset 16
 1883              		.cfi_offset 6, -16
 1884 0b09 4889E5   		movq	%rsp, %rbp
 1885              		.cfi_def_cfa_register 6
 1886 0b0c 53       		pushq	%rbx
 1887 0b0d 4883EC58 		subq	$88, %rsp
 1888              		.cfi_offset 3, -24
 1889 0b11 48897DA8 		movq	%rdi, -88(%rbp)
 1890              		.loc 3 53 0
 1891 0b15 64488B04 		movq	%fs:40, %rax
 1891      25280000 
 1891      00
 1892 0b1e 488945E8 		movq	%rax, -24(%rbp)
 1893 0b22 31C0     		xorl	%eax, %eax
  54:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 1894              		.loc 3 54 0
 1895 0b24 488B45A8 		movq	-88(%rbp), %rax
 1896 0b28 488B55A8 		movq	-88(%rbp), %rdx
 1897 0b2c 4881C288 		addq	$136, %rdx
 1897      000000
 1898 0b33 4889D6   		movq	%rdx, %rsi
 1899 0b36 4889C7   		movq	%rax, %rdi
 1900              	.LEHB50:
 1901 0b39 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 1901      00
  55:TestDeferredTestReporter.cpp **** 
  56:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 1902              		.loc 3 56 0
 1903 0b3e 488B45A8 		movq	-88(%rbp), %rax
 1904 0b42 4889C7   		movq	%rax, %rdi
 1905 0b45 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 1905      00
 1906 0b4a BE000000 		movl	$0, %esi
 1906      00
 1907 0b4f 4889C7   		movq	%rax, %rdi
 1908 0b52 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 1908      00
 1909              	.LEHE50:
 1910 0b57 488945B8 		movq	%rax, -72(%rbp)
 1911              	.LEHB51:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1912              		.loc 3 57 0
 1913 0b5b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1913      00
 1914 0b60 488B08   		movq	(%rax), %rcx
 1915 0b63 488D45C0 		leaq	-64(%rbp), %rax
 1916 0b67 BA390000 		movl	$57, %edx
 1916      00
 1917 0b6c 4889CE   		movq	%rcx, %rsi
 1918 0b6f 4889C7   		movq	%rax, %rdi
 1919 0b72 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1919      00
 1920              		.loc 3 57 0 is_stmt 0 discriminator 2
 1921 0b77 488B45B8 		movq	-72(%rbp), %rax
 1922 0b7b 488D5820 		leaq	32(%rax), %rbx
 1923 0b7f 488B45A8 		movq	-88(%rbp), %rax
 1924 0b83 4883C020 		addq	$32, %rax
 1925 0b87 4889C7   		movq	%rax, %rdi
 1926 0b8a E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 1926      00
 1927 0b8f 488945B0 		movq	%rax, -80(%rbp)
 1928 0b93 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1928      00
 1929              		.loc 3 57 0 discriminator 4
 1930 0b98 488B00   		movq	(%rax), %rax
 1931 0b9b 488D55C0 		leaq	-64(%rbp), %rdx
 1932 0b9f 488D75B0 		leaq	-80(%rbp), %rsi
 1933 0ba3 4889D1   		movq	%rdx, %rcx
 1934 0ba6 4889DA   		movq	%rbx, %rdx
 1935 0ba9 4889C7   		movq	%rax, %rdi
 1936 0bac E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 1936      00
 1937              	.LEHE51:
 1938              	.L106:
 1939              	.LEHB52:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 1940              		.loc 3 58 0 is_stmt 1
 1941 0bb1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1941      00
 1942 0bb6 488B08   		movq	(%rax), %rcx
 1943 0bb9 488D45C0 		leaq	-64(%rbp), %rax
 1944 0bbd BA3A0000 		movl	$58, %edx
 1944      00
 1945 0bc2 4889CE   		movq	%rcx, %rsi
 1946 0bc5 4889C7   		movq	%rax, %rdi
 1947 0bc8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1947      00
 1948              		.loc 3 58 0 is_stmt 0 discriminator 2
 1949 0bcd 488B5DB8 		movq	-72(%rbp), %rbx
 1950 0bd1 488B45A8 		movq	-88(%rbp), %rax
 1951 0bd5 4883C040 		addq	$64, %rax
 1952 0bd9 4889C7   		movq	%rax, %rdi
 1953 0bdc E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 1953      00
 1954 0be1 488945B0 		movq	%rax, -80(%rbp)
 1955 0be5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1955      00
 1956              		.loc 3 58 0 discriminator 4
 1957 0bea 488B00   		movq	(%rax), %rax
 1958 0bed 488D55C0 		leaq	-64(%rbp), %rdx
 1959 0bf1 488D75B0 		leaq	-80(%rbp), %rsi
 1960 0bf5 4889D1   		movq	%rdx, %rcx
 1961 0bf8 4889DA   		movq	%rbx, %rdx
 1962 0bfb 4889C7   		movq	%rax, %rdi
 1963 0bfe E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 1963      00
 1964              	.LEHE52:
  59:TestDeferredTestReporter.cpp **** }
 1965              		.loc 3 59 0 is_stmt 1
 1966 0c03 E9BB0000 		jmp	.L104
 1966      00
 1967              	.L112:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1968              		.loc 3 57 0
 1969 0c08 4889C7   		movq	%rax, %rdi
 1970 0c0b E8000000 		call	__cxa_begin_catch@PLT
 1970      00
 1971              	.LEHB53:
 1972 0c10 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1972      00
 1973 0c15 488B18   		movq	(%rax), %rbx
 1974 0c18 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1974      00
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1975              		.loc 3 57 0 is_stmt 0 discriminator 10
 1976 0c1d 488B08   		movq	(%rax), %rcx
 1977 0c20 488D45C0 		leaq	-64(%rbp), %rax
 1978 0c24 BA390000 		movl	$57, %edx
 1978      00
 1979 0c29 4889CE   		movq	%rcx, %rsi
 1980 0c2c 4889C7   		movq	%rax, %rdi
 1981 0c2f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1981      00
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1982              		.loc 3 57 0 discriminator 14
 1983 0c34 488D45C0 		leaq	-64(%rbp), %rax
 1984 0c38 488D1500 		leaq	.LC11(%rip), %rdx
 1984      000000
 1985 0c3f 4889C6   		movq	%rax, %rsi
 1986 0c42 4889DF   		movq	%rbx, %rdi
 1987 0c45 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1987      00
 1988              	.LEHE53:
 1989              	.LEHB54:
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1990              		.loc 3 57 0 discriminator 16
 1991 0c4a E8000000 		call	__cxa_end_catch@PLT
 1991      00
 1992              	.LEHE54:
 1993 0c4f E95DFFFF 		jmp	.L106
 1993      FF
 1994              	.L113:
 1995 0c54 4889C3   		movq	%rax, %rbx
  57:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testName.c_str(), result.testName);
 1996              		.loc 3 57 0
 1997 0c57 E8000000 		call	__cxa_end_catch@PLT
 1997      00
 1998 0c5c 4889D8   		movq	%rbx, %rax
 1999 0c5f 4889C7   		movq	%rax, %rdi
 2000              	.LEHB55:
 2001 0c62 E8000000 		call	_Unwind_Resume@PLT
 2001      00
 2002              	.LEHE55:
 2003              	.L114:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2004              		.loc 3 58 0 is_stmt 1
 2005 0c67 4889C7   		movq	%rax, %rdi
 2006 0c6a E8000000 		call	__cxa_begin_catch@PLT
 2006      00
 2007              	.LEHB56:
 2008 0c6f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2008      00
 2009 0c74 488B18   		movq	(%rax), %rbx
 2010 0c77 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2010      00
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2011              		.loc 3 58 0 is_stmt 0 discriminator 10
 2012 0c7c 488B08   		movq	(%rax), %rcx
 2013 0c7f 488D45C0 		leaq	-64(%rbp), %rax
 2014 0c83 BA3A0000 		movl	$58, %edx
 2014      00
 2015 0c88 4889CE   		movq	%rcx, %rsi
 2016 0c8b 4889C7   		movq	%rax, %rdi
 2017 0c8e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2017      00
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2018              		.loc 3 58 0 discriminator 14
 2019 0c93 488D45C0 		leaq	-64(%rbp), %rax
 2020 0c97 488D1500 		leaq	.LC12(%rip), %rdx
 2020      000000
 2021 0c9e 4889C6   		movq	%rax, %rsi
 2022 0ca1 4889DF   		movq	%rbx, %rdi
 2023 0ca4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2023      00
 2024              	.LEHE56:
 2025              	.LEHB57:
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2026              		.loc 3 58 0 discriminator 16
 2027 0ca9 E8000000 		call	__cxa_end_catch@PLT
 2027      00
 2028              	.LEHE57:
 2029              		.loc 3 59 0 is_stmt 1 discriminator 16
 2030 0cae EB13     		jmp	.L104
 2031              	.L115:
 2032 0cb0 4889C3   		movq	%rax, %rbx
  58:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(testSuite.c_str(), result.suiteName);
 2033              		.loc 3 58 0
 2034 0cb3 E8000000 		call	__cxa_end_catch@PLT
 2034      00
 2035 0cb8 4889D8   		movq	%rbx, %rax
 2036 0cbb 4889C7   		movq	%rax, %rdi
 2037              	.LEHB58:
 2038 0cbe E8000000 		call	_Unwind_Resume@PLT
 2038      00
 2039              	.LEHE58:
 2040              	.L104:
 2041              		.loc 3 59 0
 2042 0cc3 488B45E8 		movq	-24(%rbp), %rax
 2043 0cc7 64483304 		xorq	%fs:40, %rax
 2043      25280000 
 2043      00
 2044 0cd0 7405     		je	.L111
 2045 0cd2 E8000000 		call	__stack_chk_fail@PLT
 2045      00
 2046              	.L111:
 2047 0cd7 4883C458 		addq	$88, %rsp
 2048 0cdb 5B       		popq	%rbx
 2049 0cdc 5D       		popq	%rbp
 2050              		.cfi_def_cfa 7, 8
 2051 0cdd C3       		ret
 2052              		.cfi_endproc
 2053              	.LFE1396:
 2054              		.section	.gcc_except_table
 2055              		.align 4
 2056              	.LLSDA1396:
 2057 011c FF       		.byte	0xff
 2058 011d 9B       		.byte	0x9b
 2059 011e 39       		.uleb128 .LLSDATT1396-.LLSDATTD1396
 2060              	.LLSDATTD1396:
 2061 011f 01       		.byte	0x1
 2062 0120 2F       		.uleb128 .LLSDACSE1396-.LLSDACSB1396
 2063              	.LLSDACSB1396:
 2064 0121 31       		.uleb128 .LEHB50-.LFB1396
 2065 0122 1E       		.uleb128 .LEHE50-.LEHB50
 2066 0123 00       		.uleb128 0
 2067 0124 00       		.uleb128 0
 2068 0125 53       		.uleb128 .LEHB51-.LFB1396
 2069 0126 56       		.uleb128 .LEHE51-.LEHB51
 2070 0127 8002     		.uleb128 .L112-.LFB1396
 2071 0129 01       		.uleb128 0x1
 2072 012a A901     		.uleb128 .LEHB52-.LFB1396
 2073 012c 52       		.uleb128 .LEHE52-.LEHB52
 2074 012d DF02     		.uleb128 .L114-.LFB1396
 2075 012f 01       		.uleb128 0x1
 2076 0130 8802     		.uleb128 .LEHB53-.LFB1396
 2077 0132 3A       		.uleb128 .LEHE53-.LEHB53
 2078 0133 CC02     		.uleb128 .L113-.LFB1396
 2079 0135 00       		.uleb128 0
 2080 0136 C202     		.uleb128 .LEHB54-.LFB1396
 2081 0138 05       		.uleb128 .LEHE54-.LEHB54
 2082 0139 00       		.uleb128 0
 2083 013a 00       		.uleb128 0
 2084 013b DA02     		.uleb128 .LEHB55-.LFB1396
 2085 013d 05       		.uleb128 .LEHE55-.LEHB55
 2086 013e 00       		.uleb128 0
 2087 013f 00       		.uleb128 0
 2088 0140 E702     		.uleb128 .LEHB56-.LFB1396
 2089 0142 3A       		.uleb128 .LEHE56-.LEHB56
 2090 0143 A803     		.uleb128 .L115-.LFB1396
 2091 0145 00       		.uleb128 0
 2092 0146 A103     		.uleb128 .LEHB57-.LFB1396
 2093 0148 05       		.uleb128 .LEHE57-.LEHB57
 2094 0149 00       		.uleb128 0
 2095 014a 00       		.uleb128 0
 2096 014b B603     		.uleb128 .LEHB58-.LFB1396
 2097 014d 05       		.uleb128 .LEHE58-.LEHB58
 2098 014e 00       		.uleb128 0
 2099 014f 00       		.uleb128 0
 2100              	.LLSDACSE1396:
 2101 0150 01       		.byte	0x1
 2102 0151 00       		.byte	0
 2103 0152 0000     		.align 4
 2104 0154 00000000 		.long	0
 2105              	
 2106              	.LLSDATT1396:
 2107              		.text
 2109              		.align 2
 2111              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2ERKNS_1
 2112              	.LFB1398:
  60:TestDeferredTestReporter.cpp **** 
  61:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportTestEndCapturesTestTime)
 2113              		.loc 3 61 0
 2114              		.cfi_startproc
 2115 0cde 55       		pushq	%rbp
 2116              		.cfi_def_cfa_offset 16
 2117              		.cfi_offset 6, -16
 2118 0cdf 4889E5   		movq	%rsp, %rbp
 2119              		.cfi_def_cfa_register 6
 2120 0ce2 4883EC10 		subq	$16, %rsp
 2121 0ce6 48897DF8 		movq	%rdi, -8(%rbp)
 2122 0cea 488975F0 		movq	%rsi, -16(%rbp)
 2123              	.LBB36:
 2124              		.loc 3 61 0
 2125 0cee 488B45F8 		movq	-8(%rbp), %rax
 2126 0cf2 4889C7   		movq	%rax, %rdi
 2127 0cf5 E84AF3FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 2127      FF
 2128 0cfa 488B45F8 		movq	-8(%rbp), %rax
 2129 0cfe 488B55F0 		movq	-16(%rbp), %rdx
 2130 0d02 488990A8 		movq	%rdx, 168(%rax)
 2130      000000
 2131              	.LBE36:
 2132 0d09 90       		nop
 2133 0d0a C9       		leave
 2134              		.cfi_def_cfa 7, 8
 2135 0d0b C3       		ret
 2136              		.cfi_endproc
 2137              	.LFE1398:
 2139              		.set	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1E
 2140              		.section	.rodata
 2141              	.LC13:
 2142 0240 5265706F 		.string	"ReportTestEndCapturesTestTime"
 2142      72745465 
 2142      7374456E 
 2142      64436170 
 2142      74757265 
 2143              		.text
 2144              		.align 2
 2146              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev:
 2147              	.LFB1401:
 2148              		.loc 3 61 0
 2149              		.cfi_startproc
 2150 0d0c 55       		pushq	%rbp
 2151              		.cfi_def_cfa_offset 16
 2152              		.cfi_offset 6, -16
 2153 0d0d 4889E5   		movq	%rsp, %rbp
 2154              		.cfi_def_cfa_register 6
 2155 0d10 53       		pushq	%rbx
 2156 0d11 4883EC18 		subq	$24, %rsp
 2157              		.cfi_offset 3, -24
 2158 0d15 48897DE8 		movq	%rdi, -24(%rbp)
 2159              	.LBB37:
 2160              		.loc 3 61 0
 2161 0d19 488B5DE8 		movq	-24(%rbp), %rbx
 2162 0d1d E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2162      00
 2163 0d22 41B83D00 		movl	$61, %r8d
 2163      0000
 2164 0d28 488D0D00 		leaq	.LC4(%rip), %rcx
 2164      000000
 2165 0d2f 4889C2   		movq	%rax, %rdx
 2166 0d32 488D3500 		leaq	.LC13(%rip), %rsi
 2166      000000
 2167 0d39 4889DF   		movq	%rbx, %rdi
 2168 0d3c E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2168      00
 2169 0d41 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime
 2169      000000
 2170 0d48 488B45E8 		movq	-24(%rbp), %rax
 2171 0d4c 488910   		movq	%rdx, (%rax)
 2172              	.LBE37:
 2173 0d4f 90       		nop
 2174 0d50 4883C418 		addq	$24, %rsp
 2175 0d54 5B       		popq	%rbx
 2176 0d55 5D       		popq	%rbp
 2177              		.cfi_def_cfa 7, 8
 2178 0d56 C3       		ret
 2179              		.cfi_endproc
 2180              	.LFE1401:
 2182              		.set	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev,
 2183              		.local	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeIns
 2184              		.comm	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInst
 2185              		.local	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 2186              		.comm	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE,1
 2187 0d57 90       		.align 2
 2189              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2Ev:
 2190              	.LFB1405:
 2191              		.loc 3 61 0
 2192              		.cfi_startproc
 2193 0d58 55       		pushq	%rbp
 2194              		.cfi_def_cfa_offset 16
 2195              		.cfi_offset 6, -16
 2196 0d59 4889E5   		movq	%rsp, %rbp
 2197              		.cfi_def_cfa_register 6
 2198 0d5c 4883EC10 		subq	$16, %rsp
 2199 0d60 48897DF8 		movq	%rdi, -8(%rbp)
 2200              	.LBB38:
 2201              		.loc 3 61 0
 2202 0d64 488B45F8 		movq	-8(%rbp), %rax
 2203 0d68 4889C7   		movq	%rax, %rdi
 2204 0d6b E8B2F4FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 2204      FF
 2205              	.LBE38:
 2206 0d70 90       		nop
 2207 0d71 C9       		leave
 2208              		.cfi_def_cfa 7, 8
 2209 0d72 C3       		ret
 2210              		.cfi_endproc
 2211              	.LFE1405:
 2213              		.set	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2214 0d73 90       		.align 2
 2216              	_ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7RunImplEv
 2217              	.LFB1403:
 2218              		.loc 3 61 0
 2219              		.cfi_startproc
 2220              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2221              		.cfi_lsda 0x1b,.LLSDA1403
 2222 0d74 55       		pushq	%rbp
 2223              		.cfi_def_cfa_offset 16
 2224              		.cfi_offset 6, -16
 2225 0d75 4889E5   		movq	%rsp, %rbp
 2226              		.cfi_def_cfa_register 6
 2227 0d78 4155     		pushq	%r13
 2228 0d7a 4154     		pushq	%r12
 2229 0d7c 53       		pushq	%rbx
 2230 0d7d 4881ECF8 		subq	$504, %rsp
 2230      010000
 2231              		.cfi_offset 13, -24
 2232              		.cfi_offset 12, -32
 2233              		.cfi_offset 3, -40
 2234 0d84 4889BDF8 		movq	%rdi, -520(%rbp)
 2234      FDFFFF
 2235              		.loc 3 61 0
 2236 0d8b 64488B04 		movq	%fs:40, %rax
 2236      25280000 
 2236      00
 2237 0d94 488945D8 		movq	%rax, -40(%rbp)
 2238 0d98 31C0     		xorl	%eax, %eax
 2239 0d9a C6850FFE 		movb	$0, -497(%rbp)
 2239      FFFF00
 2240              	.LBB39:
 2241 0da1 488B85F8 		movq	-520(%rbp), %rax
 2241      FDFFFF
 2242 0da8 488D5008 		leaq	8(%rax), %rdx
 2243 0dac 488D8540 		leaq	-448(%rbp), %rax
 2243      FEFFFF
 2244 0db3 4889D6   		movq	%rdx, %rsi
 2245 0db6 4889C7   		movq	%rax, %rdi
 2246              	.LEHB59:
 2247 0db9 E820FFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1E
 2247      FF
 2248              	.LEHE59:
 2249              		.loc 3 61 0 is_stmt 0 discriminator 1
 2250 0dbe C6850FFE 		movb	$1, -497(%rbp)
 2250      FFFF01
 2251 0dc5 488B85F8 		movq	-520(%rbp), %rax
 2251      FDFFFF
 2252 0dcc 488D5008 		leaq	8(%rax), %rdx
 2253 0dd0 488D8540 		leaq	-448(%rbp), %rax
 2253      FEFFFF
 2254 0dd7 4889D6   		movq	%rdx, %rsi
 2255 0dda 4889C7   		movq	%rax, %rdi
 2256              	.LEHB60:
 2257 0ddd E8151B00 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCaptures
 2257      00
 2258              	.LEHE60:
 2259              		.loc 3 61 0 discriminator 3
 2260 0de2 488D8540 		leaq	-448(%rbp), %rax
 2260      FEFFFF
 2261 0de9 4889C7   		movq	%rax, %rdi
 2262              	.LEHB61:
 2263 0dec E867FFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2263      FF
 2264              	.LEHE61:
 2265              	.LBE39:
 2266              		.loc 3 61 0
 2267 0df1 E9690200 		jmp	.L119
 2267      00
 2268              	.L134:
 2269 0df6 4989C4   		movq	%rax, %r12
 2270 0df9 4889D3   		movq	%rdx, %rbx
 2271              	.LBB40:
 2272 0dfc 488D8540 		leaq	-448(%rbp), %rax
 2272      FEFFFF
 2273 0e03 4889C7   		movq	%rax, %rdi
 2274 0e06 E84DFFFF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1E
 2274      FF
 2275 0e0b 4C89E0   		movq	%r12, %rax
 2276 0e0e 4889DA   		movq	%rbx, %rdx
 2277 0e11 EB00     		jmp	.L121
 2278              	.L133:
 2279              	.L121:
 2280 0e13 4883FA01 		cmpq	$1, %rdx
 2281 0e17 740F     		je	.L123
 2282 0e19 4883FA02 		cmpq	$2, %rdx
 2283 0e1d 0F84A700 		je	.L124
 2283      0000
 2284 0e23 E94A0100 		jmp	.L139
 2284      00
 2285              	.L123:
 2286              	.LBE40:
 2287              	.LBB41:
 2288 0e28 4889C7   		movq	%rax, %rdi
 2289 0e2b E8000000 		call	__cxa_begin_catch@PLT
 2289      00
 2290 0e30 48898518 		movq	%rax, -488(%rbp)
 2290      FEFFFF
 2291              	.LEHB62:
 2292 0e37 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2292      00
 2293 0e3c 488B18   		movq	(%rax), %rbx
 2294 0e3f 488B8518 		movq	-488(%rbp), %rax
 2294      FEFFFF
 2295 0e46 488B00   		movq	(%rax), %rax
 2296 0e49 4883C010 		addq	$16, %rax
 2297 0e4d 488B00   		movq	(%rax), %rax
 2298 0e50 488B9518 		movq	-488(%rbp), %rdx
 2298      FEFFFF
 2299 0e57 4889D7   		movq	%rdx, %rdi
 2300 0e5a FFD0     		call	*%rax
 2301              	.LVL4:
 2302 0e5c 4989C4   		movq	%rax, %r12
 2303 0e5f 488B8518 		movq	-488(%rbp), %rax
 2303      FEFFFF
 2304 0e66 4889C7   		movq	%rax, %rdi
 2305 0e69 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 2305      00
 2306              		.loc 3 61 0 discriminator 5
 2307 0e6e 4189C5   		movl	%eax, %r13d
 2308 0e71 488B8518 		movq	-488(%rbp), %rax
 2308      FEFFFF
 2309 0e78 4889C7   		movq	%rax, %rdi
 2310 0e7b E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 2310      00
 2311              		.loc 3 61 0 discriminator 7
 2312 0e80 4889C1   		movq	%rax, %rcx
 2313 0e83 488B85F8 		movq	-520(%rbp), %rax
 2313      FDFFFF
 2314 0e8a 488B5008 		movq	8(%rax), %rdx
 2315 0e8e 488B85F8 		movq	-520(%rbp), %rax
 2315      FDFFFF
 2316 0e95 488B7010 		movq	16(%rax), %rsi
 2317 0e99 488D8520 		leaq	-480(%rbp), %rax
 2317      FEFFFF
 2318 0ea0 4589E8   		movl	%r13d, %r8d
 2319 0ea3 4889C7   		movq	%rax, %rdi
 2320 0ea6 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 2320      00
 2321              		.loc 3 61 0 discriminator 11
 2322 0eab 488D8520 		leaq	-480(%rbp), %rax
 2322      FEFFFF
 2323 0eb2 4C89E2   		movq	%r12, %rdx
 2324 0eb5 4889C6   		movq	%rax, %rsi
 2325 0eb8 4889DF   		movq	%rbx, %rdi
 2326 0ebb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2326      00
 2327              	.LEHE62:
 2328              		.loc 3 61 0 discriminator 13
 2329 0ec0 E8000000 		call	__cxa_end_catch@PLT
 2329      00
 2330              	.LBE41:
 2331 0ec5 E9950100 		jmp	.L119
 2331      00
 2332              	.L124:
 2333              	.LBB42:
 2334              		.loc 3 61 0
 2335 0eca 4889C7   		movq	%rax, %rdi
 2336 0ecd E8000000 		call	__cxa_begin_catch@PLT
 2336      00
 2337 0ed2 48898510 		movq	%rax, -496(%rbp)
 2337      FEFFFF
 2338              	.LBB43:
 2339 0ed9 488D8540 		leaq	-448(%rbp), %rax
 2339      FEFFFF
 2340 0ee0 4889C7   		movq	%rax, %rdi
 2341              	.LEHB63:
 2342 0ee3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2342      00
 2343              	.LEHE63:
 2344              		.loc 3 61 0 discriminator 15
 2345 0ee8 488D8540 		leaq	-448(%rbp), %rax
 2345      FEFFFF
 2346 0eef 488D3500 		leaq	.LC6(%rip), %rsi
 2346      000000
 2347 0ef6 4889C7   		movq	%rax, %rdi
 2348              	.LEHB64:
 2349 0ef9 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2349      00
 2350 0efe 4889C3   		movq	%rax, %rbx
 2351 0f01 488B8510 		movq	-496(%rbp), %rax
 2351      FEFFFF
 2352 0f08 488B00   		movq	(%rax), %rax
 2353 0f0b 4883C010 		addq	$16, %rax
 2354 0f0f 488B00   		movq	(%rax), %rax
 2355 0f12 488B9510 		movq	-496(%rbp), %rdx
 2355      FEFFFF
 2356 0f19 4889D7   		movq	%rdx, %rdi
 2357 0f1c FFD0     		call	*%rax
 2358              	.LVL5:
 2359 0f1e 4889C6   		movq	%rax, %rsi
 2360 0f21 4889DF   		movq	%rbx, %rdi
 2361 0f24 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2361      00
 2362              		.loc 3 61 0 discriminator 19
 2363 0f29 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2363      00
 2364 0f2e 488B18   		movq	(%rax), %rbx
 2365 0f31 488D8540 		leaq	-448(%rbp), %rax
 2365      FEFFFF
 2366 0f38 4889C7   		movq	%rax, %rdi
 2367 0f3b E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 2367      00
 2368              		.loc 3 61 0 discriminator 21
 2369 0f40 4889C2   		movq	%rax, %rdx
 2370 0f43 488B85F8 		movq	-520(%rbp), %rax
 2370      FDFFFF
 2371 0f4a 4883C008 		addq	$8, %rax
 2372 0f4e 4889C6   		movq	%rax, %rsi
 2373 0f51 4889DF   		movq	%rbx, %rdi
 2374 0f54 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2374      00
 2375              	.LEHE64:
 2376              		.loc 3 61 0 discriminator 25
 2377 0f59 488D8540 		leaq	-448(%rbp), %rax
 2377      FEFFFF
 2378 0f60 4889C7   		movq	%rax, %rdi
 2379              	.LEHB65:
 2380 0f63 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2380      00
 2381              	.LEHE65:
 2382              	.LBE43:
 2383              		.loc 3 61 0 discriminator 26
 2384 0f68 E8000000 		call	__cxa_end_catch@PLT
 2384      00
 2385              	.LBE42:
 2386 0f6d E9ED0000 		jmp	.L119
 2386      00
 2387              	.L139:
 2388              		.loc 3 61 0
 2389 0f72 4889C7   		movq	%rax, %rdi
 2390 0f75 E8000000 		call	__cxa_begin_catch@PLT
 2390      00
 2391 0f7a 80BD0FFE 		cmpb	$0, -497(%rbp)
 2391      FFFF00
 2392 0f81 7445     		je	.L126
 2393              	.LEHB66:
 2394              		.loc 3 61 0 discriminator 28
 2395 0f83 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2395      00
 2396 0f88 488B18   		movq	(%rax), %rbx
 2397 0f8b 488B85F8 		movq	-520(%rbp), %rax
 2397      FDFFFF
 2398 0f92 488D4808 		leaq	8(%rax), %rcx
 2399 0f96 488D8520 		leaq	-480(%rbp), %rax
 2399      FEFFFF
 2400 0f9d BA3D0000 		movl	$61, %edx
 2400      00
 2401 0fa2 4889CE   		movq	%rcx, %rsi
 2402 0fa5 4889C7   		movq	%rax, %rdi
 2403 0fa8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2403      00
 2404              		.loc 3 61 0 discriminator 33
 2405 0fad 488D8520 		leaq	-480(%rbp), %rax
 2405      FEFFFF
 2406 0fb4 488D1500 		leaq	.LC7(%rip), %rdx
 2406      000000
 2407 0fbb 4889C6   		movq	%rax, %rsi
 2408 0fbe 4889DF   		movq	%rbx, %rdi
 2409 0fc1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2409      00
 2410 0fc6 EB43     		jmp	.L127
 2411              	.L126:
 2412              		.loc 3 61 0 discriminator 29
 2413 0fc8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2413      00
 2414 0fcd 488B18   		movq	(%rax), %rbx
 2415 0fd0 488B85F8 		movq	-520(%rbp), %rax
 2415      FDFFFF
 2416 0fd7 488D4808 		leaq	8(%rax), %rcx
 2417 0fdb 488D8520 		leaq	-480(%rbp), %rax
 2417      FEFFFF
 2418 0fe2 BA3D0000 		movl	$61, %edx
 2418      00
 2419 0fe7 4889CE   		movq	%rcx, %rsi
 2420 0fea 4889C7   		movq	%rax, %rdi
 2421 0fed E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2421      00
 2422              		.loc 3 61 0 discriminator 40
 2423 0ff2 488D8520 		leaq	-480(%rbp), %rax
 2423      FEFFFF
 2424 0ff9 488D1500 		leaq	.LC8(%rip), %rdx
 2424      000000
 2425 1000 4889C6   		movq	%rax, %rsi
 2426 1003 4889DF   		movq	%rbx, %rdi
 2427 1006 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2427      00
 2428              	.LEHE66:
 2429              	.L127:
 2430              	.LEHB67:
 2431              		.loc 3 61 0 discriminator 43
 2432 100b E8000000 		call	__cxa_end_catch@PLT
 2432      00
 2433 1010 EB4D     		jmp	.L119
 2434              	.L135:
 2435 1012 4889C3   		movq	%rax, %rbx
 2436              	.LBB45:
 2437              		.loc 3 61 0
 2438 1015 E8000000 		call	__cxa_end_catch@PLT
 2438      00
 2439 101a 4889D8   		movq	%rbx, %rax
 2440 101d 4889C7   		movq	%rax, %rdi
 2441 1020 E8000000 		call	_Unwind_Resume@PLT
 2441      00
 2442              	.LEHE67:
 2443              	.L137:
 2444 1025 4889C3   		movq	%rax, %rbx
 2445              	.LBE45:
 2446              	.LBB46:
 2447              	.LBB44:
 2448 1028 488D8540 		leaq	-448(%rbp), %rax
 2448      FEFFFF
 2449 102f 4889C7   		movq	%rax, %rdi
 2450 1032 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2450      00
 2451 1037 EB03     		jmp	.L130
 2452              	.L136:
 2453 1039 4889C3   		movq	%rax, %rbx
 2454              	.L130:
 2455              	.LBE44:
 2456 103c E8000000 		call	__cxa_end_catch@PLT
 2456      00
 2457 1041 4889D8   		movq	%rbx, %rax
 2458 1044 4889C7   		movq	%rax, %rdi
 2459              	.LEHB68:
 2460 1047 E8000000 		call	_Unwind_Resume@PLT
 2460      00
 2461              	.LEHE68:
 2462              	.L138:
 2463 104c 4889C3   		movq	%rax, %rbx
 2464              	.LBE46:
 2465 104f E8000000 		call	__cxa_end_catch@PLT
 2465      00
 2466 1054 4889D8   		movq	%rbx, %rax
 2467 1057 4889C7   		movq	%rax, %rdi
 2468              	.LEHB69:
 2469 105a E8000000 		call	_Unwind_Resume@PLT
 2469      00
 2470              	.LEHE69:
 2471              	.L119:
 2472 105f 488B45D8 		movq	-40(%rbp), %rax
 2473 1063 64483304 		xorq	%fs:40, %rax
 2473      25280000 
 2473      00
 2474 106c 7405     		je	.L132
 2475 106e E8000000 		call	__stack_chk_fail@PLT
 2475      00
 2476              	.L132:
 2477 1073 4881C4F8 		addq	$504, %rsp
 2477      010000
 2478 107a 5B       		popq	%rbx
 2479 107b 415C     		popq	%r12
 2480 107d 415D     		popq	%r13
 2481 107f 5D       		popq	%rbp
 2482              		.cfi_def_cfa 7, 8
 2483 1080 C3       		ret
 2484              		.cfi_endproc
 2485              	.LFE1403:
 2486              		.section	.gcc_except_table
 2487              		.align 4
 2488              	.LLSDA1403:
 2489 0158 FF       		.byte	0xff
 2490 0159 9B       		.byte	0x9b
 2491 015a 55       		.uleb128 .LLSDATT1403-.LLSDATTD1403
 2492              	.LLSDATTD1403:
 2493 015b 01       		.byte	0x1
 2494 015c 3E       		.uleb128 .LLSDACSE1403-.LLSDACSB1403
 2495              	.LLSDACSB1403:
 2496 015d 45       		.uleb128 .LEHB59-.LFB1403
 2497 015e 05       		.uleb128 .LEHE59-.LEHB59
 2498 015f 9F01     		.uleb128 .L133-.LFB1403
 2499 0161 05       		.uleb128 0x5
 2500 0162 69       		.uleb128 .LEHB60-.LFB1403
 2501 0163 05       		.uleb128 .LEHE60-.LEHB60
 2502 0164 8201     		.uleb128 .L134-.LFB1403
 2503 0166 07       		.uleb128 0x7
 2504 0167 78       		.uleb128 .LEHB61-.LFB1403
 2505 0168 05       		.uleb128 .LEHE61-.LEHB61
 2506 0169 9F01     		.uleb128 .L133-.LFB1403
 2507 016b 05       		.uleb128 0x5
 2508 016c C301     		.uleb128 .LEHB62-.LFB1403
 2509 016e 8901     		.uleb128 .LEHE62-.LEHB62
 2510 0170 9E05     		.uleb128 .L135-.LFB1403
 2511 0172 00       		.uleb128 0
 2512 0173 EF02     		.uleb128 .LEHB63-.LFB1403
 2513 0175 05       		.uleb128 .LEHE63-.LEHB63
 2514 0176 C505     		.uleb128 .L136-.LFB1403
 2515 0178 00       		.uleb128 0
 2516 0179 8503     		.uleb128 .LEHB64-.LFB1403
 2517 017b 60       		.uleb128 .LEHE64-.LEHB64
 2518 017c B105     		.uleb128 .L137-.LFB1403
 2519 017e 00       		.uleb128 0
 2520 017f EF03     		.uleb128 .LEHB65-.LFB1403
 2521 0181 05       		.uleb128 .LEHE65-.LEHB65
 2522 0182 C505     		.uleb128 .L136-.LFB1403
 2523 0184 00       		.uleb128 0
 2524 0185 8F04     		.uleb128 .LEHB66-.LFB1403
 2525 0187 8801     		.uleb128 .LEHE66-.LEHB66
 2526 0189 D805     		.uleb128 .L138-.LFB1403
 2527 018b 00       		.uleb128 0
 2528 018c 9705     		.uleb128 .LEHB67-.LFB1403
 2529 018e 1A       		.uleb128 .LEHE67-.LEHB67
 2530 018f 00       		.uleb128 0
 2531 0190 00       		.uleb128 0
 2532 0191 D305     		.uleb128 .LEHB68-.LFB1403
 2533 0193 05       		.uleb128 .LEHE68-.LEHB68
 2534 0194 00       		.uleb128 0
 2535 0195 00       		.uleb128 0
 2536 0196 E605     		.uleb128 .LEHB69-.LFB1403
 2537 0198 05       		.uleb128 .LEHE69-.LEHB69
 2538 0199 00       		.uleb128 0
 2539 019a 00       		.uleb128 0
 2540              	.LLSDACSE1403:
 2541 019b 03       		.byte	0x3
 2542 019c 00       		.byte	0
 2543 019d 02       		.byte	0x2
 2544 019e 7D       		.byte	0x7d
 2545 019f 01       		.byte	0x1
 2546 01a0 7D       		.byte	0x7d
 2547 01a1 00       		.byte	0
 2548 01a2 7D       		.byte	0x7d
 2549 01a3 00       		.align 4
 2550 01a4 00000000 		.long	0
 2551              	
 2552 01a8 00000000 		.long	DW.ref._ZTISt9exception-.
 2553 01ac 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 2554              	.LLSDATT1403:
 2555              		.text
 2557              		.section	.rodata
 2558 025e 0000     		.align 8
 2559              	.LC16:
 2560 0260 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(elapsed, result.timeElapsed)"
 2560      6E646C65 
 2560      64206578 
 2560      63657074 
 2560      696F6E20 
 2561              		.text
 2562 1081 90       		.align 2
 2564              	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7RunImplE
 2565              	.LFB1407:
  62:TestDeferredTestReporter.cpp **** {
 2566              		.loc 3 62 0 is_stmt 1
 2567              		.cfi_startproc
 2568              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2569              		.cfi_lsda 0x1b,.LLSDA1407
 2570 1082 55       		pushq	%rbp
 2571              		.cfi_def_cfa_offset 16
 2572              		.cfi_offset 6, -16
 2573 1083 4889E5   		movq	%rsp, %rbp
 2574              		.cfi_def_cfa_register 6
 2575 1086 53       		pushq	%rbx
 2576 1087 4883EC58 		subq	$88, %rsp
 2577              		.cfi_offset 3, -24
 2578 108b 48897DA8 		movq	%rdi, -88(%rbp)
 2579              		.loc 3 62 0
 2580 108f 64488B04 		movq	%fs:40, %rax
 2580      25280000 
 2580      00
 2581 1098 488945E8 		movq	%rax, -24(%rbp)
 2582 109c 31C0     		xorl	%eax, %eax
  63:TestDeferredTestReporter.cpp ****     float const elapsed = 123.45f;
 2583              		.loc 3 63 0
 2584 109e F30F1005 		movss	.LC14(%rip), %xmm0
 2584      00000000 
 2585 10a6 F30F1145 		movss	%xmm0, -80(%rbp)
 2585      B0
  64:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 2586              		.loc 3 64 0
 2587 10ab 488B45A8 		movq	-88(%rbp), %rax
 2588 10af 488B55A8 		movq	-88(%rbp), %rdx
 2589 10b3 4881C288 		addq	$136, %rdx
 2589      000000
 2590 10ba 4889D6   		movq	%rdx, %rsi
 2591 10bd 4889C7   		movq	%rax, %rdi
 2592              	.LEHB70:
 2593 10c0 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 2593      00
  65:TestDeferredTestReporter.cpp ****     reporter.ReportTestFinish(details, elapsed);
 2594              		.loc 3 65 0
 2595 10c5 488B45A8 		movq	-88(%rbp), %rax
 2596 10c9 488B55A8 		movq	-88(%rbp), %rdx
 2597 10cd 4881C288 		addq	$136, %rdx
 2597      000000
 2598 10d4 F30F1005 		movss	.LC14(%rip), %xmm0
 2598      00000000 
 2599 10dc 4889D6   		movq	%rdx, %rsi
 2600 10df 4889C7   		movq	%rax, %rdi
 2601 10e2 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 2601      00
  66:TestDeferredTestReporter.cpp **** 
  67:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 2602              		.loc 3 67 0
 2603 10e7 488B45A8 		movq	-88(%rbp), %rax
 2604 10eb 4889C7   		movq	%rax, %rdi
 2605 10ee E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 2605      00
 2606 10f3 BE000000 		movl	$0, %esi
 2606      00
 2607 10f8 4889C7   		movq	%rax, %rdi
 2608 10fb E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 2608      00
 2609              	.LEHE70:
 2610 1100 488945B8 		movq	%rax, -72(%rbp)
 2611              	.LEHB71:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2612              		.loc 3 68 0
 2613 1104 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2613      00
 2614 1109 488B08   		movq	(%rax), %rcx
 2615 110c 488D45C0 		leaq	-64(%rbp), %rax
 2616 1110 BA440000 		movl	$68, %edx
 2616      00
 2617 1115 4889CE   		movq	%rcx, %rsi
 2618 1118 4889C7   		movq	%rax, %rdi
 2619 111b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2619      00
 2620              	.LEHE71:
 2621              		.loc 3 68 0 is_stmt 0 discriminator 2
 2622 1120 F30F1005 		movss	.LC15(%rip), %xmm0
 2622      00000000 
 2623 1128 F30F1145 		movss	%xmm0, -76(%rbp)
 2623      B4
 2624 112d 488B45B8 		movq	-72(%rbp), %rax
 2625 1131 488D5878 		leaq	120(%rax), %rbx
 2626              	.LEHB72:
 2627 1135 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2627      00
 2628 113a 488B00   		movq	(%rax), %rax
 2629 113d 488D4DC0 		leaq	-64(%rbp), %rcx
 2630 1141 488D55B4 		leaq	-76(%rbp), %rdx
 2631 1145 488D75B0 		leaq	-80(%rbp), %rsi
 2632 1149 4989C8   		movq	%rcx, %r8
 2633 114c 4889D1   		movq	%rdx, %rcx
 2634 114f 4889DA   		movq	%rbx, %rdx
 2635 1152 4889C7   		movq	%rax, %rdi
 2636 1155 E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 2636      00
 2637              	.LEHE72:
  69:TestDeferredTestReporter.cpp **** }
 2638              		.loc 3 69 0 is_stmt 1
 2639 115a EB5E     		jmp	.L140
 2640              	.L147:
 2641 115c EB00     		jmp	.L142
 2642              	.L146:
 2643              	.L142:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2644              		.loc 3 68 0
 2645 115e 4889C7   		movq	%rax, %rdi
 2646 1161 E8000000 		call	__cxa_begin_catch@PLT
 2646      00
 2647              	.LEHB73:
 2648 1166 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2648      00
 2649 116b 488B18   		movq	(%rax), %rbx
 2650 116e E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2650      00
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2651              		.loc 3 68 0 is_stmt 0 discriminator 8
 2652 1173 488B08   		movq	(%rax), %rcx
 2653 1176 488D45C0 		leaq	-64(%rbp), %rax
 2654 117a BA440000 		movl	$68, %edx
 2654      00
 2655 117f 4889CE   		movq	%rcx, %rsi
 2656 1182 4889C7   		movq	%rax, %rdi
 2657 1185 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2657      00
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2658              		.loc 3 68 0 discriminator 12
 2659 118a 488D45C0 		leaq	-64(%rbp), %rax
 2660 118e 488D1500 		leaq	.LC16(%rip), %rdx
 2660      000000
 2661 1195 4889C6   		movq	%rax, %rsi
 2662 1198 4889DF   		movq	%rbx, %rdi
 2663 119b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2663      00
 2664              	.LEHE73:
 2665              	.LEHB74:
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2666              		.loc 3 68 0 discriminator 14
 2667 11a0 E8000000 		call	__cxa_end_catch@PLT
 2667      00
 2668              	.LEHE74:
 2669              		.loc 3 69 0 is_stmt 1 discriminator 14
 2670 11a5 EB13     		jmp	.L140
 2671              	.L148:
 2672 11a7 4889C3   		movq	%rax, %rbx
  68:TestDeferredTestReporter.cpp ****     CHECK_CLOSE(elapsed, result.timeElapsed, 0.0001f);
 2673              		.loc 3 68 0
 2674 11aa E8000000 		call	__cxa_end_catch@PLT
 2674      00
 2675 11af 4889D8   		movq	%rbx, %rax
 2676 11b2 4889C7   		movq	%rax, %rdi
 2677              	.LEHB75:
 2678 11b5 E8000000 		call	_Unwind_Resume@PLT
 2678      00
 2679              	.LEHE75:
 2680              	.L140:
 2681              		.loc 3 69 0
 2682 11ba 488B45E8 		movq	-24(%rbp), %rax
 2683 11be 64483304 		xorq	%fs:40, %rax
 2683      25280000 
 2683      00
 2684 11c7 7405     		je	.L145
 2685 11c9 E8000000 		call	__stack_chk_fail@PLT
 2685      00
 2686              	.L145:
 2687 11ce 4883C458 		addq	$88, %rsp
 2688 11d2 5B       		popq	%rbx
 2689 11d3 5D       		popq	%rbp
 2690              		.cfi_def_cfa 7, 8
 2691 11d4 C3       		ret
 2692              		.cfi_endproc
 2693              	.LFE1407:
 2694              		.section	.gcc_except_table
 2695              		.align 4
 2696              	.LLSDA1407:
 2697 01b0 FF       		.byte	0xff
 2698 01b1 9B       		.byte	0x9b
 2699 01b2 2D       		.uleb128 .LLSDATT1407-.LLSDATTD1407
 2700              	.LLSDATTD1407:
 2701 01b3 01       		.byte	0x1
 2702 01b4 20       		.uleb128 .LLSDACSE1407-.LLSDACSB1407
 2703              	.LLSDACSB1407:
 2704 01b5 3E       		.uleb128 .LEHB70-.LFB1407
 2705 01b6 40       		.uleb128 .LEHE70-.LEHB70
 2706 01b7 00       		.uleb128 0
 2707 01b8 00       		.uleb128 0
 2708 01b9 8201     		.uleb128 .LEHB71-.LFB1407
 2709 01bb 1C       		.uleb128 .LEHE71-.LEHB71
 2710 01bc DC01     		.uleb128 .L146-.LFB1407
 2711 01be 01       		.uleb128 0x1
 2712 01bf B301     		.uleb128 .LEHB72-.LFB1407
 2713 01c1 25       		.uleb128 .LEHE72-.LEHB72
 2714 01c2 DA01     		.uleb128 .L147-.LFB1407
 2715 01c4 03       		.uleb128 0x3
 2716 01c5 E401     		.uleb128 .LEHB73-.LFB1407
 2717 01c7 3A       		.uleb128 .LEHE73-.LEHB73
 2718 01c8 A502     		.uleb128 .L148-.LFB1407
 2719 01ca 00       		.uleb128 0
 2720 01cb 9E02     		.uleb128 .LEHB74-.LFB1407
 2721 01cd 05       		.uleb128 .LEHE74-.LEHB74
 2722 01ce 00       		.uleb128 0
 2723 01cf 00       		.uleb128 0
 2724 01d0 B302     		.uleb128 .LEHB75-.LFB1407
 2725 01d2 05       		.uleb128 .LEHE75-.LEHB75
 2726 01d3 00       		.uleb128 0
 2727 01d4 00       		.uleb128 0
 2728              	.LLSDACSE1407:
 2729 01d5 01       		.byte	0x1
 2730 01d6 00       		.byte	0
 2731 01d7 00       		.byte	0
 2732 01d8 7D       		.byte	0x7d
 2733 01d9 000000   		.align 4
 2734 01dc 00000000 		.long	0
 2735              	
 2736              	.LLSDATT1407:
 2737              		.text
 2739 11d5 90       		.align 2
 2741              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC2ERKN
 2742              	.LFB1409:
  70:TestDeferredTestReporter.cpp **** 
  71:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportFailureSavesFailureDetails)
 2743              		.loc 3 71 0
 2744              		.cfi_startproc
 2745 11d6 55       		pushq	%rbp
 2746              		.cfi_def_cfa_offset 16
 2747              		.cfi_offset 6, -16
 2748 11d7 4889E5   		movq	%rsp, %rbp
 2749              		.cfi_def_cfa_register 6
 2750 11da 4883EC10 		subq	$16, %rsp
 2751 11de 48897DF8 		movq	%rdi, -8(%rbp)
 2752 11e2 488975F0 		movq	%rsi, -16(%rbp)
 2753              	.LBB47:
 2754              		.loc 3 71 0
 2755 11e6 488B45F8 		movq	-8(%rbp), %rax
 2756 11ea 4889C7   		movq	%rax, %rdi
 2757 11ed E852EEFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 2757      FF
 2758 11f2 488B45F8 		movq	-8(%rbp), %rax
 2759 11f6 488B55F0 		movq	-16(%rbp), %rdx
 2760 11fa 488990A8 		movq	%rdx, 168(%rax)
 2760      000000
 2761              	.LBE47:
 2762 1201 90       		nop
 2763 1202 C9       		leave
 2764              		.cfi_def_cfa 7, 8
 2765 1203 C3       		ret
 2766              		.cfi_endproc
 2767              	.LFE1409:
 2769              		.set	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2770              		.section	.rodata
 2771              		.align 8
 2772              	.LC17:
 2773 02a0 5265706F 		.string	"ReportFailureSavesFailureDetails"
 2773      72744661 
 2773      696C7572 
 2773      65536176 
 2773      65734661 
 2774              		.text
 2775              		.align 2
 2777              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2Ev:
 2778              	.LFB1412:
 2779              		.loc 3 71 0
 2780              		.cfi_startproc
 2781 1204 55       		pushq	%rbp
 2782              		.cfi_def_cfa_offset 16
 2783              		.cfi_offset 6, -16
 2784 1205 4889E5   		movq	%rsp, %rbp
 2785              		.cfi_def_cfa_register 6
 2786 1208 53       		pushq	%rbx
 2787 1209 4883EC18 		subq	$24, %rsp
 2788              		.cfi_offset 3, -24
 2789 120d 48897DE8 		movq	%rdi, -24(%rbp)
 2790              	.LBB48:
 2791              		.loc 3 71 0
 2792 1211 488B5DE8 		movq	-24(%rbp), %rbx
 2793 1215 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2793      00
 2794 121a 41B84700 		movl	$71, %r8d
 2794      0000
 2795 1220 488D0D00 		leaq	.LC4(%rip), %rcx
 2795      000000
 2796 1227 4889C2   		movq	%rax, %rdx
 2797 122a 488D3500 		leaq	.LC17(%rip), %rsi
 2797      000000
 2798 1231 4889DF   		movq	%rbx, %rdi
 2799 1234 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2799      00
 2800 1239 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDeta
 2800      000000
 2801 1240 488B45E8 		movq	-24(%rbp), %rax
 2802 1244 488910   		movq	%rdx, (%rax)
 2803              	.LBE48:
 2804 1247 90       		nop
 2805 1248 4883C418 		addq	$24, %rsp
 2806 124c 5B       		popq	%rbx
 2807 124d 5D       		popq	%rbp
 2808              		.cfi_def_cfa 7, 8
 2809 124e C3       		ret
 2810              		.cfi_endproc
 2811              	.LFE1412:
 2813              		.set	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1
 2814              		.local	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetails
 2815              		.comm	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsI
 2816              		.local	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetail
 2817              		.comm	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 2818 124f 90       		.align 2
 2820              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD2Ev:
 2821              	.LFB1416:
 2822              		.loc 3 71 0
 2823              		.cfi_startproc
 2824 1250 55       		pushq	%rbp
 2825              		.cfi_def_cfa_offset 16
 2826              		.cfi_offset 6, -16
 2827 1251 4889E5   		movq	%rsp, %rbp
 2828              		.cfi_def_cfa_register 6
 2829 1254 4883EC10 		subq	$16, %rsp
 2830 1258 48897DF8 		movq	%rdi, -8(%rbp)
 2831              	.LBB49:
 2832              		.loc 3 71 0
 2833 125c 488B45F8 		movq	-8(%rbp), %rax
 2834 1260 4889C7   		movq	%rax, %rdi
 2835 1263 E8BAEFFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 2835      FF
 2836              	.LBE49:
 2837 1268 90       		nop
 2838 1269 C9       		leave
 2839              		.cfi_def_cfa 7, 8
 2840 126a C3       		ret
 2841              		.cfi_endproc
 2842              	.LFE1416:
 2844              		.set	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2845 126b 90       		.align 2
 2847              	_ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails7RunImp
 2848              	.LFB1414:
 2849              		.loc 3 71 0
 2850              		.cfi_startproc
 2851              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2852              		.cfi_lsda 0x1b,.LLSDA1414
 2853 126c 55       		pushq	%rbp
 2854              		.cfi_def_cfa_offset 16
 2855              		.cfi_offset 6, -16
 2856 126d 4889E5   		movq	%rsp, %rbp
 2857              		.cfi_def_cfa_register 6
 2858 1270 4155     		pushq	%r13
 2859 1272 4154     		pushq	%r12
 2860 1274 53       		pushq	%rbx
 2861 1275 4881ECF8 		subq	$504, %rsp
 2861      010000
 2862              		.cfi_offset 13, -24
 2863              		.cfi_offset 12, -32
 2864              		.cfi_offset 3, -40
 2865 127c 4889BDF8 		movq	%rdi, -520(%rbp)
 2865      FDFFFF
 2866              		.loc 3 71 0
 2867 1283 64488B04 		movq	%fs:40, %rax
 2867      25280000 
 2867      00
 2868 128c 488945D8 		movq	%rax, -40(%rbp)
 2869 1290 31C0     		xorl	%eax, %eax
 2870 1292 C6850FFE 		movb	$0, -497(%rbp)
 2870      FFFF00
 2871              	.LBB50:
 2872 1299 488B85F8 		movq	-520(%rbp), %rax
 2872      FDFFFF
 2873 12a0 488D5008 		leaq	8(%rax), %rdx
 2874 12a4 488D8540 		leaq	-448(%rbp), %rax
 2874      FEFFFF
 2875 12ab 4889D6   		movq	%rdx, %rsi
 2876 12ae 4889C7   		movq	%rax, %rdi
 2877              	.LEHB76:
 2878 12b1 E820FFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2878      FF
 2879              	.LEHE76:
 2880              		.loc 3 71 0 is_stmt 0 discriminator 1
 2881 12b6 C6850FFE 		movb	$1, -497(%rbp)
 2881      FFFF01
 2882 12bd 488B85F8 		movq	-520(%rbp), %rax
 2882      FDFFFF
 2883 12c4 488D5008 		leaq	8(%rax), %rdx
 2884 12c8 488D8540 		leaq	-448(%rbp), %rax
 2884      FEFFFF
 2885 12cf 4889D6   		movq	%rdx, %rsi
 2886 12d2 4889C7   		movq	%rax, %rdi
 2887              	.LEHB77:
 2888 12d5 E8E61800 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFai
 2888      00
 2889              	.LEHE77:
 2890              		.loc 3 71 0 discriminator 3
 2891 12da 488D8540 		leaq	-448(%rbp), %rax
 2891      FEFFFF
 2892 12e1 4889C7   		movq	%rax, %rdi
 2893              	.LEHB78:
 2894 12e4 E867FFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2894      FF
 2895              	.LEHE78:
 2896              	.LBE50:
 2897              		.loc 3 71 0
 2898 12e9 E9690200 		jmp	.L152
 2898      00
 2899              	.L167:
 2900 12ee 4989C4   		movq	%rax, %r12
 2901 12f1 4889D3   		movq	%rdx, %rbx
 2902              	.LBB51:
 2903 12f4 488D8540 		leaq	-448(%rbp), %rax
 2903      FEFFFF
 2904 12fb 4889C7   		movq	%rax, %rdi
 2905 12fe E84DFFFF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 2905      FF
 2906 1303 4C89E0   		movq	%r12, %rax
 2907 1306 4889DA   		movq	%rbx, %rdx
 2908 1309 EB00     		jmp	.L154
 2909              	.L166:
 2910              	.L154:
 2911 130b 4883FA01 		cmpq	$1, %rdx
 2912 130f 740F     		je	.L156
 2913 1311 4883FA02 		cmpq	$2, %rdx
 2914 1315 0F84A700 		je	.L157
 2914      0000
 2915 131b E94A0100 		jmp	.L172
 2915      00
 2916              	.L156:
 2917              	.LBE51:
 2918              	.LBB52:
 2919 1320 4889C7   		movq	%rax, %rdi
 2920 1323 E8000000 		call	__cxa_begin_catch@PLT
 2920      00
 2921 1328 48898518 		movq	%rax, -488(%rbp)
 2921      FEFFFF
 2922              	.LEHB79:
 2923 132f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2923      00
 2924 1334 488B18   		movq	(%rax), %rbx
 2925 1337 488B8518 		movq	-488(%rbp), %rax
 2925      FEFFFF
 2926 133e 488B00   		movq	(%rax), %rax
 2927 1341 4883C010 		addq	$16, %rax
 2928 1345 488B00   		movq	(%rax), %rax
 2929 1348 488B9518 		movq	-488(%rbp), %rdx
 2929      FEFFFF
 2930 134f 4889D7   		movq	%rdx, %rdi
 2931 1352 FFD0     		call	*%rax
 2932              	.LVL6:
 2933 1354 4989C4   		movq	%rax, %r12
 2934 1357 488B8518 		movq	-488(%rbp), %rax
 2934      FEFFFF
 2935 135e 4889C7   		movq	%rax, %rdi
 2936 1361 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 2936      00
 2937              		.loc 3 71 0 discriminator 5
 2938 1366 4189C5   		movl	%eax, %r13d
 2939 1369 488B8518 		movq	-488(%rbp), %rax
 2939      FEFFFF
 2940 1370 4889C7   		movq	%rax, %rdi
 2941 1373 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 2941      00
 2942              		.loc 3 71 0 discriminator 7
 2943 1378 4889C1   		movq	%rax, %rcx
 2944 137b 488B85F8 		movq	-520(%rbp), %rax
 2944      FDFFFF
 2945 1382 488B5008 		movq	8(%rax), %rdx
 2946 1386 488B85F8 		movq	-520(%rbp), %rax
 2946      FDFFFF
 2947 138d 488B7010 		movq	16(%rax), %rsi
 2948 1391 488D8520 		leaq	-480(%rbp), %rax
 2948      FEFFFF
 2949 1398 4589E8   		movl	%r13d, %r8d
 2950 139b 4889C7   		movq	%rax, %rdi
 2951 139e E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 2951      00
 2952              		.loc 3 71 0 discriminator 11
 2953 13a3 488D8520 		leaq	-480(%rbp), %rax
 2953      FEFFFF
 2954 13aa 4C89E2   		movq	%r12, %rdx
 2955 13ad 4889C6   		movq	%rax, %rsi
 2956 13b0 4889DF   		movq	%rbx, %rdi
 2957 13b3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2957      00
 2958              	.LEHE79:
 2959              		.loc 3 71 0 discriminator 13
 2960 13b8 E8000000 		call	__cxa_end_catch@PLT
 2960      00
 2961              	.LBE52:
 2962 13bd E9950100 		jmp	.L152
 2962      00
 2963              	.L157:
 2964              	.LBB53:
 2965              		.loc 3 71 0
 2966 13c2 4889C7   		movq	%rax, %rdi
 2967 13c5 E8000000 		call	__cxa_begin_catch@PLT
 2967      00
 2968 13ca 48898510 		movq	%rax, -496(%rbp)
 2968      FEFFFF
 2969              	.LBB54:
 2970 13d1 488D8540 		leaq	-448(%rbp), %rax
 2970      FEFFFF
 2971 13d8 4889C7   		movq	%rax, %rdi
 2972              	.LEHB80:
 2973 13db E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2973      00
 2974              	.LEHE80:
 2975              		.loc 3 71 0 discriminator 15
 2976 13e0 488D8540 		leaq	-448(%rbp), %rax
 2976      FEFFFF
 2977 13e7 488D3500 		leaq	.LC6(%rip), %rsi
 2977      000000
 2978 13ee 4889C7   		movq	%rax, %rdi
 2979              	.LEHB81:
 2980 13f1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2980      00
 2981 13f6 4889C3   		movq	%rax, %rbx
 2982 13f9 488B8510 		movq	-496(%rbp), %rax
 2982      FEFFFF
 2983 1400 488B00   		movq	(%rax), %rax
 2984 1403 4883C010 		addq	$16, %rax
 2985 1407 488B00   		movq	(%rax), %rax
 2986 140a 488B9510 		movq	-496(%rbp), %rdx
 2986      FEFFFF
 2987 1411 4889D7   		movq	%rdx, %rdi
 2988 1414 FFD0     		call	*%rax
 2989              	.LVL7:
 2990 1416 4889C6   		movq	%rax, %rsi
 2991 1419 4889DF   		movq	%rbx, %rdi
 2992 141c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2992      00
 2993              		.loc 3 71 0 discriminator 19
 2994 1421 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2994      00
 2995 1426 488B18   		movq	(%rax), %rbx
 2996 1429 488D8540 		leaq	-448(%rbp), %rax
 2996      FEFFFF
 2997 1430 4889C7   		movq	%rax, %rdi
 2998 1433 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 2998      00
 2999              		.loc 3 71 0 discriminator 21
 3000 1438 4889C2   		movq	%rax, %rdx
 3001 143b 488B85F8 		movq	-520(%rbp), %rax
 3001      FDFFFF
 3002 1442 4883C008 		addq	$8, %rax
 3003 1446 4889C6   		movq	%rax, %rsi
 3004 1449 4889DF   		movq	%rbx, %rdi
 3005 144c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3005      00
 3006              	.LEHE81:
 3007              		.loc 3 71 0 discriminator 25
 3008 1451 488D8540 		leaq	-448(%rbp), %rax
 3008      FEFFFF
 3009 1458 4889C7   		movq	%rax, %rdi
 3010              	.LEHB82:
 3011 145b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3011      00
 3012              	.LEHE82:
 3013              	.LBE54:
 3014              		.loc 3 71 0 discriminator 26
 3015 1460 E8000000 		call	__cxa_end_catch@PLT
 3015      00
 3016              	.LBE53:
 3017 1465 E9ED0000 		jmp	.L152
 3017      00
 3018              	.L172:
 3019              		.loc 3 71 0
 3020 146a 4889C7   		movq	%rax, %rdi
 3021 146d E8000000 		call	__cxa_begin_catch@PLT
 3021      00
 3022 1472 80BD0FFE 		cmpb	$0, -497(%rbp)
 3022      FFFF00
 3023 1479 7445     		je	.L159
 3024              	.LEHB83:
 3025              		.loc 3 71 0 discriminator 28
 3026 147b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3026      00
 3027 1480 488B18   		movq	(%rax), %rbx
 3028 1483 488B85F8 		movq	-520(%rbp), %rax
 3028      FDFFFF
 3029 148a 488D4808 		leaq	8(%rax), %rcx
 3030 148e 488D8520 		leaq	-480(%rbp), %rax
 3030      FEFFFF
 3031 1495 BA470000 		movl	$71, %edx
 3031      00
 3032 149a 4889CE   		movq	%rcx, %rsi
 3033 149d 4889C7   		movq	%rax, %rdi
 3034 14a0 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3034      00
 3035              		.loc 3 71 0 discriminator 33
 3036 14a5 488D8520 		leaq	-480(%rbp), %rax
 3036      FEFFFF
 3037 14ac 488D1500 		leaq	.LC7(%rip), %rdx
 3037      000000
 3038 14b3 4889C6   		movq	%rax, %rsi
 3039 14b6 4889DF   		movq	%rbx, %rdi
 3040 14b9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3040      00
 3041 14be EB43     		jmp	.L160
 3042              	.L159:
 3043              		.loc 3 71 0 discriminator 29
 3044 14c0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3044      00
 3045 14c5 488B18   		movq	(%rax), %rbx
 3046 14c8 488B85F8 		movq	-520(%rbp), %rax
 3046      FDFFFF
 3047 14cf 488D4808 		leaq	8(%rax), %rcx
 3048 14d3 488D8520 		leaq	-480(%rbp), %rax
 3048      FEFFFF
 3049 14da BA470000 		movl	$71, %edx
 3049      00
 3050 14df 4889CE   		movq	%rcx, %rsi
 3051 14e2 4889C7   		movq	%rax, %rdi
 3052 14e5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3052      00
 3053              		.loc 3 71 0 discriminator 40
 3054 14ea 488D8520 		leaq	-480(%rbp), %rax
 3054      FEFFFF
 3055 14f1 488D1500 		leaq	.LC8(%rip), %rdx
 3055      000000
 3056 14f8 4889C6   		movq	%rax, %rsi
 3057 14fb 4889DF   		movq	%rbx, %rdi
 3058 14fe E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3058      00
 3059              	.LEHE83:
 3060              	.L160:
 3061              	.LEHB84:
 3062              		.loc 3 71 0 discriminator 43
 3063 1503 E8000000 		call	__cxa_end_catch@PLT
 3063      00
 3064 1508 EB4D     		jmp	.L152
 3065              	.L168:
 3066 150a 4889C3   		movq	%rax, %rbx
 3067              	.LBB56:
 3068              		.loc 3 71 0
 3069 150d E8000000 		call	__cxa_end_catch@PLT
 3069      00
 3070 1512 4889D8   		movq	%rbx, %rax
 3071 1515 4889C7   		movq	%rax, %rdi
 3072 1518 E8000000 		call	_Unwind_Resume@PLT
 3072      00
 3073              	.LEHE84:
 3074              	.L170:
 3075 151d 4889C3   		movq	%rax, %rbx
 3076              	.LBE56:
 3077              	.LBB57:
 3078              	.LBB55:
 3079 1520 488D8540 		leaq	-448(%rbp), %rax
 3079      FEFFFF
 3080 1527 4889C7   		movq	%rax, %rdi
 3081 152a E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3081      00
 3082 152f EB03     		jmp	.L163
 3083              	.L169:
 3084 1531 4889C3   		movq	%rax, %rbx
 3085              	.L163:
 3086              	.LBE55:
 3087 1534 E8000000 		call	__cxa_end_catch@PLT
 3087      00
 3088 1539 4889D8   		movq	%rbx, %rax
 3089 153c 4889C7   		movq	%rax, %rdi
 3090              	.LEHB85:
 3091 153f E8000000 		call	_Unwind_Resume@PLT
 3091      00
 3092              	.LEHE85:
 3093              	.L171:
 3094 1544 4889C3   		movq	%rax, %rbx
 3095              	.LBE57:
 3096 1547 E8000000 		call	__cxa_end_catch@PLT
 3096      00
 3097 154c 4889D8   		movq	%rbx, %rax
 3098 154f 4889C7   		movq	%rax, %rdi
 3099              	.LEHB86:
 3100 1552 E8000000 		call	_Unwind_Resume@PLT
 3100      00
 3101              	.LEHE86:
 3102              	.L152:
 3103 1557 488B45D8 		movq	-40(%rbp), %rax
 3104 155b 64483304 		xorq	%fs:40, %rax
 3104      25280000 
 3104      00
 3105 1564 7405     		je	.L165
 3106 1566 E8000000 		call	__stack_chk_fail@PLT
 3106      00
 3107              	.L165:
 3108 156b 4881C4F8 		addq	$504, %rsp
 3108      010000
 3109 1572 5B       		popq	%rbx
 3110 1573 415C     		popq	%r12
 3111 1575 415D     		popq	%r13
 3112 1577 5D       		popq	%rbp
 3113              		.cfi_def_cfa 7, 8
 3114 1578 C3       		ret
 3115              		.cfi_endproc
 3116              	.LFE1414:
 3117              		.section	.gcc_except_table
 3118              		.align 4
 3119              	.LLSDA1414:
 3120 01e0 FF       		.byte	0xff
 3121 01e1 9B       		.byte	0x9b
 3122 01e2 55       		.uleb128 .LLSDATT1414-.LLSDATTD1414
 3123              	.LLSDATTD1414:
 3124 01e3 01       		.byte	0x1
 3125 01e4 3E       		.uleb128 .LLSDACSE1414-.LLSDACSB1414
 3126              	.LLSDACSB1414:
 3127 01e5 45       		.uleb128 .LEHB76-.LFB1414
 3128 01e6 05       		.uleb128 .LEHE76-.LEHB76
 3129 01e7 9F01     		.uleb128 .L166-.LFB1414
 3130 01e9 05       		.uleb128 0x5
 3131 01ea 69       		.uleb128 .LEHB77-.LFB1414
 3132 01eb 05       		.uleb128 .LEHE77-.LEHB77
 3133 01ec 8201     		.uleb128 .L167-.LFB1414
 3134 01ee 07       		.uleb128 0x7
 3135 01ef 78       		.uleb128 .LEHB78-.LFB1414
 3136 01f0 05       		.uleb128 .LEHE78-.LEHB78
 3137 01f1 9F01     		.uleb128 .L166-.LFB1414
 3138 01f3 05       		.uleb128 0x5
 3139 01f4 C301     		.uleb128 .LEHB79-.LFB1414
 3140 01f6 8901     		.uleb128 .LEHE79-.LEHB79
 3141 01f8 9E05     		.uleb128 .L168-.LFB1414
 3142 01fa 00       		.uleb128 0
 3143 01fb EF02     		.uleb128 .LEHB80-.LFB1414
 3144 01fd 05       		.uleb128 .LEHE80-.LEHB80
 3145 01fe C505     		.uleb128 .L169-.LFB1414
 3146 0200 00       		.uleb128 0
 3147 0201 8503     		.uleb128 .LEHB81-.LFB1414
 3148 0203 60       		.uleb128 .LEHE81-.LEHB81
 3149 0204 B105     		.uleb128 .L170-.LFB1414
 3150 0206 00       		.uleb128 0
 3151 0207 EF03     		.uleb128 .LEHB82-.LFB1414
 3152 0209 05       		.uleb128 .LEHE82-.LEHB82
 3153 020a C505     		.uleb128 .L169-.LFB1414
 3154 020c 00       		.uleb128 0
 3155 020d 8F04     		.uleb128 .LEHB83-.LFB1414
 3156 020f 8801     		.uleb128 .LEHE83-.LEHB83
 3157 0211 D805     		.uleb128 .L171-.LFB1414
 3158 0213 00       		.uleb128 0
 3159 0214 9705     		.uleb128 .LEHB84-.LFB1414
 3160 0216 1A       		.uleb128 .LEHE84-.LEHB84
 3161 0217 00       		.uleb128 0
 3162 0218 00       		.uleb128 0
 3163 0219 D305     		.uleb128 .LEHB85-.LFB1414
 3164 021b 05       		.uleb128 .LEHE85-.LEHB85
 3165 021c 00       		.uleb128 0
 3166 021d 00       		.uleb128 0
 3167 021e E605     		.uleb128 .LEHB86-.LFB1414
 3168 0220 05       		.uleb128 .LEHE86-.LEHB86
 3169 0221 00       		.uleb128 0
 3170 0222 00       		.uleb128 0
 3171              	.LLSDACSE1414:
 3172 0223 03       		.byte	0x3
 3173 0224 00       		.byte	0
 3174 0225 02       		.byte	0x2
 3175 0226 7D       		.byte	0x7d
 3176 0227 01       		.byte	0x1
 3177 0228 7D       		.byte	0x7d
 3178 0229 00       		.byte	0
 3179 022a 7D       		.byte	0x7d
 3180 022b 00       		.align 4
 3181 022c 00000000 		.long	0
 3182              	
 3183 0230 00000000 		.long	DW.ref._ZTISt9exception-.
 3184 0234 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 3185              	.LLSDATT1414:
 3186              		.text
 3188              		.section	.rodata
 3189              	.LC18:
 3190 02c1 6661696C 		.string	"failure"
 3190      75726500 
 3191              	.LC19:
 3192 02c9 72657375 		.string	"result.failed == true"
 3192      6C742E66 
 3192      61696C65 
 3192      64203D3D 
 3192      20747275 
 3193 02df 00       		.align 8
 3194              	.LC20:
 3195 02e0 556E6861 		.string	"Unhandled exception in CHECK(result.failed == true)"
 3195      6E646C65 
 3195      64206578 
 3195      63657074 
 3195      696F6E20 
 3196 0314 00000000 		.align 8
 3197              	.LC21:
 3198 0318 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(fileName.c_str(), result.failureFile)"
 3198      6E646C65 
 3198      64206578 
 3198      63657074 
 3198      696F6E20 
 3199              		.text
 3200 1579 90       		.align 2
 3202              	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper7RunIm
 3203              	.LFB1418:
  72:TestDeferredTestReporter.cpp **** {
 3204              		.loc 3 72 0 is_stmt 1
 3205              		.cfi_startproc
 3206              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3207              		.cfi_lsda 0x1b,.LLSDA1418
 3208 157a 55       		pushq	%rbp
 3209              		.cfi_def_cfa_offset 16
 3210              		.cfi_offset 6, -16
 3211 157b 4889E5   		movq	%rsp, %rbp
 3212              		.cfi_def_cfa_register 6
 3213 157e 53       		pushq	%rbx
 3214 157f 4883EC68 		subq	$104, %rsp
 3215              		.cfi_offset 3, -24
 3216 1583 48897D98 		movq	%rdi, -104(%rbp)
 3217              		.loc 3 72 0
 3218 1587 64488B04 		movq	%fs:40, %rax
 3218      25280000 
 3218      00
 3219 1590 488945E8 		movq	%rax, -24(%rbp)
 3220 1594 31C0     		xorl	%eax, %eax
  73:TestDeferredTestReporter.cpp ****     char const* failure = "failure";
 3221              		.loc 3 73 0
 3222 1596 488D0500 		leaq	.LC18(%rip), %rax
 3222      000000
 3223 159d 488945B0 		movq	%rax, -80(%rbp)
  74:TestDeferredTestReporter.cpp **** 
  75:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 3224              		.loc 3 75 0
 3225 15a1 488B4598 		movq	-104(%rbp), %rax
 3226 15a5 488B5598 		movq	-104(%rbp), %rdx
 3227 15a9 4881C288 		addq	$136, %rdx
 3227      000000
 3228 15b0 4889D6   		movq	%rdx, %rsi
 3229 15b3 4889C7   		movq	%rax, %rdi
 3230              	.LEHB87:
 3231 15b6 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 3231      00
  76:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure);
 3232              		.loc 3 76 0
 3233 15bb 488B4598 		movq	-104(%rbp), %rax
 3234 15bf 488B5598 		movq	-104(%rbp), %rdx
 3235 15c3 488D8A88 		leaq	136(%rdx), %rcx
 3235      000000
 3236 15ca 488B55B0 		movq	-80(%rbp), %rdx
 3237 15ce 4889CE   		movq	%rcx, %rsi
 3238 15d1 4889C7   		movq	%rax, %rdi
 3239 15d4 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 3239      00
  77:TestDeferredTestReporter.cpp **** 
  78:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 3240              		.loc 3 78 0
 3241 15d9 488B4598 		movq	-104(%rbp), %rax
 3242 15dd 4889C7   		movq	%rax, %rdi
 3243 15e0 E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 3243      00
 3244 15e5 BE000000 		movl	$0, %esi
 3244      00
 3245 15ea 4889C7   		movq	%rax, %rdi
 3246 15ed E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 3246      00
 3247              	.LEHE87:
 3248 15f2 488945B8 		movq	%rax, -72(%rbp)
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3249              		.loc 3 79 0
 3250 15f6 488B45B8 		movq	-72(%rbp), %rax
 3251 15fa 0FB6407C 		movzbl	124(%rax), %eax
 3252 15fe 0FB6C0   		movzbl	%al, %eax
 3253 1601 89C7     		movl	%eax, %edi
 3254 1603 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 3254      00
 3255 1608 83F001   		xorl	$1, %eax
 3256 160b 84C0     		testb	%al, %al
 3257 160d 743A     		je	.L174
 3258              	.LEHB88:
 3259              		.loc 3 79 0 is_stmt 0 discriminator 1
 3260 160f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3260      00
 3261 1614 488B18   		movq	(%rax), %rbx
 3262 1617 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3262      00
 3263              		.loc 3 79 0 discriminator 2
 3264 161c 488B08   		movq	(%rax), %rcx
 3265 161f 488D45C0 		leaq	-64(%rbp), %rax
 3266 1623 BA4F0000 		movl	$79, %edx
 3266      00
 3267 1628 4889CE   		movq	%rcx, %rsi
 3268 162b 4889C7   		movq	%rax, %rdi
 3269 162e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3269      00
 3270              		.loc 3 79 0 discriminator 4
 3271 1633 488D45C0 		leaq	-64(%rbp), %rax
 3272 1637 488D1500 		leaq	.LC19(%rip), %rdx
 3272      000000
 3273 163e 4889C6   		movq	%rax, %rsi
 3274 1641 4889DF   		movq	%rbx, %rdi
 3275 1644 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3275      00
 3276              	.LEHE88:
 3277              	.L174:
 3278              	.LEHB89:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3279              		.loc 3 80 0 is_stmt 1
 3280 1649 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3280      00
 3281 164e 488B08   		movq	(%rax), %rcx
 3282 1651 488D45C0 		leaq	-64(%rbp), %rax
 3283 1655 BA500000 		movl	$80, %edx
 3283      00
 3284 165a 4889CE   		movq	%rcx, %rsi
 3285 165d 4889C7   		movq	%rax, %rdi
 3286 1660 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3286      00
 3287              		.loc 3 80 0 is_stmt 0 discriminator 2
 3288 1665 488B45B8 		movq	-72(%rbp), %rax
 3289 1669 488D5840 		leaq	64(%rax), %rbx
 3290 166d 488B4598 		movq	-104(%rbp), %rax
 3291 1671 4883C060 		addq	$96, %rax
 3292 1675 4889C7   		movq	%rax, %rdi
 3293 1678 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@PLT
 3293      00
 3294 167d 488945A8 		movq	%rax, -88(%rbp)
 3295 1681 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3295      00
 3296              		.loc 3 80 0 discriminator 4
 3297 1686 488B00   		movq	(%rax), %rax
 3298 1689 488D55C0 		leaq	-64(%rbp), %rdx
 3299 168d 488D75A8 		leaq	-88(%rbp), %rsi
 3300 1691 4889D1   		movq	%rdx, %rcx
 3301 1694 4889DA   		movq	%rbx, %rdx
 3302 1697 4889C7   		movq	%rax, %rdi
 3303 169a E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 3303      00
 3304              	.LEHE89:
  81:TestDeferredTestReporter.cpp **** }
 3305              		.loc 3 81 0 is_stmt 1
 3306 169f E9BB0000 		jmp	.L173
 3306      00
 3307              	.L181:
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3308              		.loc 3 79 0
 3309 16a4 4889C7   		movq	%rax, %rdi
 3310 16a7 E8000000 		call	__cxa_begin_catch@PLT
 3310      00
 3311              	.LEHB90:
 3312 16ac E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3312      00
 3313 16b1 488B18   		movq	(%rax), %rbx
 3314 16b4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3314      00
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3315              		.loc 3 79 0 is_stmt 0 discriminator 8
 3316 16b9 488B08   		movq	(%rax), %rcx
 3317 16bc 488D45C0 		leaq	-64(%rbp), %rax
 3318 16c0 BA4F0000 		movl	$79, %edx
 3318      00
 3319 16c5 4889CE   		movq	%rcx, %rsi
 3320 16c8 4889C7   		movq	%rax, %rdi
 3321 16cb E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3321      00
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3322              		.loc 3 79 0 discriminator 12
 3323 16d0 488D45C0 		leaq	-64(%rbp), %rax
 3324 16d4 488D1500 		leaq	.LC20(%rip), %rdx
 3324      000000
 3325 16db 4889C6   		movq	%rax, %rsi
 3326 16de 4889DF   		movq	%rbx, %rdi
 3327 16e1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3327      00
 3328              	.LEHE90:
 3329              	.LEHB91:
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3330              		.loc 3 79 0 discriminator 14
 3331 16e6 E8000000 		call	__cxa_end_catch@PLT
 3331      00
 3332              	.LEHE91:
 3333 16eb E959FFFF 		jmp	.L174
 3333      FF
 3334              	.L182:
 3335 16f0 4889C3   		movq	%rax, %rbx
  79:TestDeferredTestReporter.cpp ****     CHECK(result.failed == true);
 3336              		.loc 3 79 0
 3337 16f3 E8000000 		call	__cxa_end_catch@PLT
 3337      00
 3338 16f8 4889D8   		movq	%rbx, %rax
 3339 16fb 4889C7   		movq	%rax, %rdi
 3340              	.LEHB92:
 3341 16fe E8000000 		call	_Unwind_Resume@PLT
 3341      00
 3342              	.LEHE92:
 3343              	.L183:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3344              		.loc 3 80 0 is_stmt 1
 3345 1703 4889C7   		movq	%rax, %rdi
 3346 1706 E8000000 		call	__cxa_begin_catch@PLT
 3346      00
 3347              	.LEHB93:
 3348 170b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3348      00
 3349 1710 488B18   		movq	(%rax), %rbx
 3350 1713 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3350      00
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3351              		.loc 3 80 0 is_stmt 0 discriminator 10
 3352 1718 488B08   		movq	(%rax), %rcx
 3353 171b 488D45C0 		leaq	-64(%rbp), %rax
 3354 171f BA500000 		movl	$80, %edx
 3354      00
 3355 1724 4889CE   		movq	%rcx, %rsi
 3356 1727 4889C7   		movq	%rax, %rdi
 3357 172a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3357      00
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3358              		.loc 3 80 0 discriminator 14
 3359 172f 488D45C0 		leaq	-64(%rbp), %rax
 3360 1733 488D1500 		leaq	.LC21(%rip), %rdx
 3360      000000
 3361 173a 4889C6   		movq	%rax, %rsi
 3362 173d 4889DF   		movq	%rbx, %rdi
 3363 1740 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3363      00
 3364              	.LEHE93:
 3365              	.LEHB94:
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3366              		.loc 3 80 0 discriminator 16
 3367 1745 E8000000 		call	__cxa_end_catch@PLT
 3367      00
 3368              	.LEHE94:
 3369              		.loc 3 81 0 is_stmt 1 discriminator 16
 3370 174a EB13     		jmp	.L173
 3371              	.L184:
 3372 174c 4889C3   		movq	%rax, %rbx
  80:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(fileName.c_str(), result.failureFile);
 3373              		.loc 3 80 0
 3374 174f E8000000 		call	__cxa_end_catch@PLT
 3374      00
 3375 1754 4889D8   		movq	%rbx, %rax
 3376 1757 4889C7   		movq	%rax, %rdi
 3377              	.LEHB95:
 3378 175a E8000000 		call	_Unwind_Resume@PLT
 3378      00
 3379              	.LEHE95:
 3380              	.L173:
 3381              		.loc 3 81 0
 3382 175f 488B45E8 		movq	-24(%rbp), %rax
 3383 1763 64483304 		xorq	%fs:40, %rax
 3383      25280000 
 3383      00
 3384 176c 7405     		je	.L180
 3385 176e E8000000 		call	__stack_chk_fail@PLT
 3385      00
 3386              	.L180:
 3387 1773 4883C468 		addq	$104, %rsp
 3388 1777 5B       		popq	%rbx
 3389 1778 5D       		popq	%rbp
 3390              		.cfi_def_cfa 7, 8
 3391 1779 C3       		ret
 3392              		.cfi_endproc
 3393              	.LFE1418:
 3394              		.section	.gcc_except_table
 3395              		.align 4
 3396              	.LLSDA1418:
 3397 0238 FF       		.byte	0xff
 3398 0239 9B       		.byte	0x9b
 3399 023a 39       		.uleb128 .LLSDATT1418-.LLSDATTD1418
 3400              	.LLSDATTD1418:
 3401 023b 01       		.byte	0x1
 3402 023c 30       		.uleb128 .LLSDACSE1418-.LLSDACSB1418
 3403              	.LLSDACSB1418:
 3404 023d 3C       		.uleb128 .LEHB87-.LFB1418
 3405 023e 3C       		.uleb128 .LEHE87-.LEHB87
 3406 023f 00       		.uleb128 0
 3407 0240 00       		.uleb128 0
 3408 0241 9501     		.uleb128 .LEHB88-.LFB1418
 3409 0243 3A       		.uleb128 .LEHE88-.LEHB88
 3410 0244 AA02     		.uleb128 .L181-.LFB1418
 3411 0246 01       		.uleb128 0x1
 3412 0247 CF01     		.uleb128 .LEHB89-.LFB1418
 3413 0249 56       		.uleb128 .LEHE89-.LEHB89
 3414 024a 8903     		.uleb128 .L183-.LFB1418
 3415 024c 01       		.uleb128 0x1
 3416 024d B202     		.uleb128 .LEHB90-.LFB1418
 3417 024f 3A       		.uleb128 .LEHE90-.LEHB90
 3418 0250 F602     		.uleb128 .L182-.LFB1418
 3419 0252 00       		.uleb128 0
 3420 0253 EC02     		.uleb128 .LEHB91-.LFB1418
 3421 0255 05       		.uleb128 .LEHE91-.LEHB91
 3422 0256 00       		.uleb128 0
 3423 0257 00       		.uleb128 0
 3424 0258 8403     		.uleb128 .LEHB92-.LFB1418
 3425 025a 05       		.uleb128 .LEHE92-.LEHB92
 3426 025b 00       		.uleb128 0
 3427 025c 00       		.uleb128 0
 3428 025d 9103     		.uleb128 .LEHB93-.LFB1418
 3429 025f 3A       		.uleb128 .LEHE93-.LEHB93
 3430 0260 D203     		.uleb128 .L184-.LFB1418
 3431 0262 00       		.uleb128 0
 3432 0263 CB03     		.uleb128 .LEHB94-.LFB1418
 3433 0265 05       		.uleb128 .LEHE94-.LEHB94
 3434 0266 00       		.uleb128 0
 3435 0267 00       		.uleb128 0
 3436 0268 E003     		.uleb128 .LEHB95-.LFB1418
 3437 026a 05       		.uleb128 .LEHE95-.LEHB95
 3438 026b 00       		.uleb128 0
 3439 026c 00       		.uleb128 0
 3440              	.LLSDACSE1418:
 3441 026d 01       		.byte	0x1
 3442 026e 00       		.byte	0
 3443 026f 00       		.align 4
 3444 0270 00000000 		.long	0
 3445              	
 3446              	.LLSDATT1418:
 3447              		.text
 3449              		.align 2
 3451              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3452              	.LFB1420:
  82:TestDeferredTestReporter.cpp **** 
  83:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, ReportFailureSavesFailureDetailsForMultipleFailures)
 3453              		.loc 3 83 0
 3454              		.cfi_startproc
 3455 177a 55       		pushq	%rbp
 3456              		.cfi_def_cfa_offset 16
 3457              		.cfi_offset 6, -16
 3458 177b 4889E5   		movq	%rsp, %rbp
 3459              		.cfi_def_cfa_register 6
 3460 177e 4883EC10 		subq	$16, %rsp
 3461 1782 48897DF8 		movq	%rdi, -8(%rbp)
 3462 1786 488975F0 		movq	%rsi, -16(%rbp)
 3463              	.LBB58:
 3464              		.loc 3 83 0
 3465 178a 488B45F8 		movq	-8(%rbp), %rax
 3466 178e 4889C7   		movq	%rax, %rdi
 3467 1791 E8AEE8FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 3467      FF
 3468 1796 488B45F8 		movq	-8(%rbp), %rax
 3469 179a 488B55F0 		movq	-16(%rbp), %rdx
 3470 179e 488990A8 		movq	%rdx, 168(%rax)
 3470      000000
 3471              	.LBE58:
 3472 17a5 90       		nop
 3473 17a6 C9       		leave
 3474              		.cfi_def_cfa 7, 8
 3475 17a7 C3       		ret
 3476              		.cfi_endproc
 3477              	.LFE1420:
 3479              		.set	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3480              		.section	.rodata
 3481 0361 00000000 		.align 8
 3481      000000
 3482              	.LC22:
 3483 0368 5265706F 		.string	"ReportFailureSavesFailureDetailsForMultipleFailures"
 3483      72744661 
 3483      696C7572 
 3483      65536176 
 3483      65734661 
 3484              		.text
 3485              		.align 2
 3487              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 3488              	.LFB1423:
 3489              		.loc 3 83 0
 3490              		.cfi_startproc
 3491 17a8 55       		pushq	%rbp
 3492              		.cfi_def_cfa_offset 16
 3493              		.cfi_offset 6, -16
 3494 17a9 4889E5   		movq	%rsp, %rbp
 3495              		.cfi_def_cfa_register 6
 3496 17ac 53       		pushq	%rbx
 3497 17ad 4883EC18 		subq	$24, %rsp
 3498              		.cfi_offset 3, -24
 3499 17b1 48897DE8 		movq	%rdi, -24(%rbp)
 3500              	.LBB59:
 3501              		.loc 3 83 0
 3502 17b5 488B5DE8 		movq	-24(%rbp), %rbx
 3503 17b9 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3503      00
 3504 17be 41B85300 		movl	$83, %r8d
 3504      0000
 3505 17c4 488D0D00 		leaq	.LC4(%rip), %rcx
 3505      000000
 3506 17cb 4889C2   		movq	%rax, %rdx
 3507 17ce 488D3500 		leaq	.LC22(%rip), %rsi
 3507      000000
 3508 17d5 4889DF   		movq	%rbx, %rdi
 3509 17d8 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 3509      00
 3510 17dd 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDeta
 3510      000000
 3511 17e4 488B45E8 		movq	-24(%rbp), %rax
 3512 17e8 488910   		movq	%rdx, (%rax)
 3513              	.LBE59:
 3514 17eb 90       		nop
 3515 17ec 4883C418 		addq	$24, %rsp
 3516 17f0 5B       		popq	%rbx
 3517 17f1 5D       		popq	%rbp
 3518              		.cfi_def_cfa 7, 8
 3519 17f2 C3       		ret
 3520              		.cfi_endproc
 3521              	.LFE1423:
 3523              		.set	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 3524              		.local	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetails
 3525              		.comm	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 3526              		.local	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetail
 3527              		.comm	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetails
 3528 17f3 90       		.align 2
 3530              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3531              	.LFB1427:
 3532              		.loc 3 83 0
 3533              		.cfi_startproc
 3534 17f4 55       		pushq	%rbp
 3535              		.cfi_def_cfa_offset 16
 3536              		.cfi_offset 6, -16
 3537 17f5 4889E5   		movq	%rsp, %rbp
 3538              		.cfi_def_cfa_register 6
 3539 17f8 4883EC10 		subq	$16, %rsp
 3540 17fc 48897DF8 		movq	%rdi, -8(%rbp)
 3541              	.LBB60:
 3542              		.loc 3 83 0
 3543 1800 488B45F8 		movq	-8(%rbp), %rax
 3544 1804 4889C7   		movq	%rax, %rdi
 3545 1807 E816EAFF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 3545      FF
 3546              	.LBE60:
 3547 180c 90       		nop
 3548 180d C9       		leave
 3549              		.cfi_def_cfa 7, 8
 3550 180e C3       		ret
 3551              		.cfi_endproc
 3552              	.LFE1427:
 3554              		.set	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3555 180f 90       		.align 2
 3557              	_ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMult
 3558              	.LFB1425:
 3559              		.loc 3 83 0
 3560              		.cfi_startproc
 3561              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3562              		.cfi_lsda 0x1b,.LLSDA1425
 3563 1810 55       		pushq	%rbp
 3564              		.cfi_def_cfa_offset 16
 3565              		.cfi_offset 6, -16
 3566 1811 4889E5   		movq	%rsp, %rbp
 3567              		.cfi_def_cfa_register 6
 3568 1814 4155     		pushq	%r13
 3569 1816 4154     		pushq	%r12
 3570 1818 53       		pushq	%rbx
 3571 1819 4881ECF8 		subq	$504, %rsp
 3571      010000
 3572              		.cfi_offset 13, -24
 3573              		.cfi_offset 12, -32
 3574              		.cfi_offset 3, -40
 3575 1820 4889BDF8 		movq	%rdi, -520(%rbp)
 3575      FDFFFF
 3576              		.loc 3 83 0
 3577 1827 64488B04 		movq	%fs:40, %rax
 3577      25280000 
 3577      00
 3578 1830 488945D8 		movq	%rax, -40(%rbp)
 3579 1834 31C0     		xorl	%eax, %eax
 3580 1836 C6850FFE 		movb	$0, -497(%rbp)
 3580      FFFF00
 3581              	.LBB61:
 3582 183d 488B85F8 		movq	-520(%rbp), %rax
 3582      FDFFFF
 3583 1844 488D5008 		leaq	8(%rax), %rdx
 3584 1848 488D8540 		leaq	-448(%rbp), %rax
 3584      FEFFFF
 3585 184f 4889D6   		movq	%rdx, %rsi
 3586 1852 4889C7   		movq	%rax, %rdi
 3587              	.LEHB96:
 3588 1855 E820FFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3588      FF
 3589              	.LEHE96:
 3590              		.loc 3 83 0 is_stmt 0 discriminator 1
 3591 185a C6850FFE 		movb	$1, -497(%rbp)
 3591      FFFF01
 3592 1861 488B85F8 		movq	-520(%rbp), %rax
 3592      FDFFFF
 3593 1868 488D5008 		leaq	8(%rax), %rdx
 3594 186c 488D8540 		leaq	-448(%rbp), %rax
 3594      FEFFFF
 3595 1873 4889D6   		movq	%rdx, %rsi
 3596 1876 4889C7   		movq	%rax, %rdi
 3597              	.LEHB97:
 3598 1879 E80B1600 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFai
 3598      00
 3599              	.LEHE97:
 3600              		.loc 3 83 0 discriminator 3
 3601 187e 488D8540 		leaq	-448(%rbp), %rax
 3601      FEFFFF
 3602 1885 4889C7   		movq	%rax, %rdi
 3603              	.LEHB98:
 3604 1888 E867FFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3604      FF
 3605              	.LEHE98:
 3606              	.LBE61:
 3607              		.loc 3 83 0
 3608 188d E9690200 		jmp	.L188
 3608      00
 3609              	.L203:
 3610 1892 4989C4   		movq	%rax, %r12
 3611 1895 4889D3   		movq	%rdx, %rbx
 3612              	.LBB62:
 3613 1898 488D8540 		leaq	-448(%rbp), %rax
 3613      FEFFFF
 3614 189f 4889C7   		movq	%rax, %rdi
 3615 18a2 E84DFFFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 3615      FF
 3616 18a7 4C89E0   		movq	%r12, %rax
 3617 18aa 4889DA   		movq	%rbx, %rdx
 3618 18ad EB00     		jmp	.L190
 3619              	.L202:
 3620              	.L190:
 3621 18af 4883FA01 		cmpq	$1, %rdx
 3622 18b3 740F     		je	.L192
 3623 18b5 4883FA02 		cmpq	$2, %rdx
 3624 18b9 0F84A700 		je	.L193
 3624      0000
 3625 18bf E94A0100 		jmp	.L208
 3625      00
 3626              	.L192:
 3627              	.LBE62:
 3628              	.LBB63:
 3629 18c4 4889C7   		movq	%rax, %rdi
 3630 18c7 E8000000 		call	__cxa_begin_catch@PLT
 3630      00
 3631 18cc 48898518 		movq	%rax, -488(%rbp)
 3631      FEFFFF
 3632              	.LEHB99:
 3633 18d3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3633      00
 3634 18d8 488B18   		movq	(%rax), %rbx
 3635 18db 488B8518 		movq	-488(%rbp), %rax
 3635      FEFFFF
 3636 18e2 488B00   		movq	(%rax), %rax
 3637 18e5 4883C010 		addq	$16, %rax
 3638 18e9 488B00   		movq	(%rax), %rax
 3639 18ec 488B9518 		movq	-488(%rbp), %rdx
 3639      FEFFFF
 3640 18f3 4889D7   		movq	%rdx, %rdi
 3641 18f6 FFD0     		call	*%rax
 3642              	.LVL8:
 3643 18f8 4989C4   		movq	%rax, %r12
 3644 18fb 488B8518 		movq	-488(%rbp), %rax
 3644      FEFFFF
 3645 1902 4889C7   		movq	%rax, %rdi
 3646 1905 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 3646      00
 3647              		.loc 3 83 0 discriminator 5
 3648 190a 4189C5   		movl	%eax, %r13d
 3649 190d 488B8518 		movq	-488(%rbp), %rax
 3649      FEFFFF
 3650 1914 4889C7   		movq	%rax, %rdi
 3651 1917 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 3651      00
 3652              		.loc 3 83 0 discriminator 7
 3653 191c 4889C1   		movq	%rax, %rcx
 3654 191f 488B85F8 		movq	-520(%rbp), %rax
 3654      FDFFFF
 3655 1926 488B5008 		movq	8(%rax), %rdx
 3656 192a 488B85F8 		movq	-520(%rbp), %rax
 3656      FDFFFF
 3657 1931 488B7010 		movq	16(%rax), %rsi
 3658 1935 488D8520 		leaq	-480(%rbp), %rax
 3658      FEFFFF
 3659 193c 4589E8   		movl	%r13d, %r8d
 3660 193f 4889C7   		movq	%rax, %rdi
 3661 1942 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 3661      00
 3662              		.loc 3 83 0 discriminator 11
 3663 1947 488D8520 		leaq	-480(%rbp), %rax
 3663      FEFFFF
 3664 194e 4C89E2   		movq	%r12, %rdx
 3665 1951 4889C6   		movq	%rax, %rsi
 3666 1954 4889DF   		movq	%rbx, %rdi
 3667 1957 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3667      00
 3668              	.LEHE99:
 3669              		.loc 3 83 0 discriminator 13
 3670 195c E8000000 		call	__cxa_end_catch@PLT
 3670      00
 3671              	.LBE63:
 3672 1961 E9950100 		jmp	.L188
 3672      00
 3673              	.L193:
 3674              	.LBB64:
 3675              		.loc 3 83 0
 3676 1966 4889C7   		movq	%rax, %rdi
 3677 1969 E8000000 		call	__cxa_begin_catch@PLT
 3677      00
 3678 196e 48898510 		movq	%rax, -496(%rbp)
 3678      FEFFFF
 3679              	.LBB65:
 3680 1975 488D8540 		leaq	-448(%rbp), %rax
 3680      FEFFFF
 3681 197c 4889C7   		movq	%rax, %rdi
 3682              	.LEHB100:
 3683 197f E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3683      00
 3684              	.LEHE100:
 3685              		.loc 3 83 0 discriminator 15
 3686 1984 488D8540 		leaq	-448(%rbp), %rax
 3686      FEFFFF
 3687 198b 488D3500 		leaq	.LC6(%rip), %rsi
 3687      000000
 3688 1992 4889C7   		movq	%rax, %rdi
 3689              	.LEHB101:
 3690 1995 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3690      00
 3691 199a 4889C3   		movq	%rax, %rbx
 3692 199d 488B8510 		movq	-496(%rbp), %rax
 3692      FEFFFF
 3693 19a4 488B00   		movq	(%rax), %rax
 3694 19a7 4883C010 		addq	$16, %rax
 3695 19ab 488B00   		movq	(%rax), %rax
 3696 19ae 488B9510 		movq	-496(%rbp), %rdx
 3696      FEFFFF
 3697 19b5 4889D7   		movq	%rdx, %rdi
 3698 19b8 FFD0     		call	*%rax
 3699              	.LVL9:
 3700 19ba 4889C6   		movq	%rax, %rsi
 3701 19bd 4889DF   		movq	%rbx, %rdi
 3702 19c0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3702      00
 3703              		.loc 3 83 0 discriminator 19
 3704 19c5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3704      00
 3705 19ca 488B18   		movq	(%rax), %rbx
 3706 19cd 488D8540 		leaq	-448(%rbp), %rax
 3706      FEFFFF
 3707 19d4 4889C7   		movq	%rax, %rdi
 3708 19d7 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 3708      00
 3709              		.loc 3 83 0 discriminator 21
 3710 19dc 4889C2   		movq	%rax, %rdx
 3711 19df 488B85F8 		movq	-520(%rbp), %rax
 3711      FDFFFF
 3712 19e6 4883C008 		addq	$8, %rax
 3713 19ea 4889C6   		movq	%rax, %rsi
 3714 19ed 4889DF   		movq	%rbx, %rdi
 3715 19f0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3715      00
 3716              	.LEHE101:
 3717              		.loc 3 83 0 discriminator 25
 3718 19f5 488D8540 		leaq	-448(%rbp), %rax
 3718      FEFFFF
 3719 19fc 4889C7   		movq	%rax, %rdi
 3720              	.LEHB102:
 3721 19ff E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3721      00
 3722              	.LEHE102:
 3723              	.LBE65:
 3724              		.loc 3 83 0 discriminator 26
 3725 1a04 E8000000 		call	__cxa_end_catch@PLT
 3725      00
 3726              	.LBE64:
 3727 1a09 E9ED0000 		jmp	.L188
 3727      00
 3728              	.L208:
 3729              		.loc 3 83 0
 3730 1a0e 4889C7   		movq	%rax, %rdi
 3731 1a11 E8000000 		call	__cxa_begin_catch@PLT
 3731      00
 3732 1a16 80BD0FFE 		cmpb	$0, -497(%rbp)
 3732      FFFF00
 3733 1a1d 7445     		je	.L195
 3734              	.LEHB103:
 3735              		.loc 3 83 0 discriminator 28
 3736 1a1f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3736      00
 3737 1a24 488B18   		movq	(%rax), %rbx
 3738 1a27 488B85F8 		movq	-520(%rbp), %rax
 3738      FDFFFF
 3739 1a2e 488D4808 		leaq	8(%rax), %rcx
 3740 1a32 488D8520 		leaq	-480(%rbp), %rax
 3740      FEFFFF
 3741 1a39 BA530000 		movl	$83, %edx
 3741      00
 3742 1a3e 4889CE   		movq	%rcx, %rsi
 3743 1a41 4889C7   		movq	%rax, %rdi
 3744 1a44 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3744      00
 3745              		.loc 3 83 0 discriminator 33
 3746 1a49 488D8520 		leaq	-480(%rbp), %rax
 3746      FEFFFF
 3747 1a50 488D1500 		leaq	.LC7(%rip), %rdx
 3747      000000
 3748 1a57 4889C6   		movq	%rax, %rsi
 3749 1a5a 4889DF   		movq	%rbx, %rdi
 3750 1a5d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3750      00
 3751 1a62 EB43     		jmp	.L196
 3752              	.L195:
 3753              		.loc 3 83 0 discriminator 29
 3754 1a64 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3754      00
 3755 1a69 488B18   		movq	(%rax), %rbx
 3756 1a6c 488B85F8 		movq	-520(%rbp), %rax
 3756      FDFFFF
 3757 1a73 488D4808 		leaq	8(%rax), %rcx
 3758 1a77 488D8520 		leaq	-480(%rbp), %rax
 3758      FEFFFF
 3759 1a7e BA530000 		movl	$83, %edx
 3759      00
 3760 1a83 4889CE   		movq	%rcx, %rsi
 3761 1a86 4889C7   		movq	%rax, %rdi
 3762 1a89 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3762      00
 3763              		.loc 3 83 0 discriminator 40
 3764 1a8e 488D8520 		leaq	-480(%rbp), %rax
 3764      FEFFFF
 3765 1a95 488D1500 		leaq	.LC8(%rip), %rdx
 3765      000000
 3766 1a9c 4889C6   		movq	%rax, %rsi
 3767 1a9f 4889DF   		movq	%rbx, %rdi
 3768 1aa2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3768      00
 3769              	.LEHE103:
 3770              	.L196:
 3771              	.LEHB104:
 3772              		.loc 3 83 0 discriminator 43
 3773 1aa7 E8000000 		call	__cxa_end_catch@PLT
 3773      00
 3774 1aac EB4D     		jmp	.L188
 3775              	.L204:
 3776 1aae 4889C3   		movq	%rax, %rbx
 3777              	.LBB67:
 3778              		.loc 3 83 0
 3779 1ab1 E8000000 		call	__cxa_end_catch@PLT
 3779      00
 3780 1ab6 4889D8   		movq	%rbx, %rax
 3781 1ab9 4889C7   		movq	%rax, %rdi
 3782 1abc E8000000 		call	_Unwind_Resume@PLT
 3782      00
 3783              	.LEHE104:
 3784              	.L206:
 3785 1ac1 4889C3   		movq	%rax, %rbx
 3786              	.LBE67:
 3787              	.LBB68:
 3788              	.LBB66:
 3789 1ac4 488D8540 		leaq	-448(%rbp), %rax
 3789      FEFFFF
 3790 1acb 4889C7   		movq	%rax, %rdi
 3791 1ace E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3791      00
 3792 1ad3 EB03     		jmp	.L199
 3793              	.L205:
 3794 1ad5 4889C3   		movq	%rax, %rbx
 3795              	.L199:
 3796              	.LBE66:
 3797 1ad8 E8000000 		call	__cxa_end_catch@PLT
 3797      00
 3798 1add 4889D8   		movq	%rbx, %rax
 3799 1ae0 4889C7   		movq	%rax, %rdi
 3800              	.LEHB105:
 3801 1ae3 E8000000 		call	_Unwind_Resume@PLT
 3801      00
 3802              	.LEHE105:
 3803              	.L207:
 3804 1ae8 4889C3   		movq	%rax, %rbx
 3805              	.LBE68:
 3806 1aeb E8000000 		call	__cxa_end_catch@PLT
 3806      00
 3807 1af0 4889D8   		movq	%rbx, %rax
 3808 1af3 4889C7   		movq	%rax, %rdi
 3809              	.LEHB106:
 3810 1af6 E8000000 		call	_Unwind_Resume@PLT
 3810      00
 3811              	.LEHE106:
 3812              	.L188:
 3813 1afb 488B45D8 		movq	-40(%rbp), %rax
 3814 1aff 64483304 		xorq	%fs:40, %rax
 3814      25280000 
 3814      00
 3815 1b08 7405     		je	.L201
 3816 1b0a E8000000 		call	__stack_chk_fail@PLT
 3816      00
 3817              	.L201:
 3818 1b0f 4881C4F8 		addq	$504, %rsp
 3818      010000
 3819 1b16 5B       		popq	%rbx
 3820 1b17 415C     		popq	%r12
 3821 1b19 415D     		popq	%r13
 3822 1b1b 5D       		popq	%rbp
 3823              		.cfi_def_cfa 7, 8
 3824 1b1c C3       		ret
 3825              		.cfi_endproc
 3826              	.LFE1425:
 3827              		.section	.gcc_except_table
 3828              		.align 4
 3829              	.LLSDA1425:
 3830 0274 FF       		.byte	0xff
 3831 0275 9B       		.byte	0x9b
 3832 0276 55       		.uleb128 .LLSDATT1425-.LLSDATTD1425
 3833              	.LLSDATTD1425:
 3834 0277 01       		.byte	0x1
 3835 0278 3E       		.uleb128 .LLSDACSE1425-.LLSDACSB1425
 3836              	.LLSDACSB1425:
 3837 0279 45       		.uleb128 .LEHB96-.LFB1425
 3838 027a 05       		.uleb128 .LEHE96-.LEHB96
 3839 027b 9F01     		.uleb128 .L202-.LFB1425
 3840 027d 05       		.uleb128 0x5
 3841 027e 69       		.uleb128 .LEHB97-.LFB1425
 3842 027f 05       		.uleb128 .LEHE97-.LEHB97
 3843 0280 8201     		.uleb128 .L203-.LFB1425
 3844 0282 07       		.uleb128 0x7
 3845 0283 78       		.uleb128 .LEHB98-.LFB1425
 3846 0284 05       		.uleb128 .LEHE98-.LEHB98
 3847 0285 9F01     		.uleb128 .L202-.LFB1425
 3848 0287 05       		.uleb128 0x5
 3849 0288 C301     		.uleb128 .LEHB99-.LFB1425
 3850 028a 8901     		.uleb128 .LEHE99-.LEHB99
 3851 028c 9E05     		.uleb128 .L204-.LFB1425
 3852 028e 00       		.uleb128 0
 3853 028f EF02     		.uleb128 .LEHB100-.LFB1425
 3854 0291 05       		.uleb128 .LEHE100-.LEHB100
 3855 0292 C505     		.uleb128 .L205-.LFB1425
 3856 0294 00       		.uleb128 0
 3857 0295 8503     		.uleb128 .LEHB101-.LFB1425
 3858 0297 60       		.uleb128 .LEHE101-.LEHB101
 3859 0298 B105     		.uleb128 .L206-.LFB1425
 3860 029a 00       		.uleb128 0
 3861 029b EF03     		.uleb128 .LEHB102-.LFB1425
 3862 029d 05       		.uleb128 .LEHE102-.LEHB102
 3863 029e C505     		.uleb128 .L205-.LFB1425
 3864 02a0 00       		.uleb128 0
 3865 02a1 8F04     		.uleb128 .LEHB103-.LFB1425
 3866 02a3 8801     		.uleb128 .LEHE103-.LEHB103
 3867 02a5 D805     		.uleb128 .L207-.LFB1425
 3868 02a7 00       		.uleb128 0
 3869 02a8 9705     		.uleb128 .LEHB104-.LFB1425
 3870 02aa 1A       		.uleb128 .LEHE104-.LEHB104
 3871 02ab 00       		.uleb128 0
 3872 02ac 00       		.uleb128 0
 3873 02ad D305     		.uleb128 .LEHB105-.LFB1425
 3874 02af 05       		.uleb128 .LEHE105-.LEHB105
 3875 02b0 00       		.uleb128 0
 3876 02b1 00       		.uleb128 0
 3877 02b2 E605     		.uleb128 .LEHB106-.LFB1425
 3878 02b4 05       		.uleb128 .LEHE106-.LEHB106
 3879 02b5 00       		.uleb128 0
 3880 02b6 00       		.uleb128 0
 3881              	.LLSDACSE1425:
 3882 02b7 03       		.byte	0x3
 3883 02b8 00       		.byte	0
 3884 02b9 02       		.byte	0x2
 3885 02ba 7D       		.byte	0x7d
 3886 02bb 01       		.byte	0x1
 3887 02bc 7D       		.byte	0x7d
 3888 02bd 00       		.byte	0
 3889 02be 7D       		.byte	0x7d
 3890 02bf 00       		.align 4
 3891 02c0 00000000 		.long	0
 3892              	
 3893 02c4 00000000 		.long	DW.ref._ZTISt9exception-.
 3894 02c8 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 3895              	.LLSDATT1425:
 3896              		.text
 3898              		.section	.rodata
 3899              	.LC23:
 3900 039c 6661696C 		.string	"failure 1"
 3900      75726520 
 3900      3100
 3901              	.LC24:
 3902 03a6 6661696C 		.string	"failure 2"
 3902      75726520 
 3902      3200
 3903              		.align 8
 3904              	.LC25:
 3905 03b0 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(2, (int)result.failures.size())"
 3905      6E646C65 
 3905      64206578 
 3905      63657074 
 3905      696F6E20 
 3906 03f3 00000000 		.align 8
 3906      00
 3907              	.LC26:
 3908 03f8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(failure1, result.failures[0].second)"
 3908      6E646C65 
 3908      64206578 
 3908      63657074 
 3908      696F6E20 
 3909              		.align 8
 3910              	.LC27:
 3911 0440 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(failure2, result.failures[1].second)"
 3911      6E646C65 
 3911      64206578 
 3911      63657074 
 3911      696F6E20 
 3912              		.text
 3913 1b1d 90       		.align 2
 3915              	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleF
 3916              	.LFB1429:
  84:TestDeferredTestReporter.cpp **** {
 3917              		.loc 3 84 0 is_stmt 1
 3918              		.cfi_startproc
 3919              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3920              		.cfi_lsda 0x1b,.LLSDA1429
 3921 1b1e 55       		pushq	%rbp
 3922              		.cfi_def_cfa_offset 16
 3923              		.cfi_offset 6, -16
 3924 1b1f 4889E5   		movq	%rsp, %rbp
 3925              		.cfi_def_cfa_register 6
 3926 1b22 53       		pushq	%rbx
 3927 1b23 4883EC68 		subq	$104, %rsp
 3928              		.cfi_offset 3, -24
 3929 1b27 48897D98 		movq	%rdi, -104(%rbp)
 3930              		.loc 3 84 0
 3931 1b2b 64488B04 		movq	%fs:40, %rax
 3931      25280000 
 3931      00
 3932 1b34 488945E8 		movq	%rax, -24(%rbp)
 3933 1b38 31C0     		xorl	%eax, %eax
  85:TestDeferredTestReporter.cpp ****     char const* failure1 = "failure 1";
 3934              		.loc 3 85 0
 3935 1b3a 488D0500 		leaq	.LC23(%rip), %rax
 3935      000000
 3936 1b41 488945A8 		movq	%rax, -88(%rbp)
  86:TestDeferredTestReporter.cpp ****     char const* failure2 = "failure 2";
 3937              		.loc 3 86 0
 3938 1b45 488D0500 		leaq	.LC24(%rip), %rax
 3938      000000
 3939 1b4c 488945B0 		movq	%rax, -80(%rbp)
  87:TestDeferredTestReporter.cpp **** 
  88:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 3940              		.loc 3 88 0
 3941 1b50 488B4598 		movq	-104(%rbp), %rax
 3942 1b54 488B5598 		movq	-104(%rbp), %rdx
 3943 1b58 4881C288 		addq	$136, %rdx
 3943      000000
 3944 1b5f 4889D6   		movq	%rdx, %rsi
 3945 1b62 4889C7   		movq	%rax, %rdi
 3946              	.LEHB107:
 3947 1b65 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 3947      00
  89:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure1);
 3948              		.loc 3 89 0
 3949 1b6a 488B4598 		movq	-104(%rbp), %rax
 3950 1b6e 488B55A8 		movq	-88(%rbp), %rdx
 3951 1b72 488B4D98 		movq	-104(%rbp), %rcx
 3952 1b76 4881C188 		addq	$136, %rcx
 3952      000000
 3953 1b7d 4889CE   		movq	%rcx, %rsi
 3954 1b80 4889C7   		movq	%rax, %rdi
 3955 1b83 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 3955      00
  90:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failure2);
 3956              		.loc 3 90 0
 3957 1b88 488B4598 		movq	-104(%rbp), %rax
 3958 1b8c 488B55B0 		movq	-80(%rbp), %rdx
 3959 1b90 488B4D98 		movq	-104(%rbp), %rcx
 3960 1b94 4881C188 		addq	$136, %rcx
 3960      000000
 3961 1b9b 4889CE   		movq	%rcx, %rsi
 3962 1b9e 4889C7   		movq	%rax, %rdi
 3963 1ba1 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 3963      00
  91:TestDeferredTestReporter.cpp **** 
  92:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 3964              		.loc 3 92 0
 3965 1ba6 488B4598 		movq	-104(%rbp), %rax
 3966 1baa 4889C7   		movq	%rax, %rdi
 3967 1bad E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 3967      00
 3968 1bb2 BE000000 		movl	$0, %esi
 3968      00
 3969 1bb7 4889C7   		movq	%rax, %rdi
 3970 1bba E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 3970      00
 3971              	.LEHE107:
 3972 1bbf 488945B8 		movq	%rax, -72(%rbp)
 3973              	.LEHB108:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(2, (int)result.failures.size());
 3974              		.loc 3 93 0
 3975 1bc3 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3975      00
 3976 1bc8 488B08   		movq	(%rax), %rcx
 3977 1bcb 488D45C0 		leaq	-64(%rbp), %rax
 3978 1bcf BA5D0000 		movl	$93, %edx
 3978      00
 3979 1bd4 4889CE   		movq	%rcx, %rsi
 3980 1bd7 4889C7   		movq	%rax, %rdi
 3981 1bda E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3981      00
 3982              	.LEHE108:
 3983              		.loc 3 93 0 is_stmt 0 discriminator 2
 3984 1bdf 488B45B8 		movq	-72(%rbp), %rax
 3985 1be3 4883C060 		addq	$96, %rax
 3986 1be7 4889C7   		movq	%rax, %rdi
 3987 1bea E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 3987      00
 3988 1bef 8945A4   		movl	%eax, -92(%rbp)
 3989 1bf2 C745A002 		movl	$2, -96(%rbp)
 3989      000000
 3990              	.LEHB109:
 3991 1bf9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3991      00
 3992 1bfe 488B00   		movq	(%rax), %rax
 3993 1c01 488D4DC0 		leaq	-64(%rbp), %rcx
 3994 1c05 488D55A4 		leaq	-92(%rbp), %rdx
 3995 1c09 488D75A0 		leaq	-96(%rbp), %rsi
 3996 1c0d 4889C7   		movq	%rax, %rdi
 3997 1c10 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 3997      00
 3998              	.LEHE109:
 3999              	.L212:
 4000              	.LEHB110:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4001              		.loc 3 94 0 is_stmt 1
 4002 1c15 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4002      00
 4003 1c1a 488B08   		movq	(%rax), %rcx
 4004 1c1d 488D45C0 		leaq	-64(%rbp), %rax
 4005 1c21 BA5E0000 		movl	$94, %edx
 4005      00
 4006 1c26 4889CE   		movq	%rcx, %rsi
 4007 1c29 4889C7   		movq	%rax, %rdi
 4008 1c2c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4008      00
 4009              		.loc 3 94 0 is_stmt 0 discriminator 2
 4010 1c31 488B45B8 		movq	-72(%rbp), %rax
 4011 1c35 4883C060 		addq	$96, %rax
 4012 1c39 BE000000 		movl	$0, %esi
 4012      00
 4013 1c3e 4889C7   		movq	%rax, %rdi
 4014 1c41 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 4014      00
 4015 1c46 488D5808 		leaq	8(%rax), %rbx
 4016 1c4a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4016      00
 4017 1c4f 488B00   		movq	(%rax), %rax
 4018 1c52 488D55C0 		leaq	-64(%rbp), %rdx
 4019 1c56 488D75A8 		leaq	-88(%rbp), %rsi
 4020 1c5a 4889D1   		movq	%rdx, %rcx
 4021 1c5d 4889DA   		movq	%rbx, %rdx
 4022 1c60 4889C7   		movq	%rax, %rdi
 4023 1c63 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4023      00
 4024              	.LEHE110:
 4025              	.L215:
 4026              	.LEHB111:
  95:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4027              		.loc 3 95 0 is_stmt 1
 4028 1c68 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4028      00
 4029 1c6d 488B08   		movq	(%rax), %rcx
 4030 1c70 488D45C0 		leaq	-64(%rbp), %rax
 4031 1c74 BA5F0000 		movl	$95, %edx
 4031      00
 4032 1c79 4889CE   		movq	%rcx, %rsi
 4033 1c7c 4889C7   		movq	%rax, %rdi
 4034 1c7f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4034      00
 4035              		.loc 3 95 0 is_stmt 0 discriminator 2
 4036 1c84 488B45B8 		movq	-72(%rbp), %rax
 4037 1c88 4883C060 		addq	$96, %rax
 4038 1c8c BE010000 		movl	$1, %esi
 4038      00
 4039 1c91 4889C7   		movq	%rax, %rdi
 4040 1c94 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 4040      00
 4041 1c99 488D5808 		leaq	8(%rax), %rbx
 4042 1c9d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4042      00
 4043 1ca2 488B00   		movq	(%rax), %rax
 4044 1ca5 488D55C0 		leaq	-64(%rbp), %rdx
 4045 1ca9 488D75B0 		leaq	-80(%rbp), %rsi
 4046 1cad 4889D1   		movq	%rdx, %rcx
 4047 1cb0 4889DA   		movq	%rbx, %rdx
 4048 1cb3 4889C7   		movq	%rax, %rdi
 4049 1cb6 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4049      00
 4050              	.LEHE111:
  96:TestDeferredTestReporter.cpp **** }
 4051              		.loc 3 96 0 is_stmt 1
 4052 1cbb E91C0100 		jmp	.L209
 4052      00
 4053              	.L222:
 4054 1cc0 EB00     		jmp	.L211
 4055              	.L221:
 4056              	.L211:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4057              		.loc 3 93 0
 4058 1cc2 4889C7   		movq	%rax, %rdi
 4059 1cc5 E8000000 		call	__cxa_begin_catch@PLT
 4059      00
 4060              	.LEHB112:
 4061 1cca E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4061      00
 4062 1ccf 488B18   		movq	(%rax), %rbx
 4063 1cd2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4063      00
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4064              		.loc 3 93 0 is_stmt 0 discriminator 8
 4065 1cd7 488B08   		movq	(%rax), %rcx
 4066 1cda 488D45C0 		leaq	-64(%rbp), %rax
 4067 1cde BA5D0000 		movl	$93, %edx
 4067      00
 4068 1ce3 4889CE   		movq	%rcx, %rsi
 4069 1ce6 4889C7   		movq	%rax, %rdi
 4070 1ce9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4070      00
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4071              		.loc 3 93 0 discriminator 12
 4072 1cee 488D45C0 		leaq	-64(%rbp), %rax
 4073 1cf2 488D1500 		leaq	.LC25(%rip), %rdx
 4073      000000
 4074 1cf9 4889C6   		movq	%rax, %rsi
 4075 1cfc 4889DF   		movq	%rbx, %rdi
 4076 1cff E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4076      00
 4077              	.LEHE112:
 4078              	.LEHB113:
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4079              		.loc 3 93 0 discriminator 14
 4080 1d04 E8000000 		call	__cxa_end_catch@PLT
 4080      00
 4081              	.LEHE113:
 4082 1d09 E907FFFF 		jmp	.L212
 4082      FF
 4083              	.L223:
 4084 1d0e 4889C3   		movq	%rax, %rbx
  93:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure1, result.failures[0].second);
 4085              		.loc 3 93 0
 4086 1d11 E8000000 		call	__cxa_end_catch@PLT
 4086      00
 4087 1d16 4889D8   		movq	%rbx, %rax
 4088 1d19 4889C7   		movq	%rax, %rdi
 4089              	.LEHB114:
 4090 1d1c E8000000 		call	_Unwind_Resume@PLT
 4090      00
 4091              	.LEHE114:
 4092              	.L224:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4093              		.loc 3 94 0 is_stmt 1
 4094 1d21 4889C7   		movq	%rax, %rdi
 4095 1d24 E8000000 		call	__cxa_begin_catch@PLT
 4095      00
 4096              	.LEHB115:
 4097 1d29 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4097      00
 4098 1d2e 488B18   		movq	(%rax), %rbx
 4099 1d31 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4099      00
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4100              		.loc 3 94 0 is_stmt 0 discriminator 8
 4101 1d36 488B08   		movq	(%rax), %rcx
 4102 1d39 488D45C0 		leaq	-64(%rbp), %rax
 4103 1d3d BA5E0000 		movl	$94, %edx
 4103      00
 4104 1d42 4889CE   		movq	%rcx, %rsi
 4105 1d45 4889C7   		movq	%rax, %rdi
 4106 1d48 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4106      00
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4107              		.loc 3 94 0 discriminator 12
 4108 1d4d 488D45C0 		leaq	-64(%rbp), %rax
 4109 1d51 488D1500 		leaq	.LC26(%rip), %rdx
 4109      000000
 4110 1d58 4889C6   		movq	%rax, %rsi
 4111 1d5b 4889DF   		movq	%rbx, %rdi
 4112 1d5e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4112      00
 4113              	.LEHE115:
 4114              	.LEHB116:
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4115              		.loc 3 94 0 discriminator 14
 4116 1d63 E8000000 		call	__cxa_end_catch@PLT
 4116      00
 4117              	.LEHE116:
 4118 1d68 E9FBFEFF 		jmp	.L215
 4118      FF
 4119              	.L225:
 4120 1d6d 4889C3   		movq	%rax, %rbx
  94:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(failure2, result.failures[1].second);
 4121              		.loc 3 94 0
 4122 1d70 E8000000 		call	__cxa_end_catch@PLT
 4122      00
 4123 1d75 4889D8   		movq	%rbx, %rax
 4124 1d78 4889C7   		movq	%rax, %rdi
 4125              	.LEHB117:
 4126 1d7b E8000000 		call	_Unwind_Resume@PLT
 4126      00
 4127              	.LEHE117:
 4128              	.L226:
  95:TestDeferredTestReporter.cpp **** }
 4129              		.loc 3 95 0 is_stmt 1
 4130 1d80 4889C7   		movq	%rax, %rdi
 4131 1d83 E8000000 		call	__cxa_begin_catch@PLT
 4131      00
 4132              	.LEHB118:
 4133 1d88 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4133      00
 4134 1d8d 488B18   		movq	(%rax), %rbx
 4135 1d90 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4135      00
  95:TestDeferredTestReporter.cpp **** }
 4136              		.loc 3 95 0 is_stmt 0 discriminator 8
 4137 1d95 488B08   		movq	(%rax), %rcx
 4138 1d98 488D45C0 		leaq	-64(%rbp), %rax
 4139 1d9c BA5F0000 		movl	$95, %edx
 4139      00
 4140 1da1 4889CE   		movq	%rcx, %rsi
 4141 1da4 4889C7   		movq	%rax, %rdi
 4142 1da7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4142      00
  95:TestDeferredTestReporter.cpp **** }
 4143              		.loc 3 95 0 discriminator 12
 4144 1dac 488D45C0 		leaq	-64(%rbp), %rax
 4145 1db0 488D1500 		leaq	.LC27(%rip), %rdx
 4145      000000
 4146 1db7 4889C6   		movq	%rax, %rsi
 4147 1dba 4889DF   		movq	%rbx, %rdi
 4148 1dbd E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4148      00
 4149              	.LEHE118:
 4150              	.LEHB119:
  95:TestDeferredTestReporter.cpp **** }
 4151              		.loc 3 95 0 discriminator 14
 4152 1dc2 E8000000 		call	__cxa_end_catch@PLT
 4152      00
 4153              	.LEHE119:
 4154              		.loc 3 96 0 is_stmt 1 discriminator 14
 4155 1dc7 EB13     		jmp	.L209
 4156              	.L227:
 4157 1dc9 4889C3   		movq	%rax, %rbx
  95:TestDeferredTestReporter.cpp **** }
 4158              		.loc 3 95 0
 4159 1dcc E8000000 		call	__cxa_end_catch@PLT
 4159      00
 4160 1dd1 4889D8   		movq	%rbx, %rax
 4161 1dd4 4889C7   		movq	%rax, %rdi
 4162              	.LEHB120:
 4163 1dd7 E8000000 		call	_Unwind_Resume@PLT
 4163      00
 4164              	.LEHE120:
 4165              	.L209:
 4166              		.loc 3 96 0
 4167 1ddc 488B45E8 		movq	-24(%rbp), %rax
 4168 1de0 64483304 		xorq	%fs:40, %rax
 4168      25280000 
 4168      00
 4169 1de9 7405     		je	.L220
 4170 1deb E8000000 		call	__stack_chk_fail@PLT
 4170      00
 4171              	.L220:
 4172 1df0 4883C468 		addq	$104, %rsp
 4173 1df4 5B       		popq	%rbx
 4174 1df5 5D       		popq	%rbp
 4175              		.cfi_def_cfa 7, 8
 4176 1df6 C3       		ret
 4177              		.cfi_endproc
 4178              	.LFE1429:
 4179              		.section	.gcc_except_table
 4180              		.align 4
 4181              	.LLSDA1429:
 4182 02cc FF       		.byte	0xff
 4183 02cd 9B       		.byte	0x9b
 4184 02ce 59       		.uleb128 .LLSDATT1429-.LLSDATTD1429
 4185              	.LLSDATTD1429:
 4186 02cf 01       		.byte	0x1
 4187 02d0 4C       		.uleb128 .LLSDACSE1429-.LLSDACSB1429
 4188              	.LLSDACSB1429:
 4189 02d1 47       		.uleb128 .LEHB107-.LFB1429
 4190 02d2 5A       		.uleb128 .LEHE107-.LEHB107
 4191 02d3 00       		.uleb128 0
 4192 02d4 00       		.uleb128 0
 4193 02d5 A501     		.uleb128 .LEHB108-.LFB1429
 4194 02d7 1C       		.uleb128 .LEHE108-.LEHB108
 4195 02d8 A403     		.uleb128 .L221-.LFB1429
 4196 02da 01       		.uleb128 0x1
 4197 02db DB01     		.uleb128 .LEHB109-.LFB1429
 4198 02dd 1C       		.uleb128 .LEHE109-.LEHB109
 4199 02de A203     		.uleb128 .L222-.LFB1429
 4200 02e0 03       		.uleb128 0x3
 4201 02e1 F701     		.uleb128 .LEHB110-.LFB1429
 4202 02e3 53       		.uleb128 .LEHE110-.LEHB110
 4203 02e4 8304     		.uleb128 .L224-.LFB1429
 4204 02e6 01       		.uleb128 0x1
 4205 02e7 CA02     		.uleb128 .LEHB111-.LFB1429
 4206 02e9 53       		.uleb128 .LEHE111-.LEHB111
 4207 02ea E204     		.uleb128 .L226-.LFB1429
 4208 02ec 01       		.uleb128 0x1
 4209 02ed AC03     		.uleb128 .LEHB112-.LFB1429
 4210 02ef 3A       		.uleb128 .LEHE112-.LEHB112
 4211 02f0 F003     		.uleb128 .L223-.LFB1429
 4212 02f2 00       		.uleb128 0
 4213 02f3 E603     		.uleb128 .LEHB113-.LFB1429
 4214 02f5 05       		.uleb128 .LEHE113-.LEHB113
 4215 02f6 00       		.uleb128 0
 4216 02f7 00       		.uleb128 0
 4217 02f8 FE03     		.uleb128 .LEHB114-.LFB1429
 4218 02fa 05       		.uleb128 .LEHE114-.LEHB114
 4219 02fb 00       		.uleb128 0
 4220 02fc 00       		.uleb128 0
 4221 02fd 8B04     		.uleb128 .LEHB115-.LFB1429
 4222 02ff 3A       		.uleb128 .LEHE115-.LEHB115
 4223 0300 CF04     		.uleb128 .L225-.LFB1429
 4224 0302 00       		.uleb128 0
 4225 0303 C504     		.uleb128 .LEHB116-.LFB1429
 4226 0305 05       		.uleb128 .LEHE116-.LEHB116
 4227 0306 00       		.uleb128 0
 4228 0307 00       		.uleb128 0
 4229 0308 DD04     		.uleb128 .LEHB117-.LFB1429
 4230 030a 05       		.uleb128 .LEHE117-.LEHB117
 4231 030b 00       		.uleb128 0
 4232 030c 00       		.uleb128 0
 4233 030d EA04     		.uleb128 .LEHB118-.LFB1429
 4234 030f 3A       		.uleb128 .LEHE118-.LEHB118
 4235 0310 AB05     		.uleb128 .L227-.LFB1429
 4236 0312 00       		.uleb128 0
 4237 0313 A405     		.uleb128 .LEHB119-.LFB1429
 4238 0315 05       		.uleb128 .LEHE119-.LEHB119
 4239 0316 00       		.uleb128 0
 4240 0317 00       		.uleb128 0
 4241 0318 B905     		.uleb128 .LEHB120-.LFB1429
 4242 031a 05       		.uleb128 .LEHE120-.LEHB120
 4243 031b 00       		.uleb128 0
 4244 031c 00       		.uleb128 0
 4245              	.LLSDACSE1429:
 4246 031d 01       		.byte	0x1
 4247 031e 00       		.byte	0
 4248 031f 00       		.byte	0
 4249 0320 7D       		.byte	0x7d
 4250 0321 000000   		.align 4
 4251 0324 00000000 		.long	0
 4252              	
 4253              	.LLSDATT1429:
 4254              		.text
 4256 1df7 90       		.align 2
 4258              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4259              	.LFB1431:
  97:TestDeferredTestReporter.cpp **** 
  98:TestDeferredTestReporter.cpp **** TEST_FIXTURE(DeferredTestReporterFixture, DeferredTestReporterTakesCopyOfFailureMessage)
 4260              		.loc 3 98 0
 4261              		.cfi_startproc
 4262 1df8 55       		pushq	%rbp
 4263              		.cfi_def_cfa_offset 16
 4264              		.cfi_offset 6, -16
 4265 1df9 4889E5   		movq	%rsp, %rbp
 4266              		.cfi_def_cfa_register 6
 4267 1dfc 4883EC10 		subq	$16, %rsp
 4268 1e00 48897DF8 		movq	%rdi, -8(%rbp)
 4269 1e04 488975F0 		movq	%rsi, -16(%rbp)
 4270              	.LBB69:
 4271              		.loc 3 98 0
 4272 1e08 488B45F8 		movq	-8(%rbp), %rax
 4273 1e0c 4889C7   		movq	%rax, %rdi
 4274 1e0f E830E2FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
 4274      FF
 4275 1e14 488B45F8 		movq	-8(%rbp), %rax
 4276 1e18 488B55F0 		movq	-16(%rbp), %rdx
 4277 1e1c 488990A8 		movq	%rdx, 168(%rax)
 4277      000000
 4278              	.LBE69:
 4279 1e23 90       		nop
 4280 1e24 C9       		leave
 4281              		.cfi_def_cfa 7, 8
 4282 1e25 C3       		ret
 4283              		.cfi_endproc
 4284              	.LFE1431:
 4286              		.set	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4287              		.section	.rodata
 4288              		.align 8
 4289              	.LC28:
 4290 0488 44656665 		.string	"DeferredTestReporterTakesCopyOfFailureMessage"
 4290      72726564 
 4290      54657374 
 4290      5265706F 
 4290      72746572 
 4291              		.text
 4292              		.align 2
 4294              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 4295              	.LFB1434:
 4296              		.loc 3 98 0
 4297              		.cfi_startproc
 4298 1e26 55       		pushq	%rbp
 4299              		.cfi_def_cfa_offset 16
 4300              		.cfi_offset 6, -16
 4301 1e27 4889E5   		movq	%rsp, %rbp
 4302              		.cfi_def_cfa_register 6
 4303 1e2a 53       		pushq	%rbx
 4304 1e2b 4883EC18 		subq	$24, %rsp
 4305              		.cfi_offset 3, -24
 4306 1e2f 48897DE8 		movq	%rdi, -24(%rbp)
 4307              	.LBB70:
 4308              		.loc 3 98 0
 4309 1e33 488B5DE8 		movq	-24(%rbp), %rbx
 4310 1e37 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4310      00
 4311 1e3c 41B86200 		movl	$98, %r8d
 4311      0000
 4312 1e42 488D0D00 		leaq	.LC4(%rip), %rcx
 4312      000000
 4313 1e49 4889C2   		movq	%rax, %rdx
 4314 1e4c 488D3500 		leaq	.LC28(%rip), %rsi
 4314      000000
 4315 1e53 4889DF   		movq	%rbx, %rdi
 4316 1e56 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 4316      00
 4317 1e5b 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopy
 4317      000000
 4318 1e62 488B45E8 		movq	-24(%rbp), %rax
 4319 1e66 488910   		movq	%rdx, (%rax)
 4320              	.LBE70:
 4321 1e69 90       		nop
 4322 1e6a 4883C418 		addq	$24, %rsp
 4323 1e6e 5B       		popq	%rbx
 4324 1e6f 5D       		popq	%rbp
 4325              		.cfi_def_cfa 7, 8
 4326 1e70 C3       		ret
 4327              		.cfi_endproc
 4328              	.LFE1434:
 4330              		.set	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 4331              		.local	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 4332              		.comm	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 4333              		.local	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 4334              		.comm	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 4335 1e71 90       		.align 2
 4337              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4338              	.LFB1438:
 4339              		.loc 3 98 0
 4340              		.cfi_startproc
 4341 1e72 55       		pushq	%rbp
 4342              		.cfi_def_cfa_offset 16
 4343              		.cfi_offset 6, -16
 4344 1e73 4889E5   		movq	%rsp, %rbp
 4345              		.cfi_def_cfa_register 6
 4346 1e76 4883EC10 		subq	$16, %rsp
 4347 1e7a 48897DF8 		movq	%rdi, -8(%rbp)
 4348              	.LBB71:
 4349              		.loc 3 98 0
 4350 1e7e 488B45F8 		movq	-8(%rbp), %rax
 4351 1e82 4889C7   		movq	%rax, %rdi
 4352 1e85 E898E3FF 		call	_ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
 4352      FF
 4353              	.LBE71:
 4354 1e8a 90       		nop
 4355 1e8b C9       		leave
 4356              		.cfi_def_cfa 7, 8
 4357 1e8c C3       		ret
 4358              		.cfi_endproc
 4359              	.LFE1438:
 4361              		.set	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4362 1e8d 90       		.align 2
 4364              	_ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureM
 4365              	.LFB1436:
 4366              		.loc 3 98 0
 4367              		.cfi_startproc
 4368              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4369              		.cfi_lsda 0x1b,.LLSDA1436
 4370 1e8e 55       		pushq	%rbp
 4371              		.cfi_def_cfa_offset 16
 4372              		.cfi_offset 6, -16
 4373 1e8f 4889E5   		movq	%rsp, %rbp
 4374              		.cfi_def_cfa_register 6
 4375 1e92 4155     		pushq	%r13
 4376 1e94 4154     		pushq	%r12
 4377 1e96 53       		pushq	%rbx
 4378 1e97 4881ECF8 		subq	$504, %rsp
 4378      010000
 4379              		.cfi_offset 13, -24
 4380              		.cfi_offset 12, -32
 4381              		.cfi_offset 3, -40
 4382 1e9e 4889BDF8 		movq	%rdi, -520(%rbp)
 4382      FDFFFF
 4383              		.loc 3 98 0
 4384 1ea5 64488B04 		movq	%fs:40, %rax
 4384      25280000 
 4384      00
 4385 1eae 488945D8 		movq	%rax, -40(%rbp)
 4386 1eb2 31C0     		xorl	%eax, %eax
 4387 1eb4 C6850FFE 		movb	$0, -497(%rbp)
 4387      FFFF00
 4388              	.LBB72:
 4389 1ebb 488B85F8 		movq	-520(%rbp), %rax
 4389      FDFFFF
 4390 1ec2 488D5008 		leaq	8(%rax), %rdx
 4391 1ec6 488D8540 		leaq	-448(%rbp), %rax
 4391      FEFFFF
 4392 1ecd 4889D6   		movq	%rdx, %rsi
 4393 1ed0 4889C7   		movq	%rax, %rdi
 4394              	.LEHB121:
 4395 1ed3 E820FFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4395      FF
 4396              	.LEHE121:
 4397              		.loc 3 98 0 is_stmt 0 discriminator 1
 4398 1ed8 C6850FFE 		movb	$1, -497(%rbp)
 4398      FFFF01
 4399 1edf 488B85F8 		movq	-520(%rbp), %rax
 4399      FDFFFF
 4400 1ee6 488D5008 		leaq	8(%rax), %rdx
 4401 1eea 488D8540 		leaq	-448(%rbp), %rax
 4401      FEFFFF
 4402 1ef1 4889D6   		movq	%rdx, %rsi
 4403 1ef4 4889C7   		movq	%rax, %rdi
 4404              	.LEHB122:
 4405 1ef7 E8561200 		call	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterT
 4405      00
 4406              	.LEHE122:
 4407              		.loc 3 98 0 discriminator 3
 4408 1efc 488D8540 		leaq	-448(%rbp), %rax
 4408      FEFFFF
 4409 1f03 4889C7   		movq	%rax, %rdi
 4410              	.LEHB123:
 4411 1f06 E867FFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4411      FF
 4412              	.LEHE123:
 4413              	.LBE72:
 4414              		.loc 3 98 0
 4415 1f0b E9690200 		jmp	.L231
 4415      00
 4416              	.L246:
 4417 1f10 4989C4   		movq	%rax, %r12
 4418 1f13 4889D3   		movq	%rdx, %rbx
 4419              	.LBB73:
 4420 1f16 488D8540 		leaq	-448(%rbp), %rax
 4420      FEFFFF
 4421 1f1d 4889C7   		movq	%rax, %rdi
 4422 1f20 E84DFFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 4422      FF
 4423 1f25 4C89E0   		movq	%r12, %rax
 4424 1f28 4889DA   		movq	%rbx, %rdx
 4425 1f2b EB00     		jmp	.L233
 4426              	.L245:
 4427              	.L233:
 4428 1f2d 4883FA01 		cmpq	$1, %rdx
 4429 1f31 740F     		je	.L235
 4430 1f33 4883FA02 		cmpq	$2, %rdx
 4431 1f37 0F84A700 		je	.L236
 4431      0000
 4432 1f3d E94A0100 		jmp	.L251
 4432      00
 4433              	.L235:
 4434              	.LBE73:
 4435              	.LBB74:
 4436 1f42 4889C7   		movq	%rax, %rdi
 4437 1f45 E8000000 		call	__cxa_begin_catch@PLT
 4437      00
 4438 1f4a 48898518 		movq	%rax, -488(%rbp)
 4438      FEFFFF
 4439              	.LEHB124:
 4440 1f51 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4440      00
 4441 1f56 488B18   		movq	(%rax), %rbx
 4442 1f59 488B8518 		movq	-488(%rbp), %rax
 4442      FEFFFF
 4443 1f60 488B00   		movq	(%rax), %rax
 4444 1f63 4883C010 		addq	$16, %rax
 4445 1f67 488B00   		movq	(%rax), %rax
 4446 1f6a 488B9518 		movq	-488(%rbp), %rdx
 4446      FEFFFF
 4447 1f71 4889D7   		movq	%rdx, %rdi
 4448 1f74 FFD0     		call	*%rax
 4449              	.LVL10:
 4450 1f76 4989C4   		movq	%rax, %r12
 4451 1f79 488B8518 		movq	-488(%rbp), %rax
 4451      FEFFFF
 4452 1f80 4889C7   		movq	%rax, %rdi
 4453 1f83 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 4453      00
 4454              		.loc 3 98 0 discriminator 5
 4455 1f88 4189C5   		movl	%eax, %r13d
 4456 1f8b 488B8518 		movq	-488(%rbp), %rax
 4456      FEFFFF
 4457 1f92 4889C7   		movq	%rax, %rdi
 4458 1f95 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 4458      00
 4459              		.loc 3 98 0 discriminator 7
 4460 1f9a 4889C1   		movq	%rax, %rcx
 4461 1f9d 488B85F8 		movq	-520(%rbp), %rax
 4461      FDFFFF
 4462 1fa4 488B5008 		movq	8(%rax), %rdx
 4463 1fa8 488B85F8 		movq	-520(%rbp), %rax
 4463      FDFFFF
 4464 1faf 488B7010 		movq	16(%rax), %rsi
 4465 1fb3 488D8520 		leaq	-480(%rbp), %rax
 4465      FEFFFF
 4466 1fba 4589E8   		movl	%r13d, %r8d
 4467 1fbd 4889C7   		movq	%rax, %rdi
 4468 1fc0 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 4468      00
 4469              		.loc 3 98 0 discriminator 11
 4470 1fc5 488D8520 		leaq	-480(%rbp), %rax
 4470      FEFFFF
 4471 1fcc 4C89E2   		movq	%r12, %rdx
 4472 1fcf 4889C6   		movq	%rax, %rsi
 4473 1fd2 4889DF   		movq	%rbx, %rdi
 4474 1fd5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4474      00
 4475              	.LEHE124:
 4476              		.loc 3 98 0 discriminator 13
 4477 1fda E8000000 		call	__cxa_end_catch@PLT
 4477      00
 4478              	.LBE74:
 4479 1fdf E9950100 		jmp	.L231
 4479      00
 4480              	.L236:
 4481              	.LBB75:
 4482              		.loc 3 98 0
 4483 1fe4 4889C7   		movq	%rax, %rdi
 4484 1fe7 E8000000 		call	__cxa_begin_catch@PLT
 4484      00
 4485 1fec 48898510 		movq	%rax, -496(%rbp)
 4485      FEFFFF
 4486              	.LBB76:
 4487 1ff3 488D8540 		leaq	-448(%rbp), %rax
 4487      FEFFFF
 4488 1ffa 4889C7   		movq	%rax, %rdi
 4489              	.LEHB125:
 4490 1ffd E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4490      00
 4491              	.LEHE125:
 4492              		.loc 3 98 0 discriminator 15
 4493 2002 488D8540 		leaq	-448(%rbp), %rax
 4493      FEFFFF
 4494 2009 488D3500 		leaq	.LC6(%rip), %rsi
 4494      000000
 4495 2010 4889C7   		movq	%rax, %rdi
 4496              	.LEHB126:
 4497 2013 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4497      00
 4498 2018 4889C3   		movq	%rax, %rbx
 4499 201b 488B8510 		movq	-496(%rbp), %rax
 4499      FEFFFF
 4500 2022 488B00   		movq	(%rax), %rax
 4501 2025 4883C010 		addq	$16, %rax
 4502 2029 488B00   		movq	(%rax), %rax
 4503 202c 488B9510 		movq	-496(%rbp), %rdx
 4503      FEFFFF
 4504 2033 4889D7   		movq	%rdx, %rdi
 4505 2036 FFD0     		call	*%rax
 4506              	.LVL11:
 4507 2038 4889C6   		movq	%rax, %rsi
 4508 203b 4889DF   		movq	%rbx, %rdi
 4509 203e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4509      00
 4510              		.loc 3 98 0 discriminator 19
 4511 2043 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4511      00
 4512 2048 488B18   		movq	(%rax), %rbx
 4513 204b 488D8540 		leaq	-448(%rbp), %rax
 4513      FEFFFF
 4514 2052 4889C7   		movq	%rax, %rdi
 4515 2055 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 4515      00
 4516              		.loc 3 98 0 discriminator 21
 4517 205a 4889C2   		movq	%rax, %rdx
 4518 205d 488B85F8 		movq	-520(%rbp), %rax
 4518      FDFFFF
 4519 2064 4883C008 		addq	$8, %rax
 4520 2068 4889C6   		movq	%rax, %rsi
 4521 206b 4889DF   		movq	%rbx, %rdi
 4522 206e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4522      00
 4523              	.LEHE126:
 4524              		.loc 3 98 0 discriminator 25
 4525 2073 488D8540 		leaq	-448(%rbp), %rax
 4525      FEFFFF
 4526 207a 4889C7   		movq	%rax, %rdi
 4527              	.LEHB127:
 4528 207d E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4528      00
 4529              	.LEHE127:
 4530              	.LBE76:
 4531              		.loc 3 98 0 discriminator 26
 4532 2082 E8000000 		call	__cxa_end_catch@PLT
 4532      00
 4533              	.LBE75:
 4534 2087 E9ED0000 		jmp	.L231
 4534      00
 4535              	.L251:
 4536              		.loc 3 98 0
 4537 208c 4889C7   		movq	%rax, %rdi
 4538 208f E8000000 		call	__cxa_begin_catch@PLT
 4538      00
 4539 2094 80BD0FFE 		cmpb	$0, -497(%rbp)
 4539      FFFF00
 4540 209b 7445     		je	.L238
 4541              	.LEHB128:
 4542              		.loc 3 98 0 discriminator 28
 4543 209d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4543      00
 4544 20a2 488B18   		movq	(%rax), %rbx
 4545 20a5 488B85F8 		movq	-520(%rbp), %rax
 4545      FDFFFF
 4546 20ac 488D4808 		leaq	8(%rax), %rcx
 4547 20b0 488D8520 		leaq	-480(%rbp), %rax
 4547      FEFFFF
 4548 20b7 BA620000 		movl	$98, %edx
 4548      00
 4549 20bc 4889CE   		movq	%rcx, %rsi
 4550 20bf 4889C7   		movq	%rax, %rdi
 4551 20c2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4551      00
 4552              		.loc 3 98 0 discriminator 33
 4553 20c7 488D8520 		leaq	-480(%rbp), %rax
 4553      FEFFFF
 4554 20ce 488D1500 		leaq	.LC7(%rip), %rdx
 4554      000000
 4555 20d5 4889C6   		movq	%rax, %rsi
 4556 20d8 4889DF   		movq	%rbx, %rdi
 4557 20db E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4557      00
 4558 20e0 EB43     		jmp	.L239
 4559              	.L238:
 4560              		.loc 3 98 0 discriminator 29
 4561 20e2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4561      00
 4562 20e7 488B18   		movq	(%rax), %rbx
 4563 20ea 488B85F8 		movq	-520(%rbp), %rax
 4563      FDFFFF
 4564 20f1 488D4808 		leaq	8(%rax), %rcx
 4565 20f5 488D8520 		leaq	-480(%rbp), %rax
 4565      FEFFFF
 4566 20fc BA620000 		movl	$98, %edx
 4566      00
 4567 2101 4889CE   		movq	%rcx, %rsi
 4568 2104 4889C7   		movq	%rax, %rdi
 4569 2107 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4569      00
 4570              		.loc 3 98 0 discriminator 40
 4571 210c 488D8520 		leaq	-480(%rbp), %rax
 4571      FEFFFF
 4572 2113 488D1500 		leaq	.LC8(%rip), %rdx
 4572      000000
 4573 211a 4889C6   		movq	%rax, %rsi
 4574 211d 4889DF   		movq	%rbx, %rdi
 4575 2120 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4575      00
 4576              	.LEHE128:
 4577              	.L239:
 4578              	.LEHB129:
 4579              		.loc 3 98 0 discriminator 43
 4580 2125 E8000000 		call	__cxa_end_catch@PLT
 4580      00
 4581 212a EB4D     		jmp	.L231
 4582              	.L247:
 4583 212c 4889C3   		movq	%rax, %rbx
 4584              	.LBB78:
 4585              		.loc 3 98 0
 4586 212f E8000000 		call	__cxa_end_catch@PLT
 4586      00
 4587 2134 4889D8   		movq	%rbx, %rax
 4588 2137 4889C7   		movq	%rax, %rdi
 4589 213a E8000000 		call	_Unwind_Resume@PLT
 4589      00
 4590              	.LEHE129:
 4591              	.L249:
 4592 213f 4889C3   		movq	%rax, %rbx
 4593              	.LBE78:
 4594              	.LBB79:
 4595              	.LBB77:
 4596 2142 488D8540 		leaq	-448(%rbp), %rax
 4596      FEFFFF
 4597 2149 4889C7   		movq	%rax, %rdi
 4598 214c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4598      00
 4599 2151 EB03     		jmp	.L242
 4600              	.L248:
 4601 2153 4889C3   		movq	%rax, %rbx
 4602              	.L242:
 4603              	.LBE77:
 4604 2156 E8000000 		call	__cxa_end_catch@PLT
 4604      00
 4605 215b 4889D8   		movq	%rbx, %rax
 4606 215e 4889C7   		movq	%rax, %rdi
 4607              	.LEHB130:
 4608 2161 E8000000 		call	_Unwind_Resume@PLT
 4608      00
 4609              	.LEHE130:
 4610              	.L250:
 4611 2166 4889C3   		movq	%rax, %rbx
 4612              	.LBE79:
 4613 2169 E8000000 		call	__cxa_end_catch@PLT
 4613      00
 4614 216e 4889D8   		movq	%rbx, %rax
 4615 2171 4889C7   		movq	%rax, %rdi
 4616              	.LEHB131:
 4617 2174 E8000000 		call	_Unwind_Resume@PLT
 4617      00
 4618              	.LEHE131:
 4619              	.L231:
 4620 2179 488B45D8 		movq	-40(%rbp), %rax
 4621 217d 64483304 		xorq	%fs:40, %rax
 4621      25280000 
 4621      00
 4622 2186 7405     		je	.L244
 4623 2188 E8000000 		call	__stack_chk_fail@PLT
 4623      00
 4624              	.L244:
 4625 218d 4881C4F8 		addq	$504, %rsp
 4625      010000
 4626 2194 5B       		popq	%rbx
 4627 2195 415C     		popq	%r12
 4628 2197 415D     		popq	%r13
 4629 2199 5D       		popq	%rbp
 4630              		.cfi_def_cfa 7, 8
 4631 219a C3       		ret
 4632              		.cfi_endproc
 4633              	.LFE1436:
 4634              		.section	.gcc_except_table
 4635              		.align 4
 4636              	.LLSDA1436:
 4637 0328 FF       		.byte	0xff
 4638 0329 9B       		.byte	0x9b
 4639 032a 55       		.uleb128 .LLSDATT1436-.LLSDATTD1436
 4640              	.LLSDATTD1436:
 4641 032b 01       		.byte	0x1
 4642 032c 3E       		.uleb128 .LLSDACSE1436-.LLSDACSB1436
 4643              	.LLSDACSB1436:
 4644 032d 45       		.uleb128 .LEHB121-.LFB1436
 4645 032e 05       		.uleb128 .LEHE121-.LEHB121
 4646 032f 9F01     		.uleb128 .L245-.LFB1436
 4647 0331 05       		.uleb128 0x5
 4648 0332 69       		.uleb128 .LEHB122-.LFB1436
 4649 0333 05       		.uleb128 .LEHE122-.LEHB122
 4650 0334 8201     		.uleb128 .L246-.LFB1436
 4651 0336 07       		.uleb128 0x7
 4652 0337 78       		.uleb128 .LEHB123-.LFB1436
 4653 0338 05       		.uleb128 .LEHE123-.LEHB123
 4654 0339 9F01     		.uleb128 .L245-.LFB1436
 4655 033b 05       		.uleb128 0x5
 4656 033c C301     		.uleb128 .LEHB124-.LFB1436
 4657 033e 8901     		.uleb128 .LEHE124-.LEHB124
 4658 0340 9E05     		.uleb128 .L247-.LFB1436
 4659 0342 00       		.uleb128 0
 4660 0343 EF02     		.uleb128 .LEHB125-.LFB1436
 4661 0345 05       		.uleb128 .LEHE125-.LEHB125
 4662 0346 C505     		.uleb128 .L248-.LFB1436
 4663 0348 00       		.uleb128 0
 4664 0349 8503     		.uleb128 .LEHB126-.LFB1436
 4665 034b 60       		.uleb128 .LEHE126-.LEHB126
 4666 034c B105     		.uleb128 .L249-.LFB1436
 4667 034e 00       		.uleb128 0
 4668 034f EF03     		.uleb128 .LEHB127-.LFB1436
 4669 0351 05       		.uleb128 .LEHE127-.LEHB127
 4670 0352 C505     		.uleb128 .L248-.LFB1436
 4671 0354 00       		.uleb128 0
 4672 0355 8F04     		.uleb128 .LEHB128-.LFB1436
 4673 0357 8801     		.uleb128 .LEHE128-.LEHB128
 4674 0359 D805     		.uleb128 .L250-.LFB1436
 4675 035b 00       		.uleb128 0
 4676 035c 9705     		.uleb128 .LEHB129-.LFB1436
 4677 035e 1A       		.uleb128 .LEHE129-.LEHB129
 4678 035f 00       		.uleb128 0
 4679 0360 00       		.uleb128 0
 4680 0361 D305     		.uleb128 .LEHB130-.LFB1436
 4681 0363 05       		.uleb128 .LEHE130-.LEHB130
 4682 0364 00       		.uleb128 0
 4683 0365 00       		.uleb128 0
 4684 0366 E605     		.uleb128 .LEHB131-.LFB1436
 4685 0368 05       		.uleb128 .LEHE131-.LEHB131
 4686 0369 00       		.uleb128 0
 4687 036a 00       		.uleb128 0
 4688              	.LLSDACSE1436:
 4689 036b 03       		.byte	0x3
 4690 036c 00       		.byte	0
 4691 036d 02       		.byte	0x2
 4692 036e 7D       		.byte	0x7d
 4693 036f 01       		.byte	0x1
 4694 0370 7D       		.byte	0x7d
 4695 0371 00       		.byte	0
 4696 0372 7D       		.byte	0x7d
 4697 0373 00       		.align 4
 4698 0374 00000000 		.long	0
 4699              	
 4700 0378 00000000 		.long	DW.ref._ZTISt9exception-.
 4701 037c 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 4702              	.LLSDATT1436:
 4703              		.text
 4705              		.section	.rodata
 4706              	.LC29:
 4707 04b6 5265616C 		.string	"Real failure message"
 4707      20666169 
 4707      6C757265 
 4707      206D6573 
 4707      73616765 
 4708              	.LC30:
 4709 04cb 426F6775 		.string	"Bogus failure message"
 4709      73206661 
 4709      696C7572 
 4709      65206D65 
 4709      73736167 
 4710 04e1 00000000 		.align 8
 4710      000000
 4711              	.LC31:
 4712 04e8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(goodStr, failure.second)"
 4712      6E646C65 
 4712      64206578 
 4712      63657074 
 4712      696F6E20 
 4713              		.text
 4714 219b 90       		.align 2
 4716              	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessag
 4717              	.LFB1440:
  99:TestDeferredTestReporter.cpp **** {
 4718              		.loc 3 99 0 is_stmt 1
 4719              		.cfi_startproc
 4720              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4721              		.cfi_lsda 0x1b,.LLSDA1440
 4722 219c 55       		pushq	%rbp
 4723              		.cfi_def_cfa_offset 16
 4724              		.cfi_offset 6, -16
 4725 219d 4889E5   		movq	%rsp, %rbp
 4726              		.cfi_def_cfa_register 6
 4727 21a0 53       		pushq	%rbx
 4728 21a1 4881ECE8 		subq	$232, %rsp
 4728      000000
 4729              		.cfi_offset 3, -24
 4730 21a8 4889BD18 		movq	%rdi, -232(%rbp)
 4730      FFFFFF
 4731              		.loc 3 99 0
 4732 21af 64488B04 		movq	%fs:40, %rax
 4732      25280000 
 4732      00
 4733 21b8 488945E8 		movq	%rax, -24(%rbp)
 4734 21bc 31C0     		xorl	%eax, %eax
 100:TestDeferredTestReporter.cpp ****     reporter.ReportTestStart(details);
 4735              		.loc 3 100 0
 4736 21be 488B8518 		movq	-232(%rbp), %rax
 4736      FFFFFF
 4737 21c5 488B9518 		movq	-232(%rbp), %rdx
 4737      FFFFFF
 4738 21cc 4881C288 		addq	$136, %rdx
 4738      000000
 4739 21d3 4889D6   		movq	%rdx, %rsi
 4740 21d6 4889C7   		movq	%rax, %rdi
 4741              	.LEHB132:
 4742 21d9 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 4742      00
 101:TestDeferredTestReporter.cpp **** 
 102:TestDeferredTestReporter.cpp ****     char failureMessage[128];
 103:TestDeferredTestReporter.cpp ****     char const* goodStr = "Real failure message";
 4743              		.loc 3 103 0
 4744 21de 488D0500 		leaq	.LC29(%rip), %rax
 4744      000000
 4745 21e5 48898520 		movq	%rax, -224(%rbp)
 4745      FFFFFF
 104:TestDeferredTestReporter.cpp ****     char const* badStr = "Bogus failure message";
 4746              		.loc 3 104 0
 4747 21ec 488D0500 		leaq	.LC30(%rip), %rax
 4747      000000
 4748 21f3 48898528 		movq	%rax, -216(%rbp)
 4748      FFFFFF
 105:TestDeferredTestReporter.cpp ****     
 106:TestDeferredTestReporter.cpp **** 	using namespace std;
 107:TestDeferredTestReporter.cpp **** 
 108:TestDeferredTestReporter.cpp ****     strcpy(failureMessage, goodStr);
 4749              		.loc 3 108 0
 4750 21fa 488B9520 		movq	-224(%rbp), %rdx
 4750      FFFFFF
 4751 2201 488D8560 		leaq	-160(%rbp), %rax
 4751      FFFFFF
 4752 2208 4889D6   		movq	%rdx, %rsi
 4753 220b 4889C7   		movq	%rax, %rdi
 4754 220e E8000000 		call	strcpy@PLT
 4754      00
 109:TestDeferredTestReporter.cpp ****     reporter.ReportFailure(details, failureMessage);
 4755              		.loc 3 109 0
 4756 2213 488B8518 		movq	-232(%rbp), %rax
 4756      FFFFFF
 4757 221a 488B9518 		movq	-232(%rbp), %rdx
 4757      FFFFFF
 4758 2221 488D8A88 		leaq	136(%rdx), %rcx
 4758      000000
 4759 2228 488D9560 		leaq	-160(%rbp), %rdx
 4759      FFFFFF
 4760 222f 4889CE   		movq	%rcx, %rsi
 4761 2232 4889C7   		movq	%rax, %rdi
 4762 2235 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 4762      00
 110:TestDeferredTestReporter.cpp ****     strcpy(failureMessage, badStr);
 4763              		.loc 3 110 0
 4764 223a 488B9528 		movq	-216(%rbp), %rdx
 4764      FFFFFF
 4765 2241 488D8560 		leaq	-160(%rbp), %rax
 4765      FFFFFF
 4766 2248 4889D6   		movq	%rdx, %rsi
 4767 224b 4889C7   		movq	%rax, %rdi
 4768 224e E8000000 		call	strcpy@PLT
 4768      00
 111:TestDeferredTestReporter.cpp **** 
 112:TestDeferredTestReporter.cpp ****     DeferredTestResult const& result = reporter.GetResults().at(0);
 4769              		.loc 3 112 0
 4770 2253 488B8518 		movq	-232(%rbp), %rax
 4770      FFFFFF
 4771 225a 4889C7   		movq	%rax, %rdi
 4772 225d E8000000 		call	_ZN8UnitTest20DeferredTestReporter10GetResultsEv@PLT
 4772      00
 4773 2262 BE000000 		movl	$0, %esi
 4773      00
 4774 2267 4889C7   		movq	%rax, %rdi
 4775 226a E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 4775      00
 4776 226f 48898530 		movq	%rax, -208(%rbp)
 4776      FFFFFF
 113:TestDeferredTestReporter.cpp ****     DeferredTestResult::Failure const& failure = result.failures.at(0);
 4777              		.loc 3 113 0
 4778 2276 488B8530 		movq	-208(%rbp), %rax
 4778      FFFFFF
 4779 227d 4883C060 		addq	$96, %rax
 4780 2281 BE000000 		movl	$0, %esi
 4780      00
 4781 2286 4889C7   		movq	%rax, %rdi
 4782 2289 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm
 4782      00
 4783              	.LEHE132:
 4784 228e 48898538 		movq	%rax, -200(%rbp)
 4784      FFFFFF
 4785              	.LEHB133:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4786              		.loc 3 114 0
 4787 2295 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4787      00
 4788 229a 488B08   		movq	(%rax), %rcx
 4789 229d 488D8540 		leaq	-192(%rbp), %rax
 4789      FFFFFF
 4790 22a4 BA720000 		movl	$114, %edx
 4790      00
 4791 22a9 4889CE   		movq	%rcx, %rsi
 4792 22ac 4889C7   		movq	%rax, %rdi
 4793 22af E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4793      00
 4794              		.loc 3 114 0 is_stmt 0 discriminator 2
 4795 22b4 488B8538 		movq	-200(%rbp), %rax
 4795      FFFFFF
 4796 22bb 488D5808 		leaq	8(%rax), %rbx
 4797 22bf E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4797      00
 4798 22c4 488B00   		movq	(%rax), %rax
 4799 22c7 488D9540 		leaq	-192(%rbp), %rdx
 4799      FFFFFF
 4800 22ce 488DB520 		leaq	-224(%rbp), %rsi
 4800      FFFFFF
 4801 22d5 4889D1   		movq	%rdx, %rcx
 4802 22d8 4889DA   		movq	%rbx, %rdx
 4803 22db 4889C7   		movq	%rax, %rdi
 4804 22de E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4804      00
 4805              	.LEHE133:
 115:TestDeferredTestReporter.cpp **** }
 4806              		.loc 3 115 0 is_stmt 1
 4807 22e3 EB62     		jmp	.L252
 4808              	.L257:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4809              		.loc 3 114 0
 4810 22e5 4889C7   		movq	%rax, %rdi
 4811 22e8 E8000000 		call	__cxa_begin_catch@PLT
 4811      00
 4812              	.LEHB134:
 4813 22ed E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4813      00
 4814 22f2 488B18   		movq	(%rax), %rbx
 4815 22f5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4815      00
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4816              		.loc 3 114 0 is_stmt 0 discriminator 8
 4817 22fa 488B08   		movq	(%rax), %rcx
 4818 22fd 488D8540 		leaq	-192(%rbp), %rax
 4818      FFFFFF
 4819 2304 BA720000 		movl	$114, %edx
 4819      00
 4820 2309 4889CE   		movq	%rcx, %rsi
 4821 230c 4889C7   		movq	%rax, %rdi
 4822 230f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4822      00
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4823              		.loc 3 114 0 discriminator 12
 4824 2314 488D8540 		leaq	-192(%rbp), %rax
 4824      FFFFFF
 4825 231b 488D1500 		leaq	.LC31(%rip), %rdx
 4825      000000
 4826 2322 4889C6   		movq	%rax, %rsi
 4827 2325 4889DF   		movq	%rbx, %rdi
 4828 2328 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4828      00
 4829              	.LEHE134:
 4830              	.LEHB135:
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4831              		.loc 3 114 0 discriminator 14
 4832 232d E8000000 		call	__cxa_end_catch@PLT
 4832      00
 4833              	.LEHE135:
 4834              		.loc 3 115 0 is_stmt 1 discriminator 14
 4835 2332 EB13     		jmp	.L252
 4836              	.L258:
 4837 2334 4889C3   		movq	%rax, %rbx
 114:TestDeferredTestReporter.cpp ****     CHECK_EQUAL(goodStr, failure.second);
 4838              		.loc 3 114 0
 4839 2337 E8000000 		call	__cxa_end_catch@PLT
 4839      00
 4840 233c 4889D8   		movq	%rbx, %rax
 4841 233f 4889C7   		movq	%rax, %rdi
 4842              	.LEHB136:
 4843 2342 E8000000 		call	_Unwind_Resume@PLT
 4843      00
 4844              	.LEHE136:
 4845              	.L252:
 4846              		.loc 3 115 0
 4847 2347 488B45E8 		movq	-24(%rbp), %rax
 4848 234b 64483304 		xorq	%fs:40, %rax
 4848      25280000 
 4848      00
 4849 2354 7405     		je	.L256
 4850 2356 E8000000 		call	__stack_chk_fail@PLT
 4850      00
 4851              	.L256:
 4852 235b 4881C4E8 		addq	$232, %rsp
 4852      000000
 4853 2362 5B       		popq	%rbx
 4854 2363 5D       		popq	%rbp
 4855              		.cfi_def_cfa 7, 8
 4856 2364 C3       		ret
 4857              		.cfi_endproc
 4858              	.LFE1440:
 4859              		.section	.gcc_except_table
 4860              		.align 4
 4861              	.LLSDA1440:
 4862 0380 FF       		.byte	0xff
 4863 0381 9B       		.byte	0x9b
 4864 0382 25       		.uleb128 .LLSDATT1440-.LLSDATTD1440
 4865              	.LLSDATTD1440:
 4866 0383 01       		.byte	0x1
 4867 0384 1B       		.uleb128 .LLSDACSE1440-.LLSDACSB1440
 4868              	.LLSDACSB1440:
 4869 0385 3D       		.uleb128 .LEHB132-.LFB1440
 4870 0386 B501     		.uleb128 .LEHE132-.LEHB132
 4871 0388 00       		.uleb128 0
 4872 0389 00       		.uleb128 0
 4873 038a F901     		.uleb128 .LEHB133-.LFB1440
 4874 038c 4E       		.uleb128 .LEHE133-.LEHB133
 4875 038d C902     		.uleb128 .L257-.LFB1440
 4876 038f 01       		.uleb128 0x1
 4877 0390 D102     		.uleb128 .LEHB134-.LFB1440
 4878 0392 40       		.uleb128 .LEHE134-.LEHB134
 4879 0393 9803     		.uleb128 .L258-.LFB1440
 4880 0395 00       		.uleb128 0
 4881 0396 9103     		.uleb128 .LEHB135-.LFB1440
 4882 0398 05       		.uleb128 .LEHE135-.LEHB135
 4883 0399 00       		.uleb128 0
 4884 039a 00       		.uleb128 0
 4885 039b A603     		.uleb128 .LEHB136-.LFB1440
 4886 039d 05       		.uleb128 .LEHE136-.LEHB136
 4887 039e 00       		.uleb128 0
 4888 039f 00       		.uleb128 0
 4889              	.LLSDACSE1440:
 4890 03a0 01       		.byte	0x1
 4891 03a1 00       		.byte	0
 4892 03a2 0000     		.align 4
 4893 03a4 00000000 		.long	0
 4894              	
 4895              	.LLSDATT1440:
 4896              		.text
 4898              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vect
 4899              		.align 2
 4900              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 4902              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:
 4903              	.LFB1471:
 4904              		.file 6 "/usr/include/c++/7/bits/stl_vector.h"
   1:/usr/include/c++/7/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/7/bits/stl_vector.h **** 
   3:/usr/include/c++/7/bits/stl_vector.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/stl_vector.h **** //
   5:/usr/include/c++/7/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/7/bits/stl_vector.h **** 
  11:/usr/include/c++/7/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/stl_vector.h **** 
  16:/usr/include/c++/7/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/stl_vector.h **** 
  20:/usr/include/c++/7/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/stl_vector.h **** 
  25:/usr/include/c++/7/bits/stl_vector.h **** /*
  26:/usr/include/c++/7/bits/stl_vector.h ****  *
  27:/usr/include/c++/7/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/7/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/7/bits/stl_vector.h ****  *
  30:/usr/include/c++/7/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/7/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/7/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/7/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/7/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/7/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/7/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/7/bits/stl_vector.h ****  *
  38:/usr/include/c++/7/bits/stl_vector.h ****  *
  39:/usr/include/c++/7/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/7/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/7/bits/stl_vector.h ****  *
  42:/usr/include/c++/7/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/7/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/7/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/7/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/7/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/7/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/7/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/7/bits/stl_vector.h ****  */
  50:/usr/include/c++/7/bits/stl_vector.h **** 
  51:/usr/include/c++/7/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/7/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/7/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/7/bits/stl_vector.h ****  */
  55:/usr/include/c++/7/bits/stl_vector.h **** 
  56:/usr/include/c++/7/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/7/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/7/bits/stl_vector.h **** 
  59:/usr/include/c++/7/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/7/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/7/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/7/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/7/bits/stl_vector.h **** #endif
  65:/usr/include/c++/7/bits/stl_vector.h **** 
  66:/usr/include/c++/7/bits/stl_vector.h **** #include <debug/assertions.h>
  67:/usr/include/c++/7/bits/stl_vector.h **** 
  68:/usr/include/c++/7/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  69:/usr/include/c++/7/bits/stl_vector.h **** {
  70:/usr/include/c++/7/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  71:/usr/include/c++/7/bits/stl_vector.h **** 
  72:/usr/include/c++/7/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  73:/usr/include/c++/7/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  74:/usr/include/c++/7/bits/stl_vector.h ****     struct _Vector_base
  75:/usr/include/c++/7/bits/stl_vector.h ****     {
  76:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  77:/usr/include/c++/7/bits/stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  78:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  79:/usr/include/c++/7/bits/stl_vector.h ****        	pointer;
  80:/usr/include/c++/7/bits/stl_vector.h **** 
  81:/usr/include/c++/7/bits/stl_vector.h ****       struct _Vector_impl
  82:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
  83:/usr/include/c++/7/bits/stl_vector.h ****       {
  84:/usr/include/c++/7/bits/stl_vector.h **** 	pointer _M_start;
  85:/usr/include/c++/7/bits/stl_vector.h **** 	pointer _M_finish;
  86:/usr/include/c++/7/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  87:/usr/include/c++/7/bits/stl_vector.h **** 
  88:/usr/include/c++/7/bits/stl_vector.h **** 	_Vector_impl()
  89:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
  90:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
  91:/usr/include/c++/7/bits/stl_vector.h **** 
  92:/usr/include/c++/7/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  93:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
  94:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
  95:/usr/include/c++/7/bits/stl_vector.h **** 
  96:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
  97:/usr/include/c++/7/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  98:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  99:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_start(), _M_finish(), _M_end_of_storage()
 100:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
 101:/usr/include/c++/7/bits/stl_vector.h **** #endif
 102:/usr/include/c++/7/bits/stl_vector.h **** 
 103:/usr/include/c++/7/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 104:/usr/include/c++/7/bits/stl_vector.h **** 	{
 105:/usr/include/c++/7/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 106:/usr/include/c++/7/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 107:/usr/include/c++/7/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 108:/usr/include/c++/7/bits/stl_vector.h **** 	}
 109:/usr/include/c++/7/bits/stl_vector.h ****       };
 110:/usr/include/c++/7/bits/stl_vector.h **** 
 111:/usr/include/c++/7/bits/stl_vector.h ****     public:
 112:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 113:/usr/include/c++/7/bits/stl_vector.h **** 
 114:/usr/include/c++/7/bits/stl_vector.h ****       _Tp_alloc_type&
 115:/usr/include/c++/7/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 116:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 117:/usr/include/c++/7/bits/stl_vector.h **** 
 118:/usr/include/c++/7/bits/stl_vector.h ****       const _Tp_alloc_type&
 119:/usr/include/c++/7/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 120:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 121:/usr/include/c++/7/bits/stl_vector.h **** 
 122:/usr/include/c++/7/bits/stl_vector.h ****       allocator_type
 123:/usr/include/c++/7/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 124:/usr/include/c++/7/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 125:/usr/include/c++/7/bits/stl_vector.h **** 
 126:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base()
 127:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl() { }
 128:/usr/include/c++/7/bits/stl_vector.h **** 
 129:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 130:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(__a) { }
 131:/usr/include/c++/7/bits/stl_vector.h **** 
 132:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(size_t __n)
 133:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl()
 134:/usr/include/c++/7/bits/stl_vector.h ****       { _M_create_storage(__n); }
 135:/usr/include/c++/7/bits/stl_vector.h **** 
 136:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 137:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(__a)
 138:/usr/include/c++/7/bits/stl_vector.h ****       { _M_create_storage(__n); }
 139:/usr/include/c++/7/bits/stl_vector.h **** 
 140:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 142:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 143:/usr/include/c++/7/bits/stl_vector.h **** 
 144:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 145:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 146:/usr/include/c++/7/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 147:/usr/include/c++/7/bits/stl_vector.h **** 
 148:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 149:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(__a)
 150:/usr/include/c++/7/bits/stl_vector.h ****       {
 151:/usr/include/c++/7/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 152:/usr/include/c++/7/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 153:/usr/include/c++/7/bits/stl_vector.h **** 	else
 154:/usr/include/c++/7/bits/stl_vector.h **** 	  {
 155:/usr/include/c++/7/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 156:/usr/include/c++/7/bits/stl_vector.h **** 	    _M_create_storage(__n);
 157:/usr/include/c++/7/bits/stl_vector.h **** 	  }
 158:/usr/include/c++/7/bits/stl_vector.h ****       }
 159:/usr/include/c++/7/bits/stl_vector.h **** #endif
 160:/usr/include/c++/7/bits/stl_vector.h **** 
 161:/usr/include/c++/7/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 162:/usr/include/c++/7/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 163:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 164:/usr/include/c++/7/bits/stl_vector.h **** 
 165:/usr/include/c++/7/bits/stl_vector.h ****     public:
 166:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_impl _M_impl;
 167:/usr/include/c++/7/bits/stl_vector.h **** 
 168:/usr/include/c++/7/bits/stl_vector.h ****       pointer
 169:/usr/include/c++/7/bits/stl_vector.h ****       _M_allocate(size_t __n)
 170:/usr/include/c++/7/bits/stl_vector.h ****       {
 171:/usr/include/c++/7/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 172:/usr/include/c++/7/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 173:/usr/include/c++/7/bits/stl_vector.h ****       }
 174:/usr/include/c++/7/bits/stl_vector.h **** 
 175:/usr/include/c++/7/bits/stl_vector.h ****       void
 176:/usr/include/c++/7/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 177:/usr/include/c++/7/bits/stl_vector.h ****       {
 178:/usr/include/c++/7/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 179:/usr/include/c++/7/bits/stl_vector.h **** 	if (__p)
 180:/usr/include/c++/7/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 181:/usr/include/c++/7/bits/stl_vector.h ****       }
 182:/usr/include/c++/7/bits/stl_vector.h **** 
 183:/usr/include/c++/7/bits/stl_vector.h ****     private:
 184:/usr/include/c++/7/bits/stl_vector.h ****       void
 185:/usr/include/c++/7/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 186:/usr/include/c++/7/bits/stl_vector.h ****       {
 187:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 188:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 189:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 190:/usr/include/c++/7/bits/stl_vector.h ****       }
 191:/usr/include/c++/7/bits/stl_vector.h ****     };
 192:/usr/include/c++/7/bits/stl_vector.h **** 
 193:/usr/include/c++/7/bits/stl_vector.h **** 
 194:/usr/include/c++/7/bits/stl_vector.h ****   /**
 195:/usr/include/c++/7/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 196:/usr/include/c++/7/bits/stl_vector.h ****    *  individual elements in any order.
 197:/usr/include/c++/7/bits/stl_vector.h ****    *
 198:/usr/include/c++/7/bits/stl_vector.h ****    *  @ingroup sequences
 199:/usr/include/c++/7/bits/stl_vector.h ****    *
 200:/usr/include/c++/7/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 201:/usr/include/c++/7/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 202:/usr/include/c++/7/bits/stl_vector.h ****    *
 203:/usr/include/c++/7/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 204:/usr/include/c++/7/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 205:/usr/include/c++/7/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 206:/usr/include/c++/7/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 207:/usr/include/c++/7/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 208:/usr/include/c++/7/bits/stl_vector.h ****    *
 209:/usr/include/c++/7/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 210:/usr/include/c++/7/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 211:/usr/include/c++/7/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 212:/usr/include/c++/7/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 213:/usr/include/c++/7/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 214:/usr/include/c++/7/bits/stl_vector.h ****   */
 215:/usr/include/c++/7/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 216:/usr/include/c++/7/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 217:/usr/include/c++/7/bits/stl_vector.h ****     {
 218:/usr/include/c++/7/bits/stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 219:/usr/include/c++/7/bits/stl_vector.h ****       // Concept requirements.
 220:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 221:/usr/include/c++/7/bits/stl_vector.h **** # if __cplusplus < 201103L
 222:/usr/include/c++/7/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 223:/usr/include/c++/7/bits/stl_vector.h **** # endif
 224:/usr/include/c++/7/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 225:/usr/include/c++/7/bits/stl_vector.h **** #endif
 226:/usr/include/c++/7/bits/stl_vector.h **** 
 227:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 228:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 229:/usr/include/c++/7/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 230:/usr/include/c++/7/bits/stl_vector.h **** 
 231:/usr/include/c++/7/bits/stl_vector.h ****     public:
 232:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Tp					value_type;
 233:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Base::pointer			pointer;
 234:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 235:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 236:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 237:/usr/include/c++/7/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 238:/usr/include/c++/7/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 239:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator;
 240:/usr/include/c++/7/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 241:/usr/include/c++/7/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 242:/usr/include/c++/7/bits/stl_vector.h ****       typedef size_t					size_type;
 243:/usr/include/c++/7/bits/stl_vector.h ****       typedef ptrdiff_t					difference_type;
 244:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Alloc					allocator_type;
 245:/usr/include/c++/7/bits/stl_vector.h **** 
 246:/usr/include/c++/7/bits/stl_vector.h ****     protected:
 247:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_allocate;
 248:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_deallocate;
 249:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_impl;
 250:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 251:/usr/include/c++/7/bits/stl_vector.h **** 
 252:/usr/include/c++/7/bits/stl_vector.h ****     public:
 253:/usr/include/c++/7/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 254:/usr/include/c++/7/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 255:/usr/include/c++/7/bits/stl_vector.h **** 
 256:/usr/include/c++/7/bits/stl_vector.h ****       /**
 257:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 258:/usr/include/c++/7/bits/stl_vector.h ****        */
 259:/usr/include/c++/7/bits/stl_vector.h ****       vector()
 4905              		.loc 6 259 0
 4906              		.cfi_startproc
 4907 0000 55       		pushq	%rbp
 4908              		.cfi_def_cfa_offset 16
 4909              		.cfi_offset 6, -16
 4910 0001 4889E5   		movq	%rsp, %rbp
 4911              		.cfi_def_cfa_register 6
 4912 0004 4883EC10 		subq	$16, %rsp
 4913 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4914              	.LBB80:
 260:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 261:/usr/include/c++/7/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 262:/usr/include/c++/7/bits/stl_vector.h **** #endif
 263:/usr/include/c++/7/bits/stl_vector.h ****       : _Base() { }
 4915              		.loc 6 263 0
 4916 000c 488B45F8 		movq	-8(%rbp), %rax
 4917 0010 4889C7   		movq	%rax, %rdi
 4918 0013 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 4918      00
 4919              	.LBE80:
 4920 0018 90       		nop
 4921 0019 C9       		leave
 4922              		.cfi_def_cfa 7, 8
 4923 001a C3       		ret
 4924              		.cfi_endproc
 4925              	.LFE1471:
 4927              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 4928              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 4929              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 4930              		.align 2
 4931              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4933              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 4934              	.LFB1474:
 264:/usr/include/c++/7/bits/stl_vector.h **** 
 265:/usr/include/c++/7/bits/stl_vector.h ****       /**
 266:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 267:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 268:/usr/include/c++/7/bits/stl_vector.h ****        */
 269:/usr/include/c++/7/bits/stl_vector.h ****       explicit
 270:/usr/include/c++/7/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 271:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__a) { }
 272:/usr/include/c++/7/bits/stl_vector.h **** 
 273:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 274:/usr/include/c++/7/bits/stl_vector.h ****       /**
 275:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 276:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 277:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 278:/usr/include/c++/7/bits/stl_vector.h ****        *
 279:/usr/include/c++/7/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 280:/usr/include/c++/7/bits/stl_vector.h ****        *  constructed elements.
 281:/usr/include/c++/7/bits/stl_vector.h ****        */
 282:/usr/include/c++/7/bits/stl_vector.h ****       explicit
 283:/usr/include/c++/7/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 284:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__n, __a)
 285:/usr/include/c++/7/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 286:/usr/include/c++/7/bits/stl_vector.h **** 
 287:/usr/include/c++/7/bits/stl_vector.h ****       /**
 288:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 289:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 290:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 291:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 292:/usr/include/c++/7/bits/stl_vector.h ****        *
 293:/usr/include/c++/7/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 294:/usr/include/c++/7/bits/stl_vector.h ****        */
 295:/usr/include/c++/7/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 296:/usr/include/c++/7/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 297:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__n, __a)
 298:/usr/include/c++/7/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 299:/usr/include/c++/7/bits/stl_vector.h **** #else
 300:/usr/include/c++/7/bits/stl_vector.h ****       /**
 301:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 302:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 303:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 304:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 305:/usr/include/c++/7/bits/stl_vector.h ****        *
 306:/usr/include/c++/7/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 307:/usr/include/c++/7/bits/stl_vector.h ****        */
 308:/usr/include/c++/7/bits/stl_vector.h ****       explicit
 309:/usr/include/c++/7/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 310:/usr/include/c++/7/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 311:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__n, __a)
 312:/usr/include/c++/7/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 313:/usr/include/c++/7/bits/stl_vector.h **** #endif
 314:/usr/include/c++/7/bits/stl_vector.h **** 
 315:/usr/include/c++/7/bits/stl_vector.h ****       /**
 316:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 317:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 318:/usr/include/c++/7/bits/stl_vector.h ****        *
 319:/usr/include/c++/7/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 320:/usr/include/c++/7/bits/stl_vector.h ****        *  @a __x  will not be copied
 321:/usr/include/c++/7/bits/stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 322:/usr/include/c++/7/bits/stl_vector.h ****        *
 323:/usr/include/c++/7/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 324:/usr/include/c++/7/bits/stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 325:/usr/include/c++/7/bits/stl_vector.h ****        */
 326:/usr/include/c++/7/bits/stl_vector.h ****       vector(const vector& __x)
 327:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__x.size(),
 328:/usr/include/c++/7/bits/stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 329:/usr/include/c++/7/bits/stl_vector.h ****       {
 330:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 331:/usr/include/c++/7/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 332:/usr/include/c++/7/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 333:/usr/include/c++/7/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 334:/usr/include/c++/7/bits/stl_vector.h ****       }
 335:/usr/include/c++/7/bits/stl_vector.h **** 
 336:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 337:/usr/include/c++/7/bits/stl_vector.h ****       /**
 338:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 339:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 340:/usr/include/c++/7/bits/stl_vector.h ****        *
 341:/usr/include/c++/7/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 342:/usr/include/c++/7/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 343:/usr/include/c++/7/bits/stl_vector.h ****        */
 344:/usr/include/c++/7/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 345:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 346:/usr/include/c++/7/bits/stl_vector.h **** 
 347:/usr/include/c++/7/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 348:/usr/include/c++/7/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 349:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 350:/usr/include/c++/7/bits/stl_vector.h ****       {
 351:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 352:/usr/include/c++/7/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 353:/usr/include/c++/7/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 354:/usr/include/c++/7/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 355:/usr/include/c++/7/bits/stl_vector.h ****       }
 356:/usr/include/c++/7/bits/stl_vector.h **** 
 357:/usr/include/c++/7/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 358:/usr/include/c++/7/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 359:/usr/include/c++/7/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 360:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 361:/usr/include/c++/7/bits/stl_vector.h ****       {
 362:/usr/include/c++/7/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 363:/usr/include/c++/7/bits/stl_vector.h **** 	  {
 364:/usr/include/c++/7/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 365:/usr/include/c++/7/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 366:/usr/include/c++/7/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 367:/usr/include/c++/7/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 368:/usr/include/c++/7/bits/stl_vector.h **** 	    __rv.clear();
 369:/usr/include/c++/7/bits/stl_vector.h **** 	  }
 370:/usr/include/c++/7/bits/stl_vector.h ****       }
 371:/usr/include/c++/7/bits/stl_vector.h **** 
 372:/usr/include/c++/7/bits/stl_vector.h ****       /**
 373:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 374:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 375:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 376:/usr/include/c++/7/bits/stl_vector.h ****        *
 377:/usr/include/c++/7/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 378:/usr/include/c++/7/bits/stl_vector.h ****        *  initializer_list @a __l.
 379:/usr/include/c++/7/bits/stl_vector.h ****        *
 380:/usr/include/c++/7/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 381:/usr/include/c++/7/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 382:/usr/include/c++/7/bits/stl_vector.h ****        */
 383:/usr/include/c++/7/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 384:/usr/include/c++/7/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 385:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__a)
 386:/usr/include/c++/7/bits/stl_vector.h ****       {
 387:/usr/include/c++/7/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 388:/usr/include/c++/7/bits/stl_vector.h **** 			    random_access_iterator_tag());
 389:/usr/include/c++/7/bits/stl_vector.h ****       }
 390:/usr/include/c++/7/bits/stl_vector.h **** #endif
 391:/usr/include/c++/7/bits/stl_vector.h **** 
 392:/usr/include/c++/7/bits/stl_vector.h ****       /**
 393:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 394:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 395:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 396:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 397:/usr/include/c++/7/bits/stl_vector.h ****        *
 398:/usr/include/c++/7/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 399:/usr/include/c++/7/bits/stl_vector.h ****        *  [first,last).
 400:/usr/include/c++/7/bits/stl_vector.h ****        *
 401:/usr/include/c++/7/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 402:/usr/include/c++/7/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 403:/usr/include/c++/7/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 404:/usr/include/c++/7/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 405:/usr/include/c++/7/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 406:/usr/include/c++/7/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 407:/usr/include/c++/7/bits/stl_vector.h ****        */
 408:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 409:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator,
 410:/usr/include/c++/7/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 411:/usr/include/c++/7/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 412:/usr/include/c++/7/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 413:/usr/include/c++/7/bits/stl_vector.h **** 	: _Base(__a)
 414:/usr/include/c++/7/bits/stl_vector.h **** 	{ _M_initialize_dispatch(__first, __last, __false_type()); }
 415:/usr/include/c++/7/bits/stl_vector.h **** #else
 416:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator>
 417:/usr/include/c++/7/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 418:/usr/include/c++/7/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 419:/usr/include/c++/7/bits/stl_vector.h **** 	: _Base(__a)
 420:/usr/include/c++/7/bits/stl_vector.h **** 	{
 421:/usr/include/c++/7/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 422:/usr/include/c++/7/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 423:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 424:/usr/include/c++/7/bits/stl_vector.h **** 	}
 425:/usr/include/c++/7/bits/stl_vector.h **** #endif
 426:/usr/include/c++/7/bits/stl_vector.h **** 
 427:/usr/include/c++/7/bits/stl_vector.h ****       /**
 428:/usr/include/c++/7/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 429:/usr/include/c++/7/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 430:/usr/include/c++/7/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 431:/usr/include/c++/7/bits/stl_vector.h ****        *  responsibility.
 432:/usr/include/c++/7/bits/stl_vector.h ****        */
 433:/usr/include/c++/7/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 4935              		.loc 6 433 0
 4936              		.cfi_startproc
 4937              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4938              		.cfi_lsda 0x1b,.LLSDA1474
 4939 0000 55       		pushq	%rbp
 4940              		.cfi_def_cfa_offset 16
 4941              		.cfi_offset 6, -16
 4942 0001 4889E5   		movq	%rsp, %rbp
 4943              		.cfi_def_cfa_register 6
 4944 0004 53       		pushq	%rbx
 4945 0005 4883EC18 		subq	$24, %rsp
 4946              		.cfi_offset 3, -24
 4947 0009 48897DE8 		movq	%rdi, -24(%rbp)
 4948              	.LBB81:
 434:/usr/include/c++/7/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 435:/usr/include/c++/7/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 4949              		.loc 6 435 0
 4950 000d 488B45E8 		movq	-24(%rbp), %rax
 4951 0011 4889C7   		movq	%rax, %rdi
 4952 0014 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 4952      00
 4953 0019 4889C2   		movq	%rax, %rdx
 434:/usr/include/c++/7/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 4954              		.loc 6 434 0
 4955 001c 488B45E8 		movq	-24(%rbp), %rax
 4956 0020 488B4808 		movq	8(%rax), %rcx
 4957 0024 488B45E8 		movq	-24(%rbp), %rax
 4958 0028 488B00   		movq	(%rax), %rax
 4959 002b 4889CE   		movq	%rcx, %rsi
 4960 002e 4889C7   		movq	%rax, %rdi
 4961              	.LEHB137:
 4962 0031 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 4962      00
 4963              	.LEHE137:
 4964              		.loc 6 435 0
 4965 0036 488B45E8 		movq	-24(%rbp), %rax
 4966 003a 4889C7   		movq	%rax, %rdi
 4967              	.LEHB138:
 4968 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4968      00
 4969              	.LEHE138:
 4970              	.LBE81:
 4971 0042 EB1A     		jmp	.L263
 4972              	.L262:
 4973 0044 4889C3   		movq	%rax, %rbx
 4974              	.LBB82:
 4975 0047 488B45E8 		movq	-24(%rbp), %rax
 4976 004b 4889C7   		movq	%rax, %rdi
 4977 004e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 4977      00
 4978 0053 4889D8   		movq	%rbx, %rax
 4979 0056 4889C7   		movq	%rax, %rdi
 4980              	.LEHB139:
 4981 0059 E8000000 		call	_Unwind_Resume@PLT
 4981      00
 4982              	.LEHE139:
 4983              	.L263:
 4984              	.LBE82:
 4985 005e 4883C418 		addq	$24, %rsp
 4986 0062 5B       		popq	%rbx
 4987 0063 5D       		popq	%rbp
 4988              		.cfi_def_cfa 7, 8
 4989 0064 C3       		ret
 4990              		.cfi_endproc
 4991              	.LFE1474:
 4992              		.section	.gcc_except_table
 4993              	.LLSDA1474:
 4994 03a8 FF       		.byte	0xff
 4995 03a9 FF       		.byte	0xff
 4996 03aa 01       		.byte	0x1
 4997 03ab 0C       		.uleb128 .LLSDACSE1474-.LLSDACSB1474
 4998              	.LLSDACSB1474:
 4999 03ac 31       		.uleb128 .LEHB137-.LFB1474
 5000 03ad 05       		.uleb128 .LEHE137-.LEHB137
 5001 03ae 44       		.uleb128 .L262-.LFB1474
 5002 03af 00       		.uleb128 0
 5003 03b0 3D       		.uleb128 .LEHB138-.LFB1474
 5004 03b1 05       		.uleb128 .LEHE138-.LEHB138
 5005 03b2 00       		.uleb128 0
 5006 03b3 00       		.uleb128 0
 5007 03b4 59       		.uleb128 .LEHB139-.LFB1474
 5008 03b5 05       		.uleb128 .LEHE139-.LEHB139
 5009 03b6 00       		.uleb128 0
 5010 03b7 00       		.uleb128 0
 5011              	.LLSDACSE1474:
 5012              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 5014              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 5015              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 5016              		.section	.rodata
 5017              	.LC32:
 5018 0524 556E6861 		.string	"Unhandled system exception"
 5018      6E646C65 
 5018      64207379 
 5018      7374656D 
 5018      20657863 
 5019              	.LC33:
 5020 053f 556E6861 		.string	"Unhandled exception: Crash!"
 5020      6E646C65 
 5020      64206578 
 5020      63657074 
 5020      696F6E3A 
 5021              		.text
 5023              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewD
 5024              	.LFB1485:
 5025              		.file 7 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 5026              		.loc 7 16 0
 5027              		.cfi_startproc
 5028              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5029              		.cfi_lsda 0x1b,.LLSDA1485
 5030 2365 55       		pushq	%rbp
 5031              		.cfi_def_cfa_offset 16
 5032              		.cfi_offset 6, -16
 5033 2366 4889E5   		movq	%rsp, %rbp
 5034              		.cfi_def_cfa_register 6
 5035 2369 4155     		pushq	%r13
 5036 236b 4154     		pushq	%r12
 5037 236d 53       		pushq	%rbx
 5038 236e 4881EC58 		subq	$1624, %rsp
 5038      060000
 5039              		.cfi_offset 13, -24
 5040              		.cfi_offset 12, -32
 5041              		.cfi_offset 3, -40
 5042 2375 4889BD98 		movq	%rdi, -1640(%rbp)
 5042      F9FFFF
 5043 237c 4889B590 		movq	%rsi, -1648(%rbp)
 5043      F9FFFF
 5044              		.loc 7 16 0
 5045 2383 64488B04 		movq	%fs:40, %rax
 5045      25280000 
 5045      00
 5046 238c 488945D8 		movq	%rax, -40(%rbp)
 5047 2390 31C0     		xorl	%eax, %eax
 5048              	.LEHB140:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 5049              		.loc 7 18 0
 5050 2392 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5050      00
 5051              	.LEHE140:
 5052 2397 4889C2   		movq	%rax, %rdx
 5053 239a 488B8590 		movq	-1648(%rbp), %rax
 5053      F9FFFF
 5054 23a1 488902   		movq	%rax, (%rdx)
 5055              	.LBB83:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 5056              		.loc 7 23 0
 5057 23a4 488D8570 		leaq	-1168(%rbp), %rax
 5057      FBFFFF
 5058 23ab 4889C7   		movq	%rax, %rdi
 5059              	.LEHB141:
 5060 23ae E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 5060      00
 5061              	.LEHE141:
 5062              		.loc 7 23 0 is_stmt 0 discriminator 1
 5063 23b3 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5063      000000
 5064 23ba BE010000 		movl	$1, %esi
 5064      00
 5065 23bf 4889C7   		movq	%rax, %rdi
 5066 23c2 E8000000 		call	__sigsetjmp@PLT
 5066      00
 5067 23c7 85C0     		testl	%eax, %eax
 5068 23c9 0F95C0   		setne	%al
 5069 23cc 84C0     		testb	%al, %al
 5070 23ce 7428     		je	.L266
 5071              		.loc 7 23 0 discriminator 4
 5072 23d0 BF080000 		movl	$8, %edi
 5072      00
 5073 23d5 E8000000 		call	__cxa_allocate_exception@PLT
 5073      00
 5074 23da 488D1500 		leaq	.LC32(%rip), %rdx
 5074      000000
 5075 23e1 488910   		movq	%rdx, (%rax)
 5076 23e4 BA000000 		movl	$0, %edx
 5076      00
 5077 23e9 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 5077      000000
 5078 23f0 4889C7   		movq	%rax, %rdi
 5079              	.LEHB142:
 5080 23f3 E8000000 		call	__cxa_throw@PLT
 5080      00
 5081              	.L266:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 5082              		.loc 7 25 0 is_stmt 1
 5083 23f8 488B8598 		movq	-1640(%rbp), %rax
 5083      F9FFFF
 5084 23ff 4889C7   		movq	%rax, %rdi
 5085 2402 E855E2FF 		call	_ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 5085      FF
 5086              	.LEHE142:
  23:../ExecuteTest.h **** #endif
 5087              		.loc 7 23 0
 5088 2407 488D8570 		leaq	-1168(%rbp), %rax
 5088      FBFFFF
 5089 240e 4889C7   		movq	%rax, %rdi
 5090              	.LEHB143:
 5091 2411 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5091      00
 5092              	.LEHE143:
 5093              	.LBE83:
  26:../ExecuteTest.h **** 	}
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 5094              		.loc 7 42 0
 5095 2416 E9F10100 		jmp	.L264
 5095      00
 5096              	.L279:
 5097 241b 4989C4   		movq	%rax, %r12
 5098 241e 4889D3   		movq	%rdx, %rbx
 5099              	.LBB84:
  23:../ExecuteTest.h **** #endif
 5100              		.loc 7 23 0
 5101 2421 488D8570 		leaq	-1168(%rbp), %rax
 5101      FBFFFF
 5102 2428 4889C7   		movq	%rax, %rdi
 5103 242b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5103      00
 5104 2430 4C89E0   		movq	%r12, %rax
 5105 2433 4889DA   		movq	%rbx, %rdx
 5106 2436 EB00     		jmp	.L268
 5107              	.L278:
 5108              	.L268:
 5109 2438 4883FA01 		cmpq	$1, %rdx
 5110 243c 740F     		je	.L270
 5111 243e 4883FA02 		cmpq	$2, %rdx
 5112 2442 0F84A600 		je	.L271
 5112      0000
 5113 2448 E9420100 		jmp	.L284
 5113      00
 5114              	.L270:
 5115              	.LBE84:
 5116              	.LBB85:
  27:../ExecuteTest.h **** 	{
 5117              		.loc 7 27 0
 5118 244d 4889C7   		movq	%rax, %rdi
 5119 2450 E8000000 		call	__cxa_begin_catch@PLT
 5119      00
 5120 2455 488985A8 		movq	%rax, -1624(%rbp)
 5120      F9FFFF
 5121              	.LEHB144:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5122              		.loc 7 29 0
 5123 245c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5123      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5124              		.loc 7 29 0 is_stmt 0 discriminator 1
 5125 2461 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 5126              		.loc 7 30 0 is_stmt 1 discriminator 1
 5127 2464 488B85A8 		movq	-1624(%rbp), %rax
 5127      F9FFFF
 5128 246b 488B00   		movq	(%rax), %rax
 5129 246e 4883C010 		addq	$16, %rax
 5130 2472 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5131              		.loc 7 29 0 discriminator 1
 5132 2475 488B95A8 		movq	-1624(%rbp), %rdx
 5132      F9FFFF
 5133 247c 4889D7   		movq	%rdx, %rdi
 5134 247f FFD0     		call	*%rax
 5135              	.LVL12:
 5136 2481 4989C4   		movq	%rax, %r12
 5137 2484 488B85A8 		movq	-1624(%rbp), %rax
 5137      F9FFFF
 5138 248b 4889C7   		movq	%rax, %rdi
 5139 248e E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 5139      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5140              		.loc 7 29 0 is_stmt 0 discriminator 2
 5141 2493 4189C5   		movl	%eax, %r13d
 5142 2496 488B85A8 		movq	-1624(%rbp), %rax
 5142      F9FFFF
 5143 249d 4889C7   		movq	%rax, %rdi
 5144 24a0 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 5144      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5145              		.loc 7 29 0 discriminator 3
 5146 24a5 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 5147              		.loc 7 30 0 is_stmt 1 discriminator 3
 5148 24a8 488B8590 		movq	-1648(%rbp), %rax
 5148      F9FFFF
 5149 24af 488B10   		movq	(%rax), %rdx
 5150 24b2 488B8590 		movq	-1648(%rbp), %rax
 5150      F9FFFF
 5151 24b9 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5152              		.loc 7 29 0 discriminator 3
 5153 24bd 488D85B0 		leaq	-1616(%rbp), %rax
 5153      F9FFFF
 5154 24c4 4589E8   		movl	%r13d, %r8d
 5155 24c7 4889C7   		movq	%rax, %rdi
 5156 24ca E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5156      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5157              		.loc 7 29 0 is_stmt 0 discriminator 5
 5158 24cf 488D85B0 		leaq	-1616(%rbp), %rax
 5158      F9FFFF
 5159 24d6 4C89E2   		movq	%r12, %rdx
 5160 24d9 4889C6   		movq	%rax, %rsi
 5161 24dc 4889DF   		movq	%rbx, %rdi
 5162 24df E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5162      00
 5163              	.LEHE144:
  27:../ExecuteTest.h **** 	{
 5164              		.loc 7 27 0 is_stmt 1 discriminator 7
 5165 24e4 E8000000 		call	__cxa_end_catch@PLT
 5165      00
 5166              	.LBE85:
 5167              		.loc 7 42 0 discriminator 7
 5168 24e9 E91E0100 		jmp	.L264
 5168      00
 5169              	.L271:
 5170              	.LBB86:
  32:../ExecuteTest.h **** 	{
 5171              		.loc 7 32 0
 5172 24ee 4889C7   		movq	%rax, %rdi
 5173 24f1 E8000000 		call	__cxa_begin_catch@PLT
 5173      00
 5174 24f6 488985A0 		movq	%rax, -1632(%rbp)
 5174      F9FFFF
 5175              	.LBB87:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5176              		.loc 7 34 0
 5177 24fd 488D85D0 		leaq	-1584(%rbp), %rax
 5177      F9FFFF
 5178 2504 4889C7   		movq	%rax, %rdi
 5179              	.LEHB145:
 5180 2507 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5180      00
 5181              	.LEHE145:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5182              		.loc 7 35 0
 5183 250c 488D85D0 		leaq	-1584(%rbp), %rax
 5183      F9FFFF
 5184 2513 488D3500 		leaq	.LC6(%rip), %rsi
 5184      000000
 5185 251a 4889C7   		movq	%rax, %rdi
 5186              	.LEHB146:
 5187 251d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5187      00
 5188 2522 4889C3   		movq	%rax, %rbx
 5189 2525 488B85A0 		movq	-1632(%rbp), %rax
 5189      F9FFFF
 5190 252c 488B00   		movq	(%rax), %rax
 5191 252f 4883C010 		addq	$16, %rax
 5192 2533 488B00   		movq	(%rax), %rax
 5193 2536 488B95A0 		movq	-1632(%rbp), %rdx
 5193      F9FFFF
 5194 253d 4889D7   		movq	%rdx, %rdi
 5195 2540 FFD0     		call	*%rax
 5196              	.LVL13:
 5197 2542 4889C6   		movq	%rax, %rsi
 5198 2545 4889DF   		movq	%rbx, %rdi
 5199 2548 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5199      00
  36:../ExecuteTest.h **** 	}
 5200              		.loc 7 36 0
 5201 254d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5201      00
 5202 2552 488B18   		movq	(%rax), %rbx
 5203 2555 488D85D0 		leaq	-1584(%rbp), %rax
 5203      F9FFFF
 5204 255c 4889C7   		movq	%rax, %rdi
 5205 255f E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5205      00
  36:../ExecuteTest.h **** 	}
 5206              		.loc 7 36 0 is_stmt 0 discriminator 1
 5207 2564 4889C2   		movq	%rax, %rdx
 5208 2567 488B8590 		movq	-1648(%rbp), %rax
 5208      F9FFFF
 5209 256e 4889C6   		movq	%rax, %rsi
 5210 2571 4889DF   		movq	%rbx, %rdi
 5211 2574 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5211      00
 5212              	.LEHE146:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5213              		.loc 7 34 0 is_stmt 1
 5214 2579 488D85D0 		leaq	-1584(%rbp), %rax
 5214      F9FFFF
 5215 2580 4889C7   		movq	%rax, %rdi
 5216              	.LEHB147:
 5217 2583 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5217      00
 5218              	.LEHE147:
 5219              	.LBE87:
  32:../ExecuteTest.h **** 	{
 5220              		.loc 7 32 0
 5221 2588 E8000000 		call	__cxa_end_catch@PLT
 5221      00
 5222              	.LBE86:
 5223              		.loc 7 42 0
 5224 258d EB7D     		jmp	.L264
 5225              	.L284:
  38:../ExecuteTest.h **** 	{
 5226              		.loc 7 38 0
 5227 258f 4889C7   		movq	%rax, %rdi
 5228 2592 E8000000 		call	__cxa_begin_catch@PLT
 5228      00
 5229              	.LEHB148:
  40:../ExecuteTest.h **** 	}
 5230              		.loc 7 40 0
 5231 2597 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5231      00
 5232 259c 488B00   		movq	(%rax), %rax
 5233 259f 488B8D90 		movq	-1648(%rbp), %rcx
 5233      F9FFFF
 5234 25a6 488D1500 		leaq	.LC33(%rip), %rdx
 5234      000000
 5235 25ad 4889CE   		movq	%rcx, %rsi
 5236 25b0 4889C7   		movq	%rax, %rdi
 5237 25b3 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5237      00
 5238              	.LEHE148:
 5239              	.LEHB149:
  38:../ExecuteTest.h **** 	{
 5240              		.loc 7 38 0
 5241 25b8 E8000000 		call	__cxa_end_catch@PLT
 5241      00
 5242              		.loc 7 42 0
 5243 25bd EB4D     		jmp	.L264
 5244              	.L280:
 5245 25bf 4889C3   		movq	%rax, %rbx
 5246              	.LBB89:
  27:../ExecuteTest.h **** 	{
 5247              		.loc 7 27 0
 5248 25c2 E8000000 		call	__cxa_end_catch@PLT
 5248      00
 5249 25c7 4889D8   		movq	%rbx, %rax
 5250 25ca 4889C7   		movq	%rax, %rdi
 5251 25cd E8000000 		call	_Unwind_Resume@PLT
 5251      00
 5252              	.LEHE149:
 5253              	.L282:
 5254 25d2 4889C3   		movq	%rax, %rbx
 5255              	.LBE89:
 5256              	.LBB90:
 5257              	.LBB88:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5258              		.loc 7 34 0
 5259 25d5 488D85D0 		leaq	-1584(%rbp), %rax
 5259      F9FFFF
 5260 25dc 4889C7   		movq	%rax, %rdi
 5261 25df E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5261      00
 5262 25e4 EB03     		jmp	.L275
 5263              	.L281:
 5264 25e6 4889C3   		movq	%rax, %rbx
 5265              	.L275:
 5266              	.LBE88:
  32:../ExecuteTest.h **** 	{
 5267              		.loc 7 32 0
 5268 25e9 E8000000 		call	__cxa_end_catch@PLT
 5268      00
 5269 25ee 4889D8   		movq	%rbx, %rax
 5270 25f1 4889C7   		movq	%rax, %rdi
 5271              	.LEHB150:
 5272 25f4 E8000000 		call	_Unwind_Resume@PLT
 5272      00
 5273              	.LEHE150:
 5274              	.L283:
 5275 25f9 4889C3   		movq	%rax, %rbx
 5276              	.LBE90:
  38:../ExecuteTest.h **** 	{
 5277              		.loc 7 38 0
 5278 25fc E8000000 		call	__cxa_end_catch@PLT
 5278      00
 5279 2601 4889D8   		movq	%rbx, %rax
 5280 2604 4889C7   		movq	%rax, %rdi
 5281              	.LEHB151:
 5282 2607 E8000000 		call	_Unwind_Resume@PLT
 5282      00
 5283              	.LEHE151:
 5284              	.L264:
 5285              		.loc 7 42 0
 5286 260c 488B45D8 		movq	-40(%rbp), %rax
 5287 2610 64483304 		xorq	%fs:40, %rax
 5287      25280000 
 5287      00
 5288 2619 7405     		je	.L277
 5289 261b E8000000 		call	__stack_chk_fail@PLT
 5289      00
 5290              	.L277:
 5291 2620 4881C458 		addq	$1624, %rsp
 5291      060000
 5292 2627 5B       		popq	%rbx
 5293 2628 415C     		popq	%r12
 5294 262a 415D     		popq	%r13
 5295 262c 5D       		popq	%rbp
 5296              		.cfi_def_cfa 7, 8
 5297 262d C3       		ret
 5298              		.cfi_endproc
 5299              	.LFE1485:
 5300              		.section	.gcc_except_table
 5301              		.align 4
 5302              	.LLSDA1485:
 5303 03b8 FF       		.byte	0xff
 5304 03b9 9B       		.byte	0x9b
 5305 03ba 59       		.uleb128 .LLSDATT1485-.LLSDATTD1485
 5306              	.LLSDATTD1485:
 5307 03bb 01       		.byte	0x1
 5308 03bc 43       		.uleb128 .LLSDACSE1485-.LLSDACSB1485
 5309              	.LLSDACSB1485:
 5310 03bd 2D       		.uleb128 .LEHB140-.LFB1485
 5311 03be 05       		.uleb128 .LEHE140-.LEHB140
 5312 03bf 00       		.uleb128 0
 5313 03c0 00       		.uleb128 0
 5314 03c1 49       		.uleb128 .LEHB141-.LFB1485
 5315 03c2 05       		.uleb128 .LEHE141-.LEHB141
 5316 03c3 D301     		.uleb128 .L278-.LFB1485
 5317 03c5 05       		.uleb128 0x5
 5318 03c6 8E01     		.uleb128 .LEHB142-.LFB1485
 5319 03c8 14       		.uleb128 .LEHE142-.LEHB142
 5320 03c9 B601     		.uleb128 .L279-.LFB1485
 5321 03cb 07       		.uleb128 0x7
 5322 03cc AC01     		.uleb128 .LEHB143-.LFB1485
 5323 03ce 05       		.uleb128 .LEHE143-.LEHB143
 5324 03cf D301     		.uleb128 .L278-.LFB1485
 5325 03d1 05       		.uleb128 0x5
 5326 03d2 F701     		.uleb128 .LEHB144-.LFB1485
 5327 03d4 8801     		.uleb128 .LEHE144-.LEHB144
 5328 03d6 DA04     		.uleb128 .L280-.LFB1485
 5329 03d8 00       		.uleb128 0
 5330 03d9 A203     		.uleb128 .LEHB145-.LFB1485
 5331 03db 05       		.uleb128 .LEHE145-.LEHB145
 5332 03dc 8105     		.uleb128 .L281-.LFB1485
 5333 03de 00       		.uleb128 0
 5334 03df B803     		.uleb128 .LEHB146-.LFB1485
 5335 03e1 5C       		.uleb128 .LEHE146-.LEHB146
 5336 03e2 ED04     		.uleb128 .L282-.LFB1485
 5337 03e4 00       		.uleb128 0
 5338 03e5 9E04     		.uleb128 .LEHB147-.LFB1485
 5339 03e7 05       		.uleb128 .LEHE147-.LEHB147
 5340 03e8 8105     		.uleb128 .L281-.LFB1485
 5341 03ea 00       		.uleb128 0
 5342 03eb B204     		.uleb128 .LEHB148-.LFB1485
 5343 03ed 21       		.uleb128 .LEHE148-.LEHB148
 5344 03ee 9405     		.uleb128 .L283-.LFB1485
 5345 03f0 00       		.uleb128 0
 5346 03f1 D304     		.uleb128 .LEHB149-.LFB1485
 5347 03f3 1A       		.uleb128 .LEHE149-.LEHB149
 5348 03f4 00       		.uleb128 0
 5349 03f5 00       		.uleb128 0
 5350 03f6 8F05     		.uleb128 .LEHB150-.LFB1485
 5351 03f8 05       		.uleb128 .LEHE150-.LEHB150
 5352 03f9 00       		.uleb128 0
 5353 03fa 00       		.uleb128 0
 5354 03fb A205     		.uleb128 .LEHB151-.LFB1485
 5355 03fd 05       		.uleb128 .LEHE151-.LEHB151
 5356 03fe 00       		.uleb128 0
 5357 03ff 00       		.uleb128 0
 5358              	.LLSDACSE1485:
 5359 0400 03       		.byte	0x3
 5360 0401 00       		.byte	0
 5361 0402 02       		.byte	0x2
 5362 0403 7D       		.byte	0x7d
 5363 0404 01       		.byte	0x1
 5364 0405 7D       		.byte	0x7d
 5365 0406 00       		.byte	0
 5366 0407 7D       		.byte	0x7d
 5367              		.align 4
 5368 0408 00000000 		.long	0
 5369              	
 5370 040c 00000000 		.long	DW.ref._ZTISt9exception-.
 5371 0410 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 5372              	.LLSDATT1485:
 5373              		.text
 5375              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt
 5376              		.align 2
 5377              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 5379              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:
 5380              	.LFB1487:
 436:/usr/include/c++/7/bits/stl_vector.h **** 
 437:/usr/include/c++/7/bits/stl_vector.h ****       /**
 438:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 439:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 440:/usr/include/c++/7/bits/stl_vector.h ****        *
 441:/usr/include/c++/7/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 442:/usr/include/c++/7/bits/stl_vector.h ****        *  @a __x will not be copied.
 443:/usr/include/c++/7/bits/stl_vector.h ****        *
 444:/usr/include/c++/7/bits/stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 445:/usr/include/c++/7/bits/stl_vector.h ****        */
 446:/usr/include/c++/7/bits/stl_vector.h ****       vector&
 447:/usr/include/c++/7/bits/stl_vector.h ****       operator=(const vector& __x);
 448:/usr/include/c++/7/bits/stl_vector.h **** 
 449:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 450:/usr/include/c++/7/bits/stl_vector.h ****       /**
 451:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 452:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 453:/usr/include/c++/7/bits/stl_vector.h ****        *
 454:/usr/include/c++/7/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 455:/usr/include/c++/7/bits/stl_vector.h ****        *  if the allocators permit it).
 456:/usr/include/c++/7/bits/stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 457:/usr/include/c++/7/bits/stl_vector.h ****        *
 458:/usr/include/c++/7/bits/stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 459:/usr/include/c++/7/bits/stl_vector.h ****        */
 460:/usr/include/c++/7/bits/stl_vector.h ****       vector&
 461:/usr/include/c++/7/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 462:/usr/include/c++/7/bits/stl_vector.h ****       {
 463:/usr/include/c++/7/bits/stl_vector.h **** 	constexpr bool __move_storage =
 464:/usr/include/c++/7/bits/stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 465:/usr/include/c++/7/bits/stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 466:/usr/include/c++/7/bits/stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 467:/usr/include/c++/7/bits/stl_vector.h **** 	return *this;
 468:/usr/include/c++/7/bits/stl_vector.h ****       }
 469:/usr/include/c++/7/bits/stl_vector.h **** 
 470:/usr/include/c++/7/bits/stl_vector.h ****       /**
 471:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 472:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 473:/usr/include/c++/7/bits/stl_vector.h ****        *
 474:/usr/include/c++/7/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 475:/usr/include/c++/7/bits/stl_vector.h ****        *  initializer list @a __l.
 476:/usr/include/c++/7/bits/stl_vector.h ****        *
 477:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 478:/usr/include/c++/7/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 479:/usr/include/c++/7/bits/stl_vector.h ****        *  of elements assigned.
 480:/usr/include/c++/7/bits/stl_vector.h ****        */
 481:/usr/include/c++/7/bits/stl_vector.h ****       vector&
 482:/usr/include/c++/7/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 483:/usr/include/c++/7/bits/stl_vector.h ****       {
 484:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 485:/usr/include/c++/7/bits/stl_vector.h **** 			    random_access_iterator_tag());
 486:/usr/include/c++/7/bits/stl_vector.h **** 	return *this;
 487:/usr/include/c++/7/bits/stl_vector.h ****       }
 488:/usr/include/c++/7/bits/stl_vector.h **** #endif
 489:/usr/include/c++/7/bits/stl_vector.h **** 
 490:/usr/include/c++/7/bits/stl_vector.h ****       /**
 491:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 492:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 493:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 494:/usr/include/c++/7/bits/stl_vector.h ****        *
 495:/usr/include/c++/7/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 496:/usr/include/c++/7/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 497:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 498:/usr/include/c++/7/bits/stl_vector.h ****        *  the number of elements assigned.
 499:/usr/include/c++/7/bits/stl_vector.h ****        */
 500:/usr/include/c++/7/bits/stl_vector.h ****       void
 501:/usr/include/c++/7/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 502:/usr/include/c++/7/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 503:/usr/include/c++/7/bits/stl_vector.h **** 
 504:/usr/include/c++/7/bits/stl_vector.h ****       /**
 505:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 506:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 507:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 508:/usr/include/c++/7/bits/stl_vector.h ****        *
 509:/usr/include/c++/7/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 510:/usr/include/c++/7/bits/stl_vector.h ****        *  range [__first,__last).
 511:/usr/include/c++/7/bits/stl_vector.h ****        *
 512:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 513:/usr/include/c++/7/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 514:/usr/include/c++/7/bits/stl_vector.h ****        *  of elements assigned.
 515:/usr/include/c++/7/bits/stl_vector.h ****        */
 516:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 517:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator,
 518:/usr/include/c++/7/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 519:/usr/include/c++/7/bits/stl_vector.h **** 	void
 520:/usr/include/c++/7/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 521:/usr/include/c++/7/bits/stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 522:/usr/include/c++/7/bits/stl_vector.h **** #else
 523:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator>
 524:/usr/include/c++/7/bits/stl_vector.h **** 	void
 525:/usr/include/c++/7/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 526:/usr/include/c++/7/bits/stl_vector.h **** 	{
 527:/usr/include/c++/7/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 528:/usr/include/c++/7/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 529:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 530:/usr/include/c++/7/bits/stl_vector.h **** 	}
 531:/usr/include/c++/7/bits/stl_vector.h **** #endif
 532:/usr/include/c++/7/bits/stl_vector.h **** 
 533:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 534:/usr/include/c++/7/bits/stl_vector.h ****       /**
 535:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 536:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 537:/usr/include/c++/7/bits/stl_vector.h ****        *
 538:/usr/include/c++/7/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 539:/usr/include/c++/7/bits/stl_vector.h ****        *  initializer list @a __l.
 540:/usr/include/c++/7/bits/stl_vector.h ****        *
 541:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 542:/usr/include/c++/7/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 543:/usr/include/c++/7/bits/stl_vector.h ****        *  of elements assigned.
 544:/usr/include/c++/7/bits/stl_vector.h ****        */
 545:/usr/include/c++/7/bits/stl_vector.h ****       void
 546:/usr/include/c++/7/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 547:/usr/include/c++/7/bits/stl_vector.h ****       {
 548:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 549:/usr/include/c++/7/bits/stl_vector.h **** 			    random_access_iterator_tag());
 550:/usr/include/c++/7/bits/stl_vector.h ****       }
 551:/usr/include/c++/7/bits/stl_vector.h **** #endif
 552:/usr/include/c++/7/bits/stl_vector.h **** 
 553:/usr/include/c++/7/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 554:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::get_allocator;
 555:/usr/include/c++/7/bits/stl_vector.h **** 
 556:/usr/include/c++/7/bits/stl_vector.h ****       // iterators
 557:/usr/include/c++/7/bits/stl_vector.h ****       /**
 558:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 559:/usr/include/c++/7/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 560:/usr/include/c++/7/bits/stl_vector.h ****        *  element order.
 561:/usr/include/c++/7/bits/stl_vector.h ****        */
 562:/usr/include/c++/7/bits/stl_vector.h ****       iterator
 563:/usr/include/c++/7/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 564:/usr/include/c++/7/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 565:/usr/include/c++/7/bits/stl_vector.h **** 
 566:/usr/include/c++/7/bits/stl_vector.h ****       /**
 567:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 568:/usr/include/c++/7/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 569:/usr/include/c++/7/bits/stl_vector.h ****        *  element order.
 570:/usr/include/c++/7/bits/stl_vector.h ****        */
 571:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator
 572:/usr/include/c++/7/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 573:/usr/include/c++/7/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 574:/usr/include/c++/7/bits/stl_vector.h **** 
 575:/usr/include/c++/7/bits/stl_vector.h ****       /**
 576:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 577:/usr/include/c++/7/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 578:/usr/include/c++/7/bits/stl_vector.h ****        *  element order.
 579:/usr/include/c++/7/bits/stl_vector.h ****        */
 580:/usr/include/c++/7/bits/stl_vector.h ****       iterator
 581:/usr/include/c++/7/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 582:/usr/include/c++/7/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 583:/usr/include/c++/7/bits/stl_vector.h **** 
 584:/usr/include/c++/7/bits/stl_vector.h ****       /**
 585:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 586:/usr/include/c++/7/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 587:/usr/include/c++/7/bits/stl_vector.h ****        *  ordinary element order.
 588:/usr/include/c++/7/bits/stl_vector.h ****        */
 589:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator
 590:/usr/include/c++/7/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 591:/usr/include/c++/7/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 592:/usr/include/c++/7/bits/stl_vector.h **** 
 593:/usr/include/c++/7/bits/stl_vector.h ****       /**
 594:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 595:/usr/include/c++/7/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 596:/usr/include/c++/7/bits/stl_vector.h ****        *  element order.
 597:/usr/include/c++/7/bits/stl_vector.h ****        */
 598:/usr/include/c++/7/bits/stl_vector.h ****       reverse_iterator
 599:/usr/include/c++/7/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 600:/usr/include/c++/7/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 601:/usr/include/c++/7/bits/stl_vector.h **** 
 602:/usr/include/c++/7/bits/stl_vector.h ****       /**
 603:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 604:/usr/include/c++/7/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 605:/usr/include/c++/7/bits/stl_vector.h ****        *  reverse element order.
 606:/usr/include/c++/7/bits/stl_vector.h ****        */
 607:/usr/include/c++/7/bits/stl_vector.h ****       const_reverse_iterator
 608:/usr/include/c++/7/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 609:/usr/include/c++/7/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 610:/usr/include/c++/7/bits/stl_vector.h **** 
 611:/usr/include/c++/7/bits/stl_vector.h ****       /**
 612:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 613:/usr/include/c++/7/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 614:/usr/include/c++/7/bits/stl_vector.h ****        *  in reverse element order.
 615:/usr/include/c++/7/bits/stl_vector.h ****        */
 616:/usr/include/c++/7/bits/stl_vector.h ****       reverse_iterator
 617:/usr/include/c++/7/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 618:/usr/include/c++/7/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 619:/usr/include/c++/7/bits/stl_vector.h **** 
 620:/usr/include/c++/7/bits/stl_vector.h ****       /**
 621:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 622:/usr/include/c++/7/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 623:/usr/include/c++/7/bits/stl_vector.h ****        *  is done in reverse element order.
 624:/usr/include/c++/7/bits/stl_vector.h ****        */
 625:/usr/include/c++/7/bits/stl_vector.h ****       const_reverse_iterator
 626:/usr/include/c++/7/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 627:/usr/include/c++/7/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 628:/usr/include/c++/7/bits/stl_vector.h **** 
 629:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 630:/usr/include/c++/7/bits/stl_vector.h ****       /**
 631:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 632:/usr/include/c++/7/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 633:/usr/include/c++/7/bits/stl_vector.h ****        *  element order.
 634:/usr/include/c++/7/bits/stl_vector.h ****        */
 635:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator
 636:/usr/include/c++/7/bits/stl_vector.h ****       cbegin() const noexcept
 637:/usr/include/c++/7/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 638:/usr/include/c++/7/bits/stl_vector.h **** 
 639:/usr/include/c++/7/bits/stl_vector.h ****       /**
 640:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 641:/usr/include/c++/7/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 642:/usr/include/c++/7/bits/stl_vector.h ****        *  ordinary element order.
 643:/usr/include/c++/7/bits/stl_vector.h ****        */
 644:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator
 645:/usr/include/c++/7/bits/stl_vector.h ****       cend() const noexcept
 646:/usr/include/c++/7/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 647:/usr/include/c++/7/bits/stl_vector.h **** 
 648:/usr/include/c++/7/bits/stl_vector.h ****       /**
 649:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 650:/usr/include/c++/7/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 651:/usr/include/c++/7/bits/stl_vector.h ****        *  reverse element order.
 652:/usr/include/c++/7/bits/stl_vector.h ****        */
 653:/usr/include/c++/7/bits/stl_vector.h ****       const_reverse_iterator
 654:/usr/include/c++/7/bits/stl_vector.h ****       crbegin() const noexcept
 655:/usr/include/c++/7/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 656:/usr/include/c++/7/bits/stl_vector.h **** 
 657:/usr/include/c++/7/bits/stl_vector.h ****       /**
 658:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 659:/usr/include/c++/7/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 660:/usr/include/c++/7/bits/stl_vector.h ****        *  is done in reverse element order.
 661:/usr/include/c++/7/bits/stl_vector.h ****        */
 662:/usr/include/c++/7/bits/stl_vector.h ****       const_reverse_iterator
 663:/usr/include/c++/7/bits/stl_vector.h ****       crend() const noexcept
 664:/usr/include/c++/7/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 665:/usr/include/c++/7/bits/stl_vector.h **** #endif
 666:/usr/include/c++/7/bits/stl_vector.h **** 
 667:/usr/include/c++/7/bits/stl_vector.h ****       // [23.2.4.2] capacity
 668:/usr/include/c++/7/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 669:/usr/include/c++/7/bits/stl_vector.h ****       size_type
 670:/usr/include/c++/7/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 5381              		.loc 6 670 0
 5382              		.cfi_startproc
 5383 0000 55       		pushq	%rbp
 5384              		.cfi_def_cfa_offset 16
 5385              		.cfi_offset 6, -16
 5386 0001 4889E5   		movq	%rsp, %rbp
 5387              		.cfi_def_cfa_register 6
 5388 0004 48897DF8 		movq	%rdi, -8(%rbp)
 671:/usr/include/c++/7/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5389              		.loc 6 671 0
 5390 0008 488B45F8 		movq	-8(%rbp), %rax
 5391 000c 488B4008 		movq	8(%rax), %rax
 5392 0010 4889C2   		movq	%rax, %rdx
 5393 0013 488B45F8 		movq	-8(%rbp), %rax
 5394 0017 488B00   		movq	(%rax), %rax
 5395 001a 4829C2   		subq	%rax, %rdx
 5396 001d 4889D0   		movq	%rdx, %rax
 5397 0020 48C1F807 		sarq	$7, %rax
 5398 0024 5D       		popq	%rbp
 5399              		.cfi_def_cfa 7, 8
 5400 0025 C3       		ret
 5401              		.cfi_endproc
 5402              	.LFE1487:
 5404              		.section	.rodata
 5405              	.LC34:
 5406 055b 45787065 		.string	"Expected "
 5406      63746564 
 5406      2000
 5407              	.LC35:
 5408 0565 20627574 		.string	" but was "
 5408      20776173 
 5408      2000
 5409              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 5410              		.weak	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 5412              	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 5413              	.LFB1488:
 5414              		.file 8 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
  15:../Checks.h   **** }
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 5415              		.loc 8 19 0
 5416              		.cfi_startproc
 5417              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5418              		.cfi_lsda 0x1b,.LLSDA1488
 5419 0000 55       		pushq	%rbp
 5420              		.cfi_def_cfa_offset 16
 5421              		.cfi_offset 6, -16
 5422 0001 4889E5   		movq	%rsp, %rbp
 5423              		.cfi_def_cfa_register 6
 5424 0004 53       		pushq	%rbx
 5425 0005 4881ECC8 		subq	$456, %rsp
 5425      010000
 5426              		.cfi_offset 3, -24
 5427 000c 4889BD48 		movq	%rdi, -440(%rbp)
 5427      FEFFFF
 5428 0013 4889B540 		movq	%rsi, -448(%rbp)
 5428      FEFFFF
 5429 001a 48899538 		movq	%rdx, -456(%rbp)
 5429      FEFFFF
 5430 0021 48898D30 		movq	%rcx, -464(%rbp)
 5430      FEFFFF
 5431              		.loc 8 19 0
 5432 0028 64488B04 		movq	%fs:40, %rax
 5432      25280000 
 5432      00
 5433 0031 488945E8 		movq	%rax, -24(%rbp)
 5434 0035 31C0     		xorl	%eax, %eax
 5435              	.LBB91:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 5436              		.loc 8 21 0
 5437 0037 488B8540 		movq	-448(%rbp), %rax
 5437      FEFFFF
 5438 003e 8B10     		movl	(%rax), %edx
 5439 0040 488B8538 		movq	-456(%rbp), %rax
 5439      FEFFFF
 5440 0047 8B00     		movl	(%rax), %eax
 5441 0049 39C2     		cmpl	%eax, %edx
 5442 004b 0F84B900 		je	.L292
 5442      0000
 5443              	.LBB92:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 5444              		.loc 8 23 0
 5445 0051 488D8550 		leaq	-432(%rbp), %rax
 5445      FEFFFF
 5446 0058 4889C7   		movq	%rax, %rdi
 5447              	.LEHB152:
 5448 005b E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5448      00
 5449              	.LEHE152:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5450              		.loc 8 24 0
 5451 0060 488D8550 		leaq	-432(%rbp), %rax
 5451      FEFFFF
 5452 0067 488D3500 		leaq	.LC34(%rip), %rsi
 5452      000000
 5453 006e 4889C7   		movq	%rax, %rdi
 5454              	.LEHB153:
 5455 0071 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5455      00
 5456 0076 4889C2   		movq	%rax, %rdx
 5457 0079 488B8540 		movq	-448(%rbp), %rax
 5457      FEFFFF
 5458 0080 8B00     		movl	(%rax), %eax
 5459 0082 89C6     		movl	%eax, %esi
 5460 0084 4889D7   		movq	%rdx, %rdi
 5461 0087 E8000000 		call	_ZNSolsEi@PLT
 5461      00
 5462              		.loc 8 24 0 is_stmt 0 discriminator 1
 5463 008c 488D3500 		leaq	.LC35(%rip), %rsi
 5463      000000
 5464 0093 4889C7   		movq	%rax, %rdi
 5465 0096 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5465      00
 5466              		.loc 8 24 0 discriminator 2
 5467 009b 4889C2   		movq	%rax, %rdx
 5468 009e 488B8538 		movq	-456(%rbp), %rax
 5468      FEFFFF
 5469 00a5 8B00     		movl	(%rax), %eax
 5470 00a7 89C6     		movl	%eax, %esi
 5471 00a9 4889D7   		movq	%rdx, %rdi
 5472 00ac E8000000 		call	_ZNSolsEi@PLT
 5472      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 5473              		.loc 8 26 0 is_stmt 1
 5474 00b1 488D8550 		leaq	-432(%rbp), %rax
 5474      FEFFFF
 5475 00b8 4889C7   		movq	%rax, %rdi
 5476 00bb E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5476      00
 5477 00c0 4889C2   		movq	%rax, %rdx
 5478 00c3 488B8D30 		movq	-464(%rbp), %rcx
 5478      FEFFFF
 5479 00ca 488B8548 		movq	-440(%rbp), %rax
 5479      FEFFFF
 5480 00d1 4889CE   		movq	%rcx, %rsi
 5481 00d4 4889C7   		movq	%rax, %rdi
 5482 00d7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5482      00
 5483              	.LEHE153:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5484              		.loc 8 23 0
 5485 00dc 488D8550 		leaq	-432(%rbp), %rax
 5485      FEFFFF
 5486 00e3 4889C7   		movq	%rax, %rdi
 5487              	.LEHB154:
 5488 00e6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5488      00
 5489              	.LEHE154:
 5490              	.LBE92:
 5491              	.LBE91:
  27:../Checks.h   ****     }
  28:../Checks.h   **** }
 5492              		.loc 8 28 0
 5493 00eb EB1D     		jmp	.L292
 5494              	.L291:
 5495 00ed 4889C3   		movq	%rax, %rbx
 5496              	.LBB94:
 5497              	.LBB93:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5498              		.loc 8 23 0
 5499 00f0 488D8550 		leaq	-432(%rbp), %rax
 5499      FEFFFF
 5500 00f7 4889C7   		movq	%rax, %rdi
 5501 00fa E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5501      00
 5502 00ff 4889D8   		movq	%rbx, %rax
 5503 0102 4889C7   		movq	%rax, %rdi
 5504              	.LEHB155:
 5505 0105 E8000000 		call	_Unwind_Resume@PLT
 5505      00
 5506              	.LEHE155:
 5507              	.L292:
 5508              	.LBE93:
 5509              	.LBE94:
 5510              		.loc 8 28 0
 5511 010a 90       		nop
 5512 010b 488B45E8 		movq	-24(%rbp), %rax
 5513 010f 64483304 		xorq	%fs:40, %rax
 5513      25280000 
 5513      00
 5514 0118 7405     		je	.L290
 5515 011a E8000000 		call	__stack_chk_fail@PLT
 5515      00
 5516              	.L290:
 5517 011f 4881C4C8 		addq	$456, %rsp
 5517      010000
 5518 0126 5B       		popq	%rbx
 5519 0127 5D       		popq	%rbp
 5520              		.cfi_def_cfa 7, 8
 5521 0128 C3       		ret
 5522              		.cfi_endproc
 5523              	.LFE1488:
 5524              		.section	.gcc_except_table
 5525              	.LLSDA1488:
 5526 0414 FF       		.byte	0xff
 5527 0415 FF       		.byte	0xff
 5528 0416 01       		.byte	0x1
 5529 0417 13       		.uleb128 .LLSDACSE1488-.LLSDACSB1488
 5530              	.LLSDACSB1488:
 5531 0418 5B       		.uleb128 .LEHB152-.LFB1488
 5532 0419 05       		.uleb128 .LEHE152-.LEHB152
 5533 041a 00       		.uleb128 0
 5534 041b 00       		.uleb128 0
 5535 041c 71       		.uleb128 .LEHB153-.LFB1488
 5536 041d 6B       		.uleb128 .LEHE153-.LEHB153
 5537 041e ED01     		.uleb128 .L291-.LFB1488
 5538 0420 00       		.uleb128 0
 5539 0421 E601     		.uleb128 .LEHB154-.LFB1488
 5540 0423 05       		.uleb128 .LEHE154-.LEHB154
 5541 0424 00       		.uleb128 0
 5542 0425 00       		.uleb128 0
 5543 0426 8502     		.uleb128 .LEHB155-.LFB1488
 5544 0428 05       		.uleb128 .LEHE155-.LEHB155
 5545 0429 00       		.uleb128 0
 5546 042a 00       		.uleb128 0
 5547              	.LLSDACSE1488:
 5548              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 5550              		.text
 5552              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTest
 5553              	.LFB1489:
  16:../ExecuteTest.h **** {
 5554              		.loc 7 16 0
 5555              		.cfi_startproc
 5556              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5557              		.cfi_lsda 0x1b,.LLSDA1489
 5558 262e 55       		pushq	%rbp
 5559              		.cfi_def_cfa_offset 16
 5560              		.cfi_offset 6, -16
 5561 262f 4889E5   		movq	%rsp, %rbp
 5562              		.cfi_def_cfa_register 6
 5563 2632 4155     		pushq	%r13
 5564 2634 4154     		pushq	%r12
 5565 2636 53       		pushq	%rbx
 5566 2637 4881EC58 		subq	$1624, %rsp
 5566      060000
 5567              		.cfi_offset 13, -24
 5568              		.cfi_offset 12, -32
 5569              		.cfi_offset 3, -40
 5570 263e 4889BD98 		movq	%rdi, -1640(%rbp)
 5570      F9FFFF
 5571 2645 4889B590 		movq	%rsi, -1648(%rbp)
 5571      F9FFFF
  16:../ExecuteTest.h **** {
 5572              		.loc 7 16 0
 5573 264c 64488B04 		movq	%fs:40, %rax
 5573      25280000 
 5573      00
 5574 2655 488945D8 		movq	%rax, -40(%rbp)
 5575 2659 31C0     		xorl	%eax, %eax
 5576              	.LEHB156:
  18:../ExecuteTest.h **** 
 5577              		.loc 7 18 0
 5578 265b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5578      00
 5579              	.LEHE156:
 5580 2660 4889C2   		movq	%rax, %rdx
 5581 2663 488B8590 		movq	-1648(%rbp), %rax
 5581      F9FFFF
 5582 266a 488902   		movq	%rax, (%rdx)
 5583              	.LBB95:
  23:../ExecuteTest.h **** #endif
 5584              		.loc 7 23 0
 5585 266d 488D8570 		leaq	-1168(%rbp), %rax
 5585      FBFFFF
 5586 2674 4889C7   		movq	%rax, %rdi
 5587              	.LEHB157:
 5588 2677 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 5588      00
 5589              	.LEHE157:
  23:../ExecuteTest.h **** #endif
 5590              		.loc 7 23 0 is_stmt 0 discriminator 1
 5591 267c 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5591      000000
 5592 2683 BE010000 		movl	$1, %esi
 5592      00
 5593 2688 4889C7   		movq	%rax, %rdi
 5594 268b E8000000 		call	__sigsetjmp@PLT
 5594      00
 5595 2690 85C0     		testl	%eax, %eax
 5596 2692 0F95C0   		setne	%al
 5597 2695 84C0     		testb	%al, %al
 5598 2697 7428     		je	.L295
  23:../ExecuteTest.h **** #endif
 5599              		.loc 7 23 0 discriminator 4
 5600 2699 BF080000 		movl	$8, %edi
 5600      00
 5601 269e E8000000 		call	__cxa_allocate_exception@PLT
 5601      00
 5602 26a3 488D1500 		leaq	.LC32(%rip), %rdx
 5602      000000
 5603 26aa 488910   		movq	%rdx, (%rax)
 5604 26ad BA000000 		movl	$0, %edx
 5604      00
 5605 26b2 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 5605      000000
 5606 26b9 4889C7   		movq	%rax, %rdi
 5607              	.LEHB158:
 5608 26bc E8000000 		call	__cxa_throw@PLT
 5608      00
 5609              	.L295:
  25:../ExecuteTest.h **** 	}
 5610              		.loc 7 25 0 is_stmt 1
 5611 26c1 488B8598 		movq	-1640(%rbp), %rax
 5611      F9FFFF
 5612 26c8 4889C7   		movq	%rax, %rdi
 5613 26cb E838E4FF 		call	_ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 5613      FF
 5614              	.LEHE158:
  23:../ExecuteTest.h **** #endif
 5615              		.loc 7 23 0
 5616 26d0 488D8570 		leaq	-1168(%rbp), %rax
 5616      FBFFFF
 5617 26d7 4889C7   		movq	%rax, %rdi
 5618              	.LEHB159:
 5619 26da E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5619      00
 5620              	.LEHE159:
 5621              	.LBE95:
 5622              		.loc 7 42 0
 5623 26df E9F10100 		jmp	.L293
 5623      00
 5624              	.L308:
 5625 26e4 4989C4   		movq	%rax, %r12
 5626 26e7 4889D3   		movq	%rdx, %rbx
 5627              	.LBB96:
  23:../ExecuteTest.h **** #endif
 5628              		.loc 7 23 0
 5629 26ea 488D8570 		leaq	-1168(%rbp), %rax
 5629      FBFFFF
 5630 26f1 4889C7   		movq	%rax, %rdi
 5631 26f4 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5631      00
 5632 26f9 4C89E0   		movq	%r12, %rax
 5633 26fc 4889DA   		movq	%rbx, %rdx
 5634 26ff EB00     		jmp	.L297
 5635              	.L307:
 5636              	.L297:
 5637 2701 4883FA01 		cmpq	$1, %rdx
 5638 2705 740F     		je	.L299
 5639 2707 4883FA02 		cmpq	$2, %rdx
 5640 270b 0F84A600 		je	.L300
 5640      0000
 5641 2711 E9420100 		jmp	.L313
 5641      00
 5642              	.L299:
 5643              	.LBE96:
 5644              	.LBB97:
  27:../ExecuteTest.h **** 	{
 5645              		.loc 7 27 0
 5646 2716 4889C7   		movq	%rax, %rdi
 5647 2719 E8000000 		call	__cxa_begin_catch@PLT
 5647      00
 5648 271e 488985A8 		movq	%rax, -1624(%rbp)
 5648      F9FFFF
 5649              	.LEHB160:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5650              		.loc 7 29 0
 5651 2725 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5651      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5652              		.loc 7 29 0 is_stmt 0 discriminator 1
 5653 272a 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 5654              		.loc 7 30 0 is_stmt 1 discriminator 1
 5655 272d 488B85A8 		movq	-1624(%rbp), %rax
 5655      F9FFFF
 5656 2734 488B00   		movq	(%rax), %rax
 5657 2737 4883C010 		addq	$16, %rax
 5658 273b 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5659              		.loc 7 29 0 discriminator 1
 5660 273e 488B95A8 		movq	-1624(%rbp), %rdx
 5660      F9FFFF
 5661 2745 4889D7   		movq	%rdx, %rdi
 5662 2748 FFD0     		call	*%rax
 5663              	.LVL14:
 5664 274a 4989C4   		movq	%rax, %r12
 5665 274d 488B85A8 		movq	-1624(%rbp), %rax
 5665      F9FFFF
 5666 2754 4889C7   		movq	%rax, %rdi
 5667 2757 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 5667      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5668              		.loc 7 29 0 is_stmt 0 discriminator 2
 5669 275c 4189C5   		movl	%eax, %r13d
 5670 275f 488B85A8 		movq	-1624(%rbp), %rax
 5670      F9FFFF
 5671 2766 4889C7   		movq	%rax, %rdi
 5672 2769 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 5672      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5673              		.loc 7 29 0 discriminator 3
 5674 276e 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 5675              		.loc 7 30 0 is_stmt 1 discriminator 3
 5676 2771 488B8590 		movq	-1648(%rbp), %rax
 5676      F9FFFF
 5677 2778 488B10   		movq	(%rax), %rdx
 5678 277b 488B8590 		movq	-1648(%rbp), %rax
 5678      F9FFFF
 5679 2782 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5680              		.loc 7 29 0 discriminator 3
 5681 2786 488D85B0 		leaq	-1616(%rbp), %rax
 5681      F9FFFF
 5682 278d 4589E8   		movl	%r13d, %r8d
 5683 2790 4889C7   		movq	%rax, %rdi
 5684 2793 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5684      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5685              		.loc 7 29 0 is_stmt 0 discriminator 5
 5686 2798 488D85B0 		leaq	-1616(%rbp), %rax
 5686      F9FFFF
 5687 279f 4C89E2   		movq	%r12, %rdx
 5688 27a2 4889C6   		movq	%rax, %rsi
 5689 27a5 4889DF   		movq	%rbx, %rdi
 5690 27a8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5690      00
 5691              	.LEHE160:
  27:../ExecuteTest.h **** 	{
 5692              		.loc 7 27 0 is_stmt 1 discriminator 7
 5693 27ad E8000000 		call	__cxa_end_catch@PLT
 5693      00
 5694              	.LBE97:
 5695              		.loc 7 42 0 discriminator 7
 5696 27b2 E91E0100 		jmp	.L293
 5696      00
 5697              	.L300:
 5698              	.LBB98:
  32:../ExecuteTest.h **** 	{
 5699              		.loc 7 32 0
 5700 27b7 4889C7   		movq	%rax, %rdi
 5701 27ba E8000000 		call	__cxa_begin_catch@PLT
 5701      00
 5702 27bf 488985A0 		movq	%rax, -1632(%rbp)
 5702      F9FFFF
 5703              	.LBB99:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5704              		.loc 7 34 0
 5705 27c6 488D85D0 		leaq	-1584(%rbp), %rax
 5705      F9FFFF
 5706 27cd 4889C7   		movq	%rax, %rdi
 5707              	.LEHB161:
 5708 27d0 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5708      00
 5709              	.LEHE161:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5710              		.loc 7 35 0
 5711 27d5 488D85D0 		leaq	-1584(%rbp), %rax
 5711      F9FFFF
 5712 27dc 488D3500 		leaq	.LC6(%rip), %rsi
 5712      000000
 5713 27e3 4889C7   		movq	%rax, %rdi
 5714              	.LEHB162:
 5715 27e6 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5715      00
 5716 27eb 4889C3   		movq	%rax, %rbx
 5717 27ee 488B85A0 		movq	-1632(%rbp), %rax
 5717      F9FFFF
 5718 27f5 488B00   		movq	(%rax), %rax
 5719 27f8 4883C010 		addq	$16, %rax
 5720 27fc 488B00   		movq	(%rax), %rax
 5721 27ff 488B95A0 		movq	-1632(%rbp), %rdx
 5721      F9FFFF
 5722 2806 4889D7   		movq	%rdx, %rdi
 5723 2809 FFD0     		call	*%rax
 5724              	.LVL15:
 5725 280b 4889C6   		movq	%rax, %rsi
 5726 280e 4889DF   		movq	%rbx, %rdi
 5727 2811 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5727      00
  36:../ExecuteTest.h **** 	}
 5728              		.loc 7 36 0
 5729 2816 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5729      00
 5730 281b 488B18   		movq	(%rax), %rbx
 5731 281e 488D85D0 		leaq	-1584(%rbp), %rax
 5731      F9FFFF
 5732 2825 4889C7   		movq	%rax, %rdi
 5733 2828 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5733      00
  36:../ExecuteTest.h **** 	}
 5734              		.loc 7 36 0 is_stmt 0 discriminator 1
 5735 282d 4889C2   		movq	%rax, %rdx
 5736 2830 488B8590 		movq	-1648(%rbp), %rax
 5736      F9FFFF
 5737 2837 4889C6   		movq	%rax, %rsi
 5738 283a 4889DF   		movq	%rbx, %rdi
 5739 283d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5739      00
 5740              	.LEHE162:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5741              		.loc 7 34 0 is_stmt 1
 5742 2842 488D85D0 		leaq	-1584(%rbp), %rax
 5742      F9FFFF
 5743 2849 4889C7   		movq	%rax, %rdi
 5744              	.LEHB163:
 5745 284c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5745      00
 5746              	.LEHE163:
 5747              	.LBE99:
  32:../ExecuteTest.h **** 	{
 5748              		.loc 7 32 0
 5749 2851 E8000000 		call	__cxa_end_catch@PLT
 5749      00
 5750              	.LBE98:
 5751              		.loc 7 42 0
 5752 2856 EB7D     		jmp	.L293
 5753              	.L313:
  38:../ExecuteTest.h **** 	{
 5754              		.loc 7 38 0
 5755 2858 4889C7   		movq	%rax, %rdi
 5756 285b E8000000 		call	__cxa_begin_catch@PLT
 5756      00
 5757              	.LEHB164:
  40:../ExecuteTest.h **** 	}
 5758              		.loc 7 40 0
 5759 2860 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5759      00
 5760 2865 488B00   		movq	(%rax), %rax
 5761 2868 488B8D90 		movq	-1648(%rbp), %rcx
 5761      F9FFFF
 5762 286f 488D1500 		leaq	.LC33(%rip), %rdx
 5762      000000
 5763 2876 4889CE   		movq	%rcx, %rsi
 5764 2879 4889C7   		movq	%rax, %rdi
 5765 287c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5765      00
 5766              	.LEHE164:
 5767              	.LEHB165:
  38:../ExecuteTest.h **** 	{
 5768              		.loc 7 38 0
 5769 2881 E8000000 		call	__cxa_end_catch@PLT
 5769      00
 5770              		.loc 7 42 0
 5771 2886 EB4D     		jmp	.L293
 5772              	.L309:
 5773 2888 4889C3   		movq	%rax, %rbx
 5774              	.LBB101:
  27:../ExecuteTest.h **** 	{
 5775              		.loc 7 27 0
 5776 288b E8000000 		call	__cxa_end_catch@PLT
 5776      00
 5777 2890 4889D8   		movq	%rbx, %rax
 5778 2893 4889C7   		movq	%rax, %rdi
 5779 2896 E8000000 		call	_Unwind_Resume@PLT
 5779      00
 5780              	.LEHE165:
 5781              	.L311:
 5782 289b 4889C3   		movq	%rax, %rbx
 5783              	.LBE101:
 5784              	.LBB102:
 5785              	.LBB100:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5786              		.loc 7 34 0
 5787 289e 488D85D0 		leaq	-1584(%rbp), %rax
 5787      F9FFFF
 5788 28a5 4889C7   		movq	%rax, %rdi
 5789 28a8 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5789      00
 5790 28ad EB03     		jmp	.L304
 5791              	.L310:
 5792 28af 4889C3   		movq	%rax, %rbx
 5793              	.L304:
 5794              	.LBE100:
  32:../ExecuteTest.h **** 	{
 5795              		.loc 7 32 0
 5796 28b2 E8000000 		call	__cxa_end_catch@PLT
 5796      00
 5797 28b7 4889D8   		movq	%rbx, %rax
 5798 28ba 4889C7   		movq	%rax, %rdi
 5799              	.LEHB166:
 5800 28bd E8000000 		call	_Unwind_Resume@PLT
 5800      00
 5801              	.LEHE166:
 5802              	.L312:
 5803 28c2 4889C3   		movq	%rax, %rbx
 5804              	.LBE102:
  38:../ExecuteTest.h **** 	{
 5805              		.loc 7 38 0
 5806 28c5 E8000000 		call	__cxa_end_catch@PLT
 5806      00
 5807 28ca 4889D8   		movq	%rbx, %rax
 5808 28cd 4889C7   		movq	%rax, %rdi
 5809              	.LEHB167:
 5810 28d0 E8000000 		call	_Unwind_Resume@PLT
 5810      00
 5811              	.LEHE167:
 5812              	.L293:
 5813              		.loc 7 42 0
 5814 28d5 488B45D8 		movq	-40(%rbp), %rax
 5815 28d9 64483304 		xorq	%fs:40, %rax
 5815      25280000 
 5815      00
 5816 28e2 7405     		je	.L306
 5817 28e4 E8000000 		call	__stack_chk_fail@PLT
 5817      00
 5818              	.L306:
 5819 28e9 4881C458 		addq	$1624, %rsp
 5819      060000
 5820 28f0 5B       		popq	%rbx
 5821 28f1 415C     		popq	%r12
 5822 28f3 415D     		popq	%r13
 5823 28f5 5D       		popq	%rbp
 5824              		.cfi_def_cfa 7, 8
 5825 28f6 C3       		ret
 5826              		.cfi_endproc
 5827              	.LFE1489:
 5828              		.section	.gcc_except_table
 5829 042b 00       		.align 4
 5830              	.LLSDA1489:
 5831 042c FF       		.byte	0xff
 5832 042d 9B       		.byte	0x9b
 5833 042e 59       		.uleb128 .LLSDATT1489-.LLSDATTD1489
 5834              	.LLSDATTD1489:
 5835 042f 01       		.byte	0x1
 5836 0430 43       		.uleb128 .LLSDACSE1489-.LLSDACSB1489
 5837              	.LLSDACSB1489:
 5838 0431 2D       		.uleb128 .LEHB156-.LFB1489
 5839 0432 05       		.uleb128 .LEHE156-.LEHB156
 5840 0433 00       		.uleb128 0
 5841 0434 00       		.uleb128 0
 5842 0435 49       		.uleb128 .LEHB157-.LFB1489
 5843 0436 05       		.uleb128 .LEHE157-.LEHB157
 5844 0437 D301     		.uleb128 .L307-.LFB1489
 5845 0439 05       		.uleb128 0x5
 5846 043a 8E01     		.uleb128 .LEHB158-.LFB1489
 5847 043c 14       		.uleb128 .LEHE158-.LEHB158
 5848 043d B601     		.uleb128 .L308-.LFB1489
 5849 043f 07       		.uleb128 0x7
 5850 0440 AC01     		.uleb128 .LEHB159-.LFB1489
 5851 0442 05       		.uleb128 .LEHE159-.LEHB159
 5852 0443 D301     		.uleb128 .L307-.LFB1489
 5853 0445 05       		.uleb128 0x5
 5854 0446 F701     		.uleb128 .LEHB160-.LFB1489
 5855 0448 8801     		.uleb128 .LEHE160-.LEHB160
 5856 044a DA04     		.uleb128 .L309-.LFB1489
 5857 044c 00       		.uleb128 0
 5858 044d A203     		.uleb128 .LEHB161-.LFB1489
 5859 044f 05       		.uleb128 .LEHE161-.LEHB161
 5860 0450 8105     		.uleb128 .L310-.LFB1489
 5861 0452 00       		.uleb128 0
 5862 0453 B803     		.uleb128 .LEHB162-.LFB1489
 5863 0455 5C       		.uleb128 .LEHE162-.LEHB162
 5864 0456 ED04     		.uleb128 .L311-.LFB1489
 5865 0458 00       		.uleb128 0
 5866 0459 9E04     		.uleb128 .LEHB163-.LFB1489
 5867 045b 05       		.uleb128 .LEHE163-.LEHB163
 5868 045c 8105     		.uleb128 .L310-.LFB1489
 5869 045e 00       		.uleb128 0
 5870 045f B204     		.uleb128 .LEHB164-.LFB1489
 5871 0461 21       		.uleb128 .LEHE164-.LEHB164
 5872 0462 9405     		.uleb128 .L312-.LFB1489
 5873 0464 00       		.uleb128 0
 5874 0465 D304     		.uleb128 .LEHB165-.LFB1489
 5875 0467 1A       		.uleb128 .LEHE165-.LEHB165
 5876 0468 00       		.uleb128 0
 5877 0469 00       		.uleb128 0
 5878 046a 8F05     		.uleb128 .LEHB166-.LFB1489
 5879 046c 05       		.uleb128 .LEHE166-.LEHB166
 5880 046d 00       		.uleb128 0
 5881 046e 00       		.uleb128 0
 5882 046f A205     		.uleb128 .LEHB167-.LFB1489
 5883 0471 05       		.uleb128 .LEHE167-.LEHB167
 5884 0472 00       		.uleb128 0
 5885 0473 00       		.uleb128 0
 5886              	.LLSDACSE1489:
 5887 0474 03       		.byte	0x3
 5888 0475 00       		.byte	0
 5889 0476 02       		.byte	0x2
 5890 0477 7D       		.byte	0x7d
 5891 0478 01       		.byte	0x1
 5892 0479 7D       		.byte	0x7d
 5893 047a 00       		.byte	0
 5894 047b 7D       		.byte	0x7d
 5895              		.align 4
 5896 047c 00000000 		.long	0
 5897              	
 5898 0480 00000000 		.long	DW.ref._ZTISt9exception-.
 5899 0484 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 5900              	.LLSDATT1489:
 5901              		.text
 5903              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm,"axG",@progbits,_ZNSt6vec
 5904              		.align 2
 5905              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
 5907              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm:
 5908              	.LFB1490:
 672:/usr/include/c++/7/bits/stl_vector.h **** 
 673:/usr/include/c++/7/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 674:/usr/include/c++/7/bits/stl_vector.h ****       size_type
 675:/usr/include/c++/7/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 676:/usr/include/c++/7/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 677:/usr/include/c++/7/bits/stl_vector.h **** 
 678:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 679:/usr/include/c++/7/bits/stl_vector.h ****       /**
 680:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 681:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 682:/usr/include/c++/7/bits/stl_vector.h ****        *
 683:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 684:/usr/include/c++/7/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 685:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 686:/usr/include/c++/7/bits/stl_vector.h ****        *  default constructed elements are appended.
 687:/usr/include/c++/7/bits/stl_vector.h ****        */
 688:/usr/include/c++/7/bits/stl_vector.h ****       void
 689:/usr/include/c++/7/bits/stl_vector.h ****       resize(size_type __new_size)
 690:/usr/include/c++/7/bits/stl_vector.h ****       {
 691:/usr/include/c++/7/bits/stl_vector.h **** 	if (__new_size > size())
 692:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 693:/usr/include/c++/7/bits/stl_vector.h **** 	else if (__new_size < size())
 694:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 695:/usr/include/c++/7/bits/stl_vector.h ****       }
 696:/usr/include/c++/7/bits/stl_vector.h **** 
 697:/usr/include/c++/7/bits/stl_vector.h ****       /**
 698:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 699:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 700:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 701:/usr/include/c++/7/bits/stl_vector.h ****        *
 702:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 703:/usr/include/c++/7/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 704:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 705:/usr/include/c++/7/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 706:/usr/include/c++/7/bits/stl_vector.h ****        *  given data.
 707:/usr/include/c++/7/bits/stl_vector.h ****        */
 708:/usr/include/c++/7/bits/stl_vector.h ****       void
 709:/usr/include/c++/7/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 710:/usr/include/c++/7/bits/stl_vector.h ****       {
 711:/usr/include/c++/7/bits/stl_vector.h **** 	if (__new_size > size())
 712:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 713:/usr/include/c++/7/bits/stl_vector.h **** 	else if (__new_size < size())
 714:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 715:/usr/include/c++/7/bits/stl_vector.h ****       }
 716:/usr/include/c++/7/bits/stl_vector.h **** #else
 717:/usr/include/c++/7/bits/stl_vector.h ****       /**
 718:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 719:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 720:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 721:/usr/include/c++/7/bits/stl_vector.h ****        *
 722:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 723:/usr/include/c++/7/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 724:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 725:/usr/include/c++/7/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 726:/usr/include/c++/7/bits/stl_vector.h ****        *  given data.
 727:/usr/include/c++/7/bits/stl_vector.h ****        */
 728:/usr/include/c++/7/bits/stl_vector.h ****       void
 729:/usr/include/c++/7/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 730:/usr/include/c++/7/bits/stl_vector.h ****       {
 731:/usr/include/c++/7/bits/stl_vector.h **** 	if (__new_size > size())
 732:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 733:/usr/include/c++/7/bits/stl_vector.h **** 	else if (__new_size < size())
 734:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 735:/usr/include/c++/7/bits/stl_vector.h ****       }
 736:/usr/include/c++/7/bits/stl_vector.h **** #endif
 737:/usr/include/c++/7/bits/stl_vector.h **** 
 738:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 739:/usr/include/c++/7/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 740:/usr/include/c++/7/bits/stl_vector.h ****       void
 741:/usr/include/c++/7/bits/stl_vector.h ****       shrink_to_fit()
 742:/usr/include/c++/7/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 743:/usr/include/c++/7/bits/stl_vector.h **** #endif
 744:/usr/include/c++/7/bits/stl_vector.h **** 
 745:/usr/include/c++/7/bits/stl_vector.h ****       /**
 746:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 747:/usr/include/c++/7/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 748:/usr/include/c++/7/bits/stl_vector.h ****        */
 749:/usr/include/c++/7/bits/stl_vector.h ****       size_type
 750:/usr/include/c++/7/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 751:/usr/include/c++/7/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 752:/usr/include/c++/7/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 753:/usr/include/c++/7/bits/stl_vector.h **** 
 754:/usr/include/c++/7/bits/stl_vector.h ****       /**
 755:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 756:/usr/include/c++/7/bits/stl_vector.h ****        *  equal end().)
 757:/usr/include/c++/7/bits/stl_vector.h ****        */
 758:/usr/include/c++/7/bits/stl_vector.h ****       bool
 759:/usr/include/c++/7/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 760:/usr/include/c++/7/bits/stl_vector.h ****       { return begin() == end(); }
 761:/usr/include/c++/7/bits/stl_vector.h **** 
 762:/usr/include/c++/7/bits/stl_vector.h ****       /**
 763:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 764:/usr/include/c++/7/bits/stl_vector.h ****        *          elements.
 765:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 766:/usr/include/c++/7/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 767:/usr/include/c++/7/bits/stl_vector.h ****        *
 768:/usr/include/c++/7/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 769:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 770:/usr/include/c++/7/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 771:/usr/include/c++/7/bits/stl_vector.h ****        *  thrown.
 772:/usr/include/c++/7/bits/stl_vector.h ****        *
 773:/usr/include/c++/7/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 774:/usr/include/c++/7/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 775:/usr/include/c++/7/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 776:/usr/include/c++/7/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 777:/usr/include/c++/7/bits/stl_vector.h ****        *  and copying of %vector data.
 778:/usr/include/c++/7/bits/stl_vector.h ****        */
 779:/usr/include/c++/7/bits/stl_vector.h ****       void
 780:/usr/include/c++/7/bits/stl_vector.h ****       reserve(size_type __n);
 781:/usr/include/c++/7/bits/stl_vector.h **** 
 782:/usr/include/c++/7/bits/stl_vector.h ****       // element access
 783:/usr/include/c++/7/bits/stl_vector.h ****       /**
 784:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 785:/usr/include/c++/7/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 786:/usr/include/c++/7/bits/stl_vector.h ****        *  accessed.
 787:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 788:/usr/include/c++/7/bits/stl_vector.h ****        *
 789:/usr/include/c++/7/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 790:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 791:/usr/include/c++/7/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 792:/usr/include/c++/7/bits/stl_vector.h ****        *  see at().)
 793:/usr/include/c++/7/bits/stl_vector.h ****        */
 794:/usr/include/c++/7/bits/stl_vector.h ****       reference
 795:/usr/include/c++/7/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 796:/usr/include/c++/7/bits/stl_vector.h ****       {
 797:/usr/include/c++/7/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
 798:/usr/include/c++/7/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
 799:/usr/include/c++/7/bits/stl_vector.h ****       }
 800:/usr/include/c++/7/bits/stl_vector.h **** 
 801:/usr/include/c++/7/bits/stl_vector.h ****       /**
 802:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 803:/usr/include/c++/7/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 804:/usr/include/c++/7/bits/stl_vector.h ****        *  accessed.
 805:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 806:/usr/include/c++/7/bits/stl_vector.h ****        *
 807:/usr/include/c++/7/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 808:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 809:/usr/include/c++/7/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 810:/usr/include/c++/7/bits/stl_vector.h ****        *  see at().)
 811:/usr/include/c++/7/bits/stl_vector.h ****        */
 812:/usr/include/c++/7/bits/stl_vector.h ****       const_reference
 813:/usr/include/c++/7/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 814:/usr/include/c++/7/bits/stl_vector.h ****       {
 815:/usr/include/c++/7/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
 816:/usr/include/c++/7/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
 817:/usr/include/c++/7/bits/stl_vector.h ****       }
 818:/usr/include/c++/7/bits/stl_vector.h **** 
 819:/usr/include/c++/7/bits/stl_vector.h ****     protected:
 820:/usr/include/c++/7/bits/stl_vector.h ****       /// Safety check used only from at().
 821:/usr/include/c++/7/bits/stl_vector.h ****       void
 822:/usr/include/c++/7/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 823:/usr/include/c++/7/bits/stl_vector.h ****       {
 824:/usr/include/c++/7/bits/stl_vector.h **** 	if (__n >= this->size())
 825:/usr/include/c++/7/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 826:/usr/include/c++/7/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 827:/usr/include/c++/7/bits/stl_vector.h **** 				       "(which is %zu)"),
 828:/usr/include/c++/7/bits/stl_vector.h **** 				   __n, this->size());
 829:/usr/include/c++/7/bits/stl_vector.h ****       }
 830:/usr/include/c++/7/bits/stl_vector.h **** 
 831:/usr/include/c++/7/bits/stl_vector.h ****     public:
 832:/usr/include/c++/7/bits/stl_vector.h ****       /**
 833:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 834:/usr/include/c++/7/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 835:/usr/include/c++/7/bits/stl_vector.h ****        *  accessed.
 836:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 837:/usr/include/c++/7/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 838:/usr/include/c++/7/bits/stl_vector.h ****        *
 839:/usr/include/c++/7/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 840:/usr/include/c++/7/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 841:/usr/include/c++/7/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 842:/usr/include/c++/7/bits/stl_vector.h ****        */
 843:/usr/include/c++/7/bits/stl_vector.h ****       reference
 844:/usr/include/c++/7/bits/stl_vector.h ****       at(size_type __n)
 5909              		.loc 6 844 0
 5910              		.cfi_startproc
 5911 0000 55       		pushq	%rbp
 5912              		.cfi_def_cfa_offset 16
 5913              		.cfi_offset 6, -16
 5914 0001 4889E5   		movq	%rsp, %rbp
 5915              		.cfi_def_cfa_register 6
 5916 0004 4883EC10 		subq	$16, %rsp
 5917 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5918 000c 488975F0 		movq	%rsi, -16(%rbp)
 845:/usr/include/c++/7/bits/stl_vector.h ****       {
 846:/usr/include/c++/7/bits/stl_vector.h **** 	_M_range_check(__n);
 5919              		.loc 6 846 0
 5920 0010 488B55F0 		movq	-16(%rbp), %rdx
 5921 0014 488B45F8 		movq	-8(%rbp), %rax
 5922 0018 4889D6   		movq	%rdx, %rsi
 5923 001b 4889C7   		movq	%rax, %rdi
 5924 001e E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
 5924      00
 847:/usr/include/c++/7/bits/stl_vector.h **** 	return (*this)[__n];
 5925              		.loc 6 847 0
 5926 0023 488B55F0 		movq	-16(%rbp), %rdx
 5927 0027 488B45F8 		movq	-8(%rbp), %rax
 5928 002b 4889D6   		movq	%rdx, %rsi
 5929 002e 4889C7   		movq	%rax, %rdi
 5930 0031 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
 5930      00
 848:/usr/include/c++/7/bits/stl_vector.h ****       }
 5931              		.loc 6 848 0
 5932 0036 C9       		leave
 5933              		.cfi_def_cfa 7, 8
 5934 0037 C3       		ret
 5935              		.cfi_endproc
 5936              	.LFE1490:
 5938              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 5939              		.weak	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Tes
 5941              	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResult
 5942              	.LFB1491:
  19:../Checks.h   **** {
 5943              		.loc 8 19 0
 5944              		.cfi_startproc
 5945              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5946              		.cfi_lsda 0x1b,.LLSDA1491
 5947 0000 55       		pushq	%rbp
 5948              		.cfi_def_cfa_offset 16
 5949              		.cfi_offset 6, -16
 5950 0001 4889E5   		movq	%rsp, %rbp
 5951              		.cfi_def_cfa_register 6
 5952 0004 53       		pushq	%rbx
 5953 0005 4881ECC8 		subq	$456, %rsp
 5953      010000
 5954              		.cfi_offset 3, -24
 5955 000c 4889BD48 		movq	%rdi, -440(%rbp)
 5955      FEFFFF
 5956 0013 4889B540 		movq	%rsi, -448(%rbp)
 5956      FEFFFF
 5957 001a 48899538 		movq	%rdx, -456(%rbp)
 5957      FEFFFF
 5958 0021 48898D30 		movq	%rcx, -464(%rbp)
 5958      FEFFFF
  19:../Checks.h   **** {
 5959              		.loc 8 19 0
 5960 0028 64488B04 		movq	%fs:40, %rax
 5960      25280000 
 5960      00
 5961 0031 488945E8 		movq	%rax, -24(%rbp)
 5962 0035 31C0     		xorl	%eax, %eax
 5963              	.LBB103:
  21:../Checks.h   ****     {
 5964              		.loc 8 21 0
 5965 0037 488B8540 		movq	-448(%rbp), %rax
 5965      FEFFFF
 5966 003e 488B00   		movq	(%rax), %rax
 5967 0041 488B9538 		movq	-456(%rbp), %rdx
 5967      FEFFFF
 5968 0048 4889D6   		movq	%rdx, %rsi
 5969 004b 4889C7   		movq	%rax, %rdi
 5970              	.LEHB168:
 5971 004e E8000000 		call	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 5971      00
 5972 0053 83F001   		xorl	$1, %eax
 5973 0056 84C0     		testb	%al, %al
 5974 0058 0F84BA00 		je	.L321
 5974      0000
 5975              	.LBB104:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 5976              		.loc 8 23 0
 5977 005e 488D8550 		leaq	-432(%rbp), %rax
 5977      FEFFFF
 5978 0065 4889C7   		movq	%rax, %rdi
 5979 0068 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5979      00
 5980              	.LEHE168:
  24:../Checks.h   **** 
 5981              		.loc 8 24 0
 5982 006d 488D8550 		leaq	-432(%rbp), %rax
 5982      FEFFFF
 5983 0074 488D3500 		leaq	.LC34(%rip), %rsi
 5983      000000
 5984 007b 4889C7   		movq	%rax, %rdi
 5985              	.LEHB169:
 5986 007e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5986      00
 5987 0083 4889C2   		movq	%rax, %rdx
 5988 0086 488B8540 		movq	-448(%rbp), %rax
 5988      FEFFFF
 5989 008d 488B00   		movq	(%rax), %rax
 5990 0090 4889C6   		movq	%rax, %rsi
 5991 0093 4889D7   		movq	%rdx, %rdi
 5992 0096 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5992      00
  24:../Checks.h   **** 
 5993              		.loc 8 24 0 is_stmt 0 discriminator 1
 5994 009b 488D3500 		leaq	.LC35(%rip), %rsi
 5994      000000
 5995 00a2 4889C7   		movq	%rax, %rdi
 5996 00a5 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5996      00
  24:../Checks.h   **** 
 5997              		.loc 8 24 0 discriminator 2
 5998 00aa 4889C2   		movq	%rax, %rdx
 5999 00ad 488B8538 		movq	-456(%rbp), %rax
 5999      FEFFFF
 6000 00b4 4889C6   		movq	%rax, %rsi
 6001 00b7 4889D7   		movq	%rdx, %rdi
 6002 00ba E8000000 		call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5
 6002      00
  26:../Checks.h   ****     }
 6003              		.loc 8 26 0 is_stmt 1
 6004 00bf 488D8550 		leaq	-432(%rbp), %rax
 6004      FEFFFF
 6005 00c6 4889C7   		movq	%rax, %rdi
 6006 00c9 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6006      00
 6007 00ce 4889C2   		movq	%rax, %rdx
 6008 00d1 488B8D30 		movq	-464(%rbp), %rcx
 6008      FEFFFF
 6009 00d8 488B8548 		movq	-440(%rbp), %rax
 6009      FEFFFF
 6010 00df 4889CE   		movq	%rcx, %rsi
 6011 00e2 4889C7   		movq	%rax, %rdi
 6012 00e5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6012      00
 6013              	.LEHE169:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 6014              		.loc 8 23 0
 6015 00ea 488D8550 		leaq	-432(%rbp), %rax
 6015      FEFFFF
 6016 00f1 4889C7   		movq	%rax, %rdi
 6017              	.LEHB170:
 6018 00f4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6018      00
 6019              	.LEHE170:
 6020              	.LBE104:
 6021              	.LBE103:
 6022              		.loc 8 28 0
 6023 00f9 EB1D     		jmp	.L321
 6024              	.L320:
 6025 00fb 4889C3   		movq	%rax, %rbx
 6026              	.LBB106:
 6027              	.LBB105:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 6028              		.loc 8 23 0
 6029 00fe 488D8550 		leaq	-432(%rbp), %rax
 6029      FEFFFF
 6030 0105 4889C7   		movq	%rax, %rdi
 6031 0108 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6031      00
 6032 010d 4889D8   		movq	%rbx, %rax
 6033 0110 4889C7   		movq	%rax, %rdi
 6034              	.LEHB171:
 6035 0113 E8000000 		call	_Unwind_Resume@PLT
 6035      00
 6036              	.LEHE171:
 6037              	.L321:
 6038              	.LBE105:
 6039              	.LBE106:
 6040              		.loc 8 28 0
 6041 0118 90       		nop
 6042 0119 488B45E8 		movq	-24(%rbp), %rax
 6043 011d 64483304 		xorq	%fs:40, %rax
 6043      25280000 
 6043      00
 6044 0126 7405     		je	.L319
 6045 0128 E8000000 		call	__stack_chk_fail@PLT
 6045      00
 6046              	.L319:
 6047 012d 4881C4C8 		addq	$456, %rsp
 6047      010000
 6048 0134 5B       		popq	%rbx
 6049 0135 5D       		popq	%rbp
 6050              		.cfi_def_cfa 7, 8
 6051 0136 C3       		ret
 6052              		.cfi_endproc
 6053              	.LFE1491:
 6054              		.section	.gcc_except_table
 6055              	.LLSDA1491:
 6056 0488 FF       		.byte	0xff
 6057 0489 FF       		.byte	0xff
 6058 048a 01       		.byte	0x1
 6059 048b 13       		.uleb128 .LLSDACSE1491-.LLSDACSB1491
 6060              	.LLSDACSB1491:
 6061 048c 4E       		.uleb128 .LEHB168-.LFB1491
 6062 048d 1F       		.uleb128 .LEHE168-.LEHB168
 6063 048e 00       		.uleb128 0
 6064 048f 00       		.uleb128 0
 6065 0490 7E       		.uleb128 .LEHB169-.LFB1491
 6066 0491 6C       		.uleb128 .LEHE169-.LEHB169
 6067 0492 FB01     		.uleb128 .L320-.LFB1491
 6068 0494 00       		.uleb128 0
 6069 0495 F401     		.uleb128 .LEHB170-.LFB1491
 6070 0497 05       		.uleb128 .LEHE170-.LEHB170
 6071 0498 00       		.uleb128 0
 6072 0499 00       		.uleb128 0
 6073 049a 9302     		.uleb128 .LEHB171-.LFB1491
 6074 049c 05       		.uleb128 .LEHE171-.LEHB171
 6075 049d 00       		.uleb128 0
 6076 049e 00       		.uleb128 0
 6077              	.LLSDACSE1491:
 6078              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 6080              		.text
 6082              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTi
 6083              	.LFB1492:
  16:../ExecuteTest.h **** {
 6084              		.loc 7 16 0
 6085              		.cfi_startproc
 6086              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6087              		.cfi_lsda 0x1b,.LLSDA1492
 6088 28f7 55       		pushq	%rbp
 6089              		.cfi_def_cfa_offset 16
 6090              		.cfi_offset 6, -16
 6091 28f8 4889E5   		movq	%rsp, %rbp
 6092              		.cfi_def_cfa_register 6
 6093 28fb 4155     		pushq	%r13
 6094 28fd 4154     		pushq	%r12
 6095 28ff 53       		pushq	%rbx
 6096 2900 4881EC58 		subq	$1624, %rsp
 6096      060000
 6097              		.cfi_offset 13, -24
 6098              		.cfi_offset 12, -32
 6099              		.cfi_offset 3, -40
 6100 2907 4889BD98 		movq	%rdi, -1640(%rbp)
 6100      F9FFFF
 6101 290e 4889B590 		movq	%rsi, -1648(%rbp)
 6101      F9FFFF
  16:../ExecuteTest.h **** {
 6102              		.loc 7 16 0
 6103 2915 64488B04 		movq	%fs:40, %rax
 6103      25280000 
 6103      00
 6104 291e 488945D8 		movq	%rax, -40(%rbp)
 6105 2922 31C0     		xorl	%eax, %eax
 6106              	.LEHB172:
  18:../ExecuteTest.h **** 
 6107              		.loc 7 18 0
 6108 2924 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 6108      00
 6109              	.LEHE172:
 6110 2929 4889C2   		movq	%rax, %rdx
 6111 292c 488B8590 		movq	-1648(%rbp), %rax
 6111      F9FFFF
 6112 2933 488902   		movq	%rax, (%rdx)
 6113              	.LBB107:
  23:../ExecuteTest.h **** #endif
 6114              		.loc 7 23 0
 6115 2936 488D8570 		leaq	-1168(%rbp), %rax
 6115      FBFFFF
 6116 293d 4889C7   		movq	%rax, %rdi
 6117              	.LEHB173:
 6118 2940 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 6118      00
 6119              	.LEHE173:
  23:../ExecuteTest.h **** #endif
 6120              		.loc 7 23 0 is_stmt 0 discriminator 1
 6121 2945 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6121      000000
 6122 294c BE010000 		movl	$1, %esi
 6122      00
 6123 2951 4889C7   		movq	%rax, %rdi
 6124 2954 E8000000 		call	__sigsetjmp@PLT
 6124      00
 6125 2959 85C0     		testl	%eax, %eax
 6126 295b 0F95C0   		setne	%al
 6127 295e 84C0     		testb	%al, %al
 6128 2960 7428     		je	.L324
  23:../ExecuteTest.h **** #endif
 6129              		.loc 7 23 0 discriminator 4
 6130 2962 BF080000 		movl	$8, %edi
 6130      00
 6131 2967 E8000000 		call	__cxa_allocate_exception@PLT
 6131      00
 6132 296c 488D1500 		leaq	.LC32(%rip), %rdx
 6132      000000
 6133 2973 488910   		movq	%rdx, (%rax)
 6134 2976 BA000000 		movl	$0, %edx
 6134      00
 6135 297b 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 6135      000000
 6136 2982 4889C7   		movq	%rax, %rdi
 6137              	.LEHB174:
 6138 2985 E8000000 		call	__cxa_throw@PLT
 6138      00
 6139              	.L324:
  25:../ExecuteTest.h **** 	}
 6140              		.loc 7 25 0 is_stmt 1
 6141 298a 488B8598 		movq	-1640(%rbp), %rax
 6141      F9FFFF
 6142 2991 4889C7   		movq	%rax, %rdi
 6143 2994 E8E9E6FF 		call	_ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7Ru
 6143      FF
 6144              	.LEHE174:
  23:../ExecuteTest.h **** #endif
 6145              		.loc 7 23 0
 6146 2999 488D8570 		leaq	-1168(%rbp), %rax
 6146      FBFFFF
 6147 29a0 4889C7   		movq	%rax, %rdi
 6148              	.LEHB175:
 6149 29a3 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6149      00
 6150              	.LEHE175:
 6151              	.LBE107:
 6152              		.loc 7 42 0
 6153 29a8 E9F10100 		jmp	.L322
 6153      00
 6154              	.L337:
 6155 29ad 4989C4   		movq	%rax, %r12
 6156 29b0 4889D3   		movq	%rdx, %rbx
 6157              	.LBB108:
  23:../ExecuteTest.h **** #endif
 6158              		.loc 7 23 0
 6159 29b3 488D8570 		leaq	-1168(%rbp), %rax
 6159      FBFFFF
 6160 29ba 4889C7   		movq	%rax, %rdi
 6161 29bd E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6161      00
 6162 29c2 4C89E0   		movq	%r12, %rax
 6163 29c5 4889DA   		movq	%rbx, %rdx
 6164 29c8 EB00     		jmp	.L326
 6165              	.L336:
 6166              	.L326:
 6167 29ca 4883FA01 		cmpq	$1, %rdx
 6168 29ce 740F     		je	.L328
 6169 29d0 4883FA02 		cmpq	$2, %rdx
 6170 29d4 0F84A600 		je	.L329
 6170      0000
 6171 29da E9420100 		jmp	.L342
 6171      00
 6172              	.L328:
 6173              	.LBE108:
 6174              	.LBB109:
  27:../ExecuteTest.h **** 	{
 6175              		.loc 7 27 0
 6176 29df 4889C7   		movq	%rax, %rdi
 6177 29e2 E8000000 		call	__cxa_begin_catch@PLT
 6177      00
 6178 29e7 488985A8 		movq	%rax, -1624(%rbp)
 6178      F9FFFF
 6179              	.LEHB176:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6180              		.loc 7 29 0
 6181 29ee E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6181      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6182              		.loc 7 29 0 is_stmt 0 discriminator 1
 6183 29f3 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 6184              		.loc 7 30 0 is_stmt 1 discriminator 1
 6185 29f6 488B85A8 		movq	-1624(%rbp), %rax
 6185      F9FFFF
 6186 29fd 488B00   		movq	(%rax), %rax
 6187 2a00 4883C010 		addq	$16, %rax
 6188 2a04 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6189              		.loc 7 29 0 discriminator 1
 6190 2a07 488B95A8 		movq	-1624(%rbp), %rdx
 6190      F9FFFF
 6191 2a0e 4889D7   		movq	%rdx, %rdi
 6192 2a11 FFD0     		call	*%rax
 6193              	.LVL16:
 6194 2a13 4989C4   		movq	%rax, %r12
 6195 2a16 488B85A8 		movq	-1624(%rbp), %rax
 6195      F9FFFF
 6196 2a1d 4889C7   		movq	%rax, %rdi
 6197 2a20 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 6197      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6198              		.loc 7 29 0 is_stmt 0 discriminator 2
 6199 2a25 4189C5   		movl	%eax, %r13d
 6200 2a28 488B85A8 		movq	-1624(%rbp), %rax
 6200      F9FFFF
 6201 2a2f 4889C7   		movq	%rax, %rdi
 6202 2a32 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 6202      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6203              		.loc 7 29 0 discriminator 3
 6204 2a37 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 6205              		.loc 7 30 0 is_stmt 1 discriminator 3
 6206 2a3a 488B8590 		movq	-1648(%rbp), %rax
 6206      F9FFFF
 6207 2a41 488B10   		movq	(%rax), %rdx
 6208 2a44 488B8590 		movq	-1648(%rbp), %rax
 6208      F9FFFF
 6209 2a4b 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6210              		.loc 7 29 0 discriminator 3
 6211 2a4f 488D85B0 		leaq	-1616(%rbp), %rax
 6211      F9FFFF
 6212 2a56 4589E8   		movl	%r13d, %r8d
 6213 2a59 4889C7   		movq	%rax, %rdi
 6214 2a5c E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 6214      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6215              		.loc 7 29 0 is_stmt 0 discriminator 5
 6216 2a61 488D85B0 		leaq	-1616(%rbp), %rax
 6216      F9FFFF
 6217 2a68 4C89E2   		movq	%r12, %rdx
 6218 2a6b 4889C6   		movq	%rax, %rsi
 6219 2a6e 4889DF   		movq	%rbx, %rdi
 6220 2a71 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6220      00
 6221              	.LEHE176:
  27:../ExecuteTest.h **** 	{
 6222              		.loc 7 27 0 is_stmt 1 discriminator 7
 6223 2a76 E8000000 		call	__cxa_end_catch@PLT
 6223      00
 6224              	.LBE109:
 6225              		.loc 7 42 0 discriminator 7
 6226 2a7b E91E0100 		jmp	.L322
 6226      00
 6227              	.L329:
 6228              	.LBB110:
  32:../ExecuteTest.h **** 	{
 6229              		.loc 7 32 0
 6230 2a80 4889C7   		movq	%rax, %rdi
 6231 2a83 E8000000 		call	__cxa_begin_catch@PLT
 6231      00
 6232 2a88 488985A0 		movq	%rax, -1632(%rbp)
 6232      F9FFFF
 6233              	.LBB111:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6234              		.loc 7 34 0
 6235 2a8f 488D85D0 		leaq	-1584(%rbp), %rax
 6235      F9FFFF
 6236 2a96 4889C7   		movq	%rax, %rdi
 6237              	.LEHB177:
 6238 2a99 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6238      00
 6239              	.LEHE177:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6240              		.loc 7 35 0
 6241 2a9e 488D85D0 		leaq	-1584(%rbp), %rax
 6241      F9FFFF
 6242 2aa5 488D3500 		leaq	.LC6(%rip), %rsi
 6242      000000
 6243 2aac 4889C7   		movq	%rax, %rdi
 6244              	.LEHB178:
 6245 2aaf E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6245      00
 6246 2ab4 4889C3   		movq	%rax, %rbx
 6247 2ab7 488B85A0 		movq	-1632(%rbp), %rax
 6247      F9FFFF
 6248 2abe 488B00   		movq	(%rax), %rax
 6249 2ac1 4883C010 		addq	$16, %rax
 6250 2ac5 488B00   		movq	(%rax), %rax
 6251 2ac8 488B95A0 		movq	-1632(%rbp), %rdx
 6251      F9FFFF
 6252 2acf 4889D7   		movq	%rdx, %rdi
 6253 2ad2 FFD0     		call	*%rax
 6254              	.LVL17:
 6255 2ad4 4889C6   		movq	%rax, %rsi
 6256 2ad7 4889DF   		movq	%rbx, %rdi
 6257 2ada E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6257      00
  36:../ExecuteTest.h **** 	}
 6258              		.loc 7 36 0
 6259 2adf E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6259      00
 6260 2ae4 488B18   		movq	(%rax), %rbx
 6261 2ae7 488D85D0 		leaq	-1584(%rbp), %rax
 6261      F9FFFF
 6262 2aee 4889C7   		movq	%rax, %rdi
 6263 2af1 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6263      00
  36:../ExecuteTest.h **** 	}
 6264              		.loc 7 36 0 is_stmt 0 discriminator 1
 6265 2af6 4889C2   		movq	%rax, %rdx
 6266 2af9 488B8590 		movq	-1648(%rbp), %rax
 6266      F9FFFF
 6267 2b00 4889C6   		movq	%rax, %rsi
 6268 2b03 4889DF   		movq	%rbx, %rdi
 6269 2b06 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6269      00
 6270              	.LEHE178:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6271              		.loc 7 34 0 is_stmt 1
 6272 2b0b 488D85D0 		leaq	-1584(%rbp), %rax
 6272      F9FFFF
 6273 2b12 4889C7   		movq	%rax, %rdi
 6274              	.LEHB179:
 6275 2b15 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6275      00
 6276              	.LEHE179:
 6277              	.LBE111:
  32:../ExecuteTest.h **** 	{
 6278              		.loc 7 32 0
 6279 2b1a E8000000 		call	__cxa_end_catch@PLT
 6279      00
 6280              	.LBE110:
 6281              		.loc 7 42 0
 6282 2b1f EB7D     		jmp	.L322
 6283              	.L342:
  38:../ExecuteTest.h **** 	{
 6284              		.loc 7 38 0
 6285 2b21 4889C7   		movq	%rax, %rdi
 6286 2b24 E8000000 		call	__cxa_begin_catch@PLT
 6286      00
 6287              	.LEHB180:
  40:../ExecuteTest.h **** 	}
 6288              		.loc 7 40 0
 6289 2b29 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6289      00
 6290 2b2e 488B00   		movq	(%rax), %rax
 6291 2b31 488B8D90 		movq	-1648(%rbp), %rcx
 6291      F9FFFF
 6292 2b38 488D1500 		leaq	.LC33(%rip), %rdx
 6292      000000
 6293 2b3f 4889CE   		movq	%rcx, %rsi
 6294 2b42 4889C7   		movq	%rax, %rdi
 6295 2b45 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6295      00
 6296              	.LEHE180:
 6297              	.LEHB181:
  38:../ExecuteTest.h **** 	{
 6298              		.loc 7 38 0
 6299 2b4a E8000000 		call	__cxa_end_catch@PLT
 6299      00
 6300              		.loc 7 42 0
 6301 2b4f EB4D     		jmp	.L322
 6302              	.L338:
 6303 2b51 4889C3   		movq	%rax, %rbx
 6304              	.LBB113:
  27:../ExecuteTest.h **** 	{
 6305              		.loc 7 27 0
 6306 2b54 E8000000 		call	__cxa_end_catch@PLT
 6306      00
 6307 2b59 4889D8   		movq	%rbx, %rax
 6308 2b5c 4889C7   		movq	%rax, %rdi
 6309 2b5f E8000000 		call	_Unwind_Resume@PLT
 6309      00
 6310              	.LEHE181:
 6311              	.L340:
 6312 2b64 4889C3   		movq	%rax, %rbx
 6313              	.LBE113:
 6314              	.LBB114:
 6315              	.LBB112:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6316              		.loc 7 34 0
 6317 2b67 488D85D0 		leaq	-1584(%rbp), %rax
 6317      F9FFFF
 6318 2b6e 4889C7   		movq	%rax, %rdi
 6319 2b71 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6319      00
 6320 2b76 EB03     		jmp	.L333
 6321              	.L339:
 6322 2b78 4889C3   		movq	%rax, %rbx
 6323              	.L333:
 6324              	.LBE112:
  32:../ExecuteTest.h **** 	{
 6325              		.loc 7 32 0
 6326 2b7b E8000000 		call	__cxa_end_catch@PLT
 6326      00
 6327 2b80 4889D8   		movq	%rbx, %rax
 6328 2b83 4889C7   		movq	%rax, %rdi
 6329              	.LEHB182:
 6330 2b86 E8000000 		call	_Unwind_Resume@PLT
 6330      00
 6331              	.LEHE182:
 6332              	.L341:
 6333 2b8b 4889C3   		movq	%rax, %rbx
 6334              	.LBE114:
  38:../ExecuteTest.h **** 	{
 6335              		.loc 7 38 0
 6336 2b8e E8000000 		call	__cxa_end_catch@PLT
 6336      00
 6337 2b93 4889D8   		movq	%rbx, %rax
 6338 2b96 4889C7   		movq	%rax, %rdi
 6339              	.LEHB183:
 6340 2b99 E8000000 		call	_Unwind_Resume@PLT
 6340      00
 6341              	.LEHE183:
 6342              	.L322:
 6343              		.loc 7 42 0
 6344 2b9e 488B45D8 		movq	-40(%rbp), %rax
 6345 2ba2 64483304 		xorq	%fs:40, %rax
 6345      25280000 
 6345      00
 6346 2bab 7405     		je	.L335
 6347 2bad E8000000 		call	__stack_chk_fail@PLT
 6347      00
 6348              	.L335:
 6349 2bb2 4881C458 		addq	$1624, %rsp
 6349      060000
 6350 2bb9 5B       		popq	%rbx
 6351 2bba 415C     		popq	%r12
 6352 2bbc 415D     		popq	%r13
 6353 2bbe 5D       		popq	%rbp
 6354              		.cfi_def_cfa 7, 8
 6355 2bbf C3       		ret
 6356              		.cfi_endproc
 6357              	.LFE1492:
 6358              		.section	.gcc_except_table
 6359 049f 00       		.align 4
 6360              	.LLSDA1492:
 6361 04a0 FF       		.byte	0xff
 6362 04a1 9B       		.byte	0x9b
 6363 04a2 59       		.uleb128 .LLSDATT1492-.LLSDATTD1492
 6364              	.LLSDATTD1492:
 6365 04a3 01       		.byte	0x1
 6366 04a4 43       		.uleb128 .LLSDACSE1492-.LLSDACSB1492
 6367              	.LLSDACSB1492:
 6368 04a5 2D       		.uleb128 .LEHB172-.LFB1492
 6369 04a6 05       		.uleb128 .LEHE172-.LEHB172
 6370 04a7 00       		.uleb128 0
 6371 04a8 00       		.uleb128 0
 6372 04a9 49       		.uleb128 .LEHB173-.LFB1492
 6373 04aa 05       		.uleb128 .LEHE173-.LEHB173
 6374 04ab D301     		.uleb128 .L336-.LFB1492
 6375 04ad 05       		.uleb128 0x5
 6376 04ae 8E01     		.uleb128 .LEHB174-.LFB1492
 6377 04b0 14       		.uleb128 .LEHE174-.LEHB174
 6378 04b1 B601     		.uleb128 .L337-.LFB1492
 6379 04b3 07       		.uleb128 0x7
 6380 04b4 AC01     		.uleb128 .LEHB175-.LFB1492
 6381 04b6 05       		.uleb128 .LEHE175-.LEHB175
 6382 04b7 D301     		.uleb128 .L336-.LFB1492
 6383 04b9 05       		.uleb128 0x5
 6384 04ba F701     		.uleb128 .LEHB176-.LFB1492
 6385 04bc 8801     		.uleb128 .LEHE176-.LEHB176
 6386 04be DA04     		.uleb128 .L338-.LFB1492
 6387 04c0 00       		.uleb128 0
 6388 04c1 A203     		.uleb128 .LEHB177-.LFB1492
 6389 04c3 05       		.uleb128 .LEHE177-.LEHB177
 6390 04c4 8105     		.uleb128 .L339-.LFB1492
 6391 04c6 00       		.uleb128 0
 6392 04c7 B803     		.uleb128 .LEHB178-.LFB1492
 6393 04c9 5C       		.uleb128 .LEHE178-.LEHB178
 6394 04ca ED04     		.uleb128 .L340-.LFB1492
 6395 04cc 00       		.uleb128 0
 6396 04cd 9E04     		.uleb128 .LEHB179-.LFB1492
 6397 04cf 05       		.uleb128 .LEHE179-.LEHB179
 6398 04d0 8105     		.uleb128 .L339-.LFB1492
 6399 04d2 00       		.uleb128 0
 6400 04d3 B204     		.uleb128 .LEHB180-.LFB1492
 6401 04d5 21       		.uleb128 .LEHE180-.LEHB180
 6402 04d6 9405     		.uleb128 .L341-.LFB1492
 6403 04d8 00       		.uleb128 0
 6404 04d9 D304     		.uleb128 .LEHB181-.LFB1492
 6405 04db 1A       		.uleb128 .LEHE181-.LEHB181
 6406 04dc 00       		.uleb128 0
 6407 04dd 00       		.uleb128 0
 6408 04de 8F05     		.uleb128 .LEHB182-.LFB1492
 6409 04e0 05       		.uleb128 .LEHE182-.LEHB182
 6410 04e1 00       		.uleb128 0
 6411 04e2 00       		.uleb128 0
 6412 04e3 A205     		.uleb128 .LEHB183-.LFB1492
 6413 04e5 05       		.uleb128 .LEHE183-.LEHB183
 6414 04e6 00       		.uleb128 0
 6415 04e7 00       		.uleb128 0
 6416              	.LLSDACSE1492:
 6417 04e8 03       		.byte	0x3
 6418 04e9 00       		.byte	0
 6419 04ea 02       		.byte	0x2
 6420 04eb 7D       		.byte	0x7d
 6421 04ec 01       		.byte	0x1
 6422 04ed 7D       		.byte	0x7d
 6423 04ee 00       		.byte	0
 6424 04ef 7D       		.byte	0x7d
 6425              		.align 4
 6426 04f0 00000000 		.long	0
 6427              	
 6428 04f4 00000000 		.long	DW.ref._ZTISt9exception-.
 6429 04f8 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6430              	.LLSDATT1492:
 6431              		.text
 6433              		.section	.rodata
 6434              	.LC36:
 6435 056f 202B2F2D 		.string	" +/- "
 6435      2000
 6436              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 6437              		.weak	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 6439              	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:
 6440              	.LFB1493:
  29:../Checks.h   **** 
  30:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char const* actual, TestDetails const& 
  31:../Checks.h   **** 
  32:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char* actual, TestDetails const& details);
  33:../Checks.h   **** 
  34:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char const* actual, TestDetails const& detail
  35:../Checks.h   **** 
  36:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char* actual, TestDetails const& detail
  37:../Checks.h   **** 
  38:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  39:../Checks.h   **** bool AreClose(Expected const& expected, Actual const& actual, Tolerance const& tolerance)
  40:../Checks.h   **** {
  41:../Checks.h   ****     return (actual >= (expected - tolerance)) && (actual <= (expected + tolerance));
  42:../Checks.h   **** }
  43:../Checks.h   **** 
  44:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  45:../Checks.h   **** void CheckClose(TestResults& results, Expected const& expected, Actual const& actual, Tolerance con
 6441              		.loc 8 45 0
 6442              		.cfi_startproc
 6443              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6444              		.cfi_lsda 0x1b,.LLSDA1493
 6445 0000 55       		pushq	%rbp
 6446              		.cfi_def_cfa_offset 16
 6447              		.cfi_offset 6, -16
 6448 0001 4889E5   		movq	%rsp, %rbp
 6449              		.cfi_def_cfa_register 6
 6450 0004 53       		pushq	%rbx
 6451 0005 4881ECD8 		subq	$472, %rsp
 6451      010000
 6452              		.cfi_offset 3, -24
 6453 000c 4889BD48 		movq	%rdi, -440(%rbp)
 6453      FEFFFF
 6454 0013 4889B540 		movq	%rsi, -448(%rbp)
 6454      FEFFFF
 6455 001a 48899538 		movq	%rdx, -456(%rbp)
 6455      FEFFFF
 6456 0021 48898D30 		movq	%rcx, -464(%rbp)
 6456      FEFFFF
 6457 0028 4C898528 		movq	%r8, -472(%rbp)
 6457      FEFFFF
 6458              		.loc 8 45 0
 6459 002f 64488B04 		movq	%fs:40, %rax
 6459      25280000 
 6459      00
 6460 0038 488945E8 		movq	%rax, -24(%rbp)
 6461 003c 31C0     		xorl	%eax, %eax
 6462              	.LBB115:
  46:../Checks.h   ****                 TestDetails const& details)
  47:../Checks.h   **** {
  48:../Checks.h   ****     if (!AreClose(expected, actual, tolerance))
 6463              		.loc 8 48 0
 6464 003e 488B9530 		movq	-464(%rbp), %rdx
 6464      FEFFFF
 6465 0045 488B8D38 		movq	-456(%rbp), %rcx
 6465      FEFFFF
 6466 004c 488B8540 		movq	-448(%rbp), %rax
 6466      FEFFFF
 6467 0053 4889CE   		movq	%rcx, %rsi
 6468 0056 4889C7   		movq	%rax, %rdi
 6469 0059 E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6469      00
 6470 005e 83F001   		xorl	$1, %eax
 6471 0061 84C0     		testb	%al, %al
 6472 0063 0F840201 		je	.L348
 6472      0000
 6473              	.LBB116:
  49:../Checks.h   ****     { 
  50:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 6474              		.loc 8 50 0
 6475 0069 488D8550 		leaq	-432(%rbp), %rax
 6475      FEFFFF
 6476 0070 4889C7   		movq	%rax, %rdi
 6477              	.LEHB184:
 6478 0073 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6478      00
 6479              	.LEHE184:
  51:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 6480              		.loc 8 51 0
 6481 0078 488D8550 		leaq	-432(%rbp), %rax
 6481      FEFFFF
 6482 007f 488D3500 		leaq	.LC34(%rip), %rsi
 6482      000000
 6483 0086 4889C7   		movq	%rax, %rdi
 6484              	.LEHB185:
 6485 0089 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6485      00
 6486 008e 4889C2   		movq	%rax, %rdx
 6487 0091 488B8540 		movq	-448(%rbp), %rax
 6487      FEFFFF
 6488 0098 8B00     		movl	(%rax), %eax
 6489 009a 898524FE 		movl	%eax, -476(%rbp)
 6489      FFFF
 6490 00a0 F30F1085 		movss	-476(%rbp), %xmm0
 6490      24FEFFFF 
 6491 00a8 4889D7   		movq	%rdx, %rdi
 6492 00ab E8000000 		call	_ZNSolsEf@PLT
 6492      00
 6493              		.loc 8 51 0 is_stmt 0 discriminator 1
 6494 00b0 488D3500 		leaq	.LC36(%rip), %rsi
 6494      000000
 6495 00b7 4889C7   		movq	%rax, %rdi
 6496 00ba E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6496      00
 6497              		.loc 8 51 0 discriminator 2
 6498 00bf 4889C2   		movq	%rax, %rdx
 6499 00c2 488B8530 		movq	-464(%rbp), %rax
 6499      FEFFFF
 6500 00c9 8B00     		movl	(%rax), %eax
 6501 00cb 898524FE 		movl	%eax, -476(%rbp)
 6501      FFFF
 6502 00d1 F30F1085 		movss	-476(%rbp), %xmm0
 6502      24FEFFFF 
 6503 00d9 4889D7   		movq	%rdx, %rdi
 6504 00dc E8000000 		call	_ZNSolsEf@PLT
 6504      00
 6505              		.loc 8 51 0 discriminator 3
 6506 00e1 488D3500 		leaq	.LC35(%rip), %rsi
 6506      000000
 6507 00e8 4889C7   		movq	%rax, %rdi
 6508 00eb E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6508      00
 6509              		.loc 8 51 0 discriminator 4
 6510 00f0 4889C2   		movq	%rax, %rdx
 6511 00f3 488B8538 		movq	-456(%rbp), %rax
 6511      FEFFFF
 6512 00fa 8B00     		movl	(%rax), %eax
 6513 00fc 898524FE 		movl	%eax, -476(%rbp)
 6513      FFFF
 6514 0102 F30F1085 		movss	-476(%rbp), %xmm0
 6514      24FEFFFF 
 6515 010a 4889D7   		movq	%rdx, %rdi
 6516 010d E8000000 		call	_ZNSolsEf@PLT
 6516      00
  52:../Checks.h   **** 
  53:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 6517              		.loc 8 53 0 is_stmt 1
 6518 0112 488D8550 		leaq	-432(%rbp), %rax
 6518      FEFFFF
 6519 0119 4889C7   		movq	%rax, %rdi
 6520 011c E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6520      00
 6521 0121 4889C2   		movq	%rax, %rdx
 6522 0124 488B8D28 		movq	-472(%rbp), %rcx
 6522      FEFFFF
 6523 012b 488B8548 		movq	-440(%rbp), %rax
 6523      FEFFFF
 6524 0132 4889CE   		movq	%rcx, %rsi
 6525 0135 4889C7   		movq	%rax, %rdi
 6526 0138 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6526      00
 6527              	.LEHE185:
  50:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 6528              		.loc 8 50 0
 6529 013d 488D8550 		leaq	-432(%rbp), %rax
 6529      FEFFFF
 6530 0144 4889C7   		movq	%rax, %rdi
 6531              	.LEHB186:
 6532 0147 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6532      00
 6533              	.LEHE186:
 6534              	.LBE116:
 6535              	.LBE115:
  54:../Checks.h   ****     }
  55:../Checks.h   **** }
 6536              		.loc 8 55 0
 6537 014c EB1D     		jmp	.L348
 6538              	.L347:
 6539 014e 4889C3   		movq	%rax, %rbx
 6540              	.LBB118:
 6541              	.LBB117:
  50:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 6542              		.loc 8 50 0
 6543 0151 488D8550 		leaq	-432(%rbp), %rax
 6543      FEFFFF
 6544 0158 4889C7   		movq	%rax, %rdi
 6545 015b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6545      00
 6546 0160 4889D8   		movq	%rbx, %rax
 6547 0163 4889C7   		movq	%rax, %rdi
 6548              	.LEHB187:
 6549 0166 E8000000 		call	_Unwind_Resume@PLT
 6549      00
 6550              	.LEHE187:
 6551              	.L348:
 6552              	.LBE117:
 6553              	.LBE118:
 6554              		.loc 8 55 0
 6555 016b 90       		nop
 6556 016c 488B45E8 		movq	-24(%rbp), %rax
 6557 0170 64483304 		xorq	%fs:40, %rax
 6557      25280000 
 6557      00
 6558 0179 7405     		je	.L346
 6559 017b E8000000 		call	__stack_chk_fail@PLT
 6559      00
 6560              	.L346:
 6561 0180 4881C4D8 		addq	$472, %rsp
 6561      010000
 6562 0187 5B       		popq	%rbx
 6563 0188 5D       		popq	%rbp
 6564              		.cfi_def_cfa 7, 8
 6565 0189 C3       		ret
 6566              		.cfi_endproc
 6567              	.LFE1493:
 6568              		.section	.gcc_except_table
 6569              	.LLSDA1493:
 6570 04fc FF       		.byte	0xff
 6571 04fd FF       		.byte	0xff
 6572 04fe 01       		.byte	0x1
 6573 04ff 15       		.uleb128 .LLSDACSE1493-.LLSDACSB1493
 6574              	.LLSDACSB1493:
 6575 0500 73       		.uleb128 .LEHB184-.LFB1493
 6576 0501 05       		.uleb128 .LEHE184-.LEHB184
 6577 0502 00       		.uleb128 0
 6578 0503 00       		.uleb128 0
 6579 0504 8901     		.uleb128 .LEHB185-.LFB1493
 6580 0506 B401     		.uleb128 .LEHE185-.LEHB185
 6581 0508 CE02     		.uleb128 .L347-.LFB1493
 6582 050a 00       		.uleb128 0
 6583 050b C702     		.uleb128 .LEHB186-.LFB1493
 6584 050d 05       		.uleb128 .LEHE186-.LEHB186
 6585 050e 00       		.uleb128 0
 6586 050f 00       		.uleb128 0
 6587 0510 E602     		.uleb128 .LEHB187-.LFB1493
 6588 0512 05       		.uleb128 .LEHE187-.LEHB187
 6589 0513 00       		.uleb128 0
 6590 0514 00       		.uleb128 0
 6591              	.LLSDACSE1493:
 6592              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 6594              		.text
 6596              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDe
 6597              	.LFB1494:
  16:../ExecuteTest.h **** {
 6598              		.loc 7 16 0
 6599              		.cfi_startproc
 6600              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6601              		.cfi_lsda 0x1b,.LLSDA1494
 6602 2bc0 55       		pushq	%rbp
 6603              		.cfi_def_cfa_offset 16
 6604              		.cfi_offset 6, -16
 6605 2bc1 4889E5   		movq	%rsp, %rbp
 6606              		.cfi_def_cfa_register 6
 6607 2bc4 4155     		pushq	%r13
 6608 2bc6 4154     		pushq	%r12
 6609 2bc8 53       		pushq	%rbx
 6610 2bc9 4881EC58 		subq	$1624, %rsp
 6610      060000
 6611              		.cfi_offset 13, -24
 6612              		.cfi_offset 12, -32
 6613              		.cfi_offset 3, -40
 6614 2bd0 4889BD98 		movq	%rdi, -1640(%rbp)
 6614      F9FFFF
 6615 2bd7 4889B590 		movq	%rsi, -1648(%rbp)
 6615      F9FFFF
  16:../ExecuteTest.h **** {
 6616              		.loc 7 16 0
 6617 2bde 64488B04 		movq	%fs:40, %rax
 6617      25280000 
 6617      00
 6618 2be7 488945D8 		movq	%rax, -40(%rbp)
 6619 2beb 31C0     		xorl	%eax, %eax
 6620              	.LEHB188:
  18:../ExecuteTest.h **** 
 6621              		.loc 7 18 0
 6622 2bed E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 6622      00
 6623              	.LEHE188:
 6624 2bf2 4889C2   		movq	%rax, %rdx
 6625 2bf5 488B8590 		movq	-1648(%rbp), %rax
 6625      F9FFFF
 6626 2bfc 488902   		movq	%rax, (%rdx)
 6627              	.LBB119:
  23:../ExecuteTest.h **** #endif
 6628              		.loc 7 23 0
 6629 2bff 488D8570 		leaq	-1168(%rbp), %rax
 6629      FBFFFF
 6630 2c06 4889C7   		movq	%rax, %rdi
 6631              	.LEHB189:
 6632 2c09 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 6632      00
 6633              	.LEHE189:
  23:../ExecuteTest.h **** #endif
 6634              		.loc 7 23 0 is_stmt 0 discriminator 1
 6635 2c0e 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6635      000000
 6636 2c15 BE010000 		movl	$1, %esi
 6636      00
 6637 2c1a 4889C7   		movq	%rax, %rdi
 6638 2c1d E8000000 		call	__sigsetjmp@PLT
 6638      00
 6639 2c22 85C0     		testl	%eax, %eax
 6640 2c24 0F95C0   		setne	%al
 6641 2c27 84C0     		testb	%al, %al
 6642 2c29 7428     		je	.L351
  23:../ExecuteTest.h **** #endif
 6643              		.loc 7 23 0 discriminator 4
 6644 2c2b BF080000 		movl	$8, %edi
 6644      00
 6645 2c30 E8000000 		call	__cxa_allocate_exception@PLT
 6645      00
 6646 2c35 488D1500 		leaq	.LC32(%rip), %rdx
 6646      000000
 6647 2c3c 488910   		movq	%rdx, (%rax)
 6648 2c3f BA000000 		movl	$0, %edx
 6648      00
 6649 2c44 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 6649      000000
 6650 2c4b 4889C7   		movq	%rax, %rdi
 6651              	.LEHB190:
 6652 2c4e E8000000 		call	__cxa_throw@PLT
 6652      00
 6653              	.L351:
  25:../ExecuteTest.h **** 	}
 6654              		.loc 7 25 0 is_stmt 1
 6655 2c53 488B8598 		movq	-1640(%rbp), %rax
 6655      F9FFFF
 6656 2c5a 4889C7   		movq	%rax, %rdi
 6657 2c5d E818E9FF 		call	_ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper
 6657      FF
 6658              	.LEHE190:
  23:../ExecuteTest.h **** #endif
 6659              		.loc 7 23 0
 6660 2c62 488D8570 		leaq	-1168(%rbp), %rax
 6660      FBFFFF
 6661 2c69 4889C7   		movq	%rax, %rdi
 6662              	.LEHB191:
 6663 2c6c E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6663      00
 6664              	.LEHE191:
 6665              	.LBE119:
 6666              		.loc 7 42 0
 6667 2c71 E9F10100 		jmp	.L349
 6667      00
 6668              	.L364:
 6669 2c76 4989C4   		movq	%rax, %r12
 6670 2c79 4889D3   		movq	%rdx, %rbx
 6671              	.LBB120:
  23:../ExecuteTest.h **** #endif
 6672              		.loc 7 23 0
 6673 2c7c 488D8570 		leaq	-1168(%rbp), %rax
 6673      FBFFFF
 6674 2c83 4889C7   		movq	%rax, %rdi
 6675 2c86 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6675      00
 6676 2c8b 4C89E0   		movq	%r12, %rax
 6677 2c8e 4889DA   		movq	%rbx, %rdx
 6678 2c91 EB00     		jmp	.L353
 6679              	.L363:
 6680              	.L353:
 6681 2c93 4883FA01 		cmpq	$1, %rdx
 6682 2c97 740F     		je	.L355
 6683 2c99 4883FA02 		cmpq	$2, %rdx
 6684 2c9d 0F84A600 		je	.L356
 6684      0000
 6685 2ca3 E9420100 		jmp	.L369
 6685      00
 6686              	.L355:
 6687              	.LBE120:
 6688              	.LBB121:
  27:../ExecuteTest.h **** 	{
 6689              		.loc 7 27 0
 6690 2ca8 4889C7   		movq	%rax, %rdi
 6691 2cab E8000000 		call	__cxa_begin_catch@PLT
 6691      00
 6692 2cb0 488985A8 		movq	%rax, -1624(%rbp)
 6692      F9FFFF
 6693              	.LEHB192:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6694              		.loc 7 29 0
 6695 2cb7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6695      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6696              		.loc 7 29 0 is_stmt 0 discriminator 1
 6697 2cbc 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 6698              		.loc 7 30 0 is_stmt 1 discriminator 1
 6699 2cbf 488B85A8 		movq	-1624(%rbp), %rax
 6699      F9FFFF
 6700 2cc6 488B00   		movq	(%rax), %rax
 6701 2cc9 4883C010 		addq	$16, %rax
 6702 2ccd 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6703              		.loc 7 29 0 discriminator 1
 6704 2cd0 488B95A8 		movq	-1624(%rbp), %rdx
 6704      F9FFFF
 6705 2cd7 4889D7   		movq	%rdx, %rdi
 6706 2cda FFD0     		call	*%rax
 6707              	.LVL18:
 6708 2cdc 4989C4   		movq	%rax, %r12
 6709 2cdf 488B85A8 		movq	-1624(%rbp), %rax
 6709      F9FFFF
 6710 2ce6 4889C7   		movq	%rax, %rdi
 6711 2ce9 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 6711      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6712              		.loc 7 29 0 is_stmt 0 discriminator 2
 6713 2cee 4189C5   		movl	%eax, %r13d
 6714 2cf1 488B85A8 		movq	-1624(%rbp), %rax
 6714      F9FFFF
 6715 2cf8 4889C7   		movq	%rax, %rdi
 6716 2cfb E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 6716      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6717              		.loc 7 29 0 discriminator 3
 6718 2d00 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 6719              		.loc 7 30 0 is_stmt 1 discriminator 3
 6720 2d03 488B8590 		movq	-1648(%rbp), %rax
 6720      F9FFFF
 6721 2d0a 488B10   		movq	(%rax), %rdx
 6722 2d0d 488B8590 		movq	-1648(%rbp), %rax
 6722      F9FFFF
 6723 2d14 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6724              		.loc 7 29 0 discriminator 3
 6725 2d18 488D85B0 		leaq	-1616(%rbp), %rax
 6725      F9FFFF
 6726 2d1f 4589E8   		movl	%r13d, %r8d
 6727 2d22 4889C7   		movq	%rax, %rdi
 6728 2d25 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 6728      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6729              		.loc 7 29 0 is_stmt 0 discriminator 5
 6730 2d2a 488D85B0 		leaq	-1616(%rbp), %rax
 6730      F9FFFF
 6731 2d31 4C89E2   		movq	%r12, %rdx
 6732 2d34 4889C6   		movq	%rax, %rsi
 6733 2d37 4889DF   		movq	%rbx, %rdi
 6734 2d3a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6734      00
 6735              	.LEHE192:
  27:../ExecuteTest.h **** 	{
 6736              		.loc 7 27 0 is_stmt 1 discriminator 7
 6737 2d3f E8000000 		call	__cxa_end_catch@PLT
 6737      00
 6738              	.LBE121:
 6739              		.loc 7 42 0 discriminator 7
 6740 2d44 E91E0100 		jmp	.L349
 6740      00
 6741              	.L356:
 6742              	.LBB122:
  32:../ExecuteTest.h **** 	{
 6743              		.loc 7 32 0
 6744 2d49 4889C7   		movq	%rax, %rdi
 6745 2d4c E8000000 		call	__cxa_begin_catch@PLT
 6745      00
 6746 2d51 488985A0 		movq	%rax, -1632(%rbp)
 6746      F9FFFF
 6747              	.LBB123:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6748              		.loc 7 34 0
 6749 2d58 488D85D0 		leaq	-1584(%rbp), %rax
 6749      F9FFFF
 6750 2d5f 4889C7   		movq	%rax, %rdi
 6751              	.LEHB193:
 6752 2d62 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6752      00
 6753              	.LEHE193:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6754              		.loc 7 35 0
 6755 2d67 488D85D0 		leaq	-1584(%rbp), %rax
 6755      F9FFFF
 6756 2d6e 488D3500 		leaq	.LC6(%rip), %rsi
 6756      000000
 6757 2d75 4889C7   		movq	%rax, %rdi
 6758              	.LEHB194:
 6759 2d78 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6759      00
 6760 2d7d 4889C3   		movq	%rax, %rbx
 6761 2d80 488B85A0 		movq	-1632(%rbp), %rax
 6761      F9FFFF
 6762 2d87 488B00   		movq	(%rax), %rax
 6763 2d8a 4883C010 		addq	$16, %rax
 6764 2d8e 488B00   		movq	(%rax), %rax
 6765 2d91 488B95A0 		movq	-1632(%rbp), %rdx
 6765      F9FFFF
 6766 2d98 4889D7   		movq	%rdx, %rdi
 6767 2d9b FFD0     		call	*%rax
 6768              	.LVL19:
 6769 2d9d 4889C6   		movq	%rax, %rsi
 6770 2da0 4889DF   		movq	%rbx, %rdi
 6771 2da3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6771      00
  36:../ExecuteTest.h **** 	}
 6772              		.loc 7 36 0
 6773 2da8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6773      00
 6774 2dad 488B18   		movq	(%rax), %rbx
 6775 2db0 488D85D0 		leaq	-1584(%rbp), %rax
 6775      F9FFFF
 6776 2db7 4889C7   		movq	%rax, %rdi
 6777 2dba E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6777      00
  36:../ExecuteTest.h **** 	}
 6778              		.loc 7 36 0 is_stmt 0 discriminator 1
 6779 2dbf 4889C2   		movq	%rax, %rdx
 6780 2dc2 488B8590 		movq	-1648(%rbp), %rax
 6780      F9FFFF
 6781 2dc9 4889C6   		movq	%rax, %rsi
 6782 2dcc 4889DF   		movq	%rbx, %rdi
 6783 2dcf E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6783      00
 6784              	.LEHE194:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6785              		.loc 7 34 0 is_stmt 1
 6786 2dd4 488D85D0 		leaq	-1584(%rbp), %rax
 6786      F9FFFF
 6787 2ddb 4889C7   		movq	%rax, %rdi
 6788              	.LEHB195:
 6789 2dde E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6789      00
 6790              	.LEHE195:
 6791              	.LBE123:
  32:../ExecuteTest.h **** 	{
 6792              		.loc 7 32 0
 6793 2de3 E8000000 		call	__cxa_end_catch@PLT
 6793      00
 6794              	.LBE122:
 6795              		.loc 7 42 0
 6796 2de8 EB7D     		jmp	.L349
 6797              	.L369:
  38:../ExecuteTest.h **** 	{
 6798              		.loc 7 38 0
 6799 2dea 4889C7   		movq	%rax, %rdi
 6800 2ded E8000000 		call	__cxa_begin_catch@PLT
 6800      00
 6801              	.LEHB196:
  40:../ExecuteTest.h **** 	}
 6802              		.loc 7 40 0
 6803 2df2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6803      00
 6804 2df7 488B00   		movq	(%rax), %rax
 6805 2dfa 488B8D90 		movq	-1648(%rbp), %rcx
 6805      F9FFFF
 6806 2e01 488D1500 		leaq	.LC33(%rip), %rdx
 6806      000000
 6807 2e08 4889CE   		movq	%rcx, %rsi
 6808 2e0b 4889C7   		movq	%rax, %rdi
 6809 2e0e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6809      00
 6810              	.LEHE196:
 6811              	.LEHB197:
  38:../ExecuteTest.h **** 	{
 6812              		.loc 7 38 0
 6813 2e13 E8000000 		call	__cxa_end_catch@PLT
 6813      00
 6814              		.loc 7 42 0
 6815 2e18 EB4D     		jmp	.L349
 6816              	.L365:
 6817 2e1a 4889C3   		movq	%rax, %rbx
 6818              	.LBB125:
  27:../ExecuteTest.h **** 	{
 6819              		.loc 7 27 0
 6820 2e1d E8000000 		call	__cxa_end_catch@PLT
 6820      00
 6821 2e22 4889D8   		movq	%rbx, %rax
 6822 2e25 4889C7   		movq	%rax, %rdi
 6823 2e28 E8000000 		call	_Unwind_Resume@PLT
 6823      00
 6824              	.LEHE197:
 6825              	.L367:
 6826 2e2d 4889C3   		movq	%rax, %rbx
 6827              	.LBE125:
 6828              	.LBB126:
 6829              	.LBB124:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6830              		.loc 7 34 0
 6831 2e30 488D85D0 		leaq	-1584(%rbp), %rax
 6831      F9FFFF
 6832 2e37 4889C7   		movq	%rax, %rdi
 6833 2e3a E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6833      00
 6834 2e3f EB03     		jmp	.L360
 6835              	.L366:
 6836 2e41 4889C3   		movq	%rax, %rbx
 6837              	.L360:
 6838              	.LBE124:
  32:../ExecuteTest.h **** 	{
 6839              		.loc 7 32 0
 6840 2e44 E8000000 		call	__cxa_end_catch@PLT
 6840      00
 6841 2e49 4889D8   		movq	%rbx, %rax
 6842 2e4c 4889C7   		movq	%rax, %rdi
 6843              	.LEHB198:
 6844 2e4f E8000000 		call	_Unwind_Resume@PLT
 6844      00
 6845              	.LEHE198:
 6846              	.L368:
 6847 2e54 4889C3   		movq	%rax, %rbx
 6848              	.LBE126:
  38:../ExecuteTest.h **** 	{
 6849              		.loc 7 38 0
 6850 2e57 E8000000 		call	__cxa_end_catch@PLT
 6850      00
 6851 2e5c 4889D8   		movq	%rbx, %rax
 6852 2e5f 4889C7   		movq	%rax, %rdi
 6853              	.LEHB199:
 6854 2e62 E8000000 		call	_Unwind_Resume@PLT
 6854      00
 6855              	.LEHE199:
 6856              	.L349:
 6857              		.loc 7 42 0
 6858 2e67 488B45D8 		movq	-40(%rbp), %rax
 6859 2e6b 64483304 		xorq	%fs:40, %rax
 6859      25280000 
 6859      00
 6860 2e74 7405     		je	.L362
 6861 2e76 E8000000 		call	__stack_chk_fail@PLT
 6861      00
 6862              	.L362:
 6863 2e7b 4881C458 		addq	$1624, %rsp
 6863      060000
 6864 2e82 5B       		popq	%rbx
 6865 2e83 415C     		popq	%r12
 6866 2e85 415D     		popq	%r13
 6867 2e87 5D       		popq	%rbp
 6868              		.cfi_def_cfa 7, 8
 6869 2e88 C3       		ret
 6870              		.cfi_endproc
 6871              	.LFE1494:
 6872              		.section	.gcc_except_table
 6873 0515 000000   		.align 4
 6874              	.LLSDA1494:
 6875 0518 FF       		.byte	0xff
 6876 0519 9B       		.byte	0x9b
 6877 051a 59       		.uleb128 .LLSDATT1494-.LLSDATTD1494
 6878              	.LLSDATTD1494:
 6879 051b 01       		.byte	0x1
 6880 051c 43       		.uleb128 .LLSDACSE1494-.LLSDACSB1494
 6881              	.LLSDACSB1494:
 6882 051d 2D       		.uleb128 .LEHB188-.LFB1494
 6883 051e 05       		.uleb128 .LEHE188-.LEHB188
 6884 051f 00       		.uleb128 0
 6885 0520 00       		.uleb128 0
 6886 0521 49       		.uleb128 .LEHB189-.LFB1494
 6887 0522 05       		.uleb128 .LEHE189-.LEHB189
 6888 0523 D301     		.uleb128 .L363-.LFB1494
 6889 0525 05       		.uleb128 0x5
 6890 0526 8E01     		.uleb128 .LEHB190-.LFB1494
 6891 0528 14       		.uleb128 .LEHE190-.LEHB190
 6892 0529 B601     		.uleb128 .L364-.LFB1494
 6893 052b 07       		.uleb128 0x7
 6894 052c AC01     		.uleb128 .LEHB191-.LFB1494
 6895 052e 05       		.uleb128 .LEHE191-.LEHB191
 6896 052f D301     		.uleb128 .L363-.LFB1494
 6897 0531 05       		.uleb128 0x5
 6898 0532 F701     		.uleb128 .LEHB192-.LFB1494
 6899 0534 8801     		.uleb128 .LEHE192-.LEHB192
 6900 0536 DA04     		.uleb128 .L365-.LFB1494
 6901 0538 00       		.uleb128 0
 6902 0539 A203     		.uleb128 .LEHB193-.LFB1494
 6903 053b 05       		.uleb128 .LEHE193-.LEHB193
 6904 053c 8105     		.uleb128 .L366-.LFB1494
 6905 053e 00       		.uleb128 0
 6906 053f B803     		.uleb128 .LEHB194-.LFB1494
 6907 0541 5C       		.uleb128 .LEHE194-.LEHB194
 6908 0542 ED04     		.uleb128 .L367-.LFB1494
 6909 0544 00       		.uleb128 0
 6910 0545 9E04     		.uleb128 .LEHB195-.LFB1494
 6911 0547 05       		.uleb128 .LEHE195-.LEHB195
 6912 0548 8105     		.uleb128 .L366-.LFB1494
 6913 054a 00       		.uleb128 0
 6914 054b B204     		.uleb128 .LEHB196-.LFB1494
 6915 054d 21       		.uleb128 .LEHE196-.LEHB196
 6916 054e 9405     		.uleb128 .L368-.LFB1494
 6917 0550 00       		.uleb128 0
 6918 0551 D304     		.uleb128 .LEHB197-.LFB1494
 6919 0553 1A       		.uleb128 .LEHE197-.LEHB197
 6920 0554 00       		.uleb128 0
 6921 0555 00       		.uleb128 0
 6922 0556 8F05     		.uleb128 .LEHB198-.LFB1494
 6923 0558 05       		.uleb128 .LEHE198-.LEHB198
 6924 0559 00       		.uleb128 0
 6925 055a 00       		.uleb128 0
 6926 055b A205     		.uleb128 .LEHB199-.LFB1494
 6927 055d 05       		.uleb128 .LEHE199-.LEHB199
 6928 055e 00       		.uleb128 0
 6929 055f 00       		.uleb128 0
 6930              	.LLSDACSE1494:
 6931 0560 03       		.byte	0x3
 6932 0561 00       		.byte	0
 6933 0562 02       		.byte	0x2
 6934 0563 7D       		.byte	0x7d
 6935 0564 01       		.byte	0x1
 6936 0565 7D       		.byte	0x7d
 6937 0566 00       		.byte	0
 6938 0567 7D       		.byte	0x7d
 6939              		.align 4
 6940 0568 00000000 		.long	0
 6941              	
 6942 056c 00000000 		.long	DW.ref._ZTISt9exception-.
 6943 0570 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6944              	.LLSDATT1494:
 6945              		.text
 6947              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 6948              		.weak	_ZN8UnitTest5CheckIbEEbT_
 6950              	_ZN8UnitTest5CheckIbEEbT_:
 6951              	.LFB1495:
  12:../Checks.h   **** {
 6952              		.loc 8 12 0
 6953              		.cfi_startproc
 6954 0000 55       		pushq	%rbp
 6955              		.cfi_def_cfa_offset 16
 6956              		.cfi_offset 6, -16
 6957 0001 4889E5   		movq	%rsp, %rbp
 6958              		.cfi_def_cfa_register 6
 6959 0004 89F8     		movl	%edi, %eax
 6960 0006 8845FC   		movb	%al, -4(%rbp)
  14:../Checks.h   **** }
 6961              		.loc 8 14 0
 6962 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** 
 6963              		.loc 8 15 0
 6964 000d 5D       		popq	%rbp
 6965              		.cfi_def_cfa 7, 8
 6966 000e C3       		ret
 6967              		.cfi_endproc
 6968              	.LFE1495:
 6970              		.text
 6972              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDe
 6973              	.LFB1496:
  16:../ExecuteTest.h **** {
 6974              		.loc 7 16 0
 6975              		.cfi_startproc
 6976              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6977              		.cfi_lsda 0x1b,.LLSDA1496
 6978 2e89 55       		pushq	%rbp
 6979              		.cfi_def_cfa_offset 16
 6980              		.cfi_offset 6, -16
 6981 2e8a 4889E5   		movq	%rsp, %rbp
 6982              		.cfi_def_cfa_register 6
 6983 2e8d 4155     		pushq	%r13
 6984 2e8f 4154     		pushq	%r12
 6985 2e91 53       		pushq	%rbx
 6986 2e92 4881EC58 		subq	$1624, %rsp
 6986      060000
 6987              		.cfi_offset 13, -24
 6988              		.cfi_offset 12, -32
 6989              		.cfi_offset 3, -40
 6990 2e99 4889BD98 		movq	%rdi, -1640(%rbp)
 6990      F9FFFF
 6991 2ea0 4889B590 		movq	%rsi, -1648(%rbp)
 6991      F9FFFF
  16:../ExecuteTest.h **** {
 6992              		.loc 7 16 0
 6993 2ea7 64488B04 		movq	%fs:40, %rax
 6993      25280000 
 6993      00
 6994 2eb0 488945D8 		movq	%rax, -40(%rbp)
 6995 2eb4 31C0     		xorl	%eax, %eax
 6996              	.LEHB200:
  18:../ExecuteTest.h **** 
 6997              		.loc 7 18 0
 6998 2eb6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 6998      00
 6999              	.LEHE200:
 7000 2ebb 4889C2   		movq	%rax, %rdx
 7001 2ebe 488B8590 		movq	-1648(%rbp), %rax
 7001      F9FFFF
 7002 2ec5 488902   		movq	%rax, (%rdx)
 7003              	.LBB127:
  23:../ExecuteTest.h **** #endif
 7004              		.loc 7 23 0
 7005 2ec8 488D8570 		leaq	-1168(%rbp), %rax
 7005      FBFFFF
 7006 2ecf 4889C7   		movq	%rax, %rdi
 7007              	.LEHB201:
 7008 2ed2 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 7008      00
 7009              	.LEHE201:
  23:../ExecuteTest.h **** #endif
 7010              		.loc 7 23 0 is_stmt 0 discriminator 1
 7011 2ed7 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7011      000000
 7012 2ede BE010000 		movl	$1, %esi
 7012      00
 7013 2ee3 4889C7   		movq	%rax, %rdi
 7014 2ee6 E8000000 		call	__sigsetjmp@PLT
 7014      00
 7015 2eeb 85C0     		testl	%eax, %eax
 7016 2eed 0F95C0   		setne	%al
 7017 2ef0 84C0     		testb	%al, %al
 7018 2ef2 7428     		je	.L374
  23:../ExecuteTest.h **** #endif
 7019              		.loc 7 23 0 discriminator 4
 7020 2ef4 BF080000 		movl	$8, %edi
 7020      00
 7021 2ef9 E8000000 		call	__cxa_allocate_exception@PLT
 7021      00
 7022 2efe 488D1500 		leaq	.LC32(%rip), %rdx
 7022      000000
 7023 2f05 488910   		movq	%rdx, (%rax)
 7024 2f08 BA000000 		movl	$0, %edx
 7024      00
 7025 2f0d 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 7025      000000
 7026 2f14 4889C7   		movq	%rax, %rdi
 7027              	.LEHB202:
 7028 2f17 E8000000 		call	__cxa_throw@PLT
 7028      00
 7029              	.L374:
  25:../ExecuteTest.h **** 	}
 7030              		.loc 7 25 0 is_stmt 1
 7031 2f1c 488B8598 		movq	-1640(%rbp), %rax
 7031      F9FFFF
 7032 2f23 4889C7   		movq	%rax, %rdi
 7033 2f26 E8F3EBFF 		call	_ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 7033      FF
 7034              	.LEHE202:
  23:../ExecuteTest.h **** #endif
 7035              		.loc 7 23 0
 7036 2f2b 488D8570 		leaq	-1168(%rbp), %rax
 7036      FBFFFF
 7037 2f32 4889C7   		movq	%rax, %rdi
 7038              	.LEHB203:
 7039 2f35 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7039      00
 7040              	.LEHE203:
 7041              	.LBE127:
 7042              		.loc 7 42 0
 7043 2f3a E9F10100 		jmp	.L372
 7043      00
 7044              	.L387:
 7045 2f3f 4989C4   		movq	%rax, %r12
 7046 2f42 4889D3   		movq	%rdx, %rbx
 7047              	.LBB128:
  23:../ExecuteTest.h **** #endif
 7048              		.loc 7 23 0
 7049 2f45 488D8570 		leaq	-1168(%rbp), %rax
 7049      FBFFFF
 7050 2f4c 4889C7   		movq	%rax, %rdi
 7051 2f4f E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7051      00
 7052 2f54 4C89E0   		movq	%r12, %rax
 7053 2f57 4889DA   		movq	%rbx, %rdx
 7054 2f5a EB00     		jmp	.L376
 7055              	.L386:
 7056              	.L376:
 7057 2f5c 4883FA01 		cmpq	$1, %rdx
 7058 2f60 740F     		je	.L378
 7059 2f62 4883FA02 		cmpq	$2, %rdx
 7060 2f66 0F84A600 		je	.L379
 7060      0000
 7061 2f6c E9420100 		jmp	.L392
 7061      00
 7062              	.L378:
 7063              	.LBE128:
 7064              	.LBB129:
  27:../ExecuteTest.h **** 	{
 7065              		.loc 7 27 0
 7066 2f71 4889C7   		movq	%rax, %rdi
 7067 2f74 E8000000 		call	__cxa_begin_catch@PLT
 7067      00
 7068 2f79 488985A8 		movq	%rax, -1624(%rbp)
 7068      F9FFFF
 7069              	.LEHB204:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7070              		.loc 7 29 0
 7071 2f80 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7071      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7072              		.loc 7 29 0 is_stmt 0 discriminator 1
 7073 2f85 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 7074              		.loc 7 30 0 is_stmt 1 discriminator 1
 7075 2f88 488B85A8 		movq	-1624(%rbp), %rax
 7075      F9FFFF
 7076 2f8f 488B00   		movq	(%rax), %rax
 7077 2f92 4883C010 		addq	$16, %rax
 7078 2f96 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7079              		.loc 7 29 0 discriminator 1
 7080 2f99 488B95A8 		movq	-1624(%rbp), %rdx
 7080      F9FFFF
 7081 2fa0 4889D7   		movq	%rdx, %rdi
 7082 2fa3 FFD0     		call	*%rax
 7083              	.LVL20:
 7084 2fa5 4989C4   		movq	%rax, %r12
 7085 2fa8 488B85A8 		movq	-1624(%rbp), %rax
 7085      F9FFFF
 7086 2faf 4889C7   		movq	%rax, %rdi
 7087 2fb2 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 7087      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7088              		.loc 7 29 0 is_stmt 0 discriminator 2
 7089 2fb7 4189C5   		movl	%eax, %r13d
 7090 2fba 488B85A8 		movq	-1624(%rbp), %rax
 7090      F9FFFF
 7091 2fc1 4889C7   		movq	%rax, %rdi
 7092 2fc4 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 7092      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7093              		.loc 7 29 0 discriminator 3
 7094 2fc9 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 7095              		.loc 7 30 0 is_stmt 1 discriminator 3
 7096 2fcc 488B8590 		movq	-1648(%rbp), %rax
 7096      F9FFFF
 7097 2fd3 488B10   		movq	(%rax), %rdx
 7098 2fd6 488B8590 		movq	-1648(%rbp), %rax
 7098      F9FFFF
 7099 2fdd 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7100              		.loc 7 29 0 discriminator 3
 7101 2fe1 488D85B0 		leaq	-1616(%rbp), %rax
 7101      F9FFFF
 7102 2fe8 4589E8   		movl	%r13d, %r8d
 7103 2feb 4889C7   		movq	%rax, %rdi
 7104 2fee E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 7104      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7105              		.loc 7 29 0 is_stmt 0 discriminator 5
 7106 2ff3 488D85B0 		leaq	-1616(%rbp), %rax
 7106      F9FFFF
 7107 2ffa 4C89E2   		movq	%r12, %rdx
 7108 2ffd 4889C6   		movq	%rax, %rsi
 7109 3000 4889DF   		movq	%rbx, %rdi
 7110 3003 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7110      00
 7111              	.LEHE204:
  27:../ExecuteTest.h **** 	{
 7112              		.loc 7 27 0 is_stmt 1 discriminator 7
 7113 3008 E8000000 		call	__cxa_end_catch@PLT
 7113      00
 7114              	.LBE129:
 7115              		.loc 7 42 0 discriminator 7
 7116 300d E91E0100 		jmp	.L372
 7116      00
 7117              	.L379:
 7118              	.LBB130:
  32:../ExecuteTest.h **** 	{
 7119              		.loc 7 32 0
 7120 3012 4889C7   		movq	%rax, %rdi
 7121 3015 E8000000 		call	__cxa_begin_catch@PLT
 7121      00
 7122 301a 488985A0 		movq	%rax, -1632(%rbp)
 7122      F9FFFF
 7123              	.LBB131:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7124              		.loc 7 34 0
 7125 3021 488D85D0 		leaq	-1584(%rbp), %rax
 7125      F9FFFF
 7126 3028 4889C7   		movq	%rax, %rdi
 7127              	.LEHB205:
 7128 302b E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7128      00
 7129              	.LEHE205:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7130              		.loc 7 35 0
 7131 3030 488D85D0 		leaq	-1584(%rbp), %rax
 7131      F9FFFF
 7132 3037 488D3500 		leaq	.LC6(%rip), %rsi
 7132      000000
 7133 303e 4889C7   		movq	%rax, %rdi
 7134              	.LEHB206:
 7135 3041 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7135      00
 7136 3046 4889C3   		movq	%rax, %rbx
 7137 3049 488B85A0 		movq	-1632(%rbp), %rax
 7137      F9FFFF
 7138 3050 488B00   		movq	(%rax), %rax
 7139 3053 4883C010 		addq	$16, %rax
 7140 3057 488B00   		movq	(%rax), %rax
 7141 305a 488B95A0 		movq	-1632(%rbp), %rdx
 7141      F9FFFF
 7142 3061 4889D7   		movq	%rdx, %rdi
 7143 3064 FFD0     		call	*%rax
 7144              	.LVL21:
 7145 3066 4889C6   		movq	%rax, %rsi
 7146 3069 4889DF   		movq	%rbx, %rdi
 7147 306c E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7147      00
  36:../ExecuteTest.h **** 	}
 7148              		.loc 7 36 0
 7149 3071 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7149      00
 7150 3076 488B18   		movq	(%rax), %rbx
 7151 3079 488D85D0 		leaq	-1584(%rbp), %rax
 7151      F9FFFF
 7152 3080 4889C7   		movq	%rax, %rdi
 7153 3083 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 7153      00
  36:../ExecuteTest.h **** 	}
 7154              		.loc 7 36 0 is_stmt 0 discriminator 1
 7155 3088 4889C2   		movq	%rax, %rdx
 7156 308b 488B8590 		movq	-1648(%rbp), %rax
 7156      F9FFFF
 7157 3092 4889C6   		movq	%rax, %rsi
 7158 3095 4889DF   		movq	%rbx, %rdi
 7159 3098 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7159      00
 7160              	.LEHE206:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7161              		.loc 7 34 0 is_stmt 1
 7162 309d 488D85D0 		leaq	-1584(%rbp), %rax
 7162      F9FFFF
 7163 30a4 4889C7   		movq	%rax, %rdi
 7164              	.LEHB207:
 7165 30a7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7165      00
 7166              	.LEHE207:
 7167              	.LBE131:
  32:../ExecuteTest.h **** 	{
 7168              		.loc 7 32 0
 7169 30ac E8000000 		call	__cxa_end_catch@PLT
 7169      00
 7170              	.LBE130:
 7171              		.loc 7 42 0
 7172 30b1 EB7D     		jmp	.L372
 7173              	.L392:
  38:../ExecuteTest.h **** 	{
 7174              		.loc 7 38 0
 7175 30b3 4889C7   		movq	%rax, %rdi
 7176 30b6 E8000000 		call	__cxa_begin_catch@PLT
 7176      00
 7177              	.LEHB208:
  40:../ExecuteTest.h **** 	}
 7178              		.loc 7 40 0
 7179 30bb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7179      00
 7180 30c0 488B00   		movq	(%rax), %rax
 7181 30c3 488B8D90 		movq	-1648(%rbp), %rcx
 7181      F9FFFF
 7182 30ca 488D1500 		leaq	.LC33(%rip), %rdx
 7182      000000
 7183 30d1 4889CE   		movq	%rcx, %rsi
 7184 30d4 4889C7   		movq	%rax, %rdi
 7185 30d7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7185      00
 7186              	.LEHE208:
 7187              	.LEHB209:
  38:../ExecuteTest.h **** 	{
 7188              		.loc 7 38 0
 7189 30dc E8000000 		call	__cxa_end_catch@PLT
 7189      00
 7190              		.loc 7 42 0
 7191 30e1 EB4D     		jmp	.L372
 7192              	.L388:
 7193 30e3 4889C3   		movq	%rax, %rbx
 7194              	.LBB133:
  27:../ExecuteTest.h **** 	{
 7195              		.loc 7 27 0
 7196 30e6 E8000000 		call	__cxa_end_catch@PLT
 7196      00
 7197 30eb 4889D8   		movq	%rbx, %rax
 7198 30ee 4889C7   		movq	%rax, %rdi
 7199 30f1 E8000000 		call	_Unwind_Resume@PLT
 7199      00
 7200              	.LEHE209:
 7201              	.L390:
 7202 30f6 4889C3   		movq	%rax, %rbx
 7203              	.LBE133:
 7204              	.LBB134:
 7205              	.LBB132:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7206              		.loc 7 34 0
 7207 30f9 488D85D0 		leaq	-1584(%rbp), %rax
 7207      F9FFFF
 7208 3100 4889C7   		movq	%rax, %rdi
 7209 3103 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7209      00
 7210 3108 EB03     		jmp	.L383
 7211              	.L389:
 7212 310a 4889C3   		movq	%rax, %rbx
 7213              	.L383:
 7214              	.LBE132:
  32:../ExecuteTest.h **** 	{
 7215              		.loc 7 32 0
 7216 310d E8000000 		call	__cxa_end_catch@PLT
 7216      00
 7217 3112 4889D8   		movq	%rbx, %rax
 7218 3115 4889C7   		movq	%rax, %rdi
 7219              	.LEHB210:
 7220 3118 E8000000 		call	_Unwind_Resume@PLT
 7220      00
 7221              	.LEHE210:
 7222              	.L391:
 7223 311d 4889C3   		movq	%rax, %rbx
 7224              	.LBE134:
  38:../ExecuteTest.h **** 	{
 7225              		.loc 7 38 0
 7226 3120 E8000000 		call	__cxa_end_catch@PLT
 7226      00
 7227 3125 4889D8   		movq	%rbx, %rax
 7228 3128 4889C7   		movq	%rax, %rdi
 7229              	.LEHB211:
 7230 312b E8000000 		call	_Unwind_Resume@PLT
 7230      00
 7231              	.LEHE211:
 7232              	.L372:
 7233              		.loc 7 42 0
 7234 3130 488B45D8 		movq	-40(%rbp), %rax
 7235 3134 64483304 		xorq	%fs:40, %rax
 7235      25280000 
 7235      00
 7236 313d 7405     		je	.L385
 7237 313f E8000000 		call	__stack_chk_fail@PLT
 7237      00
 7238              	.L385:
 7239 3144 4881C458 		addq	$1624, %rsp
 7239      060000
 7240 314b 5B       		popq	%rbx
 7241 314c 415C     		popq	%r12
 7242 314e 415D     		popq	%r13
 7243 3150 5D       		popq	%rbp
 7244              		.cfi_def_cfa 7, 8
 7245 3151 C3       		ret
 7246              		.cfi_endproc
 7247              	.LFE1496:
 7248              		.section	.gcc_except_table
 7249              		.align 4
 7250              	.LLSDA1496:
 7251 0574 FF       		.byte	0xff
 7252 0575 9B       		.byte	0x9b
 7253 0576 59       		.uleb128 .LLSDATT1496-.LLSDATTD1496
 7254              	.LLSDATTD1496:
 7255 0577 01       		.byte	0x1
 7256 0578 43       		.uleb128 .LLSDACSE1496-.LLSDACSB1496
 7257              	.LLSDACSB1496:
 7258 0579 2D       		.uleb128 .LEHB200-.LFB1496
 7259 057a 05       		.uleb128 .LEHE200-.LEHB200
 7260 057b 00       		.uleb128 0
 7261 057c 00       		.uleb128 0
 7262 057d 49       		.uleb128 .LEHB201-.LFB1496
 7263 057e 05       		.uleb128 .LEHE201-.LEHB201
 7264 057f D301     		.uleb128 .L386-.LFB1496
 7265 0581 05       		.uleb128 0x5
 7266 0582 8E01     		.uleb128 .LEHB202-.LFB1496
 7267 0584 14       		.uleb128 .LEHE202-.LEHB202
 7268 0585 B601     		.uleb128 .L387-.LFB1496
 7269 0587 07       		.uleb128 0x7
 7270 0588 AC01     		.uleb128 .LEHB203-.LFB1496
 7271 058a 05       		.uleb128 .LEHE203-.LEHB203
 7272 058b D301     		.uleb128 .L386-.LFB1496
 7273 058d 05       		.uleb128 0x5
 7274 058e F701     		.uleb128 .LEHB204-.LFB1496
 7275 0590 8801     		.uleb128 .LEHE204-.LEHB204
 7276 0592 DA04     		.uleb128 .L388-.LFB1496
 7277 0594 00       		.uleb128 0
 7278 0595 A203     		.uleb128 .LEHB205-.LFB1496
 7279 0597 05       		.uleb128 .LEHE205-.LEHB205
 7280 0598 8105     		.uleb128 .L389-.LFB1496
 7281 059a 00       		.uleb128 0
 7282 059b B803     		.uleb128 .LEHB206-.LFB1496
 7283 059d 5C       		.uleb128 .LEHE206-.LEHB206
 7284 059e ED04     		.uleb128 .L390-.LFB1496
 7285 05a0 00       		.uleb128 0
 7286 05a1 9E04     		.uleb128 .LEHB207-.LFB1496
 7287 05a3 05       		.uleb128 .LEHE207-.LEHB207
 7288 05a4 8105     		.uleb128 .L389-.LFB1496
 7289 05a6 00       		.uleb128 0
 7290 05a7 B204     		.uleb128 .LEHB208-.LFB1496
 7291 05a9 21       		.uleb128 .LEHE208-.LEHB208
 7292 05aa 9405     		.uleb128 .L391-.LFB1496
 7293 05ac 00       		.uleb128 0
 7294 05ad D304     		.uleb128 .LEHB209-.LFB1496
 7295 05af 1A       		.uleb128 .LEHE209-.LEHB209
 7296 05b0 00       		.uleb128 0
 7297 05b1 00       		.uleb128 0
 7298 05b2 8F05     		.uleb128 .LEHB210-.LFB1496
 7299 05b4 05       		.uleb128 .LEHE210-.LEHB210
 7300 05b5 00       		.uleb128 0
 7301 05b6 00       		.uleb128 0
 7302 05b7 A205     		.uleb128 .LEHB211-.LFB1496
 7303 05b9 05       		.uleb128 .LEHE211-.LEHB211
 7304 05ba 00       		.uleb128 0
 7305 05bb 00       		.uleb128 0
 7306              	.LLSDACSE1496:
 7307 05bc 03       		.byte	0x3
 7308 05bd 00       		.byte	0
 7309 05be 02       		.byte	0x2
 7310 05bf 7D       		.byte	0x7d
 7311 05c0 01       		.byte	0x1
 7312 05c1 7D       		.byte	0x7d
 7313 05c2 00       		.byte	0
 7314 05c3 7D       		.byte	0x7d
 7315              		.align 4
 7316 05c4 00000000 		.long	0
 7317              	
 7318 05c8 00000000 		.long	DW.ref._ZTISt9exception-.
 7319 05cc 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 7320              	.LLSDATT1496:
 7321              		.text
 7323              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 7324              		.align 2
 7325              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 7327              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv:
 7328              	.LFB1497:
 670:/usr/include/c++/7/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7329              		.loc 6 670 0
 7330              		.cfi_startproc
 7331 0000 55       		pushq	%rbp
 7332              		.cfi_def_cfa_offset 16
 7333              		.cfi_offset 6, -16
 7334 0001 4889E5   		movq	%rsp, %rbp
 7335              		.cfi_def_cfa_register 6
 7336 0004 48897DF8 		movq	%rdi, -8(%rbp)
 671:/usr/include/c++/7/bits/stl_vector.h **** 
 7337              		.loc 6 671 0
 7338 0008 488B45F8 		movq	-8(%rbp), %rax
 7339 000c 488B4008 		movq	8(%rax), %rax
 7340 0010 4889C2   		movq	%rax, %rdx
 7341 0013 488B45F8 		movq	-8(%rbp), %rax
 7342 0017 488B00   		movq	(%rax), %rax
 7343 001a 4829C2   		subq	%rax, %rdx
 7344 001d 4889D0   		movq	%rdx, %rax
 7345 0020 48C1F803 		sarq	$3, %rax
 7346 0024 4889C2   		movq	%rax, %rdx
 7347 0027 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 7347      CCCCCCCC 
 7347      CCCC
 7348 0031 480FAFC2 		imulq	%rdx, %rax
 7349 0035 5D       		popq	%rbp
 7350              		.cfi_def_cfa 7, 8
 7351 0036 C3       		ret
 7352              		.cfi_endproc
 7353              	.LFE1497:
 7355              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 7356              		.align 2
 7357              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 7359              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm:
 7360              	.LFB1498:
 813:/usr/include/c++/7/bits/stl_vector.h ****       {
 7361              		.loc 6 813 0
 7362              		.cfi_startproc
 7363 0000 55       		pushq	%rbp
 7364              		.cfi_def_cfa_offset 16
 7365              		.cfi_offset 6, -16
 7366 0001 4889E5   		movq	%rsp, %rbp
 7367              		.cfi_def_cfa_register 6
 7368 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7369 0008 488975F0 		movq	%rsi, -16(%rbp)
 816:/usr/include/c++/7/bits/stl_vector.h ****       }
 7370              		.loc 6 816 0
 7371 000c 488B45F8 		movq	-8(%rbp), %rax
 7372 0010 488B08   		movq	(%rax), %rcx
 7373 0013 488B55F0 		movq	-16(%rbp), %rdx
 7374 0017 4889D0   		movq	%rdx, %rax
 7375 001a 48C1E002 		salq	$2, %rax
 7376 001e 4801D0   		addq	%rdx, %rax
 7377 0021 48C1E003 		salq	$3, %rax
 7378 0025 4801C8   		addq	%rcx, %rax
 817:/usr/include/c++/7/bits/stl_vector.h **** 
 7379              		.loc 6 817 0
 7380 0028 5D       		popq	%rbp
 7381              		.cfi_def_cfa 7, 8
 7382 0029 C3       		ret
 7383              		.cfi_endproc
 7384              	.LFE1498:
 7386              		.text
 7388              	_ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCo
 7389              	.LFB1499:
  16:../ExecuteTest.h **** {
 7390              		.loc 7 16 0
 7391              		.cfi_startproc
 7392              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7393              		.cfi_lsda 0x1b,.LLSDA1499
 7394 3152 55       		pushq	%rbp
 7395              		.cfi_def_cfa_offset 16
 7396              		.cfi_offset 6, -16
 7397 3153 4889E5   		movq	%rsp, %rbp
 7398              		.cfi_def_cfa_register 6
 7399 3156 4155     		pushq	%r13
 7400 3158 4154     		pushq	%r12
 7401 315a 53       		pushq	%rbx
 7402 315b 4881EC58 		subq	$1624, %rsp
 7402      060000
 7403              		.cfi_offset 13, -24
 7404              		.cfi_offset 12, -32
 7405              		.cfi_offset 3, -40
 7406 3162 4889BD98 		movq	%rdi, -1640(%rbp)
 7406      F9FFFF
 7407 3169 4889B590 		movq	%rsi, -1648(%rbp)
 7407      F9FFFF
  16:../ExecuteTest.h **** {
 7408              		.loc 7 16 0
 7409 3170 64488B04 		movq	%fs:40, %rax
 7409      25280000 
 7409      00
 7410 3179 488945D8 		movq	%rax, -40(%rbp)
 7411 317d 31C0     		xorl	%eax, %eax
 7412              	.LEHB212:
  18:../ExecuteTest.h **** 
 7413              		.loc 7 18 0
 7414 317f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 7414      00
 7415              	.LEHE212:
 7416 3184 4889C2   		movq	%rax, %rdx
 7417 3187 488B8590 		movq	-1648(%rbp), %rax
 7417      F9FFFF
 7418 318e 488902   		movq	%rax, (%rdx)
 7419              	.LBB135:
  23:../ExecuteTest.h **** #endif
 7420              		.loc 7 23 0
 7421 3191 488D8570 		leaq	-1168(%rbp), %rax
 7421      FBFFFF
 7422 3198 4889C7   		movq	%rax, %rdi
 7423              	.LEHB213:
 7424 319b E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 7424      00
 7425              	.LEHE213:
  23:../ExecuteTest.h **** #endif
 7426              		.loc 7 23 0 is_stmt 0 discriminator 1
 7427 31a0 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7427      000000
 7428 31a7 BE010000 		movl	$1, %esi
 7428      00
 7429 31ac 4889C7   		movq	%rax, %rdi
 7430 31af E8000000 		call	__sigsetjmp@PLT
 7430      00
 7431 31b4 85C0     		testl	%eax, %eax
 7432 31b6 0F95C0   		setne	%al
 7433 31b9 84C0     		testb	%al, %al
 7434 31bb 7428     		je	.L399
  23:../ExecuteTest.h **** #endif
 7435              		.loc 7 23 0 discriminator 4
 7436 31bd BF080000 		movl	$8, %edi
 7436      00
 7437 31c2 E8000000 		call	__cxa_allocate_exception@PLT
 7437      00
 7438 31c7 488D1500 		leaq	.LC32(%rip), %rdx
 7438      000000
 7439 31ce 488910   		movq	%rdx, (%rax)
 7440 31d1 BA000000 		movl	$0, %edx
 7440      00
 7441 31d6 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 7441      000000
 7442 31dd 4889C7   		movq	%rax, %rdi
 7443              	.LEHB214:
 7444 31e0 E8000000 		call	__cxa_throw@PLT
 7444      00
 7445              	.L399:
  25:../ExecuteTest.h **** 	}
 7446              		.loc 7 25 0 is_stmt 1
 7447 31e5 488B8598 		movq	-1640(%rbp), %rax
 7447      F9FFFF
 7448 31ec 4889C7   		movq	%rax, %rdi
 7449 31ef E8A8EFFF 		call	_ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 7449      FF
 7450              	.LEHE214:
  23:../ExecuteTest.h **** #endif
 7451              		.loc 7 23 0
 7452 31f4 488D8570 		leaq	-1168(%rbp), %rax
 7452      FBFFFF
 7453 31fb 4889C7   		movq	%rax, %rdi
 7454              	.LEHB215:
 7455 31fe E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7455      00
 7456              	.LEHE215:
 7457              	.LBE135:
 7458              		.loc 7 42 0
 7459 3203 E9F10100 		jmp	.L397
 7459      00
 7460              	.L412:
 7461 3208 4989C4   		movq	%rax, %r12
 7462 320b 4889D3   		movq	%rdx, %rbx
 7463              	.LBB136:
  23:../ExecuteTest.h **** #endif
 7464              		.loc 7 23 0
 7465 320e 488D8570 		leaq	-1168(%rbp), %rax
 7465      FBFFFF
 7466 3215 4889C7   		movq	%rax, %rdi
 7467 3218 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7467      00
 7468 321d 4C89E0   		movq	%r12, %rax
 7469 3220 4889DA   		movq	%rbx, %rdx
 7470 3223 EB00     		jmp	.L401
 7471              	.L411:
 7472              	.L401:
 7473 3225 4883FA01 		cmpq	$1, %rdx
 7474 3229 740F     		je	.L403
 7475 322b 4883FA02 		cmpq	$2, %rdx
 7476 322f 0F84A600 		je	.L404
 7476      0000
 7477 3235 E9420100 		jmp	.L417
 7477      00
 7478              	.L403:
 7479              	.LBE136:
 7480              	.LBB137:
  27:../ExecuteTest.h **** 	{
 7481              		.loc 7 27 0
 7482 323a 4889C7   		movq	%rax, %rdi
 7483 323d E8000000 		call	__cxa_begin_catch@PLT
 7483      00
 7484 3242 488985A8 		movq	%rax, -1624(%rbp)
 7484      F9FFFF
 7485              	.LEHB216:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7486              		.loc 7 29 0
 7487 3249 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7487      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7488              		.loc 7 29 0 is_stmt 0 discriminator 1
 7489 324e 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 7490              		.loc 7 30 0 is_stmt 1 discriminator 1
 7491 3251 488B85A8 		movq	-1624(%rbp), %rax
 7491      F9FFFF
 7492 3258 488B00   		movq	(%rax), %rax
 7493 325b 4883C010 		addq	$16, %rax
 7494 325f 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7495              		.loc 7 29 0 discriminator 1
 7496 3262 488B95A8 		movq	-1624(%rbp), %rdx
 7496      F9FFFF
 7497 3269 4889D7   		movq	%rdx, %rdi
 7498 326c FFD0     		call	*%rax
 7499              	.LVL22:
 7500 326e 4989C4   		movq	%rax, %r12
 7501 3271 488B85A8 		movq	-1624(%rbp), %rax
 7501      F9FFFF
 7502 3278 4889C7   		movq	%rax, %rdi
 7503 327b E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 7503      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7504              		.loc 7 29 0 is_stmt 0 discriminator 2
 7505 3280 4189C5   		movl	%eax, %r13d
 7506 3283 488B85A8 		movq	-1624(%rbp), %rax
 7506      F9FFFF
 7507 328a 4889C7   		movq	%rax, %rdi
 7508 328d E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 7508      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7509              		.loc 7 29 0 discriminator 3
 7510 3292 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 7511              		.loc 7 30 0 is_stmt 1 discriminator 3
 7512 3295 488B8590 		movq	-1648(%rbp), %rax
 7512      F9FFFF
 7513 329c 488B10   		movq	(%rax), %rdx
 7514 329f 488B8590 		movq	-1648(%rbp), %rax
 7514      F9FFFF
 7515 32a6 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7516              		.loc 7 29 0 discriminator 3
 7517 32aa 488D85B0 		leaq	-1616(%rbp), %rax
 7517      F9FFFF
 7518 32b1 4589E8   		movl	%r13d, %r8d
 7519 32b4 4889C7   		movq	%rax, %rdi
 7520 32b7 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 7520      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7521              		.loc 7 29 0 is_stmt 0 discriminator 5
 7522 32bc 488D85B0 		leaq	-1616(%rbp), %rax
 7522      F9FFFF
 7523 32c3 4C89E2   		movq	%r12, %rdx
 7524 32c6 4889C6   		movq	%rax, %rsi
 7525 32c9 4889DF   		movq	%rbx, %rdi
 7526 32cc E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7526      00
 7527              	.LEHE216:
  27:../ExecuteTest.h **** 	{
 7528              		.loc 7 27 0 is_stmt 1 discriminator 7
 7529 32d1 E8000000 		call	__cxa_end_catch@PLT
 7529      00
 7530              	.LBE137:
 7531              		.loc 7 42 0 discriminator 7
 7532 32d6 E91E0100 		jmp	.L397
 7532      00
 7533              	.L404:
 7534              	.LBB138:
  32:../ExecuteTest.h **** 	{
 7535              		.loc 7 32 0
 7536 32db 4889C7   		movq	%rax, %rdi
 7537 32de E8000000 		call	__cxa_begin_catch@PLT
 7537      00
 7538 32e3 488985A0 		movq	%rax, -1632(%rbp)
 7538      F9FFFF
 7539              	.LBB139:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7540              		.loc 7 34 0
 7541 32ea 488D85D0 		leaq	-1584(%rbp), %rax
 7541      F9FFFF
 7542 32f1 4889C7   		movq	%rax, %rdi
 7543              	.LEHB217:
 7544 32f4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7544      00
 7545              	.LEHE217:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7546              		.loc 7 35 0
 7547 32f9 488D85D0 		leaq	-1584(%rbp), %rax
 7547      F9FFFF
 7548 3300 488D3500 		leaq	.LC6(%rip), %rsi
 7548      000000
 7549 3307 4889C7   		movq	%rax, %rdi
 7550              	.LEHB218:
 7551 330a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7551      00
 7552 330f 4889C3   		movq	%rax, %rbx
 7553 3312 488B85A0 		movq	-1632(%rbp), %rax
 7553      F9FFFF
 7554 3319 488B00   		movq	(%rax), %rax
 7555 331c 4883C010 		addq	$16, %rax
 7556 3320 488B00   		movq	(%rax), %rax
 7557 3323 488B95A0 		movq	-1632(%rbp), %rdx
 7557      F9FFFF
 7558 332a 4889D7   		movq	%rdx, %rdi
 7559 332d FFD0     		call	*%rax
 7560              	.LVL23:
 7561 332f 4889C6   		movq	%rax, %rsi
 7562 3332 4889DF   		movq	%rbx, %rdi
 7563 3335 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7563      00
  36:../ExecuteTest.h **** 	}
 7564              		.loc 7 36 0
 7565 333a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7565      00
 7566 333f 488B18   		movq	(%rax), %rbx
 7567 3342 488D85D0 		leaq	-1584(%rbp), %rax
 7567      F9FFFF
 7568 3349 4889C7   		movq	%rax, %rdi
 7569 334c E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 7569      00
  36:../ExecuteTest.h **** 	}
 7570              		.loc 7 36 0 is_stmt 0 discriminator 1
 7571 3351 4889C2   		movq	%rax, %rdx
 7572 3354 488B8590 		movq	-1648(%rbp), %rax
 7572      F9FFFF
 7573 335b 4889C6   		movq	%rax, %rsi
 7574 335e 4889DF   		movq	%rbx, %rdi
 7575 3361 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7575      00
 7576              	.LEHE218:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7577              		.loc 7 34 0 is_stmt 1
 7578 3366 488D85D0 		leaq	-1584(%rbp), %rax
 7578      F9FFFF
 7579 336d 4889C7   		movq	%rax, %rdi
 7580              	.LEHB219:
 7581 3370 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7581      00
 7582              	.LEHE219:
 7583              	.LBE139:
  32:../ExecuteTest.h **** 	{
 7584              		.loc 7 32 0
 7585 3375 E8000000 		call	__cxa_end_catch@PLT
 7585      00
 7586              	.LBE138:
 7587              		.loc 7 42 0
 7588 337a EB7D     		jmp	.L397
 7589              	.L417:
  38:../ExecuteTest.h **** 	{
 7590              		.loc 7 38 0
 7591 337c 4889C7   		movq	%rax, %rdi
 7592 337f E8000000 		call	__cxa_begin_catch@PLT
 7592      00
 7593              	.LEHB220:
  40:../ExecuteTest.h **** 	}
 7594              		.loc 7 40 0
 7595 3384 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7595      00
 7596 3389 488B00   		movq	(%rax), %rax
 7597 338c 488B8D90 		movq	-1648(%rbp), %rcx
 7597      F9FFFF
 7598 3393 488D1500 		leaq	.LC33(%rip), %rdx
 7598      000000
 7599 339a 4889CE   		movq	%rcx, %rsi
 7600 339d 4889C7   		movq	%rax, %rdi
 7601 33a0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7601      00
 7602              	.LEHE220:
 7603              	.LEHB221:
  38:../ExecuteTest.h **** 	{
 7604              		.loc 7 38 0
 7605 33a5 E8000000 		call	__cxa_end_catch@PLT
 7605      00
 7606              		.loc 7 42 0
 7607 33aa EB4D     		jmp	.L397
 7608              	.L413:
 7609 33ac 4889C3   		movq	%rax, %rbx
 7610              	.LBB141:
  27:../ExecuteTest.h **** 	{
 7611              		.loc 7 27 0
 7612 33af E8000000 		call	__cxa_end_catch@PLT
 7612      00
 7613 33b4 4889D8   		movq	%rbx, %rax
 7614 33b7 4889C7   		movq	%rax, %rdi
 7615 33ba E8000000 		call	_Unwind_Resume@PLT
 7615      00
 7616              	.LEHE221:
 7617              	.L415:
 7618 33bf 4889C3   		movq	%rax, %rbx
 7619              	.LBE141:
 7620              	.LBB142:
 7621              	.LBB140:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7622              		.loc 7 34 0
 7623 33c2 488D85D0 		leaq	-1584(%rbp), %rax
 7623      F9FFFF
 7624 33c9 4889C7   		movq	%rax, %rdi
 7625 33cc E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7625      00
 7626 33d1 EB03     		jmp	.L408
 7627              	.L414:
 7628 33d3 4889C3   		movq	%rax, %rbx
 7629              	.L408:
 7630              	.LBE140:
  32:../ExecuteTest.h **** 	{
 7631              		.loc 7 32 0
 7632 33d6 E8000000 		call	__cxa_end_catch@PLT
 7632      00
 7633 33db 4889D8   		movq	%rbx, %rax
 7634 33de 4889C7   		movq	%rax, %rdi
 7635              	.LEHB222:
 7636 33e1 E8000000 		call	_Unwind_Resume@PLT
 7636      00
 7637              	.LEHE222:
 7638              	.L416:
 7639 33e6 4889C3   		movq	%rax, %rbx
 7640              	.LBE142:
  38:../ExecuteTest.h **** 	{
 7641              		.loc 7 38 0
 7642 33e9 E8000000 		call	__cxa_end_catch@PLT
 7642      00
 7643 33ee 4889D8   		movq	%rbx, %rax
 7644 33f1 4889C7   		movq	%rax, %rdi
 7645              	.LEHB223:
 7646 33f4 E8000000 		call	_Unwind_Resume@PLT
 7646      00
 7647              	.LEHE223:
 7648              	.L397:
 7649              		.loc 7 42 0
 7650 33f9 488B45D8 		movq	-40(%rbp), %rax
 7651 33fd 64483304 		xorq	%fs:40, %rax
 7651      25280000 
 7651      00
 7652 3406 7405     		je	.L410
 7653 3408 E8000000 		call	__stack_chk_fail@PLT
 7653      00
 7654              	.L410:
 7655 340d 4881C458 		addq	$1624, %rsp
 7655      060000
 7656 3414 5B       		popq	%rbx
 7657 3415 415C     		popq	%r12
 7658 3417 415D     		popq	%r13
 7659 3419 5D       		popq	%rbp
 7660              		.cfi_def_cfa 7, 8
 7661 341a C3       		ret
 7662              		.cfi_endproc
 7663              	.LFE1499:
 7664              		.section	.gcc_except_table
 7665              		.align 4
 7666              	.LLSDA1499:
 7667 05d0 FF       		.byte	0xff
 7668 05d1 9B       		.byte	0x9b
 7669 05d2 59       		.uleb128 .LLSDATT1499-.LLSDATTD1499
 7670              	.LLSDATTD1499:
 7671 05d3 01       		.byte	0x1
 7672 05d4 43       		.uleb128 .LLSDACSE1499-.LLSDACSB1499
 7673              	.LLSDACSB1499:
 7674 05d5 2D       		.uleb128 .LEHB212-.LFB1499
 7675 05d6 05       		.uleb128 .LEHE212-.LEHB212
 7676 05d7 00       		.uleb128 0
 7677 05d8 00       		.uleb128 0
 7678 05d9 49       		.uleb128 .LEHB213-.LFB1499
 7679 05da 05       		.uleb128 .LEHE213-.LEHB213
 7680 05db D301     		.uleb128 .L411-.LFB1499
 7681 05dd 05       		.uleb128 0x5
 7682 05de 8E01     		.uleb128 .LEHB214-.LFB1499
 7683 05e0 14       		.uleb128 .LEHE214-.LEHB214
 7684 05e1 B601     		.uleb128 .L412-.LFB1499
 7685 05e3 07       		.uleb128 0x7
 7686 05e4 AC01     		.uleb128 .LEHB215-.LFB1499
 7687 05e6 05       		.uleb128 .LEHE215-.LEHB215
 7688 05e7 D301     		.uleb128 .L411-.LFB1499
 7689 05e9 05       		.uleb128 0x5
 7690 05ea F701     		.uleb128 .LEHB216-.LFB1499
 7691 05ec 8801     		.uleb128 .LEHE216-.LEHB216
 7692 05ee DA04     		.uleb128 .L413-.LFB1499
 7693 05f0 00       		.uleb128 0
 7694 05f1 A203     		.uleb128 .LEHB217-.LFB1499
 7695 05f3 05       		.uleb128 .LEHE217-.LEHB217
 7696 05f4 8105     		.uleb128 .L414-.LFB1499
 7697 05f6 00       		.uleb128 0
 7698 05f7 B803     		.uleb128 .LEHB218-.LFB1499
 7699 05f9 5C       		.uleb128 .LEHE218-.LEHB218
 7700 05fa ED04     		.uleb128 .L415-.LFB1499
 7701 05fc 00       		.uleb128 0
 7702 05fd 9E04     		.uleb128 .LEHB219-.LFB1499
 7703 05ff 05       		.uleb128 .LEHE219-.LEHB219
 7704 0600 8105     		.uleb128 .L414-.LFB1499
 7705 0602 00       		.uleb128 0
 7706 0603 B204     		.uleb128 .LEHB220-.LFB1499
 7707 0605 21       		.uleb128 .LEHE220-.LEHB220
 7708 0606 9405     		.uleb128 .L416-.LFB1499
 7709 0608 00       		.uleb128 0
 7710 0609 D304     		.uleb128 .LEHB221-.LFB1499
 7711 060b 1A       		.uleb128 .LEHE221-.LEHB221
 7712 060c 00       		.uleb128 0
 7713 060d 00       		.uleb128 0
 7714 060e 8F05     		.uleb128 .LEHB222-.LFB1499
 7715 0610 05       		.uleb128 .LEHE222-.LEHB222
 7716 0611 00       		.uleb128 0
 7717 0612 00       		.uleb128 0
 7718 0613 A205     		.uleb128 .LEHB223-.LFB1499
 7719 0615 05       		.uleb128 .LEHE223-.LEHB223
 7720 0616 00       		.uleb128 0
 7721 0617 00       		.uleb128 0
 7722              	.LLSDACSE1499:
 7723 0618 03       		.byte	0x3
 7724 0619 00       		.byte	0
 7725 061a 02       		.byte	0x2
 7726 061b 7D       		.byte	0x7d
 7727 061c 01       		.byte	0x1
 7728 061d 7D       		.byte	0x7d
 7729 061e 00       		.byte	0
 7730 061f 7D       		.byte	0x7d
 7731              		.align 4
 7732 0620 00000000 		.long	0
 7733              	
 7734 0624 00000000 		.long	DW.ref._ZTISt9exception-.
 7735 0628 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 7736              	.LLSDATT1499:
 7737              		.text
 7739              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 7740              		.align 2
 7741              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm
 7743              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm:
 7744              	.LFB1500:
 849:/usr/include/c++/7/bits/stl_vector.h **** 
 850:/usr/include/c++/7/bits/stl_vector.h ****       /**
 851:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 852:/usr/include/c++/7/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 853:/usr/include/c++/7/bits/stl_vector.h ****        *  accessed.
 854:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 855:/usr/include/c++/7/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 856:/usr/include/c++/7/bits/stl_vector.h ****        *
 857:/usr/include/c++/7/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 858:/usr/include/c++/7/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 859:/usr/include/c++/7/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 860:/usr/include/c++/7/bits/stl_vector.h ****        */
 861:/usr/include/c++/7/bits/stl_vector.h ****       const_reference
 862:/usr/include/c++/7/bits/stl_vector.h ****       at(size_type __n) const
 7745              		.loc 6 862 0
 7746              		.cfi_startproc
 7747 0000 55       		pushq	%rbp
 7748              		.cfi_def_cfa_offset 16
 7749              		.cfi_offset 6, -16
 7750 0001 4889E5   		movq	%rsp, %rbp
 7751              		.cfi_def_cfa_register 6
 7752 0004 4883EC10 		subq	$16, %rsp
 7753 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7754 000c 488975F0 		movq	%rsi, -16(%rbp)
 863:/usr/include/c++/7/bits/stl_vector.h ****       {
 864:/usr/include/c++/7/bits/stl_vector.h **** 	_M_range_check(__n);
 7755              		.loc 6 864 0
 7756 0010 488B55F0 		movq	-16(%rbp), %rdx
 7757 0014 488B45F8 		movq	-8(%rbp), %rax
 7758 0018 4889D6   		movq	%rdx, %rsi
 7759 001b 4889C7   		movq	%rax, %rdi
 7760 001e E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_rang
 7760      00
 865:/usr/include/c++/7/bits/stl_vector.h **** 	return (*this)[__n];
 7761              		.loc 6 865 0
 7762 0023 488B55F0 		movq	-16(%rbp), %rdx
 7763 0027 488B45F8 		movq	-8(%rbp), %rax
 7764 002b 4889D6   		movq	%rdx, %rsi
 7765 002e 4889C7   		movq	%rax, %rdi
 7766 0031 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
 7766      00
 866:/usr/include/c++/7/bits/stl_vector.h ****       }
 7767              		.loc 6 866 0
 7768 0036 C9       		leave
 7769              		.cfi_def_cfa 7, 8
 7770 0037 C3       		ret
 7771              		.cfi_endproc
 7772              	.LFE1500:
 7774              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev,"axG"
 7775              		.align 2
 7776              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
 7778              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:
 7779              	.LFB1526:
  81:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
 7780              		.loc 6 81 0
 7781              		.cfi_startproc
 7782 0000 55       		pushq	%rbp
 7783              		.cfi_def_cfa_offset 16
 7784              		.cfi_offset 6, -16
 7785 0001 4889E5   		movq	%rsp, %rbp
 7786              		.cfi_def_cfa_register 6
 7787 0004 4883EC10 		subq	$16, %rsp
 7788 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7789              	.LBB143:
  81:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
 7790              		.loc 6 81 0
 7791 000c 488B45F8 		movq	-8(%rbp), %rax
 7792 0010 4889C7   		movq	%rax, %rdi
 7793 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 7793      00
 7794              	.LBE143:
 7795 0018 90       		nop
 7796 0019 C9       		leave
 7797              		.cfi_def_cfa 7, 8
 7798 001a C3       		ret
 7799              		.cfi_endproc
 7800              	.LFE1526:
 7802              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7803              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_
 7804              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev,"axG",@progbits,_ZN
 7805              		.align 2
 7806              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
 7808              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:
 7809              	.LFB1528:
 126:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl() { }
 7810              		.loc 6 126 0
 7811              		.cfi_startproc
 7812 0000 55       		pushq	%rbp
 7813              		.cfi_def_cfa_offset 16
 7814              		.cfi_offset 6, -16
 7815 0001 4889E5   		movq	%rsp, %rbp
 7816              		.cfi_def_cfa_register 6
 7817 0004 4883EC10 		subq	$16, %rsp
 7818 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7819              	.LBB144:
 127:/usr/include/c++/7/bits/stl_vector.h **** 
 7820              		.loc 6 127 0
 7821 000c 488B45F8 		movq	-8(%rbp), %rax
 7822 0010 4889C7   		movq	%rax, %rdi
 7823 0013 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
 7823      00
 7824              	.LBE144:
 7825 0018 90       		nop
 7826 0019 C9       		leave
 7827              		.cfi_def_cfa 7, 8
 7828 001a C3       		ret
 7829              		.cfi_endproc
 7830              	.LFE1528:
 7832              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
 7833              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev,_ZNSt12_Vector_baseIN8UnitTes
 7834              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 7835              		.align 2
 7836              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 7838              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 7839              	.LFB1531:
 161:/usr/include/c++/7/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 7840              		.loc 6 161 0
 7841              		.cfi_startproc
 7842              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7843              		.cfi_lsda 0x1b,.LLSDA1531
 7844 0000 55       		pushq	%rbp
 7845              		.cfi_def_cfa_offset 16
 7846              		.cfi_offset 6, -16
 7847 0001 4889E5   		movq	%rsp, %rbp
 7848              		.cfi_def_cfa_register 6
 7849 0004 53       		pushq	%rbx
 7850 0005 4883EC18 		subq	$24, %rsp
 7851              		.cfi_offset 3, -24
 7852 0009 48897DE8 		movq	%rdi, -24(%rbp)
 7853              	.LBB145:
 162:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 7854              		.loc 6 162 0
 7855 000d 488B45E8 		movq	-24(%rbp), %rax
 7856 0011 488B4010 		movq	16(%rax), %rax
 163:/usr/include/c++/7/bits/stl_vector.h **** 
 7857              		.loc 6 163 0
 7858 0015 4889C2   		movq	%rax, %rdx
 7859 0018 488B45E8 		movq	-24(%rbp), %rax
 7860 001c 488B00   		movq	(%rax), %rax
 7861 001f 4829C2   		subq	%rax, %rdx
 7862 0022 4889D0   		movq	%rdx, %rax
 7863 0025 48C1F807 		sarq	$7, %rax
 162:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 7864              		.loc 6 162 0
 7865 0029 4889C2   		movq	%rax, %rdx
 7866 002c 488B45E8 		movq	-24(%rbp), %rax
 7867 0030 488B08   		movq	(%rax), %rcx
 7868 0033 488B45E8 		movq	-24(%rbp), %rax
 7869 0037 4889CE   		movq	%rcx, %rsi
 7870 003a 4889C7   		movq	%rax, %rdi
 7871              	.LEHB224:
 7872 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 7872      00
 7873              	.LEHE224:
 163:/usr/include/c++/7/bits/stl_vector.h **** 
 7874              		.loc 6 163 0
 7875 0042 488B45E8 		movq	-24(%rbp), %rax
 7876 0046 4889C7   		movq	%rax, %rdi
 7877 0049 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7877      00
 7878              	.LBE145:
 7879 004e EB1A     		jmp	.L425
 7880              	.L424:
 7881 0050 4889C3   		movq	%rax, %rbx
 7882              	.LBB146:
 7883 0053 488B45E8 		movq	-24(%rbp), %rax
 7884 0057 4889C7   		movq	%rax, %rdi
 7885 005a E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 7885      00
 7886 005f 4889D8   		movq	%rbx, %rax
 7887 0062 4889C7   		movq	%rax, %rdi
 7888              	.LEHB225:
 7889 0065 E8000000 		call	_Unwind_Resume@PLT
 7889      00
 7890              	.LEHE225:
 7891              	.L425:
 7892              	.LBE146:
 7893 006a 4883C418 		addq	$24, %rsp
 7894 006e 5B       		popq	%rbx
 7895 006f 5D       		popq	%rbp
 7896              		.cfi_def_cfa 7, 8
 7897 0070 C3       		ret
 7898              		.cfi_endproc
 7899              	.LFE1531:
 7900              		.section	.gcc_except_table
 7901              	.LLSDA1531:
 7902 062c FF       		.byte	0xff
 7903 062d FF       		.byte	0xff
 7904 062e 01       		.byte	0x1
 7905 062f 08       		.uleb128 .LLSDACSE1531-.LLSDACSB1531
 7906              	.LLSDACSB1531:
 7907 0630 3D       		.uleb128 .LEHB224-.LFB1531
 7908 0631 05       		.uleb128 .LEHE224-.LEHB224
 7909 0632 50       		.uleb128 .L424-.LFB1531
 7910 0633 00       		.uleb128 0
 7911 0634 65       		.uleb128 .LEHB225-.LFB1531
 7912 0635 05       		.uleb128 .LEHE225-.LEHB225
 7913 0636 00       		.uleb128 0
 7914 0637 00       		.uleb128 0
 7915              	.LLSDACSE1531:
 7916              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 7918              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 7919              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt12_Vector_baseIN8UnitTes
 7920              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv,
 7921              		.align 2
 7922              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 7924              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 7925              	.LFB1533:
 115:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 7926              		.loc 6 115 0
 7927              		.cfi_startproc
 7928 0000 55       		pushq	%rbp
 7929              		.cfi_def_cfa_offset 16
 7930              		.cfi_offset 6, -16
 7931 0001 4889E5   		movq	%rsp, %rbp
 7932              		.cfi_def_cfa_register 6
 7933 0004 48897DF8 		movq	%rdi, -8(%rbp)
 116:/usr/include/c++/7/bits/stl_vector.h **** 
 7934              		.loc 6 116 0
 7935 0008 488B45F8 		movq	-8(%rbp), %rax
 7936 000c 5D       		popq	%rbp
 7937              		.cfi_def_cfa 7, 8
 7938 000d C3       		ret
 7939              		.cfi_endproc
 7940              	.LFE1533:
 7942              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E,"axG",@progbits,_Z
 7943              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 7945              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:
 7946              	.LFB1534:
 7947              		.file 9 "/usr/include/c++/7/bits/stl_construct.h"
   1:/usr/include/c++/7/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/7/bits/stl_construct.h **** 
   3:/usr/include/c++/7/bits/stl_construct.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/stl_construct.h **** //
   5:/usr/include/c++/7/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/7/bits/stl_construct.h **** 
  11:/usr/include/c++/7/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/stl_construct.h **** 
  16:/usr/include/c++/7/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/stl_construct.h **** 
  20:/usr/include/c++/7/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/stl_construct.h **** 
  25:/usr/include/c++/7/bits/stl_construct.h **** /*
  26:/usr/include/c++/7/bits/stl_construct.h ****  *
  27:/usr/include/c++/7/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/7/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/7/bits/stl_construct.h ****  *
  30:/usr/include/c++/7/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/7/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/7/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/7/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/7/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/7/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/7/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/7/bits/stl_construct.h ****  *
  38:/usr/include/c++/7/bits/stl_construct.h ****  *
  39:/usr/include/c++/7/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/7/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/7/bits/stl_construct.h ****  *
  42:/usr/include/c++/7/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/7/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/7/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/7/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/7/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/7/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/7/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/7/bits/stl_construct.h ****  */
  50:/usr/include/c++/7/bits/stl_construct.h **** 
  51:/usr/include/c++/7/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/7/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/7/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/7/bits/stl_construct.h ****  */
  55:/usr/include/c++/7/bits/stl_construct.h **** 
  56:/usr/include/c++/7/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/7/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/7/bits/stl_construct.h **** 
  59:/usr/include/c++/7/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/7/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/7/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/7/bits/stl_construct.h **** 
  63:/usr/include/c++/7/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/7/bits/stl_construct.h **** {
  65:/usr/include/c++/7/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/7/bits/stl_construct.h **** 
  67:/usr/include/c++/7/bits/stl_construct.h ****   /**
  68:/usr/include/c++/7/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/7/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/7/bits/stl_construct.h ****    */
  71:/usr/include/c++/7/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/7/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/7/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/7/bits/stl_construct.h **** #else
  77:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/7/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/7/bits/stl_construct.h ****     {
  81:/usr/include/c++/7/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/7/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/7/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/7/bits/stl_construct.h ****     }
  85:/usr/include/c++/7/bits/stl_construct.h **** #endif
  86:/usr/include/c++/7/bits/stl_construct.h **** 
  87:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _T1>
  88:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  89:/usr/include/c++/7/bits/stl_construct.h ****     _Construct_novalue(_T1* __p)
  90:/usr/include/c++/7/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
  91:/usr/include/c++/7/bits/stl_construct.h **** 
  92:/usr/include/c++/7/bits/stl_construct.h ****   /**
  93:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  94:/usr/include/c++/7/bits/stl_construct.h ****    */
  95:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _Tp>
  96:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  97:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  98:/usr/include/c++/7/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  99:/usr/include/c++/7/bits/stl_construct.h **** 
 100:/usr/include/c++/7/bits/stl_construct.h ****   template<bool>
 101:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_aux
 102:/usr/include/c++/7/bits/stl_construct.h ****     {
 103:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator>
 104:/usr/include/c++/7/bits/stl_construct.h ****         static void
 105:/usr/include/c++/7/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 106:/usr/include/c++/7/bits/stl_construct.h **** 	{
 107:/usr/include/c++/7/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 108:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 109:/usr/include/c++/7/bits/stl_construct.h **** 	}
 110:/usr/include/c++/7/bits/stl_construct.h ****     };
 111:/usr/include/c++/7/bits/stl_construct.h **** 
 112:/usr/include/c++/7/bits/stl_construct.h ****   template<>
 113:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_aux<true>
 114:/usr/include/c++/7/bits/stl_construct.h ****     {
 115:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator>
 116:/usr/include/c++/7/bits/stl_construct.h ****         static void
 117:/usr/include/c++/7/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 118:/usr/include/c++/7/bits/stl_construct.h ****     };
 119:/usr/include/c++/7/bits/stl_construct.h **** 
 120:/usr/include/c++/7/bits/stl_construct.h ****   /**
 121:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 122:/usr/include/c++/7/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 123:/usr/include/c++/7/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 124:/usr/include/c++/7/bits/stl_construct.h ****    */
 125:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator>
 126:/usr/include/c++/7/bits/stl_construct.h ****     inline void
 127:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 128:/usr/include/c++/7/bits/stl_construct.h ****     {
 129:/usr/include/c++/7/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 130:/usr/include/c++/7/bits/stl_construct.h ****                        _Value_type;
 131:/usr/include/c++/7/bits/stl_construct.h **** #if __cplusplus >= 201103L
 132:/usr/include/c++/7/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 133:/usr/include/c++/7/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 134:/usr/include/c++/7/bits/stl_construct.h **** 		    "value type is destructible");
 135:/usr/include/c++/7/bits/stl_construct.h **** #endif
 136:/usr/include/c++/7/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 137:/usr/include/c++/7/bits/stl_construct.h **** 	__destroy(__first, __last);
 138:/usr/include/c++/7/bits/stl_construct.h ****     }
 139:/usr/include/c++/7/bits/stl_construct.h **** 
 140:/usr/include/c++/7/bits/stl_construct.h ****   template<bool>
 141:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_n_aux
 142:/usr/include/c++/7/bits/stl_construct.h ****     {
 143:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 144:/usr/include/c++/7/bits/stl_construct.h ****         static _ForwardIterator
 145:/usr/include/c++/7/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 146:/usr/include/c++/7/bits/stl_construct.h **** 	{
 147:/usr/include/c++/7/bits/stl_construct.h **** 	  for (; __count > 0; (void)++__first, --__count)
 148:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 149:/usr/include/c++/7/bits/stl_construct.h **** 	  return __first;
 150:/usr/include/c++/7/bits/stl_construct.h **** 	}
 151:/usr/include/c++/7/bits/stl_construct.h ****     };
 152:/usr/include/c++/7/bits/stl_construct.h **** 
 153:/usr/include/c++/7/bits/stl_construct.h ****   template<>
 154:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_n_aux<true>
 155:/usr/include/c++/7/bits/stl_construct.h ****     {
 156:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 157:/usr/include/c++/7/bits/stl_construct.h ****         static _ForwardIterator
 158:/usr/include/c++/7/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 159:/usr/include/c++/7/bits/stl_construct.h **** 	{
 160:/usr/include/c++/7/bits/stl_construct.h **** 	  std::advance(__first, __count);
 161:/usr/include/c++/7/bits/stl_construct.h **** 	  return __first;
 162:/usr/include/c++/7/bits/stl_construct.h **** 	}
 163:/usr/include/c++/7/bits/stl_construct.h ****     };
 164:/usr/include/c++/7/bits/stl_construct.h **** 
 165:/usr/include/c++/7/bits/stl_construct.h ****   /**
 166:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 167:/usr/include/c++/7/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 168:/usr/include/c++/7/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 169:/usr/include/c++/7/bits/stl_construct.h ****    */
 170:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Size>
 171:/usr/include/c++/7/bits/stl_construct.h ****     inline _ForwardIterator
 172:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy_n(_ForwardIterator __first, _Size __count)
 173:/usr/include/c++/7/bits/stl_construct.h ****     {
 174:/usr/include/c++/7/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 175:/usr/include/c++/7/bits/stl_construct.h ****                        _Value_type;
 176:/usr/include/c++/7/bits/stl_construct.h **** #if __cplusplus >= 201103L
 177:/usr/include/c++/7/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 178:/usr/include/c++/7/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 179:/usr/include/c++/7/bits/stl_construct.h **** 		    "value type is destructible");
 180:/usr/include/c++/7/bits/stl_construct.h **** #endif
 181:/usr/include/c++/7/bits/stl_construct.h ****       return std::_Destroy_n_aux<__has_trivial_destructor(_Value_type)>::
 182:/usr/include/c++/7/bits/stl_construct.h **** 	__destroy_n(__first, __count);
 183:/usr/include/c++/7/bits/stl_construct.h ****     }
 184:/usr/include/c++/7/bits/stl_construct.h **** 
 185:/usr/include/c++/7/bits/stl_construct.h ****   /**
 186:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 187:/usr/include/c++/7/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 188:/usr/include/c++/7/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 189:/usr/include/c++/7/bits/stl_construct.h ****    */
 190:/usr/include/c++/7/bits/stl_construct.h **** 
 191:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 192:/usr/include/c++/7/bits/stl_construct.h ****     void
 193:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 194:/usr/include/c++/7/bits/stl_construct.h **** 	     _Allocator& __alloc)
 195:/usr/include/c++/7/bits/stl_construct.h ****     {
 196:/usr/include/c++/7/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 197:/usr/include/c++/7/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 198:/usr/include/c++/7/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 199:/usr/include/c++/7/bits/stl_construct.h ****     }
 200:/usr/include/c++/7/bits/stl_construct.h **** 
 201:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 202:/usr/include/c++/7/bits/stl_construct.h ****     inline void
 203:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 7948              		.loc 9 203 0
 7949              		.cfi_startproc
 7950 0000 55       		pushq	%rbp
 7951              		.cfi_def_cfa_offset 16
 7952              		.cfi_offset 6, -16
 7953 0001 4889E5   		movq	%rsp, %rbp
 7954              		.cfi_def_cfa_register 6
 7955 0004 4883EC20 		subq	$32, %rsp
 7956 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7957 000c 488975F0 		movq	%rsi, -16(%rbp)
 7958 0010 488955E8 		movq	%rdx, -24(%rbp)
 204:/usr/include/c++/7/bits/stl_construct.h **** 	     allocator<_Tp>&)
 205:/usr/include/c++/7/bits/stl_construct.h ****     {
 206:/usr/include/c++/7/bits/stl_construct.h ****       _Destroy(__first, __last);
 7959              		.loc 9 206 0
 7960 0014 488B55F0 		movq	-16(%rbp), %rdx
 7961 0018 488B45F8 		movq	-8(%rbp), %rax
 7962 001c 4889D6   		movq	%rdx, %rsi
 7963 001f 4889C7   		movq	%rax, %rdi
 7964 0022 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 7964      00
 207:/usr/include/c++/7/bits/stl_construct.h ****     }
 7965              		.loc 9 207 0
 7966 0027 90       		nop
 7967 0028 C9       		leave
 7968              		.cfi_def_cfa 7, 8
 7969 0029 C3       		ret
 7970              		.cfi_endproc
 7971              	.LFE1534:
 7973              		.section	.rodata
 7974 0575 000000   		.align 8
 7975              	.LC37:
 7976 0578 76656374 		.string	"vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)"
 7976      6F723A3A 
 7976      5F4D5F72 
 7976      616E6765 
 7976      5F636865 
 7977              		.section	.text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm,"axG",@prog
 7978              		.align 2
 7979              		.weak	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
 7981              	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm:
 7982              	.LFB1543:
 822:/usr/include/c++/7/bits/stl_vector.h ****       {
 7983              		.loc 6 822 0
 7984              		.cfi_startproc
 7985 0000 55       		pushq	%rbp
 7986              		.cfi_def_cfa_offset 16
 7987              		.cfi_offset 6, -16
 7988 0001 4889E5   		movq	%rsp, %rbp
 7989              		.cfi_def_cfa_register 6
 7990 0004 4883EC10 		subq	$16, %rsp
 7991 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7992 000c 488975F0 		movq	%rsi, -16(%rbp)
 824:/usr/include/c++/7/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 7993              		.loc 6 824 0
 7994 0010 488B45F8 		movq	-8(%rbp), %rax
 7995 0014 4889C7   		movq	%rax, %rdi
 7996 0017 E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 7996      00
 7997 001c 483945F0 		cmpq	%rax, -16(%rbp)
 7998 0020 0F93C0   		setnb	%al
 7999 0023 84C0     		testb	%al, %al
 8000 0025 7427     		je	.L431
 825:/usr/include/c++/7/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 8001              		.loc 6 825 0
 8002 0027 488B45F8 		movq	-8(%rbp), %rax
 8003 002b 4889C7   		movq	%rax, %rdi
 8004 002e E8000000 		call	_ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
 8004      00
 8005 0033 4889C2   		movq	%rax, %rdx
 8006 0036 488B45F0 		movq	-16(%rbp), %rax
 8007 003a 4889C6   		movq	%rax, %rsi
 8008 003d 488D3D00 		leaq	.LC37(%rip), %rdi
 8008      000000
 8009 0044 B8000000 		movl	$0, %eax
 8009      00
 8010 0049 E8000000 		call	_ZSt24__throw_out_of_range_fmtPKcz@PLT
 8010      00
 8011              	.L431:
 829:/usr/include/c++/7/bits/stl_vector.h **** 
 8012              		.loc 6 829 0
 8013 004e 90       		nop
 8014 004f C9       		leave
 8015              		.cfi_def_cfa 7, 8
 8016 0050 C3       		ret
 8017              		.cfi_endproc
 8018              	.LFE1543:
 8020              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm,"axG",@progbits,_ZNSt6vect
 8021              		.align 2
 8022              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
 8024              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm:
 8025              	.LFB1544:
 795:/usr/include/c++/7/bits/stl_vector.h ****       {
 8026              		.loc 6 795 0
 8027              		.cfi_startproc
 8028 0000 55       		pushq	%rbp
 8029              		.cfi_def_cfa_offset 16
 8030              		.cfi_offset 6, -16
 8031 0001 4889E5   		movq	%rsp, %rbp
 8032              		.cfi_def_cfa_register 6
 8033 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8034 0008 488975F0 		movq	%rsi, -16(%rbp)
 798:/usr/include/c++/7/bits/stl_vector.h ****       }
 8035              		.loc 6 798 0
 8036 000c 488B45F8 		movq	-8(%rbp), %rax
 8037 0010 488B00   		movq	(%rax), %rax
 8038 0013 488B55F0 		movq	-16(%rbp), %rdx
 8039 0017 48C1E207 		salq	$7, %rdx
 8040 001b 4801D0   		addq	%rdx, %rax
 799:/usr/include/c++/7/bits/stl_vector.h **** 
 8041              		.loc 6 799 0
 8042 001e 5D       		popq	%rbp
 8043              		.cfi_def_cfa 7, 8
 8044 001f C3       		ret
 8045              		.cfi_endproc
 8046              	.LFE1544:
 8048              		.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE,"axG",
 8049              		.weak	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 8051              	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:
 8052              	.LFB1545:
 8053              		.file 10 "/usr/include/c++/7/bits/basic_string.h"
   1:/usr/include/c++/7/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/7/bits/basic_string.h **** 
   3:/usr/include/c++/7/bits/basic_string.h **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/basic_string.h **** //
   5:/usr/include/c++/7/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/7/bits/basic_string.h **** 
  11:/usr/include/c++/7/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/basic_string.h **** 
  16:/usr/include/c++/7/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/basic_string.h **** 
  20:/usr/include/c++/7/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/basic_string.h **** 
  25:/usr/include/c++/7/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/7/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/7/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/7/bits/basic_string.h ****  */
  29:/usr/include/c++/7/bits/basic_string.h **** 
  30:/usr/include/c++/7/bits/basic_string.h **** //
  31:/usr/include/c++/7/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/7/bits/basic_string.h **** //
  33:/usr/include/c++/7/bits/basic_string.h **** 
  34:/usr/include/c++/7/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/7/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/7/bits/basic_string.h **** 
  37:/usr/include/c++/7/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/7/bits/basic_string.h **** 
  39:/usr/include/c++/7/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/7/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/7/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/7/bits/basic_string.h **** 
  43:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/usr/include/c++/7/bits/basic_string.h **** #include <initializer_list>
  45:/usr/include/c++/7/bits/basic_string.h **** #endif
  46:/usr/include/c++/7/bits/basic_string.h **** 
  47:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
  48:/usr/include/c++/7/bits/basic_string.h **** # include <string_view>
  49:/usr/include/c++/7/bits/basic_string.h **** #endif
  50:/usr/include/c++/7/bits/basic_string.h **** 
  51:/usr/include/c++/7/bits/basic_string.h **** 
  52:/usr/include/c++/7/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/7/bits/basic_string.h **** {
  54:/usr/include/c++/7/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/7/bits/basic_string.h **** 
  56:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:/usr/include/c++/7/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:/usr/include/c++/7/bits/basic_string.h ****   /**
  59:/usr/include/c++/7/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:/usr/include/c++/7/bits/basic_string.h ****    *
  62:/usr/include/c++/7/bits/basic_string.h ****    *  @ingroup strings
  63:/usr/include/c++/7/bits/basic_string.h ****    *  @ingroup sequences
  64:/usr/include/c++/7/bits/basic_string.h ****    *
  65:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  66:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:/usr/include/c++/7/bits/basic_string.h ****    *                   char_traits<_CharT>.
  68:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:/usr/include/c++/7/bits/basic_string.h ****    *
  70:/usr/include/c++/7/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:/usr/include/c++/7/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:/usr/include/c++/7/bits/basic_string.h ****    */
  76:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:/usr/include/c++/7/bits/basic_string.h ****     class basic_string
  78:/usr/include/c++/7/bits/basic_string.h ****     {
  79:/usr/include/c++/7/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:/usr/include/c++/7/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:/usr/include/c++/7/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:/usr/include/c++/7/bits/basic_string.h **** 
  83:/usr/include/c++/7/bits/basic_string.h ****       // Types:
  84:/usr/include/c++/7/bits/basic_string.h ****     public:
  85:/usr/include/c++/7/bits/basic_string.h ****       typedef _Traits					traits_type;
  86:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:/usr/include/c++/7/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:/usr/include/c++/7/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:/usr/include/c++/7/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:/usr/include/c++/7/bits/basic_string.h **** 							const_iterator;
  97:/usr/include/c++/7/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:/usr/include/c++/7/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:/usr/include/c++/7/bits/basic_string.h **** 
 100:/usr/include/c++/7/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:/usr/include/c++/7/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:/usr/include/c++/7/bits/basic_string.h **** 
 103:/usr/include/c++/7/bits/basic_string.h ****     private:
 104:/usr/include/c++/7/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 105:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus < 201103L
 106:/usr/include/c++/7/bits/basic_string.h ****       typedef iterator __const_iterator;
 107:/usr/include/c++/7/bits/basic_string.h **** #else
 108:/usr/include/c++/7/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 109:/usr/include/c++/7/bits/basic_string.h **** #endif
 110:/usr/include/c++/7/bits/basic_string.h **** 
 111:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
 112:/usr/include/c++/7/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 113:/usr/include/c++/7/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 114:/usr/include/c++/7/bits/basic_string.h **** 
 115:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 116:/usr/include/c++/7/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 117:/usr/include/c++/7/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 118:/usr/include/c++/7/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 119:/usr/include/c++/7/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 120:/usr/include/c++/7/bits/basic_string.h **** 	  _Res>;
 121:/usr/include/c++/7/bits/basic_string.h **** 
 122:/usr/include/c++/7/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 123:/usr/include/c++/7/bits/basic_string.h ****       static __sv_type
 124:/usr/include/c++/7/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 125:/usr/include/c++/7/bits/basic_string.h ****       { return __svt; }
 126:/usr/include/c++/7/bits/basic_string.h **** 
 127:/usr/include/c++/7/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 128:/usr/include/c++/7/bits/basic_string.h ****       // allows to add an internal constructor that does not
 129:/usr/include/c++/7/bits/basic_string.h ****       // participate in overload resolution when a string_view
 130:/usr/include/c++/7/bits/basic_string.h ****       // is provided.
 131:/usr/include/c++/7/bits/basic_string.h ****       struct __sv_wrapper
 132:/usr/include/c++/7/bits/basic_string.h ****       {
 133:/usr/include/c++/7/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 134:/usr/include/c++/7/bits/basic_string.h **** 	__sv_type _M_sv;
 135:/usr/include/c++/7/bits/basic_string.h ****       };
 136:/usr/include/c++/7/bits/basic_string.h **** #endif
 137:/usr/include/c++/7/bits/basic_string.h **** 
 138:/usr/include/c++/7/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 139:/usr/include/c++/7/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 140:/usr/include/c++/7/bits/basic_string.h ****       {
 141:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus < 201103L
 142:/usr/include/c++/7/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 143:/usr/include/c++/7/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 144:/usr/include/c++/7/bits/basic_string.h **** #else
 145:/usr/include/c++/7/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 146:/usr/include/c++/7/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 147:/usr/include/c++/7/bits/basic_string.h **** 
 148:/usr/include/c++/7/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 149:/usr/include/c++/7/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 150:/usr/include/c++/7/bits/basic_string.h **** #endif
 151:/usr/include/c++/7/bits/basic_string.h **** 
 152:/usr/include/c++/7/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 153:/usr/include/c++/7/bits/basic_string.h ****       };
 154:/usr/include/c++/7/bits/basic_string.h **** 
 155:/usr/include/c++/7/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 156:/usr/include/c++/7/bits/basic_string.h ****       size_type		_M_string_length;
 157:/usr/include/c++/7/bits/basic_string.h **** 
 158:/usr/include/c++/7/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 159:/usr/include/c++/7/bits/basic_string.h **** 
 160:/usr/include/c++/7/bits/basic_string.h ****       union
 161:/usr/include/c++/7/bits/basic_string.h ****       {
 162:/usr/include/c++/7/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 163:/usr/include/c++/7/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 164:/usr/include/c++/7/bits/basic_string.h ****       };
 165:/usr/include/c++/7/bits/basic_string.h **** 
 166:/usr/include/c++/7/bits/basic_string.h ****       void
 167:/usr/include/c++/7/bits/basic_string.h ****       _M_data(pointer __p)
 168:/usr/include/c++/7/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 169:/usr/include/c++/7/bits/basic_string.h **** 
 170:/usr/include/c++/7/bits/basic_string.h ****       void
 171:/usr/include/c++/7/bits/basic_string.h ****       _M_length(size_type __length)
 172:/usr/include/c++/7/bits/basic_string.h ****       { _M_string_length = __length; }
 173:/usr/include/c++/7/bits/basic_string.h **** 
 174:/usr/include/c++/7/bits/basic_string.h ****       pointer
 175:/usr/include/c++/7/bits/basic_string.h ****       _M_data() const
 176:/usr/include/c++/7/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 177:/usr/include/c++/7/bits/basic_string.h **** 
 178:/usr/include/c++/7/bits/basic_string.h ****       pointer
 179:/usr/include/c++/7/bits/basic_string.h ****       _M_local_data()
 180:/usr/include/c++/7/bits/basic_string.h ****       {
 181:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 182:/usr/include/c++/7/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 183:/usr/include/c++/7/bits/basic_string.h **** #else
 184:/usr/include/c++/7/bits/basic_string.h **** 	return pointer(_M_local_buf);
 185:/usr/include/c++/7/bits/basic_string.h **** #endif
 186:/usr/include/c++/7/bits/basic_string.h ****       }
 187:/usr/include/c++/7/bits/basic_string.h **** 
 188:/usr/include/c++/7/bits/basic_string.h ****       const_pointer
 189:/usr/include/c++/7/bits/basic_string.h ****       _M_local_data() const
 190:/usr/include/c++/7/bits/basic_string.h ****       {
 191:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 192:/usr/include/c++/7/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 193:/usr/include/c++/7/bits/basic_string.h **** #else
 194:/usr/include/c++/7/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 195:/usr/include/c++/7/bits/basic_string.h **** #endif
 196:/usr/include/c++/7/bits/basic_string.h ****       }
 197:/usr/include/c++/7/bits/basic_string.h **** 
 198:/usr/include/c++/7/bits/basic_string.h ****       void
 199:/usr/include/c++/7/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 200:/usr/include/c++/7/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 201:/usr/include/c++/7/bits/basic_string.h **** 
 202:/usr/include/c++/7/bits/basic_string.h ****       void
 203:/usr/include/c++/7/bits/basic_string.h ****       _M_set_length(size_type __n)
 204:/usr/include/c++/7/bits/basic_string.h ****       {
 205:/usr/include/c++/7/bits/basic_string.h **** 	_M_length(__n);
 206:/usr/include/c++/7/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 207:/usr/include/c++/7/bits/basic_string.h ****       }
 208:/usr/include/c++/7/bits/basic_string.h **** 
 209:/usr/include/c++/7/bits/basic_string.h ****       bool
 210:/usr/include/c++/7/bits/basic_string.h ****       _M_is_local() const
 211:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 212:/usr/include/c++/7/bits/basic_string.h **** 
 213:/usr/include/c++/7/bits/basic_string.h ****       // Create & Destroy
 214:/usr/include/c++/7/bits/basic_string.h ****       pointer
 215:/usr/include/c++/7/bits/basic_string.h ****       _M_create(size_type&, size_type);
 216:/usr/include/c++/7/bits/basic_string.h **** 
 217:/usr/include/c++/7/bits/basic_string.h ****       void
 218:/usr/include/c++/7/bits/basic_string.h ****       _M_dispose()
 219:/usr/include/c++/7/bits/basic_string.h ****       {
 220:/usr/include/c++/7/bits/basic_string.h **** 	if (!_M_is_local())
 221:/usr/include/c++/7/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 222:/usr/include/c++/7/bits/basic_string.h ****       }
 223:/usr/include/c++/7/bits/basic_string.h **** 
 224:/usr/include/c++/7/bits/basic_string.h ****       void
 225:/usr/include/c++/7/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 226:/usr/include/c++/7/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 227:/usr/include/c++/7/bits/basic_string.h **** 
 228:/usr/include/c++/7/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 229:/usr/include/c++/7/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 230:/usr/include/c++/7/bits/basic_string.h ****       template<typename _InIterator>
 231:/usr/include/c++/7/bits/basic_string.h ****         void
 232:/usr/include/c++/7/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 233:/usr/include/c++/7/bits/basic_string.h **** 			 std::__false_type)
 234:/usr/include/c++/7/bits/basic_string.h **** 	{
 235:/usr/include/c++/7/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 236:/usr/include/c++/7/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 237:/usr/include/c++/7/bits/basic_string.h **** 	}
 238:/usr/include/c++/7/bits/basic_string.h **** 
 239:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 240:/usr/include/c++/7/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 241:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Integer>
 242:/usr/include/c++/7/bits/basic_string.h ****         void
 243:/usr/include/c++/7/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 244:/usr/include/c++/7/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 245:/usr/include/c++/7/bits/basic_string.h **** 
 246:/usr/include/c++/7/bits/basic_string.h ****       void
 247:/usr/include/c++/7/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 248:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__req, __c); }
 249:/usr/include/c++/7/bits/basic_string.h **** 
 250:/usr/include/c++/7/bits/basic_string.h ****       template<typename _InIterator>
 251:/usr/include/c++/7/bits/basic_string.h ****         void
 252:/usr/include/c++/7/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 253:/usr/include/c++/7/bits/basic_string.h **** 	{
 254:/usr/include/c++/7/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 255:/usr/include/c++/7/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 256:/usr/include/c++/7/bits/basic_string.h ****         }
 257:/usr/include/c++/7/bits/basic_string.h **** 
 258:/usr/include/c++/7/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 259:/usr/include/c++/7/bits/basic_string.h ****       template<typename _InIterator>
 260:/usr/include/c++/7/bits/basic_string.h ****         void
 261:/usr/include/c++/7/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 262:/usr/include/c++/7/bits/basic_string.h **** 		     std::input_iterator_tag);
 263:/usr/include/c++/7/bits/basic_string.h **** 
 264:/usr/include/c++/7/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 265:/usr/include/c++/7/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 266:/usr/include/c++/7/bits/basic_string.h ****       template<typename _FwdIterator>
 267:/usr/include/c++/7/bits/basic_string.h ****         void
 268:/usr/include/c++/7/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 269:/usr/include/c++/7/bits/basic_string.h **** 		     std::forward_iterator_tag);
 270:/usr/include/c++/7/bits/basic_string.h **** 
 271:/usr/include/c++/7/bits/basic_string.h ****       void
 272:/usr/include/c++/7/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 273:/usr/include/c++/7/bits/basic_string.h **** 
 274:/usr/include/c++/7/bits/basic_string.h ****       allocator_type&
 275:/usr/include/c++/7/bits/basic_string.h ****       _M_get_allocator()
 276:/usr/include/c++/7/bits/basic_string.h ****       { return _M_dataplus; }
 277:/usr/include/c++/7/bits/basic_string.h **** 
 278:/usr/include/c++/7/bits/basic_string.h ****       const allocator_type&
 279:/usr/include/c++/7/bits/basic_string.h ****       _M_get_allocator() const
 280:/usr/include/c++/7/bits/basic_string.h ****       { return _M_dataplus; }
 281:/usr/include/c++/7/bits/basic_string.h **** 
 282:/usr/include/c++/7/bits/basic_string.h ****     private:
 283:/usr/include/c++/7/bits/basic_string.h **** 
 284:/usr/include/c++/7/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 285:/usr/include/c++/7/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 286:/usr/include/c++/7/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 287:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 288:/usr/include/c++/7/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 289:/usr/include/c++/7/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 290:/usr/include/c++/7/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 291:/usr/include/c++/7/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 292:/usr/include/c++/7/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 293:/usr/include/c++/7/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 294:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
 295:/usr/include/c++/7/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 296:/usr/include/c++/7/bits/basic_string.h **** #endif
 297:/usr/include/c++/7/bits/basic_string.h **** 
 298:/usr/include/c++/7/bits/basic_string.h ****       size_type
 299:/usr/include/c++/7/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 300:/usr/include/c++/7/bits/basic_string.h ****       {
 301:/usr/include/c++/7/bits/basic_string.h **** 	if (__pos > this->size())
 302:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 303:/usr/include/c++/7/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 304:/usr/include/c++/7/bits/basic_string.h **** 				   __s, __pos, this->size());
 305:/usr/include/c++/7/bits/basic_string.h **** 	return __pos;
 306:/usr/include/c++/7/bits/basic_string.h ****       }
 307:/usr/include/c++/7/bits/basic_string.h **** 
 308:/usr/include/c++/7/bits/basic_string.h ****       void
 309:/usr/include/c++/7/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 310:/usr/include/c++/7/bits/basic_string.h ****       {
 311:/usr/include/c++/7/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 312:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 313:/usr/include/c++/7/bits/basic_string.h ****       }
 314:/usr/include/c++/7/bits/basic_string.h **** 
 315:/usr/include/c++/7/bits/basic_string.h **** 
 316:/usr/include/c++/7/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 317:/usr/include/c++/7/bits/basic_string.h ****       size_type
 318:/usr/include/c++/7/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 319:/usr/include/c++/7/bits/basic_string.h ****       {
 320:/usr/include/c++/7/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 321:/usr/include/c++/7/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 322:/usr/include/c++/7/bits/basic_string.h ****       }
 323:/usr/include/c++/7/bits/basic_string.h **** 
 324:/usr/include/c++/7/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 325:/usr/include/c++/7/bits/basic_string.h ****       bool
 326:/usr/include/c++/7/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 327:/usr/include/c++/7/bits/basic_string.h ****       {
 328:/usr/include/c++/7/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 329:/usr/include/c++/7/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 330:/usr/include/c++/7/bits/basic_string.h ****       }
 331:/usr/include/c++/7/bits/basic_string.h **** 
 332:/usr/include/c++/7/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 333:/usr/include/c++/7/bits/basic_string.h ****       // traits_type::copy/move/assign.
 334:/usr/include/c++/7/bits/basic_string.h ****       static void
 335:/usr/include/c++/7/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 336:/usr/include/c++/7/bits/basic_string.h ****       {
 337:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
 338:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 339:/usr/include/c++/7/bits/basic_string.h **** 	else
 340:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 341:/usr/include/c++/7/bits/basic_string.h ****       }
 342:/usr/include/c++/7/bits/basic_string.h **** 
 343:/usr/include/c++/7/bits/basic_string.h ****       static void
 344:/usr/include/c++/7/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 345:/usr/include/c++/7/bits/basic_string.h ****       {
 346:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
 347:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 348:/usr/include/c++/7/bits/basic_string.h **** 	else
 349:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 350:/usr/include/c++/7/bits/basic_string.h ****       }
 351:/usr/include/c++/7/bits/basic_string.h **** 
 352:/usr/include/c++/7/bits/basic_string.h ****       static void
 353:/usr/include/c++/7/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 354:/usr/include/c++/7/bits/basic_string.h ****       {
 355:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
 356:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 357:/usr/include/c++/7/bits/basic_string.h **** 	else
 358:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 359:/usr/include/c++/7/bits/basic_string.h ****       }
 360:/usr/include/c++/7/bits/basic_string.h **** 
 361:/usr/include/c++/7/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 362:/usr/include/c++/7/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 363:/usr/include/c++/7/bits/basic_string.h ****       template<class _Iterator>
 364:/usr/include/c++/7/bits/basic_string.h ****         static void
 365:/usr/include/c++/7/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 366:/usr/include/c++/7/bits/basic_string.h ****         {
 367:/usr/include/c++/7/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 368:/usr/include/c++/7/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 369:/usr/include/c++/7/bits/basic_string.h **** 	}
 370:/usr/include/c++/7/bits/basic_string.h **** 
 371:/usr/include/c++/7/bits/basic_string.h ****       static void
 372:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 373:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 374:/usr/include/c++/7/bits/basic_string.h **** 
 375:/usr/include/c++/7/bits/basic_string.h ****       static void
 376:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 377:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 378:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 379:/usr/include/c++/7/bits/basic_string.h **** 
 380:/usr/include/c++/7/bits/basic_string.h ****       static void
 381:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 382:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 383:/usr/include/c++/7/bits/basic_string.h **** 
 384:/usr/include/c++/7/bits/basic_string.h ****       static void
 385:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 386:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 387:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 388:/usr/include/c++/7/bits/basic_string.h **** 
 389:/usr/include/c++/7/bits/basic_string.h ****       static int
 390:/usr/include/c++/7/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 391:/usr/include/c++/7/bits/basic_string.h ****       {
 392:/usr/include/c++/7/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 393:/usr/include/c++/7/bits/basic_string.h **** 
 394:/usr/include/c++/7/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 395:/usr/include/c++/7/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 396:/usr/include/c++/7/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 397:/usr/include/c++/7/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 398:/usr/include/c++/7/bits/basic_string.h **** 	else
 399:/usr/include/c++/7/bits/basic_string.h **** 	  return int(__d);
 400:/usr/include/c++/7/bits/basic_string.h ****       }
 401:/usr/include/c++/7/bits/basic_string.h **** 
 402:/usr/include/c++/7/bits/basic_string.h ****       void
 403:/usr/include/c++/7/bits/basic_string.h ****       _M_assign(const basic_string&);
 404:/usr/include/c++/7/bits/basic_string.h **** 
 405:/usr/include/c++/7/bits/basic_string.h ****       void
 406:/usr/include/c++/7/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 407:/usr/include/c++/7/bits/basic_string.h **** 		size_type __len2);
 408:/usr/include/c++/7/bits/basic_string.h **** 
 409:/usr/include/c++/7/bits/basic_string.h ****       void
 410:/usr/include/c++/7/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 411:/usr/include/c++/7/bits/basic_string.h **** 
 412:/usr/include/c++/7/bits/basic_string.h ****     public:
 413:/usr/include/c++/7/bits/basic_string.h ****       // Construct/copy/destroy:
 414:/usr/include/c++/7/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 415:/usr/include/c++/7/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 416:/usr/include/c++/7/bits/basic_string.h **** 
 417:/usr/include/c++/7/bits/basic_string.h ****       /**
 418:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 419:/usr/include/c++/7/bits/basic_string.h ****        */
 420:/usr/include/c++/7/bits/basic_string.h ****       basic_string()
 421:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 422:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 423:/usr/include/c++/7/bits/basic_string.h ****       { _M_set_length(0); }
 424:/usr/include/c++/7/bits/basic_string.h **** 
 425:/usr/include/c++/7/bits/basic_string.h ****       /**
 426:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 427:/usr/include/c++/7/bits/basic_string.h ****        */
 428:/usr/include/c++/7/bits/basic_string.h ****       explicit
 429:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 430:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 431:/usr/include/c++/7/bits/basic_string.h ****       { _M_set_length(0); }
 432:/usr/include/c++/7/bits/basic_string.h **** 
 433:/usr/include/c++/7/bits/basic_string.h ****       /**
 434:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 435:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 436:/usr/include/c++/7/bits/basic_string.h ****        */
 437:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str)
 438:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 439:/usr/include/c++/7/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 440:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 441:/usr/include/c++/7/bits/basic_string.h **** 
 442:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 443:/usr/include/c++/7/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 444:/usr/include/c++/7/bits/basic_string.h ****       /**
 445:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 446:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 447:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 448:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 449:/usr/include/c++/7/bits/basic_string.h ****        */
 450:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 451:/usr/include/c++/7/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 452:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 453:/usr/include/c++/7/bits/basic_string.h ****       {
 454:/usr/include/c++/7/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 455:/usr/include/c++/7/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 456:/usr/include/c++/7/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 457:/usr/include/c++/7/bits/basic_string.h ****       }
 458:/usr/include/c++/7/bits/basic_string.h **** 
 459:/usr/include/c++/7/bits/basic_string.h ****       /**
 460:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 461:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 462:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 463:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 464:/usr/include/c++/7/bits/basic_string.h ****        */
 465:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 466:/usr/include/c++/7/bits/basic_string.h **** 		   size_type __n)
 467:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 468:/usr/include/c++/7/bits/basic_string.h ****       {
 469:/usr/include/c++/7/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 470:/usr/include/c++/7/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 471:/usr/include/c++/7/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 472:/usr/include/c++/7/bits/basic_string.h ****       }
 473:/usr/include/c++/7/bits/basic_string.h **** 
 474:/usr/include/c++/7/bits/basic_string.h ****       /**
 475:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 476:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 477:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 478:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 479:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 480:/usr/include/c++/7/bits/basic_string.h ****        */
 481:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 482:/usr/include/c++/7/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 483:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 484:/usr/include/c++/7/bits/basic_string.h ****       {
 485:/usr/include/c++/7/bits/basic_string.h **** 	const _CharT* __start
 486:/usr/include/c++/7/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 487:/usr/include/c++/7/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 488:/usr/include/c++/7/bits/basic_string.h ****       }
 489:/usr/include/c++/7/bits/basic_string.h **** 
 490:/usr/include/c++/7/bits/basic_string.h ****       /**
 491:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 492:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source character %array.
 493:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 494:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 495:/usr/include/c++/7/bits/basic_string.h ****        *
 496:/usr/include/c++/7/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 497:/usr/include/c++/7/bits/basic_string.h ****        *  has no special meaning.
 498:/usr/include/c++/7/bits/basic_string.h ****        */
 499:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 500:/usr/include/c++/7/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 501:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 502:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 503:/usr/include/c++/7/bits/basic_string.h **** 
 504:/usr/include/c++/7/bits/basic_string.h ****       /**
 505:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 506:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source C string.
 507:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 508:/usr/include/c++/7/bits/basic_string.h ****        */
 509:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 510:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 511:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 512:/usr/include/c++/7/bits/basic_string.h **** 
 513:/usr/include/c++/7/bits/basic_string.h ****       /**
 514:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 515:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters.
 516:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Character to use.
 517:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 518:/usr/include/c++/7/bits/basic_string.h ****        */
 519:/usr/include/c++/7/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 520:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 521:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__n, __c); }
 522:/usr/include/c++/7/bits/basic_string.h **** 
 523:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 524:/usr/include/c++/7/bits/basic_string.h ****       /**
 525:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Move construct string.
 526:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 527:/usr/include/c++/7/bits/basic_string.h ****        *
 528:/usr/include/c++/7/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 529:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 530:/usr/include/c++/7/bits/basic_string.h ****        **/
 531:/usr/include/c++/7/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 532:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 533:/usr/include/c++/7/bits/basic_string.h ****       {
 534:/usr/include/c++/7/bits/basic_string.h **** 	if (__str._M_is_local())
 535:/usr/include/c++/7/bits/basic_string.h **** 	  {
 536:/usr/include/c++/7/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 537:/usr/include/c++/7/bits/basic_string.h **** 			      _S_local_capacity + 1);
 538:/usr/include/c++/7/bits/basic_string.h **** 	  }
 539:/usr/include/c++/7/bits/basic_string.h **** 	else
 540:/usr/include/c++/7/bits/basic_string.h **** 	  {
 541:/usr/include/c++/7/bits/basic_string.h **** 	    _M_data(__str._M_data());
 542:/usr/include/c++/7/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 543:/usr/include/c++/7/bits/basic_string.h **** 	  }
 544:/usr/include/c++/7/bits/basic_string.h **** 
 545:/usr/include/c++/7/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 546:/usr/include/c++/7/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 547:/usr/include/c++/7/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 548:/usr/include/c++/7/bits/basic_string.h **** 	_M_length(__str.length());
 549:/usr/include/c++/7/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 550:/usr/include/c++/7/bits/basic_string.h **** 	__str._M_set_length(0);
 551:/usr/include/c++/7/bits/basic_string.h ****       }
 552:/usr/include/c++/7/bits/basic_string.h **** 
 553:/usr/include/c++/7/bits/basic_string.h ****       /**
 554:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 555:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 556:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 557:/usr/include/c++/7/bits/basic_string.h ****        */
 558:/usr/include/c++/7/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 559:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 560:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 561:/usr/include/c++/7/bits/basic_string.h **** 
 562:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 563:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 564:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 565:/usr/include/c++/7/bits/basic_string.h **** 
 566:/usr/include/c++/7/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 567:/usr/include/c++/7/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 568:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 569:/usr/include/c++/7/bits/basic_string.h ****       {
 570:/usr/include/c++/7/bits/basic_string.h **** 	if (__str._M_is_local())
 571:/usr/include/c++/7/bits/basic_string.h **** 	  {
 572:/usr/include/c++/7/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 573:/usr/include/c++/7/bits/basic_string.h **** 			      _S_local_capacity + 1);
 574:/usr/include/c++/7/bits/basic_string.h **** 	    _M_length(__str.length());
 575:/usr/include/c++/7/bits/basic_string.h **** 	    __str._M_set_length(0);
 576:/usr/include/c++/7/bits/basic_string.h **** 	  }
 577:/usr/include/c++/7/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 578:/usr/include/c++/7/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 579:/usr/include/c++/7/bits/basic_string.h **** 	  {
 580:/usr/include/c++/7/bits/basic_string.h **** 	    _M_data(__str._M_data());
 581:/usr/include/c++/7/bits/basic_string.h **** 	    _M_length(__str.length());
 582:/usr/include/c++/7/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 583:/usr/include/c++/7/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 584:/usr/include/c++/7/bits/basic_string.h **** 	    __str._M_set_length(0);
 585:/usr/include/c++/7/bits/basic_string.h **** 	  }
 586:/usr/include/c++/7/bits/basic_string.h **** 	else
 587:/usr/include/c++/7/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 588:/usr/include/c++/7/bits/basic_string.h ****       }
 589:/usr/include/c++/7/bits/basic_string.h **** 
 590:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
 591:/usr/include/c++/7/bits/basic_string.h **** 
 592:/usr/include/c++/7/bits/basic_string.h ****       /**
 593:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 594:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __beg  Start of range.
 595:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __end  End of range.
 596:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 597:/usr/include/c++/7/bits/basic_string.h ****        */
 598:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 599:/usr/include/c++/7/bits/basic_string.h ****       template<typename _InputIterator,
 600:/usr/include/c++/7/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 601:/usr/include/c++/7/bits/basic_string.h **** #else
 602:/usr/include/c++/7/bits/basic_string.h ****       template<typename _InputIterator>
 603:/usr/include/c++/7/bits/basic_string.h **** #endif
 604:/usr/include/c++/7/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 605:/usr/include/c++/7/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 606:/usr/include/c++/7/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 607:/usr/include/c++/7/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 608:/usr/include/c++/7/bits/basic_string.h **** 
 609:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
 610:/usr/include/c++/7/bits/basic_string.h ****       /**
 611:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 612:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 613:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 614:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 615:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 616:/usr/include/c++/7/bits/basic_string.h ****        */
 617:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 618:/usr/include/c++/7/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 619:/usr/include/c++/7/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 620:/usr/include/c++/7/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 621:/usr/include/c++/7/bits/basic_string.h **** 
 622:/usr/include/c++/7/bits/basic_string.h ****       /**
 623:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 624:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 625:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 626:/usr/include/c++/7/bits/basic_string.h ****        */
 627:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 628:/usr/include/c++/7/bits/basic_string.h **** 	explicit
 629:/usr/include/c++/7/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 630:/usr/include/c++/7/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 631:/usr/include/c++/7/bits/basic_string.h **** 
 632:/usr/include/c++/7/bits/basic_string.h ****       /**
 633:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 634:/usr/include/c++/7/bits/basic_string.h ****        *          wrapper.
 635:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 636:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 637:/usr/include/c++/7/bits/basic_string.h ****        */
 638:/usr/include/c++/7/bits/basic_string.h ****       explicit
 639:/usr/include/c++/7/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 640:/usr/include/c++/7/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 641:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
 642:/usr/include/c++/7/bits/basic_string.h **** 
 643:/usr/include/c++/7/bits/basic_string.h ****       /**
 644:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 645:/usr/include/c++/7/bits/basic_string.h ****        */
 646:/usr/include/c++/7/bits/basic_string.h ****       ~basic_string()
 647:/usr/include/c++/7/bits/basic_string.h ****       { _M_dispose(); }
 648:/usr/include/c++/7/bits/basic_string.h **** 
 649:/usr/include/c++/7/bits/basic_string.h ****       /**
 650:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 651:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 652:/usr/include/c++/7/bits/basic_string.h ****        */
 653:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
 654:/usr/include/c++/7/bits/basic_string.h ****       operator=(const basic_string& __str)
 655:/usr/include/c++/7/bits/basic_string.h ****       {
 656:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 657:/usr/include/c++/7/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
 658:/usr/include/c++/7/bits/basic_string.h **** 	  {
 659:/usr/include/c++/7/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
 660:/usr/include/c++/7/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
 661:/usr/include/c++/7/bits/basic_string.h **** 	      {
 662:/usr/include/c++/7/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
 663:/usr/include/c++/7/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
 664:/usr/include/c++/7/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
 665:/usr/include/c++/7/bits/basic_string.h **** 		  {
 666:/usr/include/c++/7/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 667:/usr/include/c++/7/bits/basic_string.h **** 		    _M_data(_M_local_data());
 668:/usr/include/c++/7/bits/basic_string.h **** 		    _M_set_length(0);
 669:/usr/include/c++/7/bits/basic_string.h **** 		  }
 670:/usr/include/c++/7/bits/basic_string.h **** 		else
 671:/usr/include/c++/7/bits/basic_string.h **** 		  {
 672:/usr/include/c++/7/bits/basic_string.h **** 		    const auto __len = __str.size();
 673:/usr/include/c++/7/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
 674:/usr/include/c++/7/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
 675:/usr/include/c++/7/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
 676:/usr/include/c++/7/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 677:/usr/include/c++/7/bits/basic_string.h **** 		    _M_data(__ptr);
 678:/usr/include/c++/7/bits/basic_string.h **** 		    _M_capacity(__len);
 679:/usr/include/c++/7/bits/basic_string.h **** 		    _M_set_length(__len);
 680:/usr/include/c++/7/bits/basic_string.h **** 		  }
 681:/usr/include/c++/7/bits/basic_string.h **** 	      }
 682:/usr/include/c++/7/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
 683:/usr/include/c++/7/bits/basic_string.h **** 	  }
 684:/usr/include/c++/7/bits/basic_string.h **** #endif
 685:/usr/include/c++/7/bits/basic_string.h **** 	return this->assign(__str);
 686:/usr/include/c++/7/bits/basic_string.h ****       }
 687:/usr/include/c++/7/bits/basic_string.h **** 
 688:/usr/include/c++/7/bits/basic_string.h ****       /**
 689:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 690:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 691:/usr/include/c++/7/bits/basic_string.h ****        */
 692:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
 693:/usr/include/c++/7/bits/basic_string.h ****       operator=(const _CharT* __s)
 694:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__s); }
 695:/usr/include/c++/7/bits/basic_string.h **** 
 696:/usr/include/c++/7/bits/basic_string.h ****       /**
 697:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 698:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Source character.
 699:/usr/include/c++/7/bits/basic_string.h ****        *
 700:/usr/include/c++/7/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 701:/usr/include/c++/7/bits/basic_string.h ****        *  (*this)[0] == @a c.
 702:/usr/include/c++/7/bits/basic_string.h ****        */
 703:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
 704:/usr/include/c++/7/bits/basic_string.h ****       operator=(_CharT __c)
 705:/usr/include/c++/7/bits/basic_string.h ****       {
 706:/usr/include/c++/7/bits/basic_string.h **** 	this->assign(1, __c);
 707:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
 708:/usr/include/c++/7/bits/basic_string.h ****       }
 709:/usr/include/c++/7/bits/basic_string.h **** 
 710:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 711:/usr/include/c++/7/bits/basic_string.h ****       /**
 712:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 713:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 714:/usr/include/c++/7/bits/basic_string.h ****        *
 715:/usr/include/c++/7/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 716:/usr/include/c++/7/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 717:/usr/include/c++/7/bits/basic_string.h ****        **/
 718:/usr/include/c++/7/bits/basic_string.h ****       // PR 58265, this should be noexcept.
 719:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 720:/usr/include/c++/7/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 721:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
 722:/usr/include/c++/7/bits/basic_string.h ****       operator=(basic_string&& __str)
 723:/usr/include/c++/7/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 724:/usr/include/c++/7/bits/basic_string.h ****       {
 725:/usr/include/c++/7/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 726:/usr/include/c++/7/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 727:/usr/include/c++/7/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 728:/usr/include/c++/7/bits/basic_string.h **** 	  {
 729:/usr/include/c++/7/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 730:/usr/include/c++/7/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 731:/usr/include/c++/7/bits/basic_string.h **** 	    _M_data(_M_local_data());
 732:/usr/include/c++/7/bits/basic_string.h **** 	    _M_set_length(0);
 733:/usr/include/c++/7/bits/basic_string.h **** 	  }
 734:/usr/include/c++/7/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 735:/usr/include/c++/7/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 736:/usr/include/c++/7/bits/basic_string.h **** 
 737:/usr/include/c++/7/bits/basic_string.h **** 	if (!__str._M_is_local()
 738:/usr/include/c++/7/bits/basic_string.h **** 	    && (_Alloc_traits::_S_propagate_on_move_assign()
 739:/usr/include/c++/7/bits/basic_string.h **** 	      || _Alloc_traits::_S_always_equal()))
 740:/usr/include/c++/7/bits/basic_string.h **** 	  {
 741:/usr/include/c++/7/bits/basic_string.h **** 	    pointer __data = nullptr;
 742:/usr/include/c++/7/bits/basic_string.h **** 	    size_type __capacity;
 743:/usr/include/c++/7/bits/basic_string.h **** 	    if (!_M_is_local())
 744:/usr/include/c++/7/bits/basic_string.h **** 	      {
 745:/usr/include/c++/7/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 746:/usr/include/c++/7/bits/basic_string.h **** 		  {
 747:/usr/include/c++/7/bits/basic_string.h **** 		    __data = _M_data();
 748:/usr/include/c++/7/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 749:/usr/include/c++/7/bits/basic_string.h **** 		  }
 750:/usr/include/c++/7/bits/basic_string.h **** 		else
 751:/usr/include/c++/7/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 752:/usr/include/c++/7/bits/basic_string.h **** 	      }
 753:/usr/include/c++/7/bits/basic_string.h **** 
 754:/usr/include/c++/7/bits/basic_string.h **** 	    _M_data(__str._M_data());
 755:/usr/include/c++/7/bits/basic_string.h **** 	    _M_length(__str.length());
 756:/usr/include/c++/7/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 757:/usr/include/c++/7/bits/basic_string.h **** 	    if (__data)
 758:/usr/include/c++/7/bits/basic_string.h **** 	      {
 759:/usr/include/c++/7/bits/basic_string.h **** 		__str._M_data(__data);
 760:/usr/include/c++/7/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 761:/usr/include/c++/7/bits/basic_string.h **** 	      }
 762:/usr/include/c++/7/bits/basic_string.h **** 	    else
 763:/usr/include/c++/7/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 764:/usr/include/c++/7/bits/basic_string.h **** 	  }
 765:/usr/include/c++/7/bits/basic_string.h **** 	else
 766:/usr/include/c++/7/bits/basic_string.h **** 	    assign(__str);
 767:/usr/include/c++/7/bits/basic_string.h **** 	__str.clear();
 768:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
 769:/usr/include/c++/7/bits/basic_string.h ****       }
 770:/usr/include/c++/7/bits/basic_string.h **** 
 771:/usr/include/c++/7/bits/basic_string.h ****       /**
 772:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 773:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 774:/usr/include/c++/7/bits/basic_string.h ****        */
 775:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
 776:/usr/include/c++/7/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 777:/usr/include/c++/7/bits/basic_string.h ****       {
 778:/usr/include/c++/7/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 779:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
 780:/usr/include/c++/7/bits/basic_string.h ****       }
 781:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
 782:/usr/include/c++/7/bits/basic_string.h **** 
 783:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
 784:/usr/include/c++/7/bits/basic_string.h ****       /**
 785:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 786:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 787:/usr/include/c++/7/bits/basic_string.h ****        */
 788:/usr/include/c++/7/bits/basic_string.h ****      template<typename _Tp>
 789:/usr/include/c++/7/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 790:/usr/include/c++/7/bits/basic_string.h ****        operator=(const _Tp& __svt)
 791:/usr/include/c++/7/bits/basic_string.h ****        { return this->assign(__svt); }
 792:/usr/include/c++/7/bits/basic_string.h **** 
 793:/usr/include/c++/7/bits/basic_string.h ****       /**
 794:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 795:/usr/include/c++/7/bits/basic_string.h ****        *  @return A string_view.
 796:/usr/include/c++/7/bits/basic_string.h ****        */
 797:/usr/include/c++/7/bits/basic_string.h ****       operator __sv_type() const noexcept
 798:/usr/include/c++/7/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 799:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
 800:/usr/include/c++/7/bits/basic_string.h **** 
 801:/usr/include/c++/7/bits/basic_string.h ****       // Iterators:
 802:/usr/include/c++/7/bits/basic_string.h ****       /**
 803:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 804:/usr/include/c++/7/bits/basic_string.h ****        *  the %string.
 805:/usr/include/c++/7/bits/basic_string.h ****        */
 806:/usr/include/c++/7/bits/basic_string.h ****       iterator
 807:/usr/include/c++/7/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 808:/usr/include/c++/7/bits/basic_string.h ****       { return iterator(_M_data()); }
 809:/usr/include/c++/7/bits/basic_string.h **** 
 810:/usr/include/c++/7/bits/basic_string.h ****       /**
 811:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 812:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.
 813:/usr/include/c++/7/bits/basic_string.h ****        */
 814:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
 815:/usr/include/c++/7/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 816:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 817:/usr/include/c++/7/bits/basic_string.h **** 
 818:/usr/include/c++/7/bits/basic_string.h ****       /**
 819:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 820:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.
 821:/usr/include/c++/7/bits/basic_string.h ****        */
 822:/usr/include/c++/7/bits/basic_string.h ****       iterator
 823:/usr/include/c++/7/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 824:/usr/include/c++/7/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 825:/usr/include/c++/7/bits/basic_string.h **** 
 826:/usr/include/c++/7/bits/basic_string.h ****       /**
 827:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 828:/usr/include/c++/7/bits/basic_string.h ****        *  last character in the %string.
 829:/usr/include/c++/7/bits/basic_string.h ****        */
 830:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
 831:/usr/include/c++/7/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 832:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 833:/usr/include/c++/7/bits/basic_string.h **** 
 834:/usr/include/c++/7/bits/basic_string.h ****       /**
 835:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 836:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 837:/usr/include/c++/7/bits/basic_string.h ****        *  order.
 838:/usr/include/c++/7/bits/basic_string.h ****        */
 839:/usr/include/c++/7/bits/basic_string.h ****       reverse_iterator
 840:/usr/include/c++/7/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 841:/usr/include/c++/7/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 842:/usr/include/c++/7/bits/basic_string.h **** 
 843:/usr/include/c++/7/bits/basic_string.h ****       /**
 844:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 845:/usr/include/c++/7/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 846:/usr/include/c++/7/bits/basic_string.h ****        *  reverse element order.
 847:/usr/include/c++/7/bits/basic_string.h ****        */
 848:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
 849:/usr/include/c++/7/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 850:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 851:/usr/include/c++/7/bits/basic_string.h **** 
 852:/usr/include/c++/7/bits/basic_string.h ****       /**
 853:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 854:/usr/include/c++/7/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 855:/usr/include/c++/7/bits/basic_string.h ****        *  element order.
 856:/usr/include/c++/7/bits/basic_string.h ****        */
 857:/usr/include/c++/7/bits/basic_string.h ****       reverse_iterator
 858:/usr/include/c++/7/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 859:/usr/include/c++/7/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 860:/usr/include/c++/7/bits/basic_string.h **** 
 861:/usr/include/c++/7/bits/basic_string.h ****       /**
 862:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 863:/usr/include/c++/7/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 864:/usr/include/c++/7/bits/basic_string.h ****        *  is done in reverse element order.
 865:/usr/include/c++/7/bits/basic_string.h ****        */
 866:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
 867:/usr/include/c++/7/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 868:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 869:/usr/include/c++/7/bits/basic_string.h **** 
 870:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 871:/usr/include/c++/7/bits/basic_string.h ****       /**
 872:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 873:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.
 874:/usr/include/c++/7/bits/basic_string.h ****        */
 875:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
 876:/usr/include/c++/7/bits/basic_string.h ****       cbegin() const noexcept
 877:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 878:/usr/include/c++/7/bits/basic_string.h **** 
 879:/usr/include/c++/7/bits/basic_string.h ****       /**
 880:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 881:/usr/include/c++/7/bits/basic_string.h ****        *  last character in the %string.
 882:/usr/include/c++/7/bits/basic_string.h ****        */
 883:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
 884:/usr/include/c++/7/bits/basic_string.h ****       cend() const noexcept
 885:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 886:/usr/include/c++/7/bits/basic_string.h **** 
 887:/usr/include/c++/7/bits/basic_string.h ****       /**
 888:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 889:/usr/include/c++/7/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 890:/usr/include/c++/7/bits/basic_string.h ****        *  reverse element order.
 891:/usr/include/c++/7/bits/basic_string.h ****        */
 892:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
 893:/usr/include/c++/7/bits/basic_string.h ****       crbegin() const noexcept
 894:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 895:/usr/include/c++/7/bits/basic_string.h **** 
 896:/usr/include/c++/7/bits/basic_string.h ****       /**
 897:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:/usr/include/c++/7/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 899:/usr/include/c++/7/bits/basic_string.h ****        *  is done in reverse element order.
 900:/usr/include/c++/7/bits/basic_string.h ****        */
 901:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
 902:/usr/include/c++/7/bits/basic_string.h ****       crend() const noexcept
 903:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 904:/usr/include/c++/7/bits/basic_string.h **** #endif
 905:/usr/include/c++/7/bits/basic_string.h **** 
 906:/usr/include/c++/7/bits/basic_string.h ****     public:
 907:/usr/include/c++/7/bits/basic_string.h ****       // Capacity:
 908:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 909:/usr/include/c++/7/bits/basic_string.h ****       ///  null-termination.
 910:/usr/include/c++/7/bits/basic_string.h ****       size_type
 911:/usr/include/c++/7/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 912:/usr/include/c++/7/bits/basic_string.h ****       { return _M_string_length; }
 913:/usr/include/c++/7/bits/basic_string.h **** 
 914:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 915:/usr/include/c++/7/bits/basic_string.h ****       ///  null-termination.
 916:/usr/include/c++/7/bits/basic_string.h ****       size_type
 917:/usr/include/c++/7/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 918:/usr/include/c++/7/bits/basic_string.h ****       { return _M_string_length; }
 919:/usr/include/c++/7/bits/basic_string.h **** 
 920:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 921:/usr/include/c++/7/bits/basic_string.h ****       size_type
 922:/usr/include/c++/7/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 923:/usr/include/c++/7/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 924:/usr/include/c++/7/bits/basic_string.h **** 
 925:/usr/include/c++/7/bits/basic_string.h ****       /**
 926:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 927:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 928:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 929:/usr/include/c++/7/bits/basic_string.h ****        *
 930:/usr/include/c++/7/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 931:/usr/include/c++/7/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 932:/usr/include/c++/7/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 933:/usr/include/c++/7/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 934:/usr/include/c++/7/bits/basic_string.h ****        */
 935:/usr/include/c++/7/bits/basic_string.h ****       void
 936:/usr/include/c++/7/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 937:/usr/include/c++/7/bits/basic_string.h **** 
 938:/usr/include/c++/7/bits/basic_string.h ****       /**
 939:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 940:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 941:/usr/include/c++/7/bits/basic_string.h ****        *
 942:/usr/include/c++/7/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 943:/usr/include/c++/7/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 944:/usr/include/c++/7/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 945:/usr/include/c++/7/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 946:/usr/include/c++/7/bits/basic_string.h ****        *  setting them to 0.
 947:/usr/include/c++/7/bits/basic_string.h ****        */
 948:/usr/include/c++/7/bits/basic_string.h ****       void
 949:/usr/include/c++/7/bits/basic_string.h ****       resize(size_type __n)
 950:/usr/include/c++/7/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 951:/usr/include/c++/7/bits/basic_string.h **** 
 952:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 953:/usr/include/c++/7/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 954:/usr/include/c++/7/bits/basic_string.h ****       void
 955:/usr/include/c++/7/bits/basic_string.h ****       shrink_to_fit() noexcept
 956:/usr/include/c++/7/bits/basic_string.h ****       {
 957:/usr/include/c++/7/bits/basic_string.h **** #if __cpp_exceptions
 958:/usr/include/c++/7/bits/basic_string.h **** 	if (capacity() > size())
 959:/usr/include/c++/7/bits/basic_string.h **** 	  {
 960:/usr/include/c++/7/bits/basic_string.h **** 	    try
 961:/usr/include/c++/7/bits/basic_string.h **** 	      { reserve(0); }
 962:/usr/include/c++/7/bits/basic_string.h **** 	    catch(...)
 963:/usr/include/c++/7/bits/basic_string.h **** 	      { }
 964:/usr/include/c++/7/bits/basic_string.h **** 	  }
 965:/usr/include/c++/7/bits/basic_string.h **** #endif
 966:/usr/include/c++/7/bits/basic_string.h ****       }
 967:/usr/include/c++/7/bits/basic_string.h **** #endif
 968:/usr/include/c++/7/bits/basic_string.h **** 
 969:/usr/include/c++/7/bits/basic_string.h ****       /**
 970:/usr/include/c++/7/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 971:/usr/include/c++/7/bits/basic_string.h ****        *  before needing to allocate more memory.
 972:/usr/include/c++/7/bits/basic_string.h ****        */
 973:/usr/include/c++/7/bits/basic_string.h ****       size_type
 974:/usr/include/c++/7/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 975:/usr/include/c++/7/bits/basic_string.h ****       {
 976:/usr/include/c++/7/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 977:/usr/include/c++/7/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 978:/usr/include/c++/7/bits/basic_string.h ****       }
 979:/usr/include/c++/7/bits/basic_string.h **** 
 980:/usr/include/c++/7/bits/basic_string.h ****       /**
 981:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 982:/usr/include/c++/7/bits/basic_string.h ****        *          characters.
 983:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 984:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 985:/usr/include/c++/7/bits/basic_string.h ****        *
 986:/usr/include/c++/7/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 987:/usr/include/c++/7/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 988:/usr/include/c++/7/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 989:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
 990:/usr/include/c++/7/bits/basic_string.h ****        *
 991:/usr/include/c++/7/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 992:/usr/include/c++/7/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 993:/usr/include/c++/7/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 994:/usr/include/c++/7/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 995:/usr/include/c++/7/bits/basic_string.h ****        *  data.
 996:/usr/include/c++/7/bits/basic_string.h ****        */
 997:/usr/include/c++/7/bits/basic_string.h ****       void
 998:/usr/include/c++/7/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 999:/usr/include/c++/7/bits/basic_string.h **** 
1000:/usr/include/c++/7/bits/basic_string.h ****       /**
1001:/usr/include/c++/7/bits/basic_string.h ****        *  Erases the string, making it empty.
1002:/usr/include/c++/7/bits/basic_string.h ****        */
1003:/usr/include/c++/7/bits/basic_string.h ****       void
1004:/usr/include/c++/7/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1005:/usr/include/c++/7/bits/basic_string.h ****       { _M_set_length(0); }
1006:/usr/include/c++/7/bits/basic_string.h **** 
1007:/usr/include/c++/7/bits/basic_string.h ****       /**
1008:/usr/include/c++/7/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1009:/usr/include/c++/7/bits/basic_string.h ****        *  <code>*this == ""</code>.
1010:/usr/include/c++/7/bits/basic_string.h ****        */
1011:/usr/include/c++/7/bits/basic_string.h ****       bool
1012:/usr/include/c++/7/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1013:/usr/include/c++/7/bits/basic_string.h ****       { return this->size() == 0; }
1014:/usr/include/c++/7/bits/basic_string.h **** 
1015:/usr/include/c++/7/bits/basic_string.h ****       // Element access:
1016:/usr/include/c++/7/bits/basic_string.h ****       /**
1017:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1018:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1019:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1020:/usr/include/c++/7/bits/basic_string.h ****        *
1021:/usr/include/c++/7/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1022:/usr/include/c++/7/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1023:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1024:/usr/include/c++/7/bits/basic_string.h ****        *  see at().)
1025:/usr/include/c++/7/bits/basic_string.h ****        */
1026:/usr/include/c++/7/bits/basic_string.h ****       const_reference
1027:/usr/include/c++/7/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1028:/usr/include/c++/7/bits/basic_string.h ****       {
1029:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1030:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__pos];
1031:/usr/include/c++/7/bits/basic_string.h ****       }
1032:/usr/include/c++/7/bits/basic_string.h **** 
1033:/usr/include/c++/7/bits/basic_string.h ****       /**
1034:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1035:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1036:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1037:/usr/include/c++/7/bits/basic_string.h ****        *
1038:/usr/include/c++/7/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1039:/usr/include/c++/7/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1040:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1041:/usr/include/c++/7/bits/basic_string.h ****        *  see at().)
1042:/usr/include/c++/7/bits/basic_string.h ****        */
1043:/usr/include/c++/7/bits/basic_string.h ****       reference
1044:/usr/include/c++/7/bits/basic_string.h ****       operator[](size_type __pos)
1045:/usr/include/c++/7/bits/basic_string.h ****       {
1046:/usr/include/c++/7/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1047:/usr/include/c++/7/bits/basic_string.h **** 	// and in C++11 mode.
1048:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1049:/usr/include/c++/7/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1050:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1051:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__pos];
1052:/usr/include/c++/7/bits/basic_string.h ****       }
1053:/usr/include/c++/7/bits/basic_string.h **** 
1054:/usr/include/c++/7/bits/basic_string.h ****       /**
1055:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1056:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n The index of the character to access.
1057:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1058:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1059:/usr/include/c++/7/bits/basic_string.h ****        *
1060:/usr/include/c++/7/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1061:/usr/include/c++/7/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1062:/usr/include/c++/7/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1063:/usr/include/c++/7/bits/basic_string.h ****        */
1064:/usr/include/c++/7/bits/basic_string.h ****       const_reference
1065:/usr/include/c++/7/bits/basic_string.h ****       at(size_type __n) const
1066:/usr/include/c++/7/bits/basic_string.h ****       {
1067:/usr/include/c++/7/bits/basic_string.h **** 	if (__n >= this->size())
1068:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1069:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1070:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu)"),
1071:/usr/include/c++/7/bits/basic_string.h **** 				   __n, this->size());
1072:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__n];
1073:/usr/include/c++/7/bits/basic_string.h ****       }
1074:/usr/include/c++/7/bits/basic_string.h **** 
1075:/usr/include/c++/7/bits/basic_string.h ****       /**
1076:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1077:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n The index of the character to access.
1078:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1079:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1080:/usr/include/c++/7/bits/basic_string.h ****        *
1081:/usr/include/c++/7/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1082:/usr/include/c++/7/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1083:/usr/include/c++/7/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1084:/usr/include/c++/7/bits/basic_string.h ****        */
1085:/usr/include/c++/7/bits/basic_string.h ****       reference
1086:/usr/include/c++/7/bits/basic_string.h ****       at(size_type __n)
1087:/usr/include/c++/7/bits/basic_string.h ****       {
1088:/usr/include/c++/7/bits/basic_string.h **** 	if (__n >= size())
1089:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1090:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1091:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu)"),
1092:/usr/include/c++/7/bits/basic_string.h **** 				   __n, this->size());
1093:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__n];
1094:/usr/include/c++/7/bits/basic_string.h ****       }
1095:/usr/include/c++/7/bits/basic_string.h **** 
1096:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1097:/usr/include/c++/7/bits/basic_string.h ****       /**
1098:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1099:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
1100:/usr/include/c++/7/bits/basic_string.h ****        */
1101:/usr/include/c++/7/bits/basic_string.h ****       reference
1102:/usr/include/c++/7/bits/basic_string.h ****       front() noexcept
1103:/usr/include/c++/7/bits/basic_string.h ****       {
1104:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1105:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](0);
1106:/usr/include/c++/7/bits/basic_string.h ****       }
1107:/usr/include/c++/7/bits/basic_string.h **** 
1108:/usr/include/c++/7/bits/basic_string.h ****       /**
1109:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1110:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
1111:/usr/include/c++/7/bits/basic_string.h ****        */
1112:/usr/include/c++/7/bits/basic_string.h ****       const_reference
1113:/usr/include/c++/7/bits/basic_string.h ****       front() const noexcept
1114:/usr/include/c++/7/bits/basic_string.h ****       {
1115:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1116:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](0);
1117:/usr/include/c++/7/bits/basic_string.h ****       }
1118:/usr/include/c++/7/bits/basic_string.h **** 
1119:/usr/include/c++/7/bits/basic_string.h ****       /**
1120:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1121:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
1122:/usr/include/c++/7/bits/basic_string.h ****        */
1123:/usr/include/c++/7/bits/basic_string.h ****       reference
1124:/usr/include/c++/7/bits/basic_string.h ****       back() noexcept
1125:/usr/include/c++/7/bits/basic_string.h ****       {
1126:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1127:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](this->size() - 1);
1128:/usr/include/c++/7/bits/basic_string.h ****       }
1129:/usr/include/c++/7/bits/basic_string.h **** 
1130:/usr/include/c++/7/bits/basic_string.h ****       /**
1131:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1132:/usr/include/c++/7/bits/basic_string.h ****        *  last element of the %string.
1133:/usr/include/c++/7/bits/basic_string.h ****        */
1134:/usr/include/c++/7/bits/basic_string.h ****       const_reference
1135:/usr/include/c++/7/bits/basic_string.h ****       back() const noexcept
1136:/usr/include/c++/7/bits/basic_string.h ****       {
1137:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1138:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](this->size() - 1);
1139:/usr/include/c++/7/bits/basic_string.h ****       }
1140:/usr/include/c++/7/bits/basic_string.h **** #endif
1141:/usr/include/c++/7/bits/basic_string.h **** 
1142:/usr/include/c++/7/bits/basic_string.h ****       // Modifiers:
1143:/usr/include/c++/7/bits/basic_string.h ****       /**
1144:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string to this string.
1145:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
1146:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1147:/usr/include/c++/7/bits/basic_string.h ****        */
1148:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1149:/usr/include/c++/7/bits/basic_string.h ****       operator+=(const basic_string& __str)
1150:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__str); }
1151:/usr/include/c++/7/bits/basic_string.h **** 
1152:/usr/include/c++/7/bits/basic_string.h ****       /**
1153:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C string.
1154:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
1155:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1156:/usr/include/c++/7/bits/basic_string.h ****        */
1157:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1158:/usr/include/c++/7/bits/basic_string.h ****       operator+=(const _CharT* __s)
1159:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__s); }
1160:/usr/include/c++/7/bits/basic_string.h **** 
1161:/usr/include/c++/7/bits/basic_string.h ****       /**
1162:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a character.
1163:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to append.
1164:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1165:/usr/include/c++/7/bits/basic_string.h ****        */
1166:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1167:/usr/include/c++/7/bits/basic_string.h ****       operator+=(_CharT __c)
1168:/usr/include/c++/7/bits/basic_string.h ****       {
1169:/usr/include/c++/7/bits/basic_string.h **** 	this->push_back(__c);
1170:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
1171:/usr/include/c++/7/bits/basic_string.h ****       }
1172:/usr/include/c++/7/bits/basic_string.h **** 
1173:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1174:/usr/include/c++/7/bits/basic_string.h ****       /**
1175:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1176:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1177:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1178:/usr/include/c++/7/bits/basic_string.h ****        */
1179:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1180:/usr/include/c++/7/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1181:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1182:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1183:/usr/include/c++/7/bits/basic_string.h **** 
1184:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
1185:/usr/include/c++/7/bits/basic_string.h ****       /**
1186:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string_view.
1187:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1188:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1189:/usr/include/c++/7/bits/basic_string.h ****        */
1190:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1191:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1192:/usr/include/c++/7/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1193:/usr/include/c++/7/bits/basic_string.h **** 	{ return this->append(__svt); }
1194:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
1195:/usr/include/c++/7/bits/basic_string.h **** 
1196:/usr/include/c++/7/bits/basic_string.h ****       /**
1197:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string to this string.
1198:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
1199:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1200:/usr/include/c++/7/bits/basic_string.h ****        */
1201:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1202:/usr/include/c++/7/bits/basic_string.h ****       append(const basic_string& __str)
1203:/usr/include/c++/7/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1204:/usr/include/c++/7/bits/basic_string.h **** 
1205:/usr/include/c++/7/bits/basic_string.h ****       /**
1206:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a substring.
1207:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
1208:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1209:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1210:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1211:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1212:/usr/include/c++/7/bits/basic_string.h ****        *
1213:/usr/include/c++/7/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1214:/usr/include/c++/7/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1215:/usr/include/c++/7/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1216:/usr/include/c++/7/bits/basic_string.h ****        *  remainder of @a __str is appended.
1217:/usr/include/c++/7/bits/basic_string.h ****        */
1218:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1219:/usr/include/c++/7/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n)
1220:/usr/include/c++/7/bits/basic_string.h ****       { return _M_append(__str._M_data()
1221:/usr/include/c++/7/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1222:/usr/include/c++/7/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1223:/usr/include/c++/7/bits/basic_string.h **** 
1224:/usr/include/c++/7/bits/basic_string.h ****       /**
1225:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C substring.
1226:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
1227:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1228:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1229:/usr/include/c++/7/bits/basic_string.h ****        */
1230:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1231:/usr/include/c++/7/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1232:/usr/include/c++/7/bits/basic_string.h ****       {
1233:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1234:/usr/include/c++/7/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1235:/usr/include/c++/7/bits/basic_string.h **** 	return _M_append(__s, __n);
1236:/usr/include/c++/7/bits/basic_string.h ****       }
1237:/usr/include/c++/7/bits/basic_string.h **** 
1238:/usr/include/c++/7/bits/basic_string.h ****       /**
1239:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C string.
1240:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
1241:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1242:/usr/include/c++/7/bits/basic_string.h ****        */
1243:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1244:/usr/include/c++/7/bits/basic_string.h ****       append(const _CharT* __s)
1245:/usr/include/c++/7/bits/basic_string.h ****       {
1246:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1247:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1248:/usr/include/c++/7/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1249:/usr/include/c++/7/bits/basic_string.h **** 	return _M_append(__s, __n);
1250:/usr/include/c++/7/bits/basic_string.h ****       }
1251:/usr/include/c++/7/bits/basic_string.h **** 
1252:/usr/include/c++/7/bits/basic_string.h ****       /**
1253:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append multiple characters.
1254:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1255:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to use.
1256:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1257:/usr/include/c++/7/bits/basic_string.h ****        *
1258:/usr/include/c++/7/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1259:/usr/include/c++/7/bits/basic_string.h ****        */
1260:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1261:/usr/include/c++/7/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1262:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1263:/usr/include/c++/7/bits/basic_string.h **** 
1264:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1265:/usr/include/c++/7/bits/basic_string.h ****       /**
1266:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1267:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1268:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1269:/usr/include/c++/7/bits/basic_string.h ****        */
1270:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1271:/usr/include/c++/7/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1272:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1273:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1274:/usr/include/c++/7/bits/basic_string.h **** 
1275:/usr/include/c++/7/bits/basic_string.h ****       /**
1276:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a range of characters.
1277:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1278:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1279:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1280:/usr/include/c++/7/bits/basic_string.h ****        *
1281:/usr/include/c++/7/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1282:/usr/include/c++/7/bits/basic_string.h ****        */
1283:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1284:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator,
1285:/usr/include/c++/7/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1286:/usr/include/c++/7/bits/basic_string.h **** #else
1287:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
1288:/usr/include/c++/7/bits/basic_string.h **** #endif
1289:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
1290:/usr/include/c++/7/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1291:/usr/include/c++/7/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1292:/usr/include/c++/7/bits/basic_string.h **** 
1293:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
1294:/usr/include/c++/7/bits/basic_string.h ****       /**
1295:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string_view.
1296:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1297:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1298:/usr/include/c++/7/bits/basic_string.h ****        */
1299:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1300:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1301:/usr/include/c++/7/bits/basic_string.h ****         append(const _Tp& __svt)
1302:/usr/include/c++/7/bits/basic_string.h ****         {
1303:/usr/include/c++/7/bits/basic_string.h ****           __sv_type __sv = __svt;
1304:/usr/include/c++/7/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1305:/usr/include/c++/7/bits/basic_string.h ****         }
1306:/usr/include/c++/7/bits/basic_string.h **** 
1307:/usr/include/c++/7/bits/basic_string.h ****       /**
1308:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1309:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1310:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1311:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1312:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1313:/usr/include/c++/7/bits/basic_string.h ****        */
1314:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1315:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1316:/usr/include/c++/7/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1317:/usr/include/c++/7/bits/basic_string.h **** 	{
1318:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1319:/usr/include/c++/7/bits/basic_string.h **** 	  return _M_append(__sv.data()
1320:/usr/include/c++/7/bits/basic_string.h **** 			   + __sv._M_check(__pos, "basic_string::append"),
1321:/usr/include/c++/7/bits/basic_string.h **** 			   __sv._M_limit(__pos, __n));
1322:/usr/include/c++/7/bits/basic_string.h **** 	}
1323:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
1324:/usr/include/c++/7/bits/basic_string.h **** 
1325:/usr/include/c++/7/bits/basic_string.h ****       /**
1326:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a single character.
1327:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to append.
1328:/usr/include/c++/7/bits/basic_string.h ****        */
1329:/usr/include/c++/7/bits/basic_string.h ****       void
1330:/usr/include/c++/7/bits/basic_string.h ****       push_back(_CharT __c)
1331:/usr/include/c++/7/bits/basic_string.h ****       {
1332:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __size = this->size();
1333:/usr/include/c++/7/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1334:/usr/include/c++/7/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1335:/usr/include/c++/7/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1336:/usr/include/c++/7/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1337:/usr/include/c++/7/bits/basic_string.h ****       }
1338:/usr/include/c++/7/bits/basic_string.h **** 
1339:/usr/include/c++/7/bits/basic_string.h ****       /**
1340:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1341:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string to use.
1342:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1343:/usr/include/c++/7/bits/basic_string.h ****        */
1344:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1345:/usr/include/c++/7/bits/basic_string.h ****       assign(const basic_string& __str)
1346:/usr/include/c++/7/bits/basic_string.h ****       {
1347:/usr/include/c++/7/bits/basic_string.h **** 	this->_M_assign(__str);
1348:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
1349:/usr/include/c++/7/bits/basic_string.h ****       }
1350:/usr/include/c++/7/bits/basic_string.h **** 
1351:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1352:/usr/include/c++/7/bits/basic_string.h ****       /**
1353:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1354:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string to use.
1355:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1356:/usr/include/c++/7/bits/basic_string.h ****        *
1357:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1358:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1359:/usr/include/c++/7/bits/basic_string.h ****        */
1360:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1361:/usr/include/c++/7/bits/basic_string.h ****       assign(basic_string&& __str)
1362:/usr/include/c++/7/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1363:/usr/include/c++/7/bits/basic_string.h ****       {
1364:/usr/include/c++/7/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1365:/usr/include/c++/7/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1366:/usr/include/c++/7/bits/basic_string.h **** 	return *this = std::move(__str);
1367:/usr/include/c++/7/bits/basic_string.h ****       }
1368:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1369:/usr/include/c++/7/bits/basic_string.h **** 
1370:/usr/include/c++/7/bits/basic_string.h ****       /**
1371:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1372:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to use.
1373:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1374:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1375:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1376:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1377:/usr/include/c++/7/bits/basic_string.h ****        *
1378:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1379:/usr/include/c++/7/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1380:/usr/include/c++/7/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1381:/usr/include/c++/7/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1382:/usr/include/c++/7/bits/basic_string.h ****        */
1383:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1384:/usr/include/c++/7/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1385:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1386:/usr/include/c++/7/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1387:/usr/include/c++/7/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1388:/usr/include/c++/7/bits/basic_string.h **** 
1389:/usr/include/c++/7/bits/basic_string.h ****       /**
1390:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1391:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to use.
1392:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1393:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1394:/usr/include/c++/7/bits/basic_string.h ****        *
1395:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1396:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1397:/usr/include/c++/7/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1398:/usr/include/c++/7/bits/basic_string.h ****        */
1399:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1400:/usr/include/c++/7/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1401:/usr/include/c++/7/bits/basic_string.h ****       {
1402:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1403:/usr/include/c++/7/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1404:/usr/include/c++/7/bits/basic_string.h ****       }
1405:/usr/include/c++/7/bits/basic_string.h **** 
1406:/usr/include/c++/7/bits/basic_string.h ****       /**
1407:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1408:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to use.
1409:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1410:/usr/include/c++/7/bits/basic_string.h ****        *
1411:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1412:/usr/include/c++/7/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1413:/usr/include/c++/7/bits/basic_string.h ****        *  function returns.
1414:/usr/include/c++/7/bits/basic_string.h ****        */
1415:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1416:/usr/include/c++/7/bits/basic_string.h ****       assign(const _CharT* __s)
1417:/usr/include/c++/7/bits/basic_string.h ****       {
1418:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1419:/usr/include/c++/7/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1420:/usr/include/c++/7/bits/basic_string.h **** 			  traits_type::length(__s));
1421:/usr/include/c++/7/bits/basic_string.h ****       }
1422:/usr/include/c++/7/bits/basic_string.h **** 
1423:/usr/include/c++/7/bits/basic_string.h ****       /**
1424:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1425:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1426:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to use.
1427:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1428:/usr/include/c++/7/bits/basic_string.h ****        *
1429:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1430:/usr/include/c++/7/bits/basic_string.h ****        *  character @a __c.
1431:/usr/include/c++/7/bits/basic_string.h ****        */
1432:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1433:/usr/include/c++/7/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1434:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1435:/usr/include/c++/7/bits/basic_string.h **** 
1436:/usr/include/c++/7/bits/basic_string.h ****       /**
1437:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1438:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1439:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1440:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1441:/usr/include/c++/7/bits/basic_string.h ****        *
1442:/usr/include/c++/7/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1443:/usr/include/c++/7/bits/basic_string.h ****       */
1444:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1445:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator,
1446:/usr/include/c++/7/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1447:/usr/include/c++/7/bits/basic_string.h **** #else
1448:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
1449:/usr/include/c++/7/bits/basic_string.h **** #endif
1450:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
1451:/usr/include/c++/7/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1452:/usr/include/c++/7/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1453:/usr/include/c++/7/bits/basic_string.h **** 
1454:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1455:/usr/include/c++/7/bits/basic_string.h ****       /**
1456:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1457:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1458:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1459:/usr/include/c++/7/bits/basic_string.h ****        */
1460:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1461:/usr/include/c++/7/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1462:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1463:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1464:/usr/include/c++/7/bits/basic_string.h **** 
1465:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
1466:/usr/include/c++/7/bits/basic_string.h ****       /**
1467:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1468:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1469:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1470:/usr/include/c++/7/bits/basic_string.h ****        */
1471:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1472:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1473:/usr/include/c++/7/bits/basic_string.h **** 	assign(const _Tp& __svt)
1474:/usr/include/c++/7/bits/basic_string.h **** 	{
1475:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1476:/usr/include/c++/7/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1477:/usr/include/c++/7/bits/basic_string.h **** 	}
1478:/usr/include/c++/7/bits/basic_string.h **** 
1479:/usr/include/c++/7/bits/basic_string.h ****       /**
1480:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1481:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1482:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1483:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1484:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1485:/usr/include/c++/7/bits/basic_string.h ****        */
1486:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1487:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1488:/usr/include/c++/7/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1489:/usr/include/c++/7/bits/basic_string.h **** 	{
1490:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1491:/usr/include/c++/7/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(), __sv.data()
1492:/usr/include/c++/7/bits/basic_string.h **** 			    + __sv._M_check(__pos, "basic_string::assign"),
1493:/usr/include/c++/7/bits/basic_string.h **** 			    __sv._M_limit(__pos, __n));
1494:/usr/include/c++/7/bits/basic_string.h **** 	}
1495:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
1496:/usr/include/c++/7/bits/basic_string.h **** 
1497:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1498:/usr/include/c++/7/bits/basic_string.h ****       /**
1499:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1500:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1501:/usr/include/c++/7/bits/basic_string.h ****        *              insert at.
1502:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1503:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
1504:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1505:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1506:/usr/include/c++/7/bits/basic_string.h ****        *
1507:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1508:/usr/include/c++/7/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1509:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1510:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1511:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1512:/usr/include/c++/7/bits/basic_string.h ****       */
1513:/usr/include/c++/7/bits/basic_string.h ****       iterator
1514:/usr/include/c++/7/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1515:/usr/include/c++/7/bits/basic_string.h ****       {
1516:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1517:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1518:/usr/include/c++/7/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1519:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1520:/usr/include/c++/7/bits/basic_string.h ****       }
1521:/usr/include/c++/7/bits/basic_string.h **** #else
1522:/usr/include/c++/7/bits/basic_string.h ****       /**
1523:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1524:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1525:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1526:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
1527:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1528:/usr/include/c++/7/bits/basic_string.h ****        *
1529:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1530:/usr/include/c++/7/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1531:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1532:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1533:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1534:/usr/include/c++/7/bits/basic_string.h ****       */
1535:/usr/include/c++/7/bits/basic_string.h ****       void
1536:/usr/include/c++/7/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1537:/usr/include/c++/7/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1538:/usr/include/c++/7/bits/basic_string.h **** #endif
1539:/usr/include/c++/7/bits/basic_string.h **** 
1540:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1541:/usr/include/c++/7/bits/basic_string.h ****       /**
1542:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1543:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1544:/usr/include/c++/7/bits/basic_string.h ****        *              insert at.
1545:/usr/include/c++/7/bits/basic_string.h ****        *  @param __beg  Start of range.
1546:/usr/include/c++/7/bits/basic_string.h ****        *  @param __end  End of range.
1547:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1548:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1549:/usr/include/c++/7/bits/basic_string.h ****        *
1550:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1551:/usr/include/c++/7/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1552:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1553:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.
1554:/usr/include/c++/7/bits/basic_string.h ****       */
1555:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator,
1556:/usr/include/c++/7/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1557:/usr/include/c++/7/bits/basic_string.h **** 	iterator
1558:/usr/include/c++/7/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1559:/usr/include/c++/7/bits/basic_string.h ****         {
1560:/usr/include/c++/7/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1561:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1562:/usr/include/c++/7/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1563:/usr/include/c++/7/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1564:/usr/include/c++/7/bits/basic_string.h **** 	}
1565:/usr/include/c++/7/bits/basic_string.h **** #else
1566:/usr/include/c++/7/bits/basic_string.h ****       /**
1567:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1568:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1569:/usr/include/c++/7/bits/basic_string.h ****        *  @param __beg  Start of range.
1570:/usr/include/c++/7/bits/basic_string.h ****        *  @param __end  End of range.
1571:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1572:/usr/include/c++/7/bits/basic_string.h ****        *
1573:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1574:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1575:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1576:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1577:/usr/include/c++/7/bits/basic_string.h ****       */
1578:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
1579:/usr/include/c++/7/bits/basic_string.h ****         void
1580:/usr/include/c++/7/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1581:/usr/include/c++/7/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1582:/usr/include/c++/7/bits/basic_string.h **** #endif
1583:/usr/include/c++/7/bits/basic_string.h **** 
1584:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1585:/usr/include/c++/7/bits/basic_string.h ****       /**
1586:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1587:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1588:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1589:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1590:/usr/include/c++/7/bits/basic_string.h ****        */
1591:/usr/include/c++/7/bits/basic_string.h ****       void
1592:/usr/include/c++/7/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1593:/usr/include/c++/7/bits/basic_string.h ****       {
1594:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1595:/usr/include/c++/7/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1596:/usr/include/c++/7/bits/basic_string.h ****       }
1597:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1598:/usr/include/c++/7/bits/basic_string.h **** 
1599:/usr/include/c++/7/bits/basic_string.h ****       /**
1600:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert value of a string.
1601:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1602:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to insert.
1603:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1604:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1605:/usr/include/c++/7/bits/basic_string.h ****        *
1606:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1607:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1608:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1609:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1610:/usr/include/c++/7/bits/basic_string.h ****       */
1611:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1612:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1613:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1614:/usr/include/c++/7/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1615:/usr/include/c++/7/bits/basic_string.h **** 
1616:/usr/include/c++/7/bits/basic_string.h ****       /**
1617:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a substring.
1618:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1619:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to insert.
1620:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1621:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1622:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1623:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1624:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1625:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1626:/usr/include/c++/7/bits/basic_string.h ****        *
1627:/usr/include/c++/7/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1628:/usr/include/c++/7/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1629:/usr/include/c++/7/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1630:/usr/include/c++/7/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1631:/usr/include/c++/7/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1632:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1633:/usr/include/c++/7/bits/basic_string.h ****       */
1634:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1635:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1636:/usr/include/c++/7/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
1637:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1638:/usr/include/c++/7/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1639:/usr/include/c++/7/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1640:/usr/include/c++/7/bits/basic_string.h **** 
1641:/usr/include/c++/7/bits/basic_string.h ****       /**
1642:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a C substring.
1643:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1644:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to insert.
1645:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1646:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1647:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1648:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1649:/usr/include/c++/7/bits/basic_string.h ****        *  string.
1650:/usr/include/c++/7/bits/basic_string.h ****        *
1651:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1652:/usr/include/c++/7/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1653:/usr/include/c++/7/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1654:/usr/include/c++/7/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1655:/usr/include/c++/7/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1656:/usr/include/c++/7/bits/basic_string.h ****       */
1657:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1658:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1659:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1660:/usr/include/c++/7/bits/basic_string.h **** 
1661:/usr/include/c++/7/bits/basic_string.h ****       /**
1662:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a C string.
1663:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1664:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to insert.
1665:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1666:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1667:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1668:/usr/include/c++/7/bits/basic_string.h ****        *  string.
1669:/usr/include/c++/7/bits/basic_string.h ****        *
1670:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1671:/usr/include/c++/7/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1672:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1673:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1674:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
1675:/usr/include/c++/7/bits/basic_string.h ****       */
1676:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1677:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1678:/usr/include/c++/7/bits/basic_string.h ****       {
1679:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1680:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1681:/usr/include/c++/7/bits/basic_string.h **** 			     traits_type::length(__s));
1682:/usr/include/c++/7/bits/basic_string.h ****       }
1683:/usr/include/c++/7/bits/basic_string.h **** 
1684:/usr/include/c++/7/bits/basic_string.h ****       /**
1685:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1686:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1687:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1688:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
1689:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1690:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1691:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1692:/usr/include/c++/7/bits/basic_string.h ****        *  string.
1693:/usr/include/c++/7/bits/basic_string.h ****        *
1694:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1695:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1696:/usr/include/c++/7/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1697:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1698:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1699:/usr/include/c++/7/bits/basic_string.h ****       */
1700:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1701:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1702:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1703:/usr/include/c++/7/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1704:/usr/include/c++/7/bits/basic_string.h **** 
1705:/usr/include/c++/7/bits/basic_string.h ****       /**
1706:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert one character.
1707:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1708:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
1709:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1710:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1711:/usr/include/c++/7/bits/basic_string.h ****        *
1712:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1713:/usr/include/c++/7/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1714:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1715:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1716:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1717:/usr/include/c++/7/bits/basic_string.h ****       */
1718:/usr/include/c++/7/bits/basic_string.h ****       iterator
1719:/usr/include/c++/7/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1720:/usr/include/c++/7/bits/basic_string.h ****       {
1721:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1722:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1723:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1724:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1725:/usr/include/c++/7/bits/basic_string.h ****       }
1726:/usr/include/c++/7/bits/basic_string.h **** 
1727:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
1728:/usr/include/c++/7/bits/basic_string.h ****       /**
1729:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a string_view.
1730:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1731:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1732:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1733:/usr/include/c++/7/bits/basic_string.h ****       */
1734:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1735:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1736:/usr/include/c++/7/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1737:/usr/include/c++/7/bits/basic_string.h **** 	{
1738:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1739:/usr/include/c++/7/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1740:/usr/include/c++/7/bits/basic_string.h **** 	}
1741:/usr/include/c++/7/bits/basic_string.h **** 
1742:/usr/include/c++/7/bits/basic_string.h ****       /**
1743:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a string_view.
1744:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1745:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
1746:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
1747:/usr/include/c++/7/bits/basic_string.h ****        *  from.
1748:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1749:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1750:/usr/include/c++/7/bits/basic_string.h ****       */
1751:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1752:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1753:/usr/include/c++/7/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1754:/usr/include/c++/7/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1755:/usr/include/c++/7/bits/basic_string.h **** 	{
1756:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1757:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
1758:/usr/include/c++/7/bits/basic_string.h **** 			       + __sv._M_check(__pos2, "basic_string::insert"),
1759:/usr/include/c++/7/bits/basic_string.h **** 			       __sv._M_limit(__pos2, __n));
1760:/usr/include/c++/7/bits/basic_string.h **** 	}
1761:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
1762:/usr/include/c++/7/bits/basic_string.h **** 
1763:/usr/include/c++/7/bits/basic_string.h ****       /**
1764:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove characters.
1765:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1766:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1767:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1768:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1769:/usr/include/c++/7/bits/basic_string.h ****        *  string.
1770:/usr/include/c++/7/bits/basic_string.h ****        *
1771:/usr/include/c++/7/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1772:/usr/include/c++/7/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1773:/usr/include/c++/7/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1774:/usr/include/c++/7/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1775:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1776:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1777:/usr/include/c++/7/bits/basic_string.h ****       */
1778:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1779:/usr/include/c++/7/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1780:/usr/include/c++/7/bits/basic_string.h ****       {
1781:/usr/include/c++/7/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1782:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == npos)
1783:/usr/include/c++/7/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1784:/usr/include/c++/7/bits/basic_string.h **** 	else if (__n != 0)
1785:/usr/include/c++/7/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1786:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
1787:/usr/include/c++/7/bits/basic_string.h ****       }
1788:/usr/include/c++/7/bits/basic_string.h **** 
1789:/usr/include/c++/7/bits/basic_string.h ****       /**
1790:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove one character.
1791:/usr/include/c++/7/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1792:/usr/include/c++/7/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1793:/usr/include/c++/7/bits/basic_string.h ****        *
1794:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1795:/usr/include/c++/7/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1796:/usr/include/c++/7/bits/basic_string.h ****       */
1797:/usr/include/c++/7/bits/basic_string.h ****       iterator
1798:/usr/include/c++/7/bits/basic_string.h ****       erase(__const_iterator __position)
1799:/usr/include/c++/7/bits/basic_string.h ****       {
1800:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1801:/usr/include/c++/7/bits/basic_string.h **** 				 && __position < end());
1802:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1803:/usr/include/c++/7/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1804:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1805:/usr/include/c++/7/bits/basic_string.h ****       }
1806:/usr/include/c++/7/bits/basic_string.h **** 
1807:/usr/include/c++/7/bits/basic_string.h ****       /**
1808:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1809:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1810:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1811:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1812:/usr/include/c++/7/bits/basic_string.h ****        *
1813:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1814:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1815:/usr/include/c++/7/bits/basic_string.h ****       */
1816:/usr/include/c++/7/bits/basic_string.h ****       iterator
1817:/usr/include/c++/7/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1818:/usr/include/c++/7/bits/basic_string.h ****       {
1819:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1820:/usr/include/c++/7/bits/basic_string.h **** 				 && __last <= end());
1821:/usr/include/c++/7/bits/basic_string.h ****         const size_type __pos = __first - begin();
1822:/usr/include/c++/7/bits/basic_string.h **** 	if (__last == end())
1823:/usr/include/c++/7/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1824:/usr/include/c++/7/bits/basic_string.h **** 	else
1825:/usr/include/c++/7/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1826:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1827:/usr/include/c++/7/bits/basic_string.h ****       }
1828:/usr/include/c++/7/bits/basic_string.h **** 
1829:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1830:/usr/include/c++/7/bits/basic_string.h ****       /**
1831:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove the last character.
1832:/usr/include/c++/7/bits/basic_string.h ****        *
1833:/usr/include/c++/7/bits/basic_string.h ****        *  The string must be non-empty.
1834:/usr/include/c++/7/bits/basic_string.h ****        */
1835:/usr/include/c++/7/bits/basic_string.h ****       void
1836:/usr/include/c++/7/bits/basic_string.h ****       pop_back() noexcept
1837:/usr/include/c++/7/bits/basic_string.h ****       {
1838:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1839:/usr/include/c++/7/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1840:/usr/include/c++/7/bits/basic_string.h ****       }
1841:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1842:/usr/include/c++/7/bits/basic_string.h **** 
1843:/usr/include/c++/7/bits/basic_string.h ****       /**
1844:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1845:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1846:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1847:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to insert.
1848:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1849:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1850:/usr/include/c++/7/bits/basic_string.h ****        *  string.
1851:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1852:/usr/include/c++/7/bits/basic_string.h ****        *
1853:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1854:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1855:/usr/include/c++/7/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1856:/usr/include/c++/7/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1857:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1858:/usr/include/c++/7/bits/basic_string.h ****        *  error is thrown.
1859:/usr/include/c++/7/bits/basic_string.h ****       */
1860:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1861:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1862:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1863:/usr/include/c++/7/bits/basic_string.h **** 
1864:/usr/include/c++/7/bits/basic_string.h ****       /**
1865:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1866:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1867:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1868:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to insert.
1869:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1870:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1871:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1872:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1873:/usr/include/c++/7/bits/basic_string.h ****        *  __str.size().
1874:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1875:/usr/include/c++/7/bits/basic_string.h ****        *
1876:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1877:/usr/include/c++/7/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1878:/usr/include/c++/7/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1879:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1880:/usr/include/c++/7/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1881:/usr/include/c++/7/bits/basic_string.h ****       */
1882:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1883:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1884:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
1885:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1886:/usr/include/c++/7/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1887:/usr/include/c++/7/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1888:/usr/include/c++/7/bits/basic_string.h **** 
1889:/usr/include/c++/7/bits/basic_string.h ****       /**
1890:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1891:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1892:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1893:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to insert.
1894:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1895:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1896:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1897:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1898:/usr/include/c++/7/bits/basic_string.h ****        *
1899:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1900:/usr/include/c++/7/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1901:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1902:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1903:/usr/include/c++/7/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1904:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1905:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.
1906:/usr/include/c++/7/bits/basic_string.h ****       */
1907:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1908:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1909:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __n2)
1910:/usr/include/c++/7/bits/basic_string.h ****       {
1911:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1912:/usr/include/c++/7/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1913:/usr/include/c++/7/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1914:/usr/include/c++/7/bits/basic_string.h ****       }
1915:/usr/include/c++/7/bits/basic_string.h **** 
1916:/usr/include/c++/7/bits/basic_string.h ****       /**
1917:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1918:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1919:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1920:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to insert.
1921:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1922:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1923:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1924:/usr/include/c++/7/bits/basic_string.h ****        *
1925:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1926:/usr/include/c++/7/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1927:/usr/include/c++/7/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1928:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1929:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1930:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1931:/usr/include/c++/7/bits/basic_string.h ****       */
1932:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1933:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1934:/usr/include/c++/7/bits/basic_string.h ****       {
1935:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1936:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1937:/usr/include/c++/7/bits/basic_string.h ****       }
1938:/usr/include/c++/7/bits/basic_string.h **** 
1939:/usr/include/c++/7/bits/basic_string.h ****       /**
1940:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1941:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1942:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1943:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1944:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to insert.
1945:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1946:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1947:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1948:/usr/include/c++/7/bits/basic_string.h ****        *
1949:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1950:/usr/include/c++/7/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1951:/usr/include/c++/7/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1952:/usr/include/c++/7/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1953:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1954:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.
1955:/usr/include/c++/7/bits/basic_string.h ****       */
1956:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1957:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1958:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1959:/usr/include/c++/7/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1960:/usr/include/c++/7/bits/basic_string.h **** 
1961:/usr/include/c++/7/bits/basic_string.h ****       /**
1962:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1963:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1964:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1965:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String value to insert.
1966:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1967:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1968:/usr/include/c++/7/bits/basic_string.h ****        *
1969:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1970:/usr/include/c++/7/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1971:/usr/include/c++/7/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1972:/usr/include/c++/7/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
1973:/usr/include/c++/7/bits/basic_string.h ****       */
1974:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1975:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1976:/usr/include/c++/7/bits/basic_string.h **** 	      const basic_string& __str)
1977:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
1978:/usr/include/c++/7/bits/basic_string.h **** 
1979:/usr/include/c++/7/bits/basic_string.h ****       /**
1980:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
1981:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1982:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1983:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string value to insert.
1984:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
1985:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1986:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1987:/usr/include/c++/7/bits/basic_string.h ****        *
1988:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1989:/usr/include/c++/7/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1990:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1991:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1992:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
1993:/usr/include/c++/7/bits/basic_string.h ****       */
1994:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1995:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1996:/usr/include/c++/7/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
1997:/usr/include/c++/7/bits/basic_string.h ****       {
1998:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1999:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2000:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2001:/usr/include/c++/7/bits/basic_string.h ****       }
2002:/usr/include/c++/7/bits/basic_string.h **** 
2003:/usr/include/c++/7/bits/basic_string.h ****       /**
2004:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2005:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2006:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2007:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string value to insert.
2008:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2009:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2010:/usr/include/c++/7/bits/basic_string.h ****        *
2011:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2012:/usr/include/c++/7/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2013:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2014:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2015:/usr/include/c++/7/bits/basic_string.h ****       */
2016:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2017:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2018:/usr/include/c++/7/bits/basic_string.h ****       {
2019:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2020:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2021:/usr/include/c++/7/bits/basic_string.h ****       }
2022:/usr/include/c++/7/bits/basic_string.h **** 
2023:/usr/include/c++/7/bits/basic_string.h ****       /**
2024:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2025:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2026:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2027:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2028:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to insert.
2029:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2030:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2031:/usr/include/c++/7/bits/basic_string.h ****        *
2032:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2033:/usr/include/c++/7/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2034:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2035:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2036:/usr/include/c++/7/bits/basic_string.h ****       */
2037:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2038:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2039:/usr/include/c++/7/bits/basic_string.h **** 	      _CharT __c)
2040:/usr/include/c++/7/bits/basic_string.h ****       {
2041:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2042:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2043:/usr/include/c++/7/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2044:/usr/include/c++/7/bits/basic_string.h ****       }
2045:/usr/include/c++/7/bits/basic_string.h **** 
2046:/usr/include/c++/7/bits/basic_string.h ****       /**
2047:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2048:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2049:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2050:/usr/include/c++/7/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2051:/usr/include/c++/7/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2052:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2053:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2054:/usr/include/c++/7/bits/basic_string.h ****        *
2055:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2056:/usr/include/c++/7/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2057:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2058:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2059:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
2060:/usr/include/c++/7/bits/basic_string.h ****       */
2061:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
2062:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator,
2063:/usr/include/c++/7/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2064:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
2065:/usr/include/c++/7/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2066:/usr/include/c++/7/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2067:/usr/include/c++/7/bits/basic_string.h ****         {
2068:/usr/include/c++/7/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2069:/usr/include/c++/7/bits/basic_string.h **** 				   && __i2 <= end());
2070:/usr/include/c++/7/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2071:/usr/include/c++/7/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2072:/usr/include/c++/7/bits/basic_string.h **** 					   std::__false_type());
2073:/usr/include/c++/7/bits/basic_string.h **** 	}
2074:/usr/include/c++/7/bits/basic_string.h **** #else
2075:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
2076:/usr/include/c++/7/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2077:/usr/include/c++/7/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2078:/usr/include/c++/7/bits/basic_string.h **** #else
2079:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
2080:/usr/include/c++/7/bits/basic_string.h **** #endif
2081:/usr/include/c++/7/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2082:/usr/include/c++/7/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2083:/usr/include/c++/7/bits/basic_string.h ****         {
2084:/usr/include/c++/7/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2085:/usr/include/c++/7/bits/basic_string.h **** 				   && __i2 <= end());
2086:/usr/include/c++/7/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2087:/usr/include/c++/7/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2088:/usr/include/c++/7/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2089:/usr/include/c++/7/bits/basic_string.h **** 	}
2090:/usr/include/c++/7/bits/basic_string.h **** #endif
2091:/usr/include/c++/7/bits/basic_string.h **** 
2092:/usr/include/c++/7/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2093:/usr/include/c++/7/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2094:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2095:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2096:/usr/include/c++/7/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2097:/usr/include/c++/7/bits/basic_string.h ****       {
2098:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2099:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2100:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2101:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2102:/usr/include/c++/7/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2103:/usr/include/c++/7/bits/basic_string.h ****       }
2104:/usr/include/c++/7/bits/basic_string.h **** 
2105:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2106:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2107:/usr/include/c++/7/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2108:/usr/include/c++/7/bits/basic_string.h ****       {
2109:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2110:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2111:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2112:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2113:/usr/include/c++/7/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2114:/usr/include/c++/7/bits/basic_string.h ****       }
2115:/usr/include/c++/7/bits/basic_string.h **** 
2116:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2117:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2118:/usr/include/c++/7/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2119:/usr/include/c++/7/bits/basic_string.h ****       {
2120:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2121:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2122:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2123:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2124:/usr/include/c++/7/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2125:/usr/include/c++/7/bits/basic_string.h ****       }
2126:/usr/include/c++/7/bits/basic_string.h **** 
2127:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2128:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2129:/usr/include/c++/7/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2130:/usr/include/c++/7/bits/basic_string.h ****       {
2131:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2132:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2133:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2134:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2135:/usr/include/c++/7/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2136:/usr/include/c++/7/bits/basic_string.h ****       }
2137:/usr/include/c++/7/bits/basic_string.h **** 
2138:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
2139:/usr/include/c++/7/bits/basic_string.h ****       /**
2140:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2141:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2142:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2143:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2144:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2145:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2146:/usr/include/c++/7/bits/basic_string.h ****        *
2147:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2148:/usr/include/c++/7/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2149:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2150:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2151:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
2152:/usr/include/c++/7/bits/basic_string.h ****       */
2153:/usr/include/c++/7/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2154:/usr/include/c++/7/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2155:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2156:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
2157:/usr/include/c++/7/bits/basic_string.h **** 
2158:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2159:/usr/include/c++/7/bits/basic_string.h ****       /**
2160:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2161:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2162:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2163:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2164:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2165:/usr/include/c++/7/bits/basic_string.h ****       */
2166:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2167:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2168:/usr/include/c++/7/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2169:/usr/include/c++/7/bits/basic_string.h **** 	{
2170:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2171:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2172:/usr/include/c++/7/bits/basic_string.h **** 	}
2173:/usr/include/c++/7/bits/basic_string.h **** 
2174:/usr/include/c++/7/bits/basic_string.h ****       /**
2175:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2176:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2177:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2178:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2179:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2180:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2181:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2182:/usr/include/c++/7/bits/basic_string.h ****       */
2183:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2184:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2185:/usr/include/c++/7/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2186:/usr/include/c++/7/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2187:/usr/include/c++/7/bits/basic_string.h **** 	{
2188:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2189:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos1, __n1, __sv.data()
2190:/usr/include/c++/7/bits/basic_string.h **** 			       + __sv._M_check(__pos2, "basic_string::replace"),
2191:/usr/include/c++/7/bits/basic_string.h **** 			       __sv._M_limit(__pos2, __n2));
2192:/usr/include/c++/7/bits/basic_string.h **** 	}
2193:/usr/include/c++/7/bits/basic_string.h **** 
2194:/usr/include/c++/7/bits/basic_string.h ****       /**
2195:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2196:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2197:/usr/include/c++/7/bits/basic_string.h ****           to replace at.
2198:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2199:/usr/include/c++/7/bits/basic_string.h ****           for the replace.
2200:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2201:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2202:/usr/include/c++/7/bits/basic_string.h ****       */
2203:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2204:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2205:/usr/include/c++/7/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2206:/usr/include/c++/7/bits/basic_string.h **** 	{
2207:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2208:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2209:/usr/include/c++/7/bits/basic_string.h **** 	}
2210:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2211:/usr/include/c++/7/bits/basic_string.h **** 
2212:/usr/include/c++/7/bits/basic_string.h ****     private:
2213:/usr/include/c++/7/bits/basic_string.h ****       template<class _Integer>
2214:/usr/include/c++/7/bits/basic_string.h **** 	basic_string&
2215:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2216:/usr/include/c++/7/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2217:/usr/include/c++/7/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2218:/usr/include/c++/7/bits/basic_string.h **** 
2219:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
2220:/usr/include/c++/7/bits/basic_string.h **** 	basic_string&
2221:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2222:/usr/include/c++/7/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2223:/usr/include/c++/7/bits/basic_string.h **** 			    __false_type);
2224:/usr/include/c++/7/bits/basic_string.h **** 
2225:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2226:/usr/include/c++/7/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2227:/usr/include/c++/7/bits/basic_string.h **** 		     _CharT __c);
2228:/usr/include/c++/7/bits/basic_string.h **** 
2229:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2230:/usr/include/c++/7/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2231:/usr/include/c++/7/bits/basic_string.h **** 		 const size_type __len2);
2232:/usr/include/c++/7/bits/basic_string.h **** 
2233:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2234:/usr/include/c++/7/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2235:/usr/include/c++/7/bits/basic_string.h **** 
2236:/usr/include/c++/7/bits/basic_string.h ****     public:
2237:/usr/include/c++/7/bits/basic_string.h **** 
2238:/usr/include/c++/7/bits/basic_string.h ****       /**
2239:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2240:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2241:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2242:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2243:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Number of characters actually copied
2244:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2245:/usr/include/c++/7/bits/basic_string.h ****        *
2246:/usr/include/c++/7/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2247:/usr/include/c++/7/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2248:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.
2249:/usr/include/c++/7/bits/basic_string.h ****       */
2250:/usr/include/c++/7/bits/basic_string.h ****       size_type
2251:/usr/include/c++/7/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2252:/usr/include/c++/7/bits/basic_string.h **** 
2253:/usr/include/c++/7/bits/basic_string.h ****       /**
2254:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2255:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String to swap with.
2256:/usr/include/c++/7/bits/basic_string.h ****        *
2257:/usr/include/c++/7/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2258:/usr/include/c++/7/bits/basic_string.h ****        *  time.
2259:/usr/include/c++/7/bits/basic_string.h ****       */
2260:/usr/include/c++/7/bits/basic_string.h ****       void
2261:/usr/include/c++/7/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2262:/usr/include/c++/7/bits/basic_string.h **** 
2263:/usr/include/c++/7/bits/basic_string.h ****       // String operations:
2264:/usr/include/c++/7/bits/basic_string.h ****       /**
2265:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2266:/usr/include/c++/7/bits/basic_string.h ****        *
2267:/usr/include/c++/7/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2268:/usr/include/c++/7/bits/basic_string.h ****        *  happen.
2269:/usr/include/c++/7/bits/basic_string.h ****       */
2270:/usr/include/c++/7/bits/basic_string.h ****       const _CharT*
2271:/usr/include/c++/7/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2272:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
2273:/usr/include/c++/7/bits/basic_string.h **** 
2274:/usr/include/c++/7/bits/basic_string.h ****       /**
2275:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2276:/usr/include/c++/7/bits/basic_string.h ****        *
2277:/usr/include/c++/7/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2278:/usr/include/c++/7/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2279:/usr/include/c++/7/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2280:/usr/include/c++/7/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2281:/usr/include/c++/7/bits/basic_string.h ****       */
2282:/usr/include/c++/7/bits/basic_string.h ****       const _CharT*
2283:/usr/include/c++/7/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2284:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
2285:/usr/include/c++/7/bits/basic_string.h **** 
2286:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2287:/usr/include/c++/7/bits/basic_string.h ****       /**
2288:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2289:/usr/include/c++/7/bits/basic_string.h ****        *
2290:/usr/include/c++/7/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2291:/usr/include/c++/7/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2292:/usr/include/c++/7/bits/basic_string.h ****       */
2293:/usr/include/c++/7/bits/basic_string.h ****       _CharT*
2294:/usr/include/c++/7/bits/basic_string.h ****       data() noexcept
2295:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
2296:/usr/include/c++/7/bits/basic_string.h **** #endif
2297:/usr/include/c++/7/bits/basic_string.h **** 
2298:/usr/include/c++/7/bits/basic_string.h ****       /**
2299:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2300:/usr/include/c++/7/bits/basic_string.h ****       */
2301:/usr/include/c++/7/bits/basic_string.h ****       allocator_type
2302:/usr/include/c++/7/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2303:/usr/include/c++/7/bits/basic_string.h ****       { return _M_get_allocator(); }
2304:/usr/include/c++/7/bits/basic_string.h **** 
2305:/usr/include/c++/7/bits/basic_string.h ****       /**
2306:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2307:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
2308:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2309:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2310:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2311:/usr/include/c++/7/bits/basic_string.h ****        *
2312:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2313:/usr/include/c++/7/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2314:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2315:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2316:/usr/include/c++/7/bits/basic_string.h ****       */
2317:/usr/include/c++/7/bits/basic_string.h ****       size_type
2318:/usr/include/c++/7/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2319:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2320:/usr/include/c++/7/bits/basic_string.h **** 
2321:/usr/include/c++/7/bits/basic_string.h ****       /**
2322:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a string.
2323:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to locate.
2324:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2325:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2326:/usr/include/c++/7/bits/basic_string.h ****        *
2327:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2328:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2329:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns npos.
2330:/usr/include/c++/7/bits/basic_string.h ****       */
2331:/usr/include/c++/7/bits/basic_string.h ****       size_type
2332:/usr/include/c++/7/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2333:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2334:/usr/include/c++/7/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2335:/usr/include/c++/7/bits/basic_string.h **** 
2336:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2337:/usr/include/c++/7/bits/basic_string.h ****       /**
2338:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2339:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2340:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2341:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2342:/usr/include/c++/7/bits/basic_string.h ****       */
2343:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2344:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2345:/usr/include/c++/7/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2346:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2347:/usr/include/c++/7/bits/basic_string.h **** 	{
2348:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2349:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2350:/usr/include/c++/7/bits/basic_string.h **** 	}
2351:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2352:/usr/include/c++/7/bits/basic_string.h **** 
2353:/usr/include/c++/7/bits/basic_string.h ****       /**
2354:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a C string.
2355:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
2356:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2357:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2358:/usr/include/c++/7/bits/basic_string.h ****        *
2359:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2360:/usr/include/c++/7/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2361:/usr/include/c++/7/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2362:/usr/include/c++/7/bits/basic_string.h ****       */
2363:/usr/include/c++/7/bits/basic_string.h ****       size_type
2364:/usr/include/c++/7/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2365:/usr/include/c++/7/bits/basic_string.h ****       {
2366:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2367:/usr/include/c++/7/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2368:/usr/include/c++/7/bits/basic_string.h ****       }
2369:/usr/include/c++/7/bits/basic_string.h **** 
2370:/usr/include/c++/7/bits/basic_string.h ****       /**
2371:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character.
2372:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
2373:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2374:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2375:/usr/include/c++/7/bits/basic_string.h ****        *
2376:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2377:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2378:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
2379:/usr/include/c++/7/bits/basic_string.h ****       */
2380:/usr/include/c++/7/bits/basic_string.h ****       size_type
2381:/usr/include/c++/7/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2382:/usr/include/c++/7/bits/basic_string.h **** 
2383:/usr/include/c++/7/bits/basic_string.h ****       /**
2384:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a string.
2385:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to locate.
2386:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2387:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2388:/usr/include/c++/7/bits/basic_string.h ****        *
2389:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2390:/usr/include/c++/7/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2391:/usr/include/c++/7/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2392:/usr/include/c++/7/bits/basic_string.h ****       */
2393:/usr/include/c++/7/bits/basic_string.h ****       size_type
2394:/usr/include/c++/7/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2395:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2396:/usr/include/c++/7/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2397:/usr/include/c++/7/bits/basic_string.h **** 
2398:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2399:/usr/include/c++/7/bits/basic_string.h ****       /**
2400:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2401:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2402:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2403:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2404:/usr/include/c++/7/bits/basic_string.h ****       */
2405:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2406:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2407:/usr/include/c++/7/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2408:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2409:/usr/include/c++/7/bits/basic_string.h **** 	{
2410:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2411:/usr/include/c++/7/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2412:/usr/include/c++/7/bits/basic_string.h **** 	}
2413:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2414:/usr/include/c++/7/bits/basic_string.h **** 
2415:/usr/include/c++/7/bits/basic_string.h ****       /**
2416:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2417:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
2418:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2419:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2420:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2421:/usr/include/c++/7/bits/basic_string.h ****        *
2422:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2423:/usr/include/c++/7/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2424:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2425:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2426:/usr/include/c++/7/bits/basic_string.h ****       */
2427:/usr/include/c++/7/bits/basic_string.h ****       size_type
2428:/usr/include/c++/7/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2429:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2430:/usr/include/c++/7/bits/basic_string.h **** 
2431:/usr/include/c++/7/bits/basic_string.h ****       /**
2432:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2433:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
2434:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2435:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2436:/usr/include/c++/7/bits/basic_string.h ****        *
2437:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2438:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2439:/usr/include/c++/7/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2440:/usr/include/c++/7/bits/basic_string.h ****       */
2441:/usr/include/c++/7/bits/basic_string.h ****       size_type
2442:/usr/include/c++/7/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2443:/usr/include/c++/7/bits/basic_string.h ****       {
2444:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2445:/usr/include/c++/7/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2446:/usr/include/c++/7/bits/basic_string.h ****       }
2447:/usr/include/c++/7/bits/basic_string.h **** 
2448:/usr/include/c++/7/bits/basic_string.h ****       /**
2449:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character.
2450:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
2451:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2452:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2453:/usr/include/c++/7/bits/basic_string.h ****        *
2454:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2455:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2456:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
2457:/usr/include/c++/7/bits/basic_string.h ****       */
2458:/usr/include/c++/7/bits/basic_string.h ****       size_type
2459:/usr/include/c++/7/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2460:/usr/include/c++/7/bits/basic_string.h **** 
2461:/usr/include/c++/7/bits/basic_string.h ****       /**
2462:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2463:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2464:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2465:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2466:/usr/include/c++/7/bits/basic_string.h ****        *
2467:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2468:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2469:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2470:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2471:/usr/include/c++/7/bits/basic_string.h ****       */
2472:/usr/include/c++/7/bits/basic_string.h ****       size_type
2473:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2474:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2475:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2476:/usr/include/c++/7/bits/basic_string.h **** 
2477:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2478:/usr/include/c++/7/bits/basic_string.h ****       /**
2479:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2480:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2481:/usr/include/c++/7/bits/basic_string.h ****        *                characters to locate.
2482:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2483:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2484:/usr/include/c++/7/bits/basic_string.h ****       */
2485:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2486:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2487:/usr/include/c++/7/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2488:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2489:/usr/include/c++/7/bits/basic_string.h **** 	{
2490:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2491:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2492:/usr/include/c++/7/bits/basic_string.h **** 	}
2493:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2494:/usr/include/c++/7/bits/basic_string.h **** 
2495:/usr/include/c++/7/bits/basic_string.h ****       /**
2496:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2497:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2498:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2499:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2500:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2501:/usr/include/c++/7/bits/basic_string.h ****        *
2502:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2503:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2504:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2505:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
2506:/usr/include/c++/7/bits/basic_string.h ****       */
2507:/usr/include/c++/7/bits/basic_string.h ****       size_type
2508:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2509:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2510:/usr/include/c++/7/bits/basic_string.h **** 
2511:/usr/include/c++/7/bits/basic_string.h ****       /**
2512:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2513:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2514:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2515:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2516:/usr/include/c++/7/bits/basic_string.h ****        *
2517:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2518:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2519:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2520:/usr/include/c++/7/bits/basic_string.h ****       */
2521:/usr/include/c++/7/bits/basic_string.h ****       size_type
2522:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2523:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2524:/usr/include/c++/7/bits/basic_string.h ****       {
2525:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2526:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2527:/usr/include/c++/7/bits/basic_string.h ****       }
2528:/usr/include/c++/7/bits/basic_string.h **** 
2529:/usr/include/c++/7/bits/basic_string.h ****       /**
2530:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character.
2531:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
2532:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2533:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2534:/usr/include/c++/7/bits/basic_string.h ****        *
2535:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2536:/usr/include/c++/7/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2537:/usr/include/c++/7/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2538:/usr/include/c++/7/bits/basic_string.h ****        *
2539:/usr/include/c++/7/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2540:/usr/include/c++/7/bits/basic_string.h ****       */
2541:/usr/include/c++/7/bits/basic_string.h ****       size_type
2542:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2543:/usr/include/c++/7/bits/basic_string.h ****       { return this->find(__c, __pos); }
2544:/usr/include/c++/7/bits/basic_string.h **** 
2545:/usr/include/c++/7/bits/basic_string.h ****       /**
2546:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2547:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2548:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2549:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2550:/usr/include/c++/7/bits/basic_string.h ****        *
2551:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2552:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2553:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2554:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2555:/usr/include/c++/7/bits/basic_string.h ****       */
2556:/usr/include/c++/7/bits/basic_string.h ****       size_type
2557:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2558:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2559:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2560:/usr/include/c++/7/bits/basic_string.h **** 
2561:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2562:/usr/include/c++/7/bits/basic_string.h ****       /**
2563:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2564:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2565:/usr/include/c++/7/bits/basic_string.h ****        *                characters to locate.
2566:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2567:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2568:/usr/include/c++/7/bits/basic_string.h ****       */
2569:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2570:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2571:/usr/include/c++/7/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2572:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2573:/usr/include/c++/7/bits/basic_string.h **** 	{
2574:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2575:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2576:/usr/include/c++/7/bits/basic_string.h **** 	}
2577:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2578:/usr/include/c++/7/bits/basic_string.h **** 
2579:/usr/include/c++/7/bits/basic_string.h ****       /**
2580:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2581:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2582:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2583:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2584:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2585:/usr/include/c++/7/bits/basic_string.h ****        *
2586:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2587:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2588:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2589:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
2590:/usr/include/c++/7/bits/basic_string.h ****       */
2591:/usr/include/c++/7/bits/basic_string.h ****       size_type
2592:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2593:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2594:/usr/include/c++/7/bits/basic_string.h **** 
2595:/usr/include/c++/7/bits/basic_string.h ****       /**
2596:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2597:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2598:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2599:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2600:/usr/include/c++/7/bits/basic_string.h ****        *
2601:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2602:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2603:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2604:/usr/include/c++/7/bits/basic_string.h ****       */
2605:/usr/include/c++/7/bits/basic_string.h ****       size_type
2606:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2607:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2608:/usr/include/c++/7/bits/basic_string.h ****       {
2609:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2610:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2611:/usr/include/c++/7/bits/basic_string.h ****       }
2612:/usr/include/c++/7/bits/basic_string.h **** 
2613:/usr/include/c++/7/bits/basic_string.h ****       /**
2614:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character.
2615:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
2616:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2617:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2618:/usr/include/c++/7/bits/basic_string.h ****        *
2619:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2620:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2621:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
2622:/usr/include/c++/7/bits/basic_string.h ****        *
2623:/usr/include/c++/7/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2624:/usr/include/c++/7/bits/basic_string.h ****       */
2625:/usr/include/c++/7/bits/basic_string.h ****       size_type
2626:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2627:/usr/include/c++/7/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2628:/usr/include/c++/7/bits/basic_string.h **** 
2629:/usr/include/c++/7/bits/basic_string.h ****       /**
2630:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2631:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2632:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2633:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2634:/usr/include/c++/7/bits/basic_string.h ****        *
2635:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2636:/usr/include/c++/7/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2637:/usr/include/c++/7/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2638:/usr/include/c++/7/bits/basic_string.h ****       */
2639:/usr/include/c++/7/bits/basic_string.h ****       size_type
2640:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2641:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2642:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2643:/usr/include/c++/7/bits/basic_string.h **** 
2644:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2645:/usr/include/c++/7/bits/basic_string.h ****       /**
2646:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2647:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2648:/usr/include/c++/7/bits/basic_string.h ****        *                characters to avoid.
2649:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2650:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2651:/usr/include/c++/7/bits/basic_string.h ****        */
2652:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2653:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2654:/usr/include/c++/7/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2655:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2656:/usr/include/c++/7/bits/basic_string.h **** 	{
2657:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2658:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2659:/usr/include/c++/7/bits/basic_string.h **** 	}
2660:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2661:/usr/include/c++/7/bits/basic_string.h **** 
2662:/usr/include/c++/7/bits/basic_string.h ****       /**
2663:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2664:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2665:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2666:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2667:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2668:/usr/include/c++/7/bits/basic_string.h ****        *
2669:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2670:/usr/include/c++/7/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2671:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2672:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
2673:/usr/include/c++/7/bits/basic_string.h ****       */
2674:/usr/include/c++/7/bits/basic_string.h ****       size_type
2675:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2676:/usr/include/c++/7/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2677:/usr/include/c++/7/bits/basic_string.h **** 
2678:/usr/include/c++/7/bits/basic_string.h ****       /**
2679:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2680:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2681:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2682:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2683:/usr/include/c++/7/bits/basic_string.h ****        *
2684:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2685:/usr/include/c++/7/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2686:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2687:/usr/include/c++/7/bits/basic_string.h ****       */
2688:/usr/include/c++/7/bits/basic_string.h ****       size_type
2689:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2690:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2691:/usr/include/c++/7/bits/basic_string.h ****       {
2692:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2693:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2694:/usr/include/c++/7/bits/basic_string.h ****       }
2695:/usr/include/c++/7/bits/basic_string.h **** 
2696:/usr/include/c++/7/bits/basic_string.h ****       /**
2697:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a different character.
2698:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to avoid.
2699:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2700:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2701:/usr/include/c++/7/bits/basic_string.h ****        *
2702:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2703:/usr/include/c++/7/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2704:/usr/include/c++/7/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2705:/usr/include/c++/7/bits/basic_string.h ****       */
2706:/usr/include/c++/7/bits/basic_string.h ****       size_type
2707:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2708:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2709:/usr/include/c++/7/bits/basic_string.h **** 
2710:/usr/include/c++/7/bits/basic_string.h ****       /**
2711:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2712:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2713:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2714:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2715:/usr/include/c++/7/bits/basic_string.h ****        *
2716:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2717:/usr/include/c++/7/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2718:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2719:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2720:/usr/include/c++/7/bits/basic_string.h ****       */
2721:/usr/include/c++/7/bits/basic_string.h ****       size_type
2722:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2723:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2724:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2725:/usr/include/c++/7/bits/basic_string.h **** 
2726:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2727:/usr/include/c++/7/bits/basic_string.h ****       /**
2728:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2729:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2730:/usr/include/c++/7/bits/basic_string.h ****        *                characters to avoid.
2731:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2732:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2733:/usr/include/c++/7/bits/basic_string.h ****        */
2734:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2735:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2736:/usr/include/c++/7/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2737:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2738:/usr/include/c++/7/bits/basic_string.h **** 	{
2739:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2740:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2741:/usr/include/c++/7/bits/basic_string.h **** 	}
2742:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2743:/usr/include/c++/7/bits/basic_string.h **** 
2744:/usr/include/c++/7/bits/basic_string.h ****       /**
2745:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2746:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2747:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2748:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2749:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2750:/usr/include/c++/7/bits/basic_string.h ****        *
2751:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2752:/usr/include/c++/7/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2753:/usr/include/c++/7/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2754:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
2755:/usr/include/c++/7/bits/basic_string.h ****       */
2756:/usr/include/c++/7/bits/basic_string.h ****       size_type
2757:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2758:/usr/include/c++/7/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2759:/usr/include/c++/7/bits/basic_string.h ****       /**
2760:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2761:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2762:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2763:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2764:/usr/include/c++/7/bits/basic_string.h ****        *
2765:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2766:/usr/include/c++/7/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2767:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2768:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2769:/usr/include/c++/7/bits/basic_string.h ****       */
2770:/usr/include/c++/7/bits/basic_string.h ****       size_type
2771:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2772:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2773:/usr/include/c++/7/bits/basic_string.h ****       {
2774:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2775:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2776:/usr/include/c++/7/bits/basic_string.h ****       }
2777:/usr/include/c++/7/bits/basic_string.h **** 
2778:/usr/include/c++/7/bits/basic_string.h ****       /**
2779:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2780:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to avoid.
2781:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2782:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2783:/usr/include/c++/7/bits/basic_string.h ****        *
2784:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2785:/usr/include/c++/7/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2786:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
2787:/usr/include/c++/7/bits/basic_string.h ****       */
2788:/usr/include/c++/7/bits/basic_string.h ****       size_type
2789:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2790:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2791:/usr/include/c++/7/bits/basic_string.h **** 
2792:/usr/include/c++/7/bits/basic_string.h ****       /**
2793:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Get a substring.
2794:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2795:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2796:/usr/include/c++/7/bits/basic_string.h ****        *  @return  The new string.
2797:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2798:/usr/include/c++/7/bits/basic_string.h ****        *
2799:/usr/include/c++/7/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2800:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2801:/usr/include/c++/7/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2802:/usr/include/c++/7/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2803:/usr/include/c++/7/bits/basic_string.h ****       */
2804:/usr/include/c++/7/bits/basic_string.h ****       basic_string
2805:/usr/include/c++/7/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2806:/usr/include/c++/7/bits/basic_string.h ****       { return basic_string(*this,
2807:/usr/include/c++/7/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2808:/usr/include/c++/7/bits/basic_string.h **** 
2809:/usr/include/c++/7/bits/basic_string.h ****       /**
2810:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string.
2811:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
2812:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2813:/usr/include/c++/7/bits/basic_string.h ****        *
2814:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2815:/usr/include/c++/7/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2816:/usr/include/c++/7/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2817:/usr/include/c++/7/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2818:/usr/include/c++/7/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2819:/usr/include/c++/7/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2820:/usr/include/c++/7/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2821:/usr/include/c++/7/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2822:/usr/include/c++/7/bits/basic_string.h ****       */
2823:/usr/include/c++/7/bits/basic_string.h ****       int
2824:/usr/include/c++/7/bits/basic_string.h ****       compare(const basic_string& __str) const
2825:/usr/include/c++/7/bits/basic_string.h ****       {
2826:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __size = this->size();
2827:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __osize = __str.size();
2828:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2829:/usr/include/c++/7/bits/basic_string.h **** 
2830:/usr/include/c++/7/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2831:/usr/include/c++/7/bits/basic_string.h **** 	if (!__r)
2832:/usr/include/c++/7/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2833:/usr/include/c++/7/bits/basic_string.h **** 	return __r;
2834:/usr/include/c++/7/bits/basic_string.h ****       }
2835:/usr/include/c++/7/bits/basic_string.h **** 
2836:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2837:/usr/include/c++/7/bits/basic_string.h ****       /**
2838:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2839:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2840:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2841:/usr/include/c++/7/bits/basic_string.h ****        */
2842:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2843:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
2844:/usr/include/c++/7/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2845:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2846:/usr/include/c++/7/bits/basic_string.h **** 	{
2847:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2848:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __size = this->size();
2849:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2850:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2851:/usr/include/c++/7/bits/basic_string.h **** 
2852:/usr/include/c++/7/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2853:/usr/include/c++/7/bits/basic_string.h **** 	  if (!__r)
2854:/usr/include/c++/7/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2855:/usr/include/c++/7/bits/basic_string.h **** 	  return __r;
2856:/usr/include/c++/7/bits/basic_string.h **** 	}
2857:/usr/include/c++/7/bits/basic_string.h **** 
2858:/usr/include/c++/7/bits/basic_string.h ****       /**
2859:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2860:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2861:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2862:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2863:/usr/include/c++/7/bits/basic_string.h ****        *                against.
2864:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2865:/usr/include/c++/7/bits/basic_string.h ****        */
2866:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2867:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
2868:/usr/include/c++/7/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2869:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2870:/usr/include/c++/7/bits/basic_string.h **** 	{
2871:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2872:/usr/include/c++/7/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2873:/usr/include/c++/7/bits/basic_string.h **** 	}
2874:/usr/include/c++/7/bits/basic_string.h **** 
2875:/usr/include/c++/7/bits/basic_string.h ****       /**
2876:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2877:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2878:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2879:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2880:/usr/include/c++/7/bits/basic_string.h ****        *                against.
2881:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2882:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2883:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2884:/usr/include/c++/7/bits/basic_string.h ****        */
2885:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2886:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
2887:/usr/include/c++/7/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2888:/usr/include/c++/7/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2889:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2890:/usr/include/c++/7/bits/basic_string.h **** 	{
2891:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2892:/usr/include/c++/7/bits/basic_string.h **** 	  return __sv_type(*this)
2893:/usr/include/c++/7/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2894:/usr/include/c++/7/bits/basic_string.h **** 	}
2895:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2896:/usr/include/c++/7/bits/basic_string.h **** 
2897:/usr/include/c++/7/bits/basic_string.h ****       /**
2898:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2899:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2900:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2901:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
2902:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2903:/usr/include/c++/7/bits/basic_string.h ****        *
2904:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2905:/usr/include/c++/7/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2906:/usr/include/c++/7/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2907:/usr/include/c++/7/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2908:/usr/include/c++/7/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2909:/usr/include/c++/7/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2910:/usr/include/c++/7/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2911:/usr/include/c++/7/bits/basic_string.h ****        *  strings by calling
2912:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2913:/usr/include/c++/7/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2914:/usr/include/c++/7/bits/basic_string.h ****        *  the shorter one is ordered first.
2915:/usr/include/c++/7/bits/basic_string.h ****       */
2916:/usr/include/c++/7/bits/basic_string.h ****       int
2917:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2918:/usr/include/c++/7/bits/basic_string.h **** 
2919:/usr/include/c++/7/bits/basic_string.h ****       /**
2920:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2921:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2922:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2923:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
2924:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2925:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2926:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2927:/usr/include/c++/7/bits/basic_string.h ****        *
2928:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2929:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2930:/usr/include/c++/7/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2931:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2932:/usr/include/c++/7/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2933:/usr/include/c++/7/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2934:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2935:/usr/include/c++/7/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2936:/usr/include/c++/7/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2937:/usr/include/c++/7/bits/basic_string.h ****        *  calling
2938:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2939:/usr/include/c++/7/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2940:/usr/include/c++/7/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2941:/usr/include/c++/7/bits/basic_string.h ****       */
2942:/usr/include/c++/7/bits/basic_string.h ****       int
2943:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2944:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2945:/usr/include/c++/7/bits/basic_string.h **** 
2946:/usr/include/c++/7/bits/basic_string.h ****       /**
2947:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a C string.
2948:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to compare against.
2949:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2950:/usr/include/c++/7/bits/basic_string.h ****        *
2951:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2952:/usr/include/c++/7/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2953:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2954:/usr/include/c++/7/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2955:/usr/include/c++/7/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2956:/usr/include/c++/7/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2957:/usr/include/c++/7/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2958:/usr/include/c++/7/bits/basic_string.h ****        *  ordered first.
2959:/usr/include/c++/7/bits/basic_string.h ****       */
2960:/usr/include/c++/7/bits/basic_string.h ****       int
2961:/usr/include/c++/7/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2962:/usr/include/c++/7/bits/basic_string.h **** 
2963:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2964:/usr/include/c++/7/bits/basic_string.h ****       // 5 String::compare specification questionable
2965:/usr/include/c++/7/bits/basic_string.h ****       /**
2966:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2967:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2968:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2969:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to compare against.
2970:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2971:/usr/include/c++/7/bits/basic_string.h ****        *
2972:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2973:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2974:/usr/include/c++/7/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2975:/usr/include/c++/7/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2976:/usr/include/c++/7/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2977:/usr/include/c++/7/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
2978:/usr/include/c++/7/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
2979:/usr/include/c++/7/bits/basic_string.h ****        *  function then compares the two string by calling
2980:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2981:/usr/include/c++/7/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2982:/usr/include/c++/7/bits/basic_string.h ****        *  one is ordered first.
2983:/usr/include/c++/7/bits/basic_string.h ****       */
2984:/usr/include/c++/7/bits/basic_string.h ****       int
2985:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2986:/usr/include/c++/7/bits/basic_string.h **** 
2987:/usr/include/c++/7/bits/basic_string.h ****       /**
2988:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
2989:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2990:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2991:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  character %array to compare against.
2992:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
2993:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2994:/usr/include/c++/7/bits/basic_string.h ****        *
2995:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2996:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2997:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
2998:/usr/include/c++/7/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2999:/usr/include/c++/7/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3000:/usr/include/c++/7/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3001:/usr/include/c++/7/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3002:/usr/include/c++/7/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3003:/usr/include/c++/7/bits/basic_string.h ****        *  function then compares the two strings by calling
3004:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3005:/usr/include/c++/7/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3006:/usr/include/c++/7/bits/basic_string.h ****        *  one is ordered first.
3007:/usr/include/c++/7/bits/basic_string.h ****        *
3008:/usr/include/c++/7/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3009:/usr/include/c++/7/bits/basic_string.h ****        *  no special meaning.
3010:/usr/include/c++/7/bits/basic_string.h ****       */
3011:/usr/include/c++/7/bits/basic_string.h ****       int
3012:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3013:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __n2) const;
3014:/usr/include/c++/7/bits/basic_string.h **** 
3015:/usr/include/c++/7/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3016:/usr/include/c++/7/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3017:/usr/include/c++/7/bits/basic_string.h ****     };
3018:/usr/include/c++/7/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3019:/usr/include/c++/7/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3020:/usr/include/c++/7/bits/basic_string.h ****   // Reference-counted COW string implentation
3021:/usr/include/c++/7/bits/basic_string.h **** 
3022:/usr/include/c++/7/bits/basic_string.h ****   /**
3023:/usr/include/c++/7/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3024:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3025:/usr/include/c++/7/bits/basic_string.h ****    *
3026:/usr/include/c++/7/bits/basic_string.h ****    *  @ingroup strings
3027:/usr/include/c++/7/bits/basic_string.h ****    *  @ingroup sequences
3028:/usr/include/c++/7/bits/basic_string.h ****    *
3029:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3030:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3031:/usr/include/c++/7/bits/basic_string.h ****    *                   char_traits<_CharT>.
3032:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3033:/usr/include/c++/7/bits/basic_string.h ****    *
3034:/usr/include/c++/7/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3035:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3036:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3037:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3038:/usr/include/c++/7/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3039:/usr/include/c++/7/bits/basic_string.h ****    *
3040:/usr/include/c++/7/bits/basic_string.h ****    *  @doctodo
3041:/usr/include/c++/7/bits/basic_string.h ****    *
3042:/usr/include/c++/7/bits/basic_string.h ****    *
3043:/usr/include/c++/7/bits/basic_string.h ****    *  Documentation?  What's that?
3044:/usr/include/c++/7/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3045:/usr/include/c++/7/bits/basic_string.h ****    *
3046:/usr/include/c++/7/bits/basic_string.h ****    *  A string looks like this:
3047:/usr/include/c++/7/bits/basic_string.h ****    *
3048:/usr/include/c++/7/bits/basic_string.h ****    *  @code
3049:/usr/include/c++/7/bits/basic_string.h ****    *                                        [_Rep]
3050:/usr/include/c++/7/bits/basic_string.h ****    *                                        _M_length
3051:/usr/include/c++/7/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3052:/usr/include/c++/7/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3053:/usr/include/c++/7/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3054:/usr/include/c++/7/bits/basic_string.h ****    *  @endcode
3055:/usr/include/c++/7/bits/basic_string.h ****    *
3056:/usr/include/c++/7/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3057:/usr/include/c++/7/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3058:/usr/include/c++/7/bits/basic_string.h ****    *  pointer to the header.
3059:/usr/include/c++/7/bits/basic_string.h ****    *
3060:/usr/include/c++/7/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3061:/usr/include/c++/7/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3062:/usr/include/c++/7/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3063:/usr/include/c++/7/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3064:/usr/include/c++/7/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3065:/usr/include/c++/7/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3066:/usr/include/c++/7/bits/basic_string.h ****    *  object at the front.
3067:/usr/include/c++/7/bits/basic_string.h ****    *
3068:/usr/include/c++/7/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3069:/usr/include/c++/7/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3070:/usr/include/c++/7/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3071:/usr/include/c++/7/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3072:/usr/include/c++/7/bits/basic_string.h ****    *  string length.)
3073:/usr/include/c++/7/bits/basic_string.h ****    *
3074:/usr/include/c++/7/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3075:/usr/include/c++/7/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3076:/usr/include/c++/7/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3077:/usr/include/c++/7/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3078:/usr/include/c++/7/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3079:/usr/include/c++/7/bits/basic_string.h ****    *
3080:/usr/include/c++/7/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3081:/usr/include/c++/7/bits/basic_string.h ****    *  for a C++ string implementation.
3082:/usr/include/c++/7/bits/basic_string.h ****   */
3083:/usr/include/c++/7/bits/basic_string.h ****   // 21.3  Template class basic_string
3084:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3085:/usr/include/c++/7/bits/basic_string.h ****     class basic_string
3086:/usr/include/c++/7/bits/basic_string.h ****     {
3087:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
3088:/usr/include/c++/7/bits/basic_string.h **** 
3089:/usr/include/c++/7/bits/basic_string.h ****       // Types:
3090:/usr/include/c++/7/bits/basic_string.h ****     public:
3091:/usr/include/c++/7/bits/basic_string.h ****       typedef _Traits					    traits_type;
3092:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3093:/usr/include/c++/7/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3094:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3095:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3096:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3097:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3098:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
3099:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
3100:/usr/include/c++/7/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3101:/usr/include/c++/7/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3102:/usr/include/c++/7/bits/basic_string.h ****                                                             const_iterator;
3103:/usr/include/c++/7/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3104:/usr/include/c++/7/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3105:/usr/include/c++/7/bits/basic_string.h **** 
3106:/usr/include/c++/7/bits/basic_string.h ****     private:
3107:/usr/include/c++/7/bits/basic_string.h ****       // _Rep: string representation
3108:/usr/include/c++/7/bits/basic_string.h ****       //   Invariants:
3109:/usr/include/c++/7/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3110:/usr/include/c++/7/bits/basic_string.h ****       //      must be kept null-terminated.
3111:/usr/include/c++/7/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3112:/usr/include/c++/7/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3113:/usr/include/c++/7/bits/basic_string.h ****       //   3. _M_refcount has three states:
3114:/usr/include/c++/7/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3115:/usr/include/c++/7/bits/basic_string.h ****       //       0: one reference, non-const.
3116:/usr/include/c++/7/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3117:/usr/include/c++/7/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3118:/usr/include/c++/7/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3119:/usr/include/c++/7/bits/basic_string.h ****       //      empty string representation needs no constructor.
3120:/usr/include/c++/7/bits/basic_string.h **** 
3121:/usr/include/c++/7/bits/basic_string.h ****       struct _Rep_base
3122:/usr/include/c++/7/bits/basic_string.h ****       {
3123:/usr/include/c++/7/bits/basic_string.h **** 	size_type		_M_length;
3124:/usr/include/c++/7/bits/basic_string.h **** 	size_type		_M_capacity;
3125:/usr/include/c++/7/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3126:/usr/include/c++/7/bits/basic_string.h ****       };
3127:/usr/include/c++/7/bits/basic_string.h **** 
3128:/usr/include/c++/7/bits/basic_string.h ****       struct _Rep : _Rep_base
3129:/usr/include/c++/7/bits/basic_string.h ****       {
3130:/usr/include/c++/7/bits/basic_string.h **** 	// Types:
3131:/usr/include/c++/7/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
3132:/usr/include/c++/7/bits/basic_string.h **** 
3133:/usr/include/c++/7/bits/basic_string.h **** 	// (Public) Data members:
3134:/usr/include/c++/7/bits/basic_string.h **** 
3135:/usr/include/c++/7/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3136:/usr/include/c++/7/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3137:/usr/include/c++/7/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3138:/usr/include/c++/7/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3139:/usr/include/c++/7/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3140:/usr/include/c++/7/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3141:/usr/include/c++/7/bits/basic_string.h **** 	// look like this:
3142:/usr/include/c++/7/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3143:/usr/include/c++/7/bits/basic_string.h **** 	// Solving for m:
3144:/usr/include/c++/7/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3145:/usr/include/c++/7/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3146:/usr/include/c++/7/bits/basic_string.h **** 	static const size_type	_S_max_size;
3147:/usr/include/c++/7/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3148:/usr/include/c++/7/bits/basic_string.h **** 
3149:/usr/include/c++/7/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3150:/usr/include/c++/7/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3151:/usr/include/c++/7/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3152:/usr/include/c++/7/bits/basic_string.h **** 
3153:/usr/include/c++/7/bits/basic_string.h ****         static _Rep&
3154:/usr/include/c++/7/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3155:/usr/include/c++/7/bits/basic_string.h ****         { 
3156:/usr/include/c++/7/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3157:/usr/include/c++/7/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3158:/usr/include/c++/7/bits/basic_string.h **** 	  // be reasonably safe in this case.
3159:/usr/include/c++/7/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3160:/usr/include/c++/7/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3161:/usr/include/c++/7/bits/basic_string.h **** 	}
3162:/usr/include/c++/7/bits/basic_string.h **** 
3163:/usr/include/c++/7/bits/basic_string.h ****         bool
3164:/usr/include/c++/7/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3165:/usr/include/c++/7/bits/basic_string.h ****         {
3166:/usr/include/c++/7/bits/basic_string.h **** #if defined(__GTHREADS)
3167:/usr/include/c++/7/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3168:/usr/include/c++/7/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3169:/usr/include/c++/7/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3170:/usr/include/c++/7/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3171:/usr/include/c++/7/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3172:/usr/include/c++/7/bits/basic_string.h **** #else
3173:/usr/include/c++/7/bits/basic_string.h ****           return this->_M_refcount < 0;
3174:/usr/include/c++/7/bits/basic_string.h **** #endif
3175:/usr/include/c++/7/bits/basic_string.h ****         }
3176:/usr/include/c++/7/bits/basic_string.h **** 
3177:/usr/include/c++/7/bits/basic_string.h ****         bool
3178:/usr/include/c++/7/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3179:/usr/include/c++/7/bits/basic_string.h **** 	{
3180:/usr/include/c++/7/bits/basic_string.h **** #if defined(__GTHREADS)
3181:/usr/include/c++/7/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3182:/usr/include/c++/7/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3183:/usr/include/c++/7/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3184:/usr/include/c++/7/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3185:/usr/include/c++/7/bits/basic_string.h ****           // _M_dispose.
3186:/usr/include/c++/7/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3187:/usr/include/c++/7/bits/basic_string.h **** #else
3188:/usr/include/c++/7/bits/basic_string.h ****           return this->_M_refcount > 0;
3189:/usr/include/c++/7/bits/basic_string.h **** #endif
3190:/usr/include/c++/7/bits/basic_string.h ****         }
3191:/usr/include/c++/7/bits/basic_string.h **** 
3192:/usr/include/c++/7/bits/basic_string.h ****         void
3193:/usr/include/c++/7/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3194:/usr/include/c++/7/bits/basic_string.h ****         { this->_M_refcount = -1; }
3195:/usr/include/c++/7/bits/basic_string.h **** 
3196:/usr/include/c++/7/bits/basic_string.h ****         void
3197:/usr/include/c++/7/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3198:/usr/include/c++/7/bits/basic_string.h ****         { this->_M_refcount = 0; }
3199:/usr/include/c++/7/bits/basic_string.h **** 
3200:/usr/include/c++/7/bits/basic_string.h **** 	void
3201:/usr/include/c++/7/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3202:/usr/include/c++/7/bits/basic_string.h **** 	{
3203:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3204:/usr/include/c++/7/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3205:/usr/include/c++/7/bits/basic_string.h **** #endif
3206:/usr/include/c++/7/bits/basic_string.h **** 	    {
3207:/usr/include/c++/7/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3208:/usr/include/c++/7/bits/basic_string.h **** 	      this->_M_length = __n;
3209:/usr/include/c++/7/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3210:/usr/include/c++/7/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3211:/usr/include/c++/7/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3212:/usr/include/c++/7/bits/basic_string.h **** 	    }
3213:/usr/include/c++/7/bits/basic_string.h **** 	}
3214:/usr/include/c++/7/bits/basic_string.h **** 
3215:/usr/include/c++/7/bits/basic_string.h **** 	_CharT*
3216:/usr/include/c++/7/bits/basic_string.h **** 	_M_refdata() throw()
3217:/usr/include/c++/7/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3218:/usr/include/c++/7/bits/basic_string.h **** 
3219:/usr/include/c++/7/bits/basic_string.h **** 	_CharT*
3220:/usr/include/c++/7/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3221:/usr/include/c++/7/bits/basic_string.h **** 	{
3222:/usr/include/c++/7/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3223:/usr/include/c++/7/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3224:/usr/include/c++/7/bits/basic_string.h **** 	}
3225:/usr/include/c++/7/bits/basic_string.h **** 
3226:/usr/include/c++/7/bits/basic_string.h **** 	// Create & Destroy
3227:/usr/include/c++/7/bits/basic_string.h **** 	static _Rep*
3228:/usr/include/c++/7/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3229:/usr/include/c++/7/bits/basic_string.h **** 
3230:/usr/include/c++/7/bits/basic_string.h **** 	void
3231:/usr/include/c++/7/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3232:/usr/include/c++/7/bits/basic_string.h **** 	{
3233:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3234:/usr/include/c++/7/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3235:/usr/include/c++/7/bits/basic_string.h **** #endif
3236:/usr/include/c++/7/bits/basic_string.h **** 	    {
3237:/usr/include/c++/7/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3238:/usr/include/c++/7/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3239:/usr/include/c++/7/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3240:/usr/include/c++/7/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3241:/usr/include/c++/7/bits/basic_string.h ****               //   the last decrement that will delete the object.
3242:/usr/include/c++/7/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3243:/usr/include/c++/7/bits/basic_string.h ****               //   all the previous decrements.
3244:/usr/include/c++/7/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3245:/usr/include/c++/7/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3246:/usr/include/c++/7/bits/basic_string.h ****               //   the object is not shared anymore.
3247:/usr/include/c++/7/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3248:/usr/include/c++/7/bits/basic_string.h **** 							 -1) <= 0)
3249:/usr/include/c++/7/bits/basic_string.h **** 		{
3250:/usr/include/c++/7/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3251:/usr/include/c++/7/bits/basic_string.h **** 		  _M_destroy(__a);
3252:/usr/include/c++/7/bits/basic_string.h **** 		}
3253:/usr/include/c++/7/bits/basic_string.h **** 	    }
3254:/usr/include/c++/7/bits/basic_string.h **** 	}  // XXX MT
3255:/usr/include/c++/7/bits/basic_string.h **** 
3256:/usr/include/c++/7/bits/basic_string.h **** 	void
3257:/usr/include/c++/7/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3258:/usr/include/c++/7/bits/basic_string.h **** 
3259:/usr/include/c++/7/bits/basic_string.h **** 	_CharT*
3260:/usr/include/c++/7/bits/basic_string.h **** 	_M_refcopy() throw()
3261:/usr/include/c++/7/bits/basic_string.h **** 	{
3262:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3263:/usr/include/c++/7/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3264:/usr/include/c++/7/bits/basic_string.h **** #endif
3265:/usr/include/c++/7/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3266:/usr/include/c++/7/bits/basic_string.h **** 	  return _M_refdata();
3267:/usr/include/c++/7/bits/basic_string.h **** 	}  // XXX MT
3268:/usr/include/c++/7/bits/basic_string.h **** 
3269:/usr/include/c++/7/bits/basic_string.h **** 	_CharT*
3270:/usr/include/c++/7/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3271:/usr/include/c++/7/bits/basic_string.h ****       };
3272:/usr/include/c++/7/bits/basic_string.h **** 
3273:/usr/include/c++/7/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3274:/usr/include/c++/7/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3275:/usr/include/c++/7/bits/basic_string.h ****       {
3276:/usr/include/c++/7/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3277:/usr/include/c++/7/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3278:/usr/include/c++/7/bits/basic_string.h **** 
3279:/usr/include/c++/7/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3280:/usr/include/c++/7/bits/basic_string.h ****       };
3281:/usr/include/c++/7/bits/basic_string.h **** 
3282:/usr/include/c++/7/bits/basic_string.h ****     public:
3283:/usr/include/c++/7/bits/basic_string.h ****       // Data Members (public):
3284:/usr/include/c++/7/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3285:/usr/include/c++/7/bits/basic_string.h ****       // size that the allocator can hold.
3286:/usr/include/c++/7/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3287:/usr/include/c++/7/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3288:/usr/include/c++/7/bits/basic_string.h **** 
3289:/usr/include/c++/7/bits/basic_string.h ****     private:
3290:/usr/include/c++/7/bits/basic_string.h ****       // Data Members (private):
3291:/usr/include/c++/7/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3292:/usr/include/c++/7/bits/basic_string.h **** 
3293:/usr/include/c++/7/bits/basic_string.h ****       _CharT*
3294:/usr/include/c++/7/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3295:/usr/include/c++/7/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3296:/usr/include/c++/7/bits/basic_string.h **** 
3297:/usr/include/c++/7/bits/basic_string.h ****       _CharT*
3298:/usr/include/c++/7/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3299:/usr/include/c++/7/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3300:/usr/include/c++/7/bits/basic_string.h **** 
3301:/usr/include/c++/7/bits/basic_string.h ****       _Rep*
3302:/usr/include/c++/7/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3303:/usr/include/c++/7/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3304:/usr/include/c++/7/bits/basic_string.h **** 
3305:/usr/include/c++/7/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3306:/usr/include/c++/7/bits/basic_string.h ****       // but they do not call _M_leak.
3307:/usr/include/c++/7/bits/basic_string.h ****       iterator
3308:/usr/include/c++/7/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3309:/usr/include/c++/7/bits/basic_string.h ****       { return iterator(_M_data()); }
3310:/usr/include/c++/7/bits/basic_string.h **** 
3311:/usr/include/c++/7/bits/basic_string.h ****       iterator
3312:/usr/include/c++/7/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3313:/usr/include/c++/7/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3314:/usr/include/c++/7/bits/basic_string.h **** 
3315:/usr/include/c++/7/bits/basic_string.h ****       void
3316:/usr/include/c++/7/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3317:/usr/include/c++/7/bits/basic_string.h ****       {
3318:/usr/include/c++/7/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3319:/usr/include/c++/7/bits/basic_string.h **** 	  _M_leak_hard();
3320:/usr/include/c++/7/bits/basic_string.h ****       }
3321:/usr/include/c++/7/bits/basic_string.h **** 
3322:/usr/include/c++/7/bits/basic_string.h ****       size_type
3323:/usr/include/c++/7/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3324:/usr/include/c++/7/bits/basic_string.h ****       {
3325:/usr/include/c++/7/bits/basic_string.h **** 	if (__pos > this->size())
3326:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3327:/usr/include/c++/7/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3328:/usr/include/c++/7/bits/basic_string.h **** 				   __s, __pos, this->size());
3329:/usr/include/c++/7/bits/basic_string.h **** 	return __pos;
3330:/usr/include/c++/7/bits/basic_string.h ****       }
3331:/usr/include/c++/7/bits/basic_string.h **** 
3332:/usr/include/c++/7/bits/basic_string.h ****       void
3333:/usr/include/c++/7/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3334:/usr/include/c++/7/bits/basic_string.h ****       {
3335:/usr/include/c++/7/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3336:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3337:/usr/include/c++/7/bits/basic_string.h ****       }
3338:/usr/include/c++/7/bits/basic_string.h **** 
3339:/usr/include/c++/7/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3340:/usr/include/c++/7/bits/basic_string.h ****       size_type
3341:/usr/include/c++/7/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3342:/usr/include/c++/7/bits/basic_string.h ****       {
3343:/usr/include/c++/7/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3344:/usr/include/c++/7/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3345:/usr/include/c++/7/bits/basic_string.h ****       }
3346:/usr/include/c++/7/bits/basic_string.h **** 
3347:/usr/include/c++/7/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3348:/usr/include/c++/7/bits/basic_string.h ****       bool
3349:/usr/include/c++/7/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3350:/usr/include/c++/7/bits/basic_string.h ****       {
3351:/usr/include/c++/7/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3352:/usr/include/c++/7/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3353:/usr/include/c++/7/bits/basic_string.h ****       }
3354:/usr/include/c++/7/bits/basic_string.h **** 
3355:/usr/include/c++/7/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3356:/usr/include/c++/7/bits/basic_string.h ****       // traits_type::copy/move/assign.
3357:/usr/include/c++/7/bits/basic_string.h ****       static void
3358:/usr/include/c++/7/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3359:/usr/include/c++/7/bits/basic_string.h ****       {
3360:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
3361:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3362:/usr/include/c++/7/bits/basic_string.h **** 	else
3363:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3364:/usr/include/c++/7/bits/basic_string.h ****       }
3365:/usr/include/c++/7/bits/basic_string.h **** 
3366:/usr/include/c++/7/bits/basic_string.h ****       static void
3367:/usr/include/c++/7/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3368:/usr/include/c++/7/bits/basic_string.h ****       {
3369:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
3370:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3371:/usr/include/c++/7/bits/basic_string.h **** 	else
3372:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3373:/usr/include/c++/7/bits/basic_string.h ****       }
3374:/usr/include/c++/7/bits/basic_string.h **** 
3375:/usr/include/c++/7/bits/basic_string.h ****       static void
3376:/usr/include/c++/7/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3377:/usr/include/c++/7/bits/basic_string.h ****       {
3378:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
3379:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3380:/usr/include/c++/7/bits/basic_string.h **** 	else
3381:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3382:/usr/include/c++/7/bits/basic_string.h ****       }
3383:/usr/include/c++/7/bits/basic_string.h **** 
3384:/usr/include/c++/7/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3385:/usr/include/c++/7/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3386:/usr/include/c++/7/bits/basic_string.h ****       template<class _Iterator>
3387:/usr/include/c++/7/bits/basic_string.h ****         static void
3388:/usr/include/c++/7/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3389:/usr/include/c++/7/bits/basic_string.h ****         {
3390:/usr/include/c++/7/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3391:/usr/include/c++/7/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3392:/usr/include/c++/7/bits/basic_string.h **** 	}
3393:/usr/include/c++/7/bits/basic_string.h **** 
3394:/usr/include/c++/7/bits/basic_string.h ****       static void
3395:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3396:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3397:/usr/include/c++/7/bits/basic_string.h **** 
3398:/usr/include/c++/7/bits/basic_string.h ****       static void
3399:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3400:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3401:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3402:/usr/include/c++/7/bits/basic_string.h **** 
3403:/usr/include/c++/7/bits/basic_string.h ****       static void
3404:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3405:/usr/include/c++/7/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3406:/usr/include/c++/7/bits/basic_string.h **** 
3407:/usr/include/c++/7/bits/basic_string.h ****       static void
3408:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3409:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3410:/usr/include/c++/7/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3411:/usr/include/c++/7/bits/basic_string.h **** 
3412:/usr/include/c++/7/bits/basic_string.h ****       static int
3413:/usr/include/c++/7/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3414:/usr/include/c++/7/bits/basic_string.h ****       {
3415:/usr/include/c++/7/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3416:/usr/include/c++/7/bits/basic_string.h **** 
3417:/usr/include/c++/7/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3418:/usr/include/c++/7/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3419:/usr/include/c++/7/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3420:/usr/include/c++/7/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3421:/usr/include/c++/7/bits/basic_string.h **** 	else
3422:/usr/include/c++/7/bits/basic_string.h **** 	  return int(__d);
3423:/usr/include/c++/7/bits/basic_string.h ****       }
3424:/usr/include/c++/7/bits/basic_string.h **** 
3425:/usr/include/c++/7/bits/basic_string.h ****       void
3426:/usr/include/c++/7/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3427:/usr/include/c++/7/bits/basic_string.h **** 
3428:/usr/include/c++/7/bits/basic_string.h ****       void
3429:/usr/include/c++/7/bits/basic_string.h ****       _M_leak_hard();
3430:/usr/include/c++/7/bits/basic_string.h **** 
3431:/usr/include/c++/7/bits/basic_string.h ****       static _Rep&
3432:/usr/include/c++/7/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3433:/usr/include/c++/7/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3434:/usr/include/c++/7/bits/basic_string.h **** 
3435:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
3436:/usr/include/c++/7/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3437:/usr/include/c++/7/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3438:/usr/include/c++/7/bits/basic_string.h **** 
3439:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3440:/usr/include/c++/7/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3441:/usr/include/c++/7/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3442:/usr/include/c++/7/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3443:/usr/include/c++/7/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3444:/usr/include/c++/7/bits/basic_string.h **** 	  _Res>;
3445:/usr/include/c++/7/bits/basic_string.h **** 
3446:/usr/include/c++/7/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3447:/usr/include/c++/7/bits/basic_string.h ****       static __sv_type
3448:/usr/include/c++/7/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3449:/usr/include/c++/7/bits/basic_string.h ****       { return __svt; }
3450:/usr/include/c++/7/bits/basic_string.h **** 
3451:/usr/include/c++/7/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3452:/usr/include/c++/7/bits/basic_string.h ****       // allows to add an internal constructor that does not
3453:/usr/include/c++/7/bits/basic_string.h ****       // participate in overload resolution when a string_view
3454:/usr/include/c++/7/bits/basic_string.h ****       // is provided.
3455:/usr/include/c++/7/bits/basic_string.h ****       struct __sv_wrapper
3456:/usr/include/c++/7/bits/basic_string.h ****       {
3457:/usr/include/c++/7/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3458:/usr/include/c++/7/bits/basic_string.h **** 	__sv_type _M_sv;
3459:/usr/include/c++/7/bits/basic_string.h ****       };
3460:/usr/include/c++/7/bits/basic_string.h **** #endif
3461:/usr/include/c++/7/bits/basic_string.h **** 
3462:/usr/include/c++/7/bits/basic_string.h ****     public:
3463:/usr/include/c++/7/bits/basic_string.h ****       // Construct/copy/destroy:
3464:/usr/include/c++/7/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3465:/usr/include/c++/7/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3466:/usr/include/c++/7/bits/basic_string.h **** 
3467:/usr/include/c++/7/bits/basic_string.h ****       /**
3468:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3469:/usr/include/c++/7/bits/basic_string.h ****        */
3470:/usr/include/c++/7/bits/basic_string.h ****       basic_string()
3471:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3472:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
3473:/usr/include/c++/7/bits/basic_string.h **** #else
3474:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
3475:/usr/include/c++/7/bits/basic_string.h **** #endif
3476:/usr/include/c++/7/bits/basic_string.h **** 
3477:/usr/include/c++/7/bits/basic_string.h ****       /**
3478:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3479:/usr/include/c++/7/bits/basic_string.h ****        */
3480:/usr/include/c++/7/bits/basic_string.h ****       explicit
3481:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _Alloc& __a);
3482:/usr/include/c++/7/bits/basic_string.h **** 
3483:/usr/include/c++/7/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3484:/usr/include/c++/7/bits/basic_string.h ****       /**
3485:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3486:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3487:/usr/include/c++/7/bits/basic_string.h ****        */
3488:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str);
3489:/usr/include/c++/7/bits/basic_string.h **** 
3490:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3491:/usr/include/c++/7/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3492:/usr/include/c++/7/bits/basic_string.h ****       /**
3493:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3494:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3495:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3496:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3497:/usr/include/c++/7/bits/basic_string.h ****        */
3498:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3499:/usr/include/c++/7/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3500:/usr/include/c++/7/bits/basic_string.h **** 
3501:/usr/include/c++/7/bits/basic_string.h ****       /**
3502:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3503:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3504:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3505:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3506:/usr/include/c++/7/bits/basic_string.h ****        */
3507:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3508:/usr/include/c++/7/bits/basic_string.h **** 		   size_type __n);
3509:/usr/include/c++/7/bits/basic_string.h ****       /**
3510:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3511:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3512:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3513:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3514:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3515:/usr/include/c++/7/bits/basic_string.h ****        */
3516:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3517:/usr/include/c++/7/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3518:/usr/include/c++/7/bits/basic_string.h **** 
3519:/usr/include/c++/7/bits/basic_string.h ****       /**
3520:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3521:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source character %array.
3522:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3523:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3524:/usr/include/c++/7/bits/basic_string.h ****        *
3525:/usr/include/c++/7/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3526:/usr/include/c++/7/bits/basic_string.h ****        *  has no special meaning.
3527:/usr/include/c++/7/bits/basic_string.h ****        */
3528:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3529:/usr/include/c++/7/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3530:/usr/include/c++/7/bits/basic_string.h ****       /**
3531:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3532:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source C string.
3533:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3534:/usr/include/c++/7/bits/basic_string.h ****        */
3535:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
3536:/usr/include/c++/7/bits/basic_string.h ****       /**
3537:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3538:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters.
3539:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Character to use.
3540:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3541:/usr/include/c++/7/bits/basic_string.h ****        */
3542:/usr/include/c++/7/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3543:/usr/include/c++/7/bits/basic_string.h **** 
3544:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
3545:/usr/include/c++/7/bits/basic_string.h ****       /**
3546:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Move construct string.
3547:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3548:/usr/include/c++/7/bits/basic_string.h ****        *
3549:/usr/include/c++/7/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3550:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3551:/usr/include/c++/7/bits/basic_string.h ****        **/
3552:/usr/include/c++/7/bits/basic_string.h ****       basic_string(basic_string&& __str)
3553:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3554:/usr/include/c++/7/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3555:/usr/include/c++/7/bits/basic_string.h **** #endif
3556:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(__str._M_dataplus)
3557:/usr/include/c++/7/bits/basic_string.h ****       {
3558:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3559:/usr/include/c++/7/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3560:/usr/include/c++/7/bits/basic_string.h **** #else
3561:/usr/include/c++/7/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3562:/usr/include/c++/7/bits/basic_string.h **** #endif
3563:/usr/include/c++/7/bits/basic_string.h ****       }
3564:/usr/include/c++/7/bits/basic_string.h **** 
3565:/usr/include/c++/7/bits/basic_string.h ****       /**
3566:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3567:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3568:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3569:/usr/include/c++/7/bits/basic_string.h ****        */
3570:/usr/include/c++/7/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3571:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
3572:/usr/include/c++/7/bits/basic_string.h **** 
3573:/usr/include/c++/7/bits/basic_string.h ****       /**
3574:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3575:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __beg  Start of range.
3576:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __end  End of range.
3577:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3578:/usr/include/c++/7/bits/basic_string.h ****        */
3579:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
3580:/usr/include/c++/7/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3581:/usr/include/c++/7/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
3582:/usr/include/c++/7/bits/basic_string.h **** 
3583:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
3584:/usr/include/c++/7/bits/basic_string.h ****       /**
3585:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3586:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3587:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3588:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3589:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3590:/usr/include/c++/7/bits/basic_string.h ****        */
3591:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3592:/usr/include/c++/7/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3593:/usr/include/c++/7/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3594:/usr/include/c++/7/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3595:/usr/include/c++/7/bits/basic_string.h **** 
3596:/usr/include/c++/7/bits/basic_string.h ****       /**
3597:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3598:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3599:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3600:/usr/include/c++/7/bits/basic_string.h ****        */
3601:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3602:/usr/include/c++/7/bits/basic_string.h **** 	explicit
3603:/usr/include/c++/7/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3604:/usr/include/c++/7/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3605:/usr/include/c++/7/bits/basic_string.h **** 
3606:/usr/include/c++/7/bits/basic_string.h ****       /**
3607:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3608:/usr/include/c++/7/bits/basic_string.h ****        *          wrapper.
3609:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3610:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3611:/usr/include/c++/7/bits/basic_string.h ****        */
3612:/usr/include/c++/7/bits/basic_string.h ****       explicit
3613:/usr/include/c++/7/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3614:/usr/include/c++/7/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3615:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
3616:/usr/include/c++/7/bits/basic_string.h **** 
3617:/usr/include/c++/7/bits/basic_string.h ****       /**
3618:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3619:/usr/include/c++/7/bits/basic_string.h ****        */
3620:/usr/include/c++/7/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3621:/usr/include/c++/7/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3622:/usr/include/c++/7/bits/basic_string.h **** 
3623:/usr/include/c++/7/bits/basic_string.h ****       /**
3624:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3625:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3626:/usr/include/c++/7/bits/basic_string.h ****        */
3627:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
3628:/usr/include/c++/7/bits/basic_string.h ****       operator=(const basic_string& __str) 
3629:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__str); }
3630:/usr/include/c++/7/bits/basic_string.h **** 
3631:/usr/include/c++/7/bits/basic_string.h ****       /**
3632:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3633:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3634:/usr/include/c++/7/bits/basic_string.h ****        */
3635:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
3636:/usr/include/c++/7/bits/basic_string.h ****       operator=(const _CharT* __s) 
3637:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__s); }
3638:/usr/include/c++/7/bits/basic_string.h **** 
3639:/usr/include/c++/7/bits/basic_string.h ****       /**
3640:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3641:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Source character.
3642:/usr/include/c++/7/bits/basic_string.h ****        *
3643:/usr/include/c++/7/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3644:/usr/include/c++/7/bits/basic_string.h ****        *  (*this)[0] == @a c.
3645:/usr/include/c++/7/bits/basic_string.h ****        */
3646:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
3647:/usr/include/c++/7/bits/basic_string.h ****       operator=(_CharT __c) 
3648:/usr/include/c++/7/bits/basic_string.h ****       { 
3649:/usr/include/c++/7/bits/basic_string.h **** 	this->assign(1, __c); 
3650:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
3651:/usr/include/c++/7/bits/basic_string.h ****       }
3652:/usr/include/c++/7/bits/basic_string.h **** 
3653:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
3654:/usr/include/c++/7/bits/basic_string.h ****       /**
3655:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3656:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3657:/usr/include/c++/7/bits/basic_string.h ****        *
3658:/usr/include/c++/7/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3659:/usr/include/c++/7/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3660:/usr/include/c++/7/bits/basic_string.h ****        **/
3661:/usr/include/c++/7/bits/basic_string.h ****       // PR 58265, this should be noexcept.
3662:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
3663:/usr/include/c++/7/bits/basic_string.h ****       operator=(basic_string&& __str)
3664:/usr/include/c++/7/bits/basic_string.h ****       {
3665:/usr/include/c++/7/bits/basic_string.h **** 	// NB: DR 1204.
3666:/usr/include/c++/7/bits/basic_string.h **** 	this->swap(__str);
3667:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
3668:/usr/include/c++/7/bits/basic_string.h ****       }
3669:/usr/include/c++/7/bits/basic_string.h **** 
3670:/usr/include/c++/7/bits/basic_string.h ****       /**
3671:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3672:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3673:/usr/include/c++/7/bits/basic_string.h ****        */
3674:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
3675:/usr/include/c++/7/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3676:/usr/include/c++/7/bits/basic_string.h ****       {
3677:/usr/include/c++/7/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3678:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
3679:/usr/include/c++/7/bits/basic_string.h ****       }
3680:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
3681:/usr/include/c++/7/bits/basic_string.h **** 
3682:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
3683:/usr/include/c++/7/bits/basic_string.h ****       /**
3684:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3685:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3686:/usr/include/c++/7/bits/basic_string.h ****        */
3687:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
3688:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3689:/usr/include/c++/7/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3690:/usr/include/c++/7/bits/basic_string.h **** 	{ return this->assign(__svt); }
3691:/usr/include/c++/7/bits/basic_string.h **** 
3692:/usr/include/c++/7/bits/basic_string.h ****       /**
3693:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3694:/usr/include/c++/7/bits/basic_string.h ****        *  @return A string_view.
3695:/usr/include/c++/7/bits/basic_string.h ****        */
3696:/usr/include/c++/7/bits/basic_string.h ****       operator __sv_type() const noexcept
3697:/usr/include/c++/7/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3698:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
3699:/usr/include/c++/7/bits/basic_string.h **** 
3700:/usr/include/c++/7/bits/basic_string.h ****       // Iterators:
3701:/usr/include/c++/7/bits/basic_string.h ****       /**
3702:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3703:/usr/include/c++/7/bits/basic_string.h ****        *  the %string.  Unshares the string.
3704:/usr/include/c++/7/bits/basic_string.h ****        */
3705:/usr/include/c++/7/bits/basic_string.h ****       iterator
3706:/usr/include/c++/7/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3707:/usr/include/c++/7/bits/basic_string.h ****       {
3708:/usr/include/c++/7/bits/basic_string.h **** 	_M_leak();
3709:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data());
3710:/usr/include/c++/7/bits/basic_string.h ****       }
3711:/usr/include/c++/7/bits/basic_string.h **** 
3712:/usr/include/c++/7/bits/basic_string.h ****       /**
3713:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3714:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.
3715:/usr/include/c++/7/bits/basic_string.h ****        */
3716:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
3717:/usr/include/c++/7/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3718:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3719:/usr/include/c++/7/bits/basic_string.h **** 
3720:/usr/include/c++/7/bits/basic_string.h ****       /**
3721:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3722:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3723:/usr/include/c++/7/bits/basic_string.h ****        */
3724:/usr/include/c++/7/bits/basic_string.h ****       iterator
3725:/usr/include/c++/7/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3726:/usr/include/c++/7/bits/basic_string.h ****       {
3727:/usr/include/c++/7/bits/basic_string.h **** 	_M_leak();
3728:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3729:/usr/include/c++/7/bits/basic_string.h ****       }
3730:/usr/include/c++/7/bits/basic_string.h **** 
3731:/usr/include/c++/7/bits/basic_string.h ****       /**
3732:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3733:/usr/include/c++/7/bits/basic_string.h ****        *  last character in the %string.
3734:/usr/include/c++/7/bits/basic_string.h ****        */
3735:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
3736:/usr/include/c++/7/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3737:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3738:/usr/include/c++/7/bits/basic_string.h **** 
3739:/usr/include/c++/7/bits/basic_string.h ****       /**
3740:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3741:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3742:/usr/include/c++/7/bits/basic_string.h ****        *  order.  Unshares the string.
3743:/usr/include/c++/7/bits/basic_string.h ****        */
3744:/usr/include/c++/7/bits/basic_string.h ****       reverse_iterator
3745:/usr/include/c++/7/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3746:/usr/include/c++/7/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3747:/usr/include/c++/7/bits/basic_string.h **** 
3748:/usr/include/c++/7/bits/basic_string.h ****       /**
3749:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3750:/usr/include/c++/7/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3751:/usr/include/c++/7/bits/basic_string.h ****        *  reverse element order.
3752:/usr/include/c++/7/bits/basic_string.h ****        */
3753:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
3754:/usr/include/c++/7/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3755:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3756:/usr/include/c++/7/bits/basic_string.h **** 
3757:/usr/include/c++/7/bits/basic_string.h ****       /**
3758:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3759:/usr/include/c++/7/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3760:/usr/include/c++/7/bits/basic_string.h ****        *  element order.  Unshares the string.
3761:/usr/include/c++/7/bits/basic_string.h ****        */
3762:/usr/include/c++/7/bits/basic_string.h ****       reverse_iterator
3763:/usr/include/c++/7/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3764:/usr/include/c++/7/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3765:/usr/include/c++/7/bits/basic_string.h **** 
3766:/usr/include/c++/7/bits/basic_string.h ****       /**
3767:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3768:/usr/include/c++/7/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3769:/usr/include/c++/7/bits/basic_string.h ****        *  is done in reverse element order.
3770:/usr/include/c++/7/bits/basic_string.h ****        */
3771:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
3772:/usr/include/c++/7/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3773:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3774:/usr/include/c++/7/bits/basic_string.h **** 
3775:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
3776:/usr/include/c++/7/bits/basic_string.h ****       /**
3777:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3778:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.
3779:/usr/include/c++/7/bits/basic_string.h ****        */
3780:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
3781:/usr/include/c++/7/bits/basic_string.h ****       cbegin() const noexcept
3782:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3783:/usr/include/c++/7/bits/basic_string.h **** 
3784:/usr/include/c++/7/bits/basic_string.h ****       /**
3785:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3786:/usr/include/c++/7/bits/basic_string.h ****        *  last character in the %string.
3787:/usr/include/c++/7/bits/basic_string.h ****        */
3788:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
3789:/usr/include/c++/7/bits/basic_string.h ****       cend() const noexcept
3790:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3791:/usr/include/c++/7/bits/basic_string.h **** 
3792:/usr/include/c++/7/bits/basic_string.h ****       /**
3793:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3794:/usr/include/c++/7/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3795:/usr/include/c++/7/bits/basic_string.h ****        *  reverse element order.
3796:/usr/include/c++/7/bits/basic_string.h ****        */
3797:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
3798:/usr/include/c++/7/bits/basic_string.h ****       crbegin() const noexcept
3799:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3800:/usr/include/c++/7/bits/basic_string.h **** 
3801:/usr/include/c++/7/bits/basic_string.h ****       /**
3802:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3803:/usr/include/c++/7/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3804:/usr/include/c++/7/bits/basic_string.h ****        *  is done in reverse element order.
3805:/usr/include/c++/7/bits/basic_string.h ****        */
3806:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
3807:/usr/include/c++/7/bits/basic_string.h ****       crend() const noexcept
3808:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3809:/usr/include/c++/7/bits/basic_string.h **** #endif
3810:/usr/include/c++/7/bits/basic_string.h **** 
3811:/usr/include/c++/7/bits/basic_string.h ****     public:
3812:/usr/include/c++/7/bits/basic_string.h ****       // Capacity:
3813:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3814:/usr/include/c++/7/bits/basic_string.h ****       ///  null-termination.
3815:/usr/include/c++/7/bits/basic_string.h ****       size_type
3816:/usr/include/c++/7/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3817:/usr/include/c++/7/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3818:/usr/include/c++/7/bits/basic_string.h **** 
3819:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3820:/usr/include/c++/7/bits/basic_string.h ****       ///  null-termination.
3821:/usr/include/c++/7/bits/basic_string.h ****       size_type
3822:/usr/include/c++/7/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3823:/usr/include/c++/7/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3824:/usr/include/c++/7/bits/basic_string.h **** 
3825:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3826:/usr/include/c++/7/bits/basic_string.h ****       size_type
3827:/usr/include/c++/7/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3828:/usr/include/c++/7/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3829:/usr/include/c++/7/bits/basic_string.h **** 
3830:/usr/include/c++/7/bits/basic_string.h ****       /**
3831:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3832:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3833:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3834:/usr/include/c++/7/bits/basic_string.h ****        *
3835:/usr/include/c++/7/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3836:/usr/include/c++/7/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3837:/usr/include/c++/7/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3838:/usr/include/c++/7/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3839:/usr/include/c++/7/bits/basic_string.h ****        */
3840:/usr/include/c++/7/bits/basic_string.h ****       void
3841:/usr/include/c++/7/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3842:/usr/include/c++/7/bits/basic_string.h **** 
3843:/usr/include/c++/7/bits/basic_string.h ****       /**
3844:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3845:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3846:/usr/include/c++/7/bits/basic_string.h ****        *
3847:/usr/include/c++/7/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3848:/usr/include/c++/7/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3849:/usr/include/c++/7/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3850:/usr/include/c++/7/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3851:/usr/include/c++/7/bits/basic_string.h ****        *  setting them to 0.
3852:/usr/include/c++/7/bits/basic_string.h ****        */
3853:/usr/include/c++/7/bits/basic_string.h ****       void
3854:/usr/include/c++/7/bits/basic_string.h ****       resize(size_type __n)
3855:/usr/include/c++/7/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3856:/usr/include/c++/7/bits/basic_string.h **** 
3857:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
3858:/usr/include/c++/7/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3859:/usr/include/c++/7/bits/basic_string.h ****       void
3860:/usr/include/c++/7/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3861:/usr/include/c++/7/bits/basic_string.h ****       {
3862:/usr/include/c++/7/bits/basic_string.h **** #if __cpp_exceptions
3863:/usr/include/c++/7/bits/basic_string.h **** 	if (capacity() > size())
3864:/usr/include/c++/7/bits/basic_string.h **** 	  {
3865:/usr/include/c++/7/bits/basic_string.h **** 	    try
3866:/usr/include/c++/7/bits/basic_string.h **** 	      { reserve(0); }
3867:/usr/include/c++/7/bits/basic_string.h **** 	    catch(...)
3868:/usr/include/c++/7/bits/basic_string.h **** 	      { }
3869:/usr/include/c++/7/bits/basic_string.h **** 	  }
3870:/usr/include/c++/7/bits/basic_string.h **** #endif
3871:/usr/include/c++/7/bits/basic_string.h ****       }
3872:/usr/include/c++/7/bits/basic_string.h **** #endif
3873:/usr/include/c++/7/bits/basic_string.h **** 
3874:/usr/include/c++/7/bits/basic_string.h ****       /**
3875:/usr/include/c++/7/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3876:/usr/include/c++/7/bits/basic_string.h ****        *  before needing to allocate more memory.
3877:/usr/include/c++/7/bits/basic_string.h ****        */
3878:/usr/include/c++/7/bits/basic_string.h ****       size_type
3879:/usr/include/c++/7/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3880:/usr/include/c++/7/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3881:/usr/include/c++/7/bits/basic_string.h **** 
3882:/usr/include/c++/7/bits/basic_string.h ****       /**
3883:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3884:/usr/include/c++/7/bits/basic_string.h ****        *          characters.
3885:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3886:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3887:/usr/include/c++/7/bits/basic_string.h ****        *
3888:/usr/include/c++/7/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3889:/usr/include/c++/7/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3890:/usr/include/c++/7/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3891:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
3892:/usr/include/c++/7/bits/basic_string.h ****        *
3893:/usr/include/c++/7/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3894:/usr/include/c++/7/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3895:/usr/include/c++/7/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3896:/usr/include/c++/7/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3897:/usr/include/c++/7/bits/basic_string.h ****        *  data.
3898:/usr/include/c++/7/bits/basic_string.h ****        */
3899:/usr/include/c++/7/bits/basic_string.h ****       void
3900:/usr/include/c++/7/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3901:/usr/include/c++/7/bits/basic_string.h **** 
3902:/usr/include/c++/7/bits/basic_string.h ****       /**
3903:/usr/include/c++/7/bits/basic_string.h ****        *  Erases the string, making it empty.
3904:/usr/include/c++/7/bits/basic_string.h ****        */
3905:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3906:/usr/include/c++/7/bits/basic_string.h ****       void
3907:/usr/include/c++/7/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
3908:/usr/include/c++/7/bits/basic_string.h ****       {
3909:/usr/include/c++/7/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
3910:/usr/include/c++/7/bits/basic_string.h **** 	  {
3911:/usr/include/c++/7/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
3912:/usr/include/c++/7/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
3913:/usr/include/c++/7/bits/basic_string.h **** 	  }
3914:/usr/include/c++/7/bits/basic_string.h **** 	else
3915:/usr/include/c++/7/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
3916:/usr/include/c++/7/bits/basic_string.h ****       }
3917:/usr/include/c++/7/bits/basic_string.h **** #else
3918:/usr/include/c++/7/bits/basic_string.h ****       // PR 56166: this should not throw.
3919:/usr/include/c++/7/bits/basic_string.h ****       void
3920:/usr/include/c++/7/bits/basic_string.h ****       clear()
3921:/usr/include/c++/7/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
3922:/usr/include/c++/7/bits/basic_string.h **** #endif
3923:/usr/include/c++/7/bits/basic_string.h **** 
3924:/usr/include/c++/7/bits/basic_string.h ****       /**
3925:/usr/include/c++/7/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
3926:/usr/include/c++/7/bits/basic_string.h ****        *  <code>*this == ""</code>.
3927:/usr/include/c++/7/bits/basic_string.h ****        */
3928:/usr/include/c++/7/bits/basic_string.h ****       bool
3929:/usr/include/c++/7/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
3930:/usr/include/c++/7/bits/basic_string.h ****       { return this->size() == 0; }
3931:/usr/include/c++/7/bits/basic_string.h **** 
3932:/usr/include/c++/7/bits/basic_string.h ****       // Element access:
3933:/usr/include/c++/7/bits/basic_string.h ****       /**
3934:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3935:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3936:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
3937:/usr/include/c++/7/bits/basic_string.h ****        *
3938:/usr/include/c++/7/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3939:/usr/include/c++/7/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3940:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3941:/usr/include/c++/7/bits/basic_string.h ****        *  see at().)
3942:/usr/include/c++/7/bits/basic_string.h ****        */
3943:/usr/include/c++/7/bits/basic_string.h ****       const_reference
3944:/usr/include/c++/7/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
3945:/usr/include/c++/7/bits/basic_string.h ****       {
3946:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
3947:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__pos];
3948:/usr/include/c++/7/bits/basic_string.h ****       }
3949:/usr/include/c++/7/bits/basic_string.h **** 
3950:/usr/include/c++/7/bits/basic_string.h ****       /**
3951:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3952:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3953:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3954:/usr/include/c++/7/bits/basic_string.h ****        *
3955:/usr/include/c++/7/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3956:/usr/include/c++/7/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3957:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3958:/usr/include/c++/7/bits/basic_string.h ****        *  see at().)  Unshares the string.
3959:/usr/include/c++/7/bits/basic_string.h ****        */
3960:/usr/include/c++/7/bits/basic_string.h ****       reference
3961:/usr/include/c++/7/bits/basic_string.h ****       operator[](size_type __pos)
3962:/usr/include/c++/7/bits/basic_string.h ****       {
3963:/usr/include/c++/7/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
3964:/usr/include/c++/7/bits/basic_string.h **** 	// and in C++11 mode.
3965:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
3966:/usr/include/c++/7/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
3967:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
3968:/usr/include/c++/7/bits/basic_string.h **** 	_M_leak();
3969:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__pos];
3970:/usr/include/c++/7/bits/basic_string.h ****       }
3971:/usr/include/c++/7/bits/basic_string.h **** 
3972:/usr/include/c++/7/bits/basic_string.h ****       /**
3973:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3974:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n The index of the character to access.
3975:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
3976:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3977:/usr/include/c++/7/bits/basic_string.h ****        *
3978:/usr/include/c++/7/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
3979:/usr/include/c++/7/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
3980:/usr/include/c++/7/bits/basic_string.h ****        *  throws out_of_range if the check fails.
3981:/usr/include/c++/7/bits/basic_string.h ****        */
3982:/usr/include/c++/7/bits/basic_string.h ****       const_reference
3983:/usr/include/c++/7/bits/basic_string.h ****       at(size_type __n) const
3984:/usr/include/c++/7/bits/basic_string.h ****       {
3985:/usr/include/c++/7/bits/basic_string.h **** 	if (__n >= this->size())
3986:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3987:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
3988:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu)"),
3989:/usr/include/c++/7/bits/basic_string.h **** 				   __n, this->size());
3990:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__n];
3991:/usr/include/c++/7/bits/basic_string.h ****       }
3992:/usr/include/c++/7/bits/basic_string.h **** 
3993:/usr/include/c++/7/bits/basic_string.h ****       /**
3994:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3995:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n The index of the character to access.
3996:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3997:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3998:/usr/include/c++/7/bits/basic_string.h ****        *
3999:/usr/include/c++/7/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4000:/usr/include/c++/7/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4001:/usr/include/c++/7/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4002:/usr/include/c++/7/bits/basic_string.h ****        *  unsharing the string.
4003:/usr/include/c++/7/bits/basic_string.h ****        */
4004:/usr/include/c++/7/bits/basic_string.h ****       reference
4005:/usr/include/c++/7/bits/basic_string.h ****       at(size_type __n)
4006:/usr/include/c++/7/bits/basic_string.h ****       {
4007:/usr/include/c++/7/bits/basic_string.h **** 	if (__n >= size())
4008:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4009:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4010:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu)"),
4011:/usr/include/c++/7/bits/basic_string.h **** 				   __n, this->size());
4012:/usr/include/c++/7/bits/basic_string.h **** 	_M_leak();
4013:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__n];
4014:/usr/include/c++/7/bits/basic_string.h ****       }
4015:/usr/include/c++/7/bits/basic_string.h **** 
4016:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4017:/usr/include/c++/7/bits/basic_string.h ****       /**
4018:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4019:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
4020:/usr/include/c++/7/bits/basic_string.h ****        */
4021:/usr/include/c++/7/bits/basic_string.h ****       reference
4022:/usr/include/c++/7/bits/basic_string.h ****       front()
4023:/usr/include/c++/7/bits/basic_string.h ****       {
4024:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4025:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](0);
4026:/usr/include/c++/7/bits/basic_string.h ****       }
4027:/usr/include/c++/7/bits/basic_string.h **** 
4028:/usr/include/c++/7/bits/basic_string.h ****       /**
4029:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4030:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
4031:/usr/include/c++/7/bits/basic_string.h ****        */
4032:/usr/include/c++/7/bits/basic_string.h ****       const_reference
4033:/usr/include/c++/7/bits/basic_string.h ****       front() const noexcept
4034:/usr/include/c++/7/bits/basic_string.h ****       {
4035:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4036:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](0);
4037:/usr/include/c++/7/bits/basic_string.h ****       }
4038:/usr/include/c++/7/bits/basic_string.h **** 
4039:/usr/include/c++/7/bits/basic_string.h ****       /**
4040:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4041:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
4042:/usr/include/c++/7/bits/basic_string.h ****        */
4043:/usr/include/c++/7/bits/basic_string.h ****       reference
4044:/usr/include/c++/7/bits/basic_string.h ****       back()
4045:/usr/include/c++/7/bits/basic_string.h ****       {
4046:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4047:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](this->size() - 1);
4048:/usr/include/c++/7/bits/basic_string.h ****       }
4049:/usr/include/c++/7/bits/basic_string.h **** 
4050:/usr/include/c++/7/bits/basic_string.h ****       /**
4051:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4052:/usr/include/c++/7/bits/basic_string.h ****        *  last element of the %string.
4053:/usr/include/c++/7/bits/basic_string.h ****        */
4054:/usr/include/c++/7/bits/basic_string.h ****       const_reference
4055:/usr/include/c++/7/bits/basic_string.h ****       back() const noexcept
4056:/usr/include/c++/7/bits/basic_string.h ****       {
4057:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4058:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](this->size() - 1);
4059:/usr/include/c++/7/bits/basic_string.h ****       }
4060:/usr/include/c++/7/bits/basic_string.h **** #endif
4061:/usr/include/c++/7/bits/basic_string.h **** 
4062:/usr/include/c++/7/bits/basic_string.h ****       // Modifiers:
4063:/usr/include/c++/7/bits/basic_string.h ****       /**
4064:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string to this string.
4065:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
4066:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4067:/usr/include/c++/7/bits/basic_string.h ****        */
4068:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4069:/usr/include/c++/7/bits/basic_string.h ****       operator+=(const basic_string& __str)
4070:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__str); }
4071:/usr/include/c++/7/bits/basic_string.h **** 
4072:/usr/include/c++/7/bits/basic_string.h ****       /**
4073:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C string.
4074:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
4075:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4076:/usr/include/c++/7/bits/basic_string.h ****        */
4077:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4078:/usr/include/c++/7/bits/basic_string.h ****       operator+=(const _CharT* __s)
4079:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__s); }
4080:/usr/include/c++/7/bits/basic_string.h **** 
4081:/usr/include/c++/7/bits/basic_string.h ****       /**
4082:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a character.
4083:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to append.
4084:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4085:/usr/include/c++/7/bits/basic_string.h ****        */
4086:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4087:/usr/include/c++/7/bits/basic_string.h ****       operator+=(_CharT __c)
4088:/usr/include/c++/7/bits/basic_string.h ****       { 
4089:/usr/include/c++/7/bits/basic_string.h **** 	this->push_back(__c);
4090:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
4091:/usr/include/c++/7/bits/basic_string.h ****       }
4092:/usr/include/c++/7/bits/basic_string.h **** 
4093:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4094:/usr/include/c++/7/bits/basic_string.h ****       /**
4095:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4096:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4097:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4098:/usr/include/c++/7/bits/basic_string.h ****        */
4099:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4100:/usr/include/c++/7/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4101:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4102:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4103:/usr/include/c++/7/bits/basic_string.h **** 
4104:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
4105:/usr/include/c++/7/bits/basic_string.h ****       /**
4106:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string_view.
4107:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4108:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4109:/usr/include/c++/7/bits/basic_string.h ****        */
4110:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4111:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4112:/usr/include/c++/7/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4113:/usr/include/c++/7/bits/basic_string.h **** 	{ return this->append(__svt); }
4114:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
4115:/usr/include/c++/7/bits/basic_string.h **** 
4116:/usr/include/c++/7/bits/basic_string.h ****       /**
4117:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string to this string.
4118:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
4119:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4120:/usr/include/c++/7/bits/basic_string.h ****        */
4121:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4122:/usr/include/c++/7/bits/basic_string.h ****       append(const basic_string& __str);
4123:/usr/include/c++/7/bits/basic_string.h **** 
4124:/usr/include/c++/7/bits/basic_string.h ****       /**
4125:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a substring.
4126:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
4127:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4128:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4129:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4130:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4131:/usr/include/c++/7/bits/basic_string.h ****        *
4132:/usr/include/c++/7/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4133:/usr/include/c++/7/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4134:/usr/include/c++/7/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4135:/usr/include/c++/7/bits/basic_string.h ****        *  remainder of @a __str is appended.
4136:/usr/include/c++/7/bits/basic_string.h ****        */
4137:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4138:/usr/include/c++/7/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
4139:/usr/include/c++/7/bits/basic_string.h **** 
4140:/usr/include/c++/7/bits/basic_string.h ****       /**
4141:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C substring.
4142:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
4143:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4144:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4145:/usr/include/c++/7/bits/basic_string.h ****        */
4146:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4147:/usr/include/c++/7/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4148:/usr/include/c++/7/bits/basic_string.h **** 
4149:/usr/include/c++/7/bits/basic_string.h ****       /**
4150:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C string.
4151:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
4152:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4153:/usr/include/c++/7/bits/basic_string.h ****        */
4154:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4155:/usr/include/c++/7/bits/basic_string.h ****       append(const _CharT* __s)
4156:/usr/include/c++/7/bits/basic_string.h ****       {
4157:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4158:/usr/include/c++/7/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4159:/usr/include/c++/7/bits/basic_string.h ****       }
4160:/usr/include/c++/7/bits/basic_string.h **** 
4161:/usr/include/c++/7/bits/basic_string.h ****       /**
4162:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append multiple characters.
4163:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4164:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to use.
4165:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4166:/usr/include/c++/7/bits/basic_string.h ****        *
4167:/usr/include/c++/7/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4168:/usr/include/c++/7/bits/basic_string.h ****        */
4169:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4170:/usr/include/c++/7/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4171:/usr/include/c++/7/bits/basic_string.h **** 
4172:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4173:/usr/include/c++/7/bits/basic_string.h ****       /**
4174:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4175:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4176:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4177:/usr/include/c++/7/bits/basic_string.h ****        */
4178:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4179:/usr/include/c++/7/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4180:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4181:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4182:/usr/include/c++/7/bits/basic_string.h **** 
4183:/usr/include/c++/7/bits/basic_string.h ****       /**
4184:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a range of characters.
4185:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4186:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4187:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4188:/usr/include/c++/7/bits/basic_string.h ****        *
4189:/usr/include/c++/7/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4190:/usr/include/c++/7/bits/basic_string.h ****        */
4191:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
4192:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
4193:/usr/include/c++/7/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4194:/usr/include/c++/7/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4195:/usr/include/c++/7/bits/basic_string.h **** 
4196:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
4197:/usr/include/c++/7/bits/basic_string.h ****       /**
4198:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string_view.
4199:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4200:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4201:/usr/include/c++/7/bits/basic_string.h ****        */
4202:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4203:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4204:/usr/include/c++/7/bits/basic_string.h **** 	append(const _Tp& __svt)
4205:/usr/include/c++/7/bits/basic_string.h **** 	{
4206:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4207:/usr/include/c++/7/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4208:/usr/include/c++/7/bits/basic_string.h **** 	}
4209:/usr/include/c++/7/bits/basic_string.h **** 
4210:/usr/include/c++/7/bits/basic_string.h ****       /**
4211:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4212:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4213:/usr/include/c++/7/bits/basic_string.h ****        *               from.
4214:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4215:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4216:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4217:/usr/include/c++/7/bits/basic_string.h ****        */
4218:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4219:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4220:/usr/include/c++/7/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4221:/usr/include/c++/7/bits/basic_string.h **** 	{
4222:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4223:/usr/include/c++/7/bits/basic_string.h **** 	  return append(__sv.data()
4224:/usr/include/c++/7/bits/basic_string.h **** 			+ __sv._M_check(__pos, "basic_string::append"),
4225:/usr/include/c++/7/bits/basic_string.h **** 			__sv._M_limit(__pos, __n));
4226:/usr/include/c++/7/bits/basic_string.h **** 	}
4227:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
4228:/usr/include/c++/7/bits/basic_string.h **** 
4229:/usr/include/c++/7/bits/basic_string.h ****       /**
4230:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a single character.
4231:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to append.
4232:/usr/include/c++/7/bits/basic_string.h ****        */
4233:/usr/include/c++/7/bits/basic_string.h ****       void
4234:/usr/include/c++/7/bits/basic_string.h ****       push_back(_CharT __c)
4235:/usr/include/c++/7/bits/basic_string.h ****       { 
4236:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4237:/usr/include/c++/7/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4238:/usr/include/c++/7/bits/basic_string.h **** 	  this->reserve(__len);
4239:/usr/include/c++/7/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4240:/usr/include/c++/7/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4241:/usr/include/c++/7/bits/basic_string.h ****       }
4242:/usr/include/c++/7/bits/basic_string.h **** 
4243:/usr/include/c++/7/bits/basic_string.h ****       /**
4244:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4245:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string to use.
4246:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4247:/usr/include/c++/7/bits/basic_string.h ****        */
4248:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4249:/usr/include/c++/7/bits/basic_string.h ****       assign(const basic_string& __str);
4250:/usr/include/c++/7/bits/basic_string.h **** 
4251:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4252:/usr/include/c++/7/bits/basic_string.h ****       /**
4253:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4254:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string to use.
4255:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4256:/usr/include/c++/7/bits/basic_string.h ****        *
4257:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4258:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4259:/usr/include/c++/7/bits/basic_string.h ****        */
4260:/usr/include/c++/7/bits/basic_string.h ****       // PR 58265, this should be noexcept.
4261:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4262:/usr/include/c++/7/bits/basic_string.h ****       assign(basic_string&& __str)
4263:/usr/include/c++/7/bits/basic_string.h ****       {
4264:/usr/include/c++/7/bits/basic_string.h **** 	this->swap(__str);
4265:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
4266:/usr/include/c++/7/bits/basic_string.h ****       }
4267:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4268:/usr/include/c++/7/bits/basic_string.h **** 
4269:/usr/include/c++/7/bits/basic_string.h ****       /**
4270:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4271:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to use.
4272:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4273:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4274:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4275:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4276:/usr/include/c++/7/bits/basic_string.h ****        *
4277:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4278:/usr/include/c++/7/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4279:/usr/include/c++/7/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4280:/usr/include/c++/7/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4281:/usr/include/c++/7/bits/basic_string.h ****        */
4282:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4283:/usr/include/c++/7/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
4284:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__str._M_data()
4285:/usr/include/c++/7/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4286:/usr/include/c++/7/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4287:/usr/include/c++/7/bits/basic_string.h **** 
4288:/usr/include/c++/7/bits/basic_string.h ****       /**
4289:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4290:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to use.
4291:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4292:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4293:/usr/include/c++/7/bits/basic_string.h ****        *
4294:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4295:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4296:/usr/include/c++/7/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4297:/usr/include/c++/7/bits/basic_string.h ****        */
4298:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4299:/usr/include/c++/7/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4300:/usr/include/c++/7/bits/basic_string.h **** 
4301:/usr/include/c++/7/bits/basic_string.h ****       /**
4302:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4303:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to use.
4304:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4305:/usr/include/c++/7/bits/basic_string.h ****        *
4306:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4307:/usr/include/c++/7/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4308:/usr/include/c++/7/bits/basic_string.h ****        *  function returns.
4309:/usr/include/c++/7/bits/basic_string.h ****        */
4310:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4311:/usr/include/c++/7/bits/basic_string.h ****       assign(const _CharT* __s)
4312:/usr/include/c++/7/bits/basic_string.h ****       {
4313:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4314:/usr/include/c++/7/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4315:/usr/include/c++/7/bits/basic_string.h ****       }
4316:/usr/include/c++/7/bits/basic_string.h **** 
4317:/usr/include/c++/7/bits/basic_string.h ****       /**
4318:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4319:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4320:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to use.
4321:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4322:/usr/include/c++/7/bits/basic_string.h ****        *
4323:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4324:/usr/include/c++/7/bits/basic_string.h ****        *  character @a __c.
4325:/usr/include/c++/7/bits/basic_string.h ****        */
4326:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4327:/usr/include/c++/7/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4328:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4329:/usr/include/c++/7/bits/basic_string.h **** 
4330:/usr/include/c++/7/bits/basic_string.h ****       /**
4331:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4332:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4333:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4334:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4335:/usr/include/c++/7/bits/basic_string.h ****        *
4336:/usr/include/c++/7/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4337:/usr/include/c++/7/bits/basic_string.h ****       */
4338:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
4339:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
4340:/usr/include/c++/7/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4341:/usr/include/c++/7/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4342:/usr/include/c++/7/bits/basic_string.h **** 
4343:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4344:/usr/include/c++/7/bits/basic_string.h ****       /**
4345:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4346:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4347:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4348:/usr/include/c++/7/bits/basic_string.h ****        */
4349:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4350:/usr/include/c++/7/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4351:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4352:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4353:/usr/include/c++/7/bits/basic_string.h **** 
4354:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
4355:/usr/include/c++/7/bits/basic_string.h ****       /**
4356:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4357:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4358:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4359:/usr/include/c++/7/bits/basic_string.h ****        */
4360:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4361:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4362:/usr/include/c++/7/bits/basic_string.h **** 	assign(const _Tp& __svt)
4363:/usr/include/c++/7/bits/basic_string.h **** 	{
4364:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4365:/usr/include/c++/7/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4366:/usr/include/c++/7/bits/basic_string.h **** 	}
4367:/usr/include/c++/7/bits/basic_string.h **** 
4368:/usr/include/c++/7/bits/basic_string.h ****       /**
4369:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4370:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4371:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4372:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4373:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4374:/usr/include/c++/7/bits/basic_string.h ****        */
4375:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4376:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4377:/usr/include/c++/7/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4378:/usr/include/c++/7/bits/basic_string.h **** 	{
4379:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4380:/usr/include/c++/7/bits/basic_string.h **** 	  return assign(__sv.data()
4381:/usr/include/c++/7/bits/basic_string.h **** 			+ __sv._M_check(__pos, "basic_string::assign"),
4382:/usr/include/c++/7/bits/basic_string.h **** 			__sv._M_limit(__pos, __n));
4383:/usr/include/c++/7/bits/basic_string.h **** 	}
4384:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
4385:/usr/include/c++/7/bits/basic_string.h **** 
4386:/usr/include/c++/7/bits/basic_string.h ****       /**
4387:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4388:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4389:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4390:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
4391:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4392:/usr/include/c++/7/bits/basic_string.h ****        *
4393:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4394:/usr/include/c++/7/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4395:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4396:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4397:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4398:/usr/include/c++/7/bits/basic_string.h ****       */
4399:/usr/include/c++/7/bits/basic_string.h ****       void
4400:/usr/include/c++/7/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4401:/usr/include/c++/7/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4402:/usr/include/c++/7/bits/basic_string.h **** 
4403:/usr/include/c++/7/bits/basic_string.h ****       /**
4404:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4405:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4406:/usr/include/c++/7/bits/basic_string.h ****        *  @param __beg  Start of range.
4407:/usr/include/c++/7/bits/basic_string.h ****        *  @param __end  End of range.
4408:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4409:/usr/include/c++/7/bits/basic_string.h ****        *
4410:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4411:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4412:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4413:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4414:/usr/include/c++/7/bits/basic_string.h ****       */
4415:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
4416:/usr/include/c++/7/bits/basic_string.h ****         void
4417:/usr/include/c++/7/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4418:/usr/include/c++/7/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4419:/usr/include/c++/7/bits/basic_string.h **** 
4420:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4421:/usr/include/c++/7/bits/basic_string.h ****       /**
4422:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4423:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4424:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4425:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4426:/usr/include/c++/7/bits/basic_string.h ****        */
4427:/usr/include/c++/7/bits/basic_string.h ****       void
4428:/usr/include/c++/7/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4429:/usr/include/c++/7/bits/basic_string.h ****       {
4430:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4431:/usr/include/c++/7/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4432:/usr/include/c++/7/bits/basic_string.h ****       }
4433:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4434:/usr/include/c++/7/bits/basic_string.h **** 
4435:/usr/include/c++/7/bits/basic_string.h ****       /**
4436:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert value of a string.
4437:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4438:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to insert.
4439:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4440:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4441:/usr/include/c++/7/bits/basic_string.h ****        *
4442:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4443:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4444:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4445:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4446:/usr/include/c++/7/bits/basic_string.h ****       */
4447:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4448:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4449:/usr/include/c++/7/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4450:/usr/include/c++/7/bits/basic_string.h **** 
4451:/usr/include/c++/7/bits/basic_string.h ****       /**
4452:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a substring.
4453:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4454:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to insert.
4455:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4456:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4457:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4458:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4459:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4460:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4461:/usr/include/c++/7/bits/basic_string.h ****        *
4462:/usr/include/c++/7/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4463:/usr/include/c++/7/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4464:/usr/include/c++/7/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4465:/usr/include/c++/7/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4466:/usr/include/c++/7/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4467:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4468:/usr/include/c++/7/bits/basic_string.h ****       */
4469:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4470:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4471:/usr/include/c++/7/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
4472:/usr/include/c++/7/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4473:/usr/include/c++/7/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4474:/usr/include/c++/7/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4475:/usr/include/c++/7/bits/basic_string.h **** 
4476:/usr/include/c++/7/bits/basic_string.h ****       /**
4477:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a C substring.
4478:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4479:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to insert.
4480:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4481:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4482:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4483:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4484:/usr/include/c++/7/bits/basic_string.h ****        *  string.
4485:/usr/include/c++/7/bits/basic_string.h ****        *
4486:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4487:/usr/include/c++/7/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4488:/usr/include/c++/7/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4489:/usr/include/c++/7/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4490:/usr/include/c++/7/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4491:/usr/include/c++/7/bits/basic_string.h ****       */
4492:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4493:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4494:/usr/include/c++/7/bits/basic_string.h **** 
4495:/usr/include/c++/7/bits/basic_string.h ****       /**
4496:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a C string.
4497:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4498:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to insert.
4499:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4500:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4501:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4502:/usr/include/c++/7/bits/basic_string.h ****        *  string.
4503:/usr/include/c++/7/bits/basic_string.h ****        *
4504:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4505:/usr/include/c++/7/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4506:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4507:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4508:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
4509:/usr/include/c++/7/bits/basic_string.h ****       */
4510:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4511:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4512:/usr/include/c++/7/bits/basic_string.h ****       {
4513:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4514:/usr/include/c++/7/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4515:/usr/include/c++/7/bits/basic_string.h ****       }
4516:/usr/include/c++/7/bits/basic_string.h **** 
4517:/usr/include/c++/7/bits/basic_string.h ****       /**
4518:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4519:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4520:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4521:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
4522:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4523:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4524:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4525:/usr/include/c++/7/bits/basic_string.h ****        *  string.
4526:/usr/include/c++/7/bits/basic_string.h ****        *
4527:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4528:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4529:/usr/include/c++/7/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4530:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4531:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4532:/usr/include/c++/7/bits/basic_string.h ****       */
4533:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4534:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4535:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4536:/usr/include/c++/7/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4537:/usr/include/c++/7/bits/basic_string.h **** 
4538:/usr/include/c++/7/bits/basic_string.h ****       /**
4539:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert one character.
4540:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4541:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
4542:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4543:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4544:/usr/include/c++/7/bits/basic_string.h ****        *
4545:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4546:/usr/include/c++/7/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4547:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4548:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4549:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4550:/usr/include/c++/7/bits/basic_string.h ****       */
4551:/usr/include/c++/7/bits/basic_string.h ****       iterator
4552:/usr/include/c++/7/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4553:/usr/include/c++/7/bits/basic_string.h ****       {
4554:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4555:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4556:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4557:/usr/include/c++/7/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4558:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4559:/usr/include/c++/7/bits/basic_string.h ****       }
4560:/usr/include/c++/7/bits/basic_string.h **** 
4561:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
4562:/usr/include/c++/7/bits/basic_string.h ****       /**
4563:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a string_view.
4564:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4565:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4566:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4567:/usr/include/c++/7/bits/basic_string.h ****       */
4568:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4569:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4570:/usr/include/c++/7/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4571:/usr/include/c++/7/bits/basic_string.h **** 	{
4572:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4573:/usr/include/c++/7/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4574:/usr/include/c++/7/bits/basic_string.h **** 	}
4575:/usr/include/c++/7/bits/basic_string.h **** 
4576:/usr/include/c++/7/bits/basic_string.h ****       /**
4577:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a string_view.
4578:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4579:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4580:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
4581:/usr/include/c++/7/bits/basic_string.h ****        *  from.
4582:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4583:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4584:/usr/include/c++/7/bits/basic_string.h ****       */
4585:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4586:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4587:/usr/include/c++/7/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4588:/usr/include/c++/7/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4589:/usr/include/c++/7/bits/basic_string.h **** 	{
4590:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4591:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4592:/usr/include/c++/7/bits/basic_string.h **** 			       + __sv._M_check(__pos2, "basic_string::insert"),
4593:/usr/include/c++/7/bits/basic_string.h **** 			       __sv._M_limit(__pos2, __n));
4594:/usr/include/c++/7/bits/basic_string.h **** 	}
4595:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
4596:/usr/include/c++/7/bits/basic_string.h **** 
4597:/usr/include/c++/7/bits/basic_string.h ****       /**
4598:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove characters.
4599:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4600:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4601:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4602:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4603:/usr/include/c++/7/bits/basic_string.h ****        *  string.
4604:/usr/include/c++/7/bits/basic_string.h ****        *
4605:/usr/include/c++/7/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4606:/usr/include/c++/7/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4607:/usr/include/c++/7/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4608:/usr/include/c++/7/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4609:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4610:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4611:/usr/include/c++/7/bits/basic_string.h ****       */
4612:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4613:/usr/include/c++/7/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4614:/usr/include/c++/7/bits/basic_string.h ****       { 
4615:/usr/include/c++/7/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4616:/usr/include/c++/7/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4617:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
4618:/usr/include/c++/7/bits/basic_string.h ****       }
4619:/usr/include/c++/7/bits/basic_string.h **** 
4620:/usr/include/c++/7/bits/basic_string.h ****       /**
4621:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove one character.
4622:/usr/include/c++/7/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4623:/usr/include/c++/7/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4624:/usr/include/c++/7/bits/basic_string.h ****        *
4625:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4626:/usr/include/c++/7/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4627:/usr/include/c++/7/bits/basic_string.h ****       */
4628:/usr/include/c++/7/bits/basic_string.h ****       iterator
4629:/usr/include/c++/7/bits/basic_string.h ****       erase(iterator __position)
4630:/usr/include/c++/7/bits/basic_string.h ****       {
4631:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4632:/usr/include/c++/7/bits/basic_string.h **** 				 && __position < _M_iend());
4633:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4634:/usr/include/c++/7/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4635:/usr/include/c++/7/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4636:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4637:/usr/include/c++/7/bits/basic_string.h ****       }
4638:/usr/include/c++/7/bits/basic_string.h **** 
4639:/usr/include/c++/7/bits/basic_string.h ****       /**
4640:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4641:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4642:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4643:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4644:/usr/include/c++/7/bits/basic_string.h ****        *
4645:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4646:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4647:/usr/include/c++/7/bits/basic_string.h ****       */
4648:/usr/include/c++/7/bits/basic_string.h ****       iterator
4649:/usr/include/c++/7/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4650:/usr/include/c++/7/bits/basic_string.h ****  
4651:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4652:/usr/include/c++/7/bits/basic_string.h ****       /**
4653:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove the last character.
4654:/usr/include/c++/7/bits/basic_string.h ****        *
4655:/usr/include/c++/7/bits/basic_string.h ****        *  The string must be non-empty.
4656:/usr/include/c++/7/bits/basic_string.h ****        */
4657:/usr/include/c++/7/bits/basic_string.h ****       void
4658:/usr/include/c++/7/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4659:/usr/include/c++/7/bits/basic_string.h ****       {
4660:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4661:/usr/include/c++/7/bits/basic_string.h **** 	erase(size() - 1, 1);
4662:/usr/include/c++/7/bits/basic_string.h ****       }
4663:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4664:/usr/include/c++/7/bits/basic_string.h **** 
4665:/usr/include/c++/7/bits/basic_string.h ****       /**
4666:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4667:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4668:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4669:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to insert.
4670:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4671:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4672:/usr/include/c++/7/bits/basic_string.h ****        *  string.
4673:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4674:/usr/include/c++/7/bits/basic_string.h ****        *
4675:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4676:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4677:/usr/include/c++/7/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4678:/usr/include/c++/7/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4679:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4680:/usr/include/c++/7/bits/basic_string.h ****        *  error is thrown.
4681:/usr/include/c++/7/bits/basic_string.h ****       */
4682:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4683:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4684:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4685:/usr/include/c++/7/bits/basic_string.h **** 
4686:/usr/include/c++/7/bits/basic_string.h ****       /**
4687:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4688:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4689:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4690:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to insert.
4691:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4692:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4693:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4694:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4695:/usr/include/c++/7/bits/basic_string.h ****        *  __str.size().
4696:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4697:/usr/include/c++/7/bits/basic_string.h ****        *
4698:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4699:/usr/include/c++/7/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4700:/usr/include/c++/7/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4701:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4702:/usr/include/c++/7/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4703:/usr/include/c++/7/bits/basic_string.h ****       */
4704:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4705:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4706:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
4707:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4708:/usr/include/c++/7/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4709:/usr/include/c++/7/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4710:/usr/include/c++/7/bits/basic_string.h **** 
4711:/usr/include/c++/7/bits/basic_string.h ****       /**
4712:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4713:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4714:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4715:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to insert.
4716:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4717:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4718:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4719:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4720:/usr/include/c++/7/bits/basic_string.h ****        *
4721:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4722:/usr/include/c++/7/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4723:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4724:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4725:/usr/include/c++/7/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4726:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4727:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.
4728:/usr/include/c++/7/bits/basic_string.h ****       */
4729:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4730:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4731:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __n2);
4732:/usr/include/c++/7/bits/basic_string.h **** 
4733:/usr/include/c++/7/bits/basic_string.h ****       /**
4734:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4735:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4736:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4737:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to insert.
4738:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4739:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4740:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4741:/usr/include/c++/7/bits/basic_string.h ****        *
4742:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4743:/usr/include/c++/7/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4744:/usr/include/c++/7/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4745:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4746:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4747:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4748:/usr/include/c++/7/bits/basic_string.h ****       */
4749:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4750:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4751:/usr/include/c++/7/bits/basic_string.h ****       {
4752:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4753:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4754:/usr/include/c++/7/bits/basic_string.h ****       }
4755:/usr/include/c++/7/bits/basic_string.h **** 
4756:/usr/include/c++/7/bits/basic_string.h ****       /**
4757:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4758:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4759:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4760:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4761:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to insert.
4762:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4763:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4764:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4765:/usr/include/c++/7/bits/basic_string.h ****        *
4766:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4767:/usr/include/c++/7/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4768:/usr/include/c++/7/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4769:/usr/include/c++/7/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4770:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4771:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.
4772:/usr/include/c++/7/bits/basic_string.h ****       */
4773:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4774:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4775:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4776:/usr/include/c++/7/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4777:/usr/include/c++/7/bits/basic_string.h **** 
4778:/usr/include/c++/7/bits/basic_string.h ****       /**
4779:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4780:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4781:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4782:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String value to insert.
4783:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4784:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4785:/usr/include/c++/7/bits/basic_string.h ****        *
4786:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4787:/usr/include/c++/7/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4788:/usr/include/c++/7/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4789:/usr/include/c++/7/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4790:/usr/include/c++/7/bits/basic_string.h ****       */
4791:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4792:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4793:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4794:/usr/include/c++/7/bits/basic_string.h **** 
4795:/usr/include/c++/7/bits/basic_string.h ****       /**
4796:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4797:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4798:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4799:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string value to insert.
4800:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4801:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4802:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4803:/usr/include/c++/7/bits/basic_string.h ****        *
4804:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4805:/usr/include/c++/7/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4806:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4807:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4808:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
4809:/usr/include/c++/7/bits/basic_string.h ****       */
4810:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4811:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4812:/usr/include/c++/7/bits/basic_string.h ****       {
4813:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4814:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4815:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4816:/usr/include/c++/7/bits/basic_string.h ****       }
4817:/usr/include/c++/7/bits/basic_string.h **** 
4818:/usr/include/c++/7/bits/basic_string.h ****       /**
4819:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4820:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4821:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4822:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string value to insert.
4823:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4824:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4825:/usr/include/c++/7/bits/basic_string.h ****        *
4826:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4827:/usr/include/c++/7/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4828:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4829:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4830:/usr/include/c++/7/bits/basic_string.h ****       */
4831:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4832:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4833:/usr/include/c++/7/bits/basic_string.h ****       {
4834:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4835:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4836:/usr/include/c++/7/bits/basic_string.h ****       }
4837:/usr/include/c++/7/bits/basic_string.h **** 
4838:/usr/include/c++/7/bits/basic_string.h ****       /**
4839:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4840:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4841:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4842:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4843:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to insert.
4844:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4845:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4846:/usr/include/c++/7/bits/basic_string.h ****        *
4847:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4848:/usr/include/c++/7/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4849:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4850:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4851:/usr/include/c++/7/bits/basic_string.h ****       */
4852:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4853:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4854:/usr/include/c++/7/bits/basic_string.h ****       {
4855:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4856:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4857:/usr/include/c++/7/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4858:/usr/include/c++/7/bits/basic_string.h ****       }
4859:/usr/include/c++/7/bits/basic_string.h **** 
4860:/usr/include/c++/7/bits/basic_string.h ****       /**
4861:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4862:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4863:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4864:/usr/include/c++/7/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4865:/usr/include/c++/7/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4866:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4867:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4868:/usr/include/c++/7/bits/basic_string.h ****        *
4869:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4870:/usr/include/c++/7/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4871:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4872:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4873:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
4874:/usr/include/c++/7/bits/basic_string.h ****       */
4875:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
4876:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
4877:/usr/include/c++/7/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4878:/usr/include/c++/7/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4879:/usr/include/c++/7/bits/basic_string.h ****         {
4880:/usr/include/c++/7/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4881:/usr/include/c++/7/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4882:/usr/include/c++/7/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4883:/usr/include/c++/7/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4884:/usr/include/c++/7/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4885:/usr/include/c++/7/bits/basic_string.h **** 	}
4886:/usr/include/c++/7/bits/basic_string.h **** 
4887:/usr/include/c++/7/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4888:/usr/include/c++/7/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4889:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4890:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4891:/usr/include/c++/7/bits/basic_string.h ****       {
4892:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4893:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4894:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4895:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4896:/usr/include/c++/7/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4897:/usr/include/c++/7/bits/basic_string.h ****       }
4898:/usr/include/c++/7/bits/basic_string.h **** 
4899:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4900:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4901:/usr/include/c++/7/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4902:/usr/include/c++/7/bits/basic_string.h ****       {
4903:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4904:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4905:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4906:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4907:/usr/include/c++/7/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4908:/usr/include/c++/7/bits/basic_string.h ****       }
4909:/usr/include/c++/7/bits/basic_string.h **** 
4910:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4911:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4912:/usr/include/c++/7/bits/basic_string.h ****       {
4913:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4914:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4915:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4916:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4917:/usr/include/c++/7/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4918:/usr/include/c++/7/bits/basic_string.h ****       }
4919:/usr/include/c++/7/bits/basic_string.h **** 
4920:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4921:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4922:/usr/include/c++/7/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
4923:/usr/include/c++/7/bits/basic_string.h ****       {
4924:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4925:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4926:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4927:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4928:/usr/include/c++/7/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4929:/usr/include/c++/7/bits/basic_string.h ****       }
4930:/usr/include/c++/7/bits/basic_string.h **** 
4931:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4932:/usr/include/c++/7/bits/basic_string.h ****       /**
4933:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
4934:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4935:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4936:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4937:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4938:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4939:/usr/include/c++/7/bits/basic_string.h ****        *
4940:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4941:/usr/include/c++/7/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4942:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4943:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4944:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
4945:/usr/include/c++/7/bits/basic_string.h ****       */
4946:/usr/include/c++/7/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
4947:/usr/include/c++/7/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
4948:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
4949:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4950:/usr/include/c++/7/bits/basic_string.h **** 
4951:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
4952:/usr/include/c++/7/bits/basic_string.h ****       /**
4953:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
4954:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  The position to replace at.
4955:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
4956:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4957:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4958:/usr/include/c++/7/bits/basic_string.h ****       */
4959:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4960:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4961:/usr/include/c++/7/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
4962:/usr/include/c++/7/bits/basic_string.h **** 	{
4963:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4964:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
4965:/usr/include/c++/7/bits/basic_string.h **** 	}
4966:/usr/include/c++/7/bits/basic_string.h **** 
4967:/usr/include/c++/7/bits/basic_string.h ****       /**
4968:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
4969:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
4970:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
4971:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
4972:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
4973:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
4974:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4975:/usr/include/c++/7/bits/basic_string.h ****       */
4976:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4977:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4978:/usr/include/c++/7/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
4979:/usr/include/c++/7/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
4980:/usr/include/c++/7/bits/basic_string.h **** 	{
4981:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4982:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
4983:/usr/include/c++/7/bits/basic_string.h **** 	      __sv.data() + __sv._M_check(__pos2, "basic_string::replace"),
4984:/usr/include/c++/7/bits/basic_string.h **** 	      __sv._M_limit(__pos2, __n2));
4985:/usr/include/c++/7/bits/basic_string.h **** 	}
4986:/usr/include/c++/7/bits/basic_string.h **** 
4987:/usr/include/c++/7/bits/basic_string.h ****       /**
4988:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
4989:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
4990:/usr/include/c++/7/bits/basic_string.h ****           to replace at.
4991:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
4992:/usr/include/c++/7/bits/basic_string.h ****           for the replace.
4993:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
4994:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4995:/usr/include/c++/7/bits/basic_string.h ****       */
4996:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4997:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4998:/usr/include/c++/7/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
4999:/usr/include/c++/7/bits/basic_string.h **** 	{
5000:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5001:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5002:/usr/include/c++/7/bits/basic_string.h **** 	}
5003:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5004:/usr/include/c++/7/bits/basic_string.h **** 
5005:/usr/include/c++/7/bits/basic_string.h ****     private:
5006:/usr/include/c++/7/bits/basic_string.h ****       template<class _Integer>
5007:/usr/include/c++/7/bits/basic_string.h **** 	basic_string&
5008:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5009:/usr/include/c++/7/bits/basic_string.h **** 			    _Integer __val, __true_type)
5010:/usr/include/c++/7/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5011:/usr/include/c++/7/bits/basic_string.h **** 
5012:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
5013:/usr/include/c++/7/bits/basic_string.h **** 	basic_string&
5014:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5015:/usr/include/c++/7/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5016:/usr/include/c++/7/bits/basic_string.h **** 
5017:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
5018:/usr/include/c++/7/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5019:/usr/include/c++/7/bits/basic_string.h **** 		     _CharT __c);
5020:/usr/include/c++/7/bits/basic_string.h **** 
5021:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
5022:/usr/include/c++/7/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5023:/usr/include/c++/7/bits/basic_string.h **** 		      size_type __n2);
5024:/usr/include/c++/7/bits/basic_string.h **** 
5025:/usr/include/c++/7/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5026:/usr/include/c++/7/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5027:/usr/include/c++/7/bits/basic_string.h ****       template<class _InIterator>
5028:/usr/include/c++/7/bits/basic_string.h ****         static _CharT*
5029:/usr/include/c++/7/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5030:/usr/include/c++/7/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5031:/usr/include/c++/7/bits/basic_string.h **** 	{
5032:/usr/include/c++/7/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5033:/usr/include/c++/7/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5034:/usr/include/c++/7/bits/basic_string.h **** 	}
5035:/usr/include/c++/7/bits/basic_string.h **** 
5036:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5037:/usr/include/c++/7/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5038:/usr/include/c++/7/bits/basic_string.h ****       template<class _Integer>
5039:/usr/include/c++/7/bits/basic_string.h ****         static _CharT*
5040:/usr/include/c++/7/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5041:/usr/include/c++/7/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5042:/usr/include/c++/7/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5043:/usr/include/c++/7/bits/basic_string.h **** 				    __end, __a); }
5044:/usr/include/c++/7/bits/basic_string.h **** 
5045:/usr/include/c++/7/bits/basic_string.h ****       static _CharT*
5046:/usr/include/c++/7/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5047:/usr/include/c++/7/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5048:/usr/include/c++/7/bits/basic_string.h **** 
5049:/usr/include/c++/7/bits/basic_string.h ****       template<class _InIterator>
5050:/usr/include/c++/7/bits/basic_string.h ****         static _CharT*
5051:/usr/include/c++/7/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5052:/usr/include/c++/7/bits/basic_string.h **** 	{
5053:/usr/include/c++/7/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5054:/usr/include/c++/7/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5055:/usr/include/c++/7/bits/basic_string.h ****         }
5056:/usr/include/c++/7/bits/basic_string.h **** 
5057:/usr/include/c++/7/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5058:/usr/include/c++/7/bits/basic_string.h ****       template<class _InIterator>
5059:/usr/include/c++/7/bits/basic_string.h ****         static _CharT*
5060:/usr/include/c++/7/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5061:/usr/include/c++/7/bits/basic_string.h **** 		      input_iterator_tag);
5062:/usr/include/c++/7/bits/basic_string.h **** 
5063:/usr/include/c++/7/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5064:/usr/include/c++/7/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5065:/usr/include/c++/7/bits/basic_string.h ****       template<class _FwdIterator>
5066:/usr/include/c++/7/bits/basic_string.h ****         static _CharT*
5067:/usr/include/c++/7/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5068:/usr/include/c++/7/bits/basic_string.h **** 		     forward_iterator_tag);
5069:/usr/include/c++/7/bits/basic_string.h **** 
5070:/usr/include/c++/7/bits/basic_string.h ****       static _CharT*
5071:/usr/include/c++/7/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5072:/usr/include/c++/7/bits/basic_string.h **** 
5073:/usr/include/c++/7/bits/basic_string.h ****     public:
5074:/usr/include/c++/7/bits/basic_string.h **** 
5075:/usr/include/c++/7/bits/basic_string.h ****       /**
5076:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5077:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5078:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5079:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5080:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Number of characters actually copied
5081:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5082:/usr/include/c++/7/bits/basic_string.h ****        *
5083:/usr/include/c++/7/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5084:/usr/include/c++/7/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5085:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.
5086:/usr/include/c++/7/bits/basic_string.h ****       */
5087:/usr/include/c++/7/bits/basic_string.h ****       size_type
5088:/usr/include/c++/7/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5089:/usr/include/c++/7/bits/basic_string.h **** 
5090:/usr/include/c++/7/bits/basic_string.h ****       /**
5091:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5092:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String to swap with.
5093:/usr/include/c++/7/bits/basic_string.h ****        *
5094:/usr/include/c++/7/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5095:/usr/include/c++/7/bits/basic_string.h ****        *  time.
5096:/usr/include/c++/7/bits/basic_string.h ****       */
5097:/usr/include/c++/7/bits/basic_string.h ****       // PR 58265, this should be noexcept.
5098:/usr/include/c++/7/bits/basic_string.h ****       void
5099:/usr/include/c++/7/bits/basic_string.h ****       swap(basic_string& __s);
5100:/usr/include/c++/7/bits/basic_string.h **** 
5101:/usr/include/c++/7/bits/basic_string.h ****       // String operations:
5102:/usr/include/c++/7/bits/basic_string.h ****       /**
5103:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5104:/usr/include/c++/7/bits/basic_string.h ****        *
5105:/usr/include/c++/7/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5106:/usr/include/c++/7/bits/basic_string.h ****        *  happen.
5107:/usr/include/c++/7/bits/basic_string.h ****       */
5108:/usr/include/c++/7/bits/basic_string.h ****       const _CharT*
5109:/usr/include/c++/7/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5110:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
5111:/usr/include/c++/7/bits/basic_string.h **** 
5112:/usr/include/c++/7/bits/basic_string.h ****       /**
5113:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5114:/usr/include/c++/7/bits/basic_string.h ****        *
5115:/usr/include/c++/7/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5116:/usr/include/c++/7/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5117:/usr/include/c++/7/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5118:/usr/include/c++/7/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5119:/usr/include/c++/7/bits/basic_string.h ****       */
5120:/usr/include/c++/7/bits/basic_string.h ****       const _CharT*
5121:/usr/include/c++/7/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5122:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
5123:/usr/include/c++/7/bits/basic_string.h **** 
5124:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5125:/usr/include/c++/7/bits/basic_string.h ****       /**
5126:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5127:/usr/include/c++/7/bits/basic_string.h ****        *
5128:/usr/include/c++/7/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5129:/usr/include/c++/7/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5130:/usr/include/c++/7/bits/basic_string.h ****       */
5131:/usr/include/c++/7/bits/basic_string.h ****       _CharT*
5132:/usr/include/c++/7/bits/basic_string.h ****       data() noexcept
5133:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
5134:/usr/include/c++/7/bits/basic_string.h **** #endif
5135:/usr/include/c++/7/bits/basic_string.h **** 
5136:/usr/include/c++/7/bits/basic_string.h ****       /**
5137:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5138:/usr/include/c++/7/bits/basic_string.h ****       */
5139:/usr/include/c++/7/bits/basic_string.h ****       allocator_type
5140:/usr/include/c++/7/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5141:/usr/include/c++/7/bits/basic_string.h ****       { return _M_dataplus; }
5142:/usr/include/c++/7/bits/basic_string.h **** 
5143:/usr/include/c++/7/bits/basic_string.h ****       /**
5144:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5145:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
5146:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5147:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5148:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5149:/usr/include/c++/7/bits/basic_string.h ****        *
5150:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5151:/usr/include/c++/7/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5152:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5153:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5154:/usr/include/c++/7/bits/basic_string.h ****       */
5155:/usr/include/c++/7/bits/basic_string.h ****       size_type
5156:/usr/include/c++/7/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5157:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5158:/usr/include/c++/7/bits/basic_string.h **** 
5159:/usr/include/c++/7/bits/basic_string.h ****       /**
5160:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a string.
5161:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to locate.
5162:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5163:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5164:/usr/include/c++/7/bits/basic_string.h ****        *
5165:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5166:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5167:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns npos.
5168:/usr/include/c++/7/bits/basic_string.h ****       */
5169:/usr/include/c++/7/bits/basic_string.h ****       size_type
5170:/usr/include/c++/7/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5171:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5172:/usr/include/c++/7/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5173:/usr/include/c++/7/bits/basic_string.h **** 
5174:/usr/include/c++/7/bits/basic_string.h ****       /**
5175:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a C string.
5176:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
5177:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5178:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5179:/usr/include/c++/7/bits/basic_string.h ****        *
5180:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5181:/usr/include/c++/7/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5182:/usr/include/c++/7/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5183:/usr/include/c++/7/bits/basic_string.h ****       */
5184:/usr/include/c++/7/bits/basic_string.h ****       size_type
5185:/usr/include/c++/7/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5186:/usr/include/c++/7/bits/basic_string.h ****       {
5187:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5188:/usr/include/c++/7/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5189:/usr/include/c++/7/bits/basic_string.h ****       }
5190:/usr/include/c++/7/bits/basic_string.h **** 
5191:/usr/include/c++/7/bits/basic_string.h ****       /**
5192:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character.
5193:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
5194:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5195:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5196:/usr/include/c++/7/bits/basic_string.h ****        *
5197:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5198:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5199:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
5200:/usr/include/c++/7/bits/basic_string.h ****       */
5201:/usr/include/c++/7/bits/basic_string.h ****       size_type
5202:/usr/include/c++/7/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5203:/usr/include/c++/7/bits/basic_string.h **** 
5204:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5205:/usr/include/c++/7/bits/basic_string.h ****       /**
5206:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5207:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5208:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5209:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5210:/usr/include/c++/7/bits/basic_string.h ****       */
5211:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5212:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5213:/usr/include/c++/7/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5214:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5215:/usr/include/c++/7/bits/basic_string.h **** 	{
5216:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5217:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5218:/usr/include/c++/7/bits/basic_string.h **** 	}
5219:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5220:/usr/include/c++/7/bits/basic_string.h **** 
5221:/usr/include/c++/7/bits/basic_string.h ****       /**
5222:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a string.
5223:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to locate.
5224:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5225:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5226:/usr/include/c++/7/bits/basic_string.h ****        *
5227:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5228:/usr/include/c++/7/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5229:/usr/include/c++/7/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5230:/usr/include/c++/7/bits/basic_string.h ****       */
5231:/usr/include/c++/7/bits/basic_string.h ****       size_type
5232:/usr/include/c++/7/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5233:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5234:/usr/include/c++/7/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5235:/usr/include/c++/7/bits/basic_string.h **** 
5236:/usr/include/c++/7/bits/basic_string.h ****       /**
5237:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5238:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
5239:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5240:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5241:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5242:/usr/include/c++/7/bits/basic_string.h ****        *
5243:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5244:/usr/include/c++/7/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5245:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5246:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5247:/usr/include/c++/7/bits/basic_string.h ****       */
5248:/usr/include/c++/7/bits/basic_string.h ****       size_type
5249:/usr/include/c++/7/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5250:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5251:/usr/include/c++/7/bits/basic_string.h **** 
5252:/usr/include/c++/7/bits/basic_string.h ****       /**
5253:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5254:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
5255:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5256:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5257:/usr/include/c++/7/bits/basic_string.h ****        *
5258:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5259:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5260:/usr/include/c++/7/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5261:/usr/include/c++/7/bits/basic_string.h ****       */
5262:/usr/include/c++/7/bits/basic_string.h ****       size_type
5263:/usr/include/c++/7/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5264:/usr/include/c++/7/bits/basic_string.h ****       {
5265:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5266:/usr/include/c++/7/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5267:/usr/include/c++/7/bits/basic_string.h ****       }
5268:/usr/include/c++/7/bits/basic_string.h **** 
5269:/usr/include/c++/7/bits/basic_string.h ****       /**
5270:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character.
5271:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
5272:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5273:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5274:/usr/include/c++/7/bits/basic_string.h ****        *
5275:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5276:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5277:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
5278:/usr/include/c++/7/bits/basic_string.h ****       */
5279:/usr/include/c++/7/bits/basic_string.h ****       size_type
5280:/usr/include/c++/7/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5281:/usr/include/c++/7/bits/basic_string.h **** 
5282:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5283:/usr/include/c++/7/bits/basic_string.h ****       /**
5284:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5285:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5286:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5287:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5288:/usr/include/c++/7/bits/basic_string.h ****       */
5289:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5290:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5291:/usr/include/c++/7/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5292:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5293:/usr/include/c++/7/bits/basic_string.h **** 	{
5294:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5295:/usr/include/c++/7/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5296:/usr/include/c++/7/bits/basic_string.h **** 	}
5297:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5298:/usr/include/c++/7/bits/basic_string.h **** 
5299:/usr/include/c++/7/bits/basic_string.h ****       /**
5300:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5301:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5302:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5303:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5304:/usr/include/c++/7/bits/basic_string.h ****        *
5305:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5306:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5307:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5308:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5309:/usr/include/c++/7/bits/basic_string.h ****       */
5310:/usr/include/c++/7/bits/basic_string.h ****       size_type
5311:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5312:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5313:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5314:/usr/include/c++/7/bits/basic_string.h **** 
5315:/usr/include/c++/7/bits/basic_string.h ****       /**
5316:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5317:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5318:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5319:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5320:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5321:/usr/include/c++/7/bits/basic_string.h ****        *
5322:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5323:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5324:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5325:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
5326:/usr/include/c++/7/bits/basic_string.h ****       */
5327:/usr/include/c++/7/bits/basic_string.h ****       size_type
5328:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5329:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5330:/usr/include/c++/7/bits/basic_string.h **** 
5331:/usr/include/c++/7/bits/basic_string.h ****       /**
5332:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5333:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5334:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5335:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5336:/usr/include/c++/7/bits/basic_string.h ****        *
5337:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5338:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5339:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5340:/usr/include/c++/7/bits/basic_string.h ****       */
5341:/usr/include/c++/7/bits/basic_string.h ****       size_type
5342:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5343:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5344:/usr/include/c++/7/bits/basic_string.h ****       {
5345:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5346:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5347:/usr/include/c++/7/bits/basic_string.h ****       }
5348:/usr/include/c++/7/bits/basic_string.h **** 
5349:/usr/include/c++/7/bits/basic_string.h ****       /**
5350:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character.
5351:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
5352:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5353:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5354:/usr/include/c++/7/bits/basic_string.h ****        *
5355:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5356:/usr/include/c++/7/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5357:/usr/include/c++/7/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5358:/usr/include/c++/7/bits/basic_string.h ****        *
5359:/usr/include/c++/7/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5360:/usr/include/c++/7/bits/basic_string.h ****       */
5361:/usr/include/c++/7/bits/basic_string.h ****       size_type
5362:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5363:/usr/include/c++/7/bits/basic_string.h ****       { return this->find(__c, __pos); }
5364:/usr/include/c++/7/bits/basic_string.h **** 
5365:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5366:/usr/include/c++/7/bits/basic_string.h ****       /**
5367:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5368:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5369:/usr/include/c++/7/bits/basic_string.h ****        *                characters to locate.
5370:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5371:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5372:/usr/include/c++/7/bits/basic_string.h ****       */
5373:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5374:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5375:/usr/include/c++/7/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5376:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5377:/usr/include/c++/7/bits/basic_string.h **** 	{
5378:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5379:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5380:/usr/include/c++/7/bits/basic_string.h **** 	}
5381:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5382:/usr/include/c++/7/bits/basic_string.h **** 
5383:/usr/include/c++/7/bits/basic_string.h ****       /**
5384:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5385:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5386:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5387:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5388:/usr/include/c++/7/bits/basic_string.h ****        *
5389:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5390:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5391:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5392:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5393:/usr/include/c++/7/bits/basic_string.h ****       */
5394:/usr/include/c++/7/bits/basic_string.h ****       size_type
5395:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5396:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5397:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5398:/usr/include/c++/7/bits/basic_string.h **** 
5399:/usr/include/c++/7/bits/basic_string.h ****       /**
5400:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5401:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5402:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5403:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5404:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5405:/usr/include/c++/7/bits/basic_string.h ****        *
5406:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5407:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5408:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5409:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
5410:/usr/include/c++/7/bits/basic_string.h ****       */
5411:/usr/include/c++/7/bits/basic_string.h ****       size_type
5412:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5413:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5414:/usr/include/c++/7/bits/basic_string.h **** 
5415:/usr/include/c++/7/bits/basic_string.h ****       /**
5416:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5417:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5418:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5419:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5420:/usr/include/c++/7/bits/basic_string.h ****        *
5421:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5422:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5423:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5424:/usr/include/c++/7/bits/basic_string.h ****       */
5425:/usr/include/c++/7/bits/basic_string.h ****       size_type
5426:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5427:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5428:/usr/include/c++/7/bits/basic_string.h ****       {
5429:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5430:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5431:/usr/include/c++/7/bits/basic_string.h ****       }
5432:/usr/include/c++/7/bits/basic_string.h **** 
5433:/usr/include/c++/7/bits/basic_string.h ****       /**
5434:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character.
5435:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
5436:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5437:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5438:/usr/include/c++/7/bits/basic_string.h ****        *
5439:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5440:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5441:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
5442:/usr/include/c++/7/bits/basic_string.h ****        *
5443:/usr/include/c++/7/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5444:/usr/include/c++/7/bits/basic_string.h ****       */
5445:/usr/include/c++/7/bits/basic_string.h ****       size_type
5446:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5447:/usr/include/c++/7/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5448:/usr/include/c++/7/bits/basic_string.h **** 
5449:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5450:/usr/include/c++/7/bits/basic_string.h ****       /**
5451:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5452:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5453:/usr/include/c++/7/bits/basic_string.h ****        *                characters to locate.
5454:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5455:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5456:/usr/include/c++/7/bits/basic_string.h ****       */
5457:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5458:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5459:/usr/include/c++/7/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5460:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5461:/usr/include/c++/7/bits/basic_string.h **** 	{
5462:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5463:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5464:/usr/include/c++/7/bits/basic_string.h **** 	}
5465:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5466:/usr/include/c++/7/bits/basic_string.h **** 
5467:/usr/include/c++/7/bits/basic_string.h ****       /**
5468:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5469:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5470:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5471:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5472:/usr/include/c++/7/bits/basic_string.h ****        *
5473:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5474:/usr/include/c++/7/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5475:/usr/include/c++/7/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5476:/usr/include/c++/7/bits/basic_string.h ****       */
5477:/usr/include/c++/7/bits/basic_string.h ****       size_type
5478:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5479:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5480:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5481:/usr/include/c++/7/bits/basic_string.h **** 
5482:/usr/include/c++/7/bits/basic_string.h ****       /**
5483:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5484:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5485:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5486:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5487:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5488:/usr/include/c++/7/bits/basic_string.h ****        *
5489:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5490:/usr/include/c++/7/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5491:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5492:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
5493:/usr/include/c++/7/bits/basic_string.h ****       */
5494:/usr/include/c++/7/bits/basic_string.h ****       size_type
5495:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5496:/usr/include/c++/7/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5497:/usr/include/c++/7/bits/basic_string.h **** 
5498:/usr/include/c++/7/bits/basic_string.h ****       /**
5499:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5500:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5501:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5502:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5503:/usr/include/c++/7/bits/basic_string.h ****        *
5504:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5505:/usr/include/c++/7/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5506:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5507:/usr/include/c++/7/bits/basic_string.h ****       */
5508:/usr/include/c++/7/bits/basic_string.h ****       size_type
5509:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5510:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5511:/usr/include/c++/7/bits/basic_string.h ****       {
5512:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5513:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5514:/usr/include/c++/7/bits/basic_string.h ****       }
5515:/usr/include/c++/7/bits/basic_string.h **** 
5516:/usr/include/c++/7/bits/basic_string.h ****       /**
5517:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a different character.
5518:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to avoid.
5519:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5520:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5521:/usr/include/c++/7/bits/basic_string.h ****        *
5522:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5523:/usr/include/c++/7/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5524:/usr/include/c++/7/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5525:/usr/include/c++/7/bits/basic_string.h ****       */
5526:/usr/include/c++/7/bits/basic_string.h ****       size_type
5527:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5528:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5529:/usr/include/c++/7/bits/basic_string.h **** 
5530:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5531:/usr/include/c++/7/bits/basic_string.h ****       /**
5532:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5533:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5534:/usr/include/c++/7/bits/basic_string.h ****        *                characters to avoid.
5535:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5536:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5537:/usr/include/c++/7/bits/basic_string.h ****        */
5538:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5539:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5540:/usr/include/c++/7/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5541:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5542:/usr/include/c++/7/bits/basic_string.h **** 	{
5543:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5544:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5545:/usr/include/c++/7/bits/basic_string.h **** 	}
5546:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5547:/usr/include/c++/7/bits/basic_string.h **** 
5548:/usr/include/c++/7/bits/basic_string.h ****       /**
5549:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5550:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5551:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5552:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5553:/usr/include/c++/7/bits/basic_string.h ****        *
5554:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5555:/usr/include/c++/7/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5556:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5557:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5558:/usr/include/c++/7/bits/basic_string.h ****       */
5559:/usr/include/c++/7/bits/basic_string.h ****       size_type
5560:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5561:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5562:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5563:/usr/include/c++/7/bits/basic_string.h **** 
5564:/usr/include/c++/7/bits/basic_string.h ****       /**
5565:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5566:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5567:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5568:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5569:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5570:/usr/include/c++/7/bits/basic_string.h ****        *
5571:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5572:/usr/include/c++/7/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5573:/usr/include/c++/7/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5574:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
5575:/usr/include/c++/7/bits/basic_string.h ****       */
5576:/usr/include/c++/7/bits/basic_string.h ****       size_type
5577:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5578:/usr/include/c++/7/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5579:/usr/include/c++/7/bits/basic_string.h ****       /**
5580:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5581:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5582:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5583:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5584:/usr/include/c++/7/bits/basic_string.h ****        *
5585:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5586:/usr/include/c++/7/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5587:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5588:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5589:/usr/include/c++/7/bits/basic_string.h ****       */
5590:/usr/include/c++/7/bits/basic_string.h ****       size_type
5591:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5592:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5593:/usr/include/c++/7/bits/basic_string.h ****       {
5594:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5595:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5596:/usr/include/c++/7/bits/basic_string.h ****       }
5597:/usr/include/c++/7/bits/basic_string.h **** 
5598:/usr/include/c++/7/bits/basic_string.h ****       /**
5599:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5600:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to avoid.
5601:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5602:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5603:/usr/include/c++/7/bits/basic_string.h ****        *
5604:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5605:/usr/include/c++/7/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5606:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
5607:/usr/include/c++/7/bits/basic_string.h ****       */
5608:/usr/include/c++/7/bits/basic_string.h ****       size_type
5609:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5610:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5611:/usr/include/c++/7/bits/basic_string.h **** 
5612:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5613:/usr/include/c++/7/bits/basic_string.h ****       /**
5614:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5615:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5616:/usr/include/c++/7/bits/basic_string.h ****        *                characters to avoid.
5617:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5618:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5619:/usr/include/c++/7/bits/basic_string.h ****        */
5620:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5621:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5622:/usr/include/c++/7/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5623:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5624:/usr/include/c++/7/bits/basic_string.h **** 	{
5625:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5626:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5627:/usr/include/c++/7/bits/basic_string.h **** 	}
5628:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5629:/usr/include/c++/7/bits/basic_string.h **** 
5630:/usr/include/c++/7/bits/basic_string.h ****       /**
5631:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Get a substring.
5632:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5633:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5634:/usr/include/c++/7/bits/basic_string.h ****        *  @return  The new string.
5635:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5636:/usr/include/c++/7/bits/basic_string.h ****        *
5637:/usr/include/c++/7/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5638:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5639:/usr/include/c++/7/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5640:/usr/include/c++/7/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5641:/usr/include/c++/7/bits/basic_string.h ****       */
5642:/usr/include/c++/7/bits/basic_string.h ****       basic_string
5643:/usr/include/c++/7/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5644:/usr/include/c++/7/bits/basic_string.h ****       { return basic_string(*this,
5645:/usr/include/c++/7/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5646:/usr/include/c++/7/bits/basic_string.h **** 
5647:/usr/include/c++/7/bits/basic_string.h ****       /**
5648:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string.
5649:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
5650:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5651:/usr/include/c++/7/bits/basic_string.h ****        *
5652:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5653:/usr/include/c++/7/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5654:/usr/include/c++/7/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5655:/usr/include/c++/7/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5656:/usr/include/c++/7/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5657:/usr/include/c++/7/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5658:/usr/include/c++/7/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5659:/usr/include/c++/7/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5660:/usr/include/c++/7/bits/basic_string.h ****       */
5661:/usr/include/c++/7/bits/basic_string.h ****       int
5662:/usr/include/c++/7/bits/basic_string.h ****       compare(const basic_string& __str) const
5663:/usr/include/c++/7/bits/basic_string.h ****       {
5664:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __size = this->size();
5665:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __osize = __str.size();
5666:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5667:/usr/include/c++/7/bits/basic_string.h **** 
5668:/usr/include/c++/7/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5669:/usr/include/c++/7/bits/basic_string.h **** 	if (!__r)
5670:/usr/include/c++/7/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5671:/usr/include/c++/7/bits/basic_string.h **** 	return __r;
5672:/usr/include/c++/7/bits/basic_string.h ****       }
5673:/usr/include/c++/7/bits/basic_string.h **** 
5674:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5675:/usr/include/c++/7/bits/basic_string.h ****       /**
5676:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5677:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5678:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5679:/usr/include/c++/7/bits/basic_string.h ****        */
5680:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5681:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
5682:/usr/include/c++/7/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5683:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5684:/usr/include/c++/7/bits/basic_string.h **** 	{
5685:/usr/include/c++/7/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5686:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __size = this->size();
5687:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5688:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5689:/usr/include/c++/7/bits/basic_string.h **** 
5690:/usr/include/c++/7/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5691:/usr/include/c++/7/bits/basic_string.h **** 	  if (!__r)
5692:/usr/include/c++/7/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5693:/usr/include/c++/7/bits/basic_string.h **** 	  return __r;
5694:/usr/include/c++/7/bits/basic_string.h **** 	}
5695:/usr/include/c++/7/bits/basic_string.h **** 
5696:/usr/include/c++/7/bits/basic_string.h ****       /**
5697:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5698:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5699:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5700:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5701:/usr/include/c++/7/bits/basic_string.h ****        *                against.
5702:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5703:/usr/include/c++/7/bits/basic_string.h ****        */
5704:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5705:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
5706:/usr/include/c++/7/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5707:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5708:/usr/include/c++/7/bits/basic_string.h **** 	{
5709:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5710:/usr/include/c++/7/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5711:/usr/include/c++/7/bits/basic_string.h **** 	}
5712:/usr/include/c++/7/bits/basic_string.h **** 
5713:/usr/include/c++/7/bits/basic_string.h ****       /**
5714:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5715:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5716:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5717:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5718:/usr/include/c++/7/bits/basic_string.h ****        *                 against.
5719:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5720:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5721:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5722:/usr/include/c++/7/bits/basic_string.h ****        */
5723:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5724:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
5725:/usr/include/c++/7/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5726:/usr/include/c++/7/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5727:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5728:/usr/include/c++/7/bits/basic_string.h **** 	{
5729:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5730:/usr/include/c++/7/bits/basic_string.h **** 	  return __sv_type(*this)
5731:/usr/include/c++/7/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5732:/usr/include/c++/7/bits/basic_string.h **** 	}
5733:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5734:/usr/include/c++/7/bits/basic_string.h **** 
5735:/usr/include/c++/7/bits/basic_string.h ****       /**
5736:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5737:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5738:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5739:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
5740:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5741:/usr/include/c++/7/bits/basic_string.h ****        *
5742:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5743:/usr/include/c++/7/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5744:/usr/include/c++/7/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5745:/usr/include/c++/7/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5746:/usr/include/c++/7/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5747:/usr/include/c++/7/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5748:/usr/include/c++/7/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5749:/usr/include/c++/7/bits/basic_string.h ****        *  strings by calling
5750:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5751:/usr/include/c++/7/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5752:/usr/include/c++/7/bits/basic_string.h ****        *  the shorter one is ordered first.
5753:/usr/include/c++/7/bits/basic_string.h ****       */
5754:/usr/include/c++/7/bits/basic_string.h ****       int
5755:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5756:/usr/include/c++/7/bits/basic_string.h **** 
5757:/usr/include/c++/7/bits/basic_string.h ****       /**
5758:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5759:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5760:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5761:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
5762:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5763:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5764:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5765:/usr/include/c++/7/bits/basic_string.h ****        *
5766:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5767:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5768:/usr/include/c++/7/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5769:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5770:/usr/include/c++/7/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5771:/usr/include/c++/7/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5772:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5773:/usr/include/c++/7/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5774:/usr/include/c++/7/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5775:/usr/include/c++/7/bits/basic_string.h ****        *  calling
5776:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5777:/usr/include/c++/7/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5778:/usr/include/c++/7/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5779:/usr/include/c++/7/bits/basic_string.h ****       */
5780:/usr/include/c++/7/bits/basic_string.h ****       int
5781:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5782:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
5783:/usr/include/c++/7/bits/basic_string.h **** 
5784:/usr/include/c++/7/bits/basic_string.h ****       /**
5785:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a C string.
5786:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to compare against.
5787:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5788:/usr/include/c++/7/bits/basic_string.h ****        *
5789:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5790:/usr/include/c++/7/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5791:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5792:/usr/include/c++/7/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5793:/usr/include/c++/7/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5794:/usr/include/c++/7/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5795:/usr/include/c++/7/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5796:/usr/include/c++/7/bits/basic_string.h ****        *  ordered first.
5797:/usr/include/c++/7/bits/basic_string.h ****       */
5798:/usr/include/c++/7/bits/basic_string.h ****       int
5799:/usr/include/c++/7/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5800:/usr/include/c++/7/bits/basic_string.h **** 
5801:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5802:/usr/include/c++/7/bits/basic_string.h ****       // 5 String::compare specification questionable
5803:/usr/include/c++/7/bits/basic_string.h ****       /**
5804:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5805:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5806:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5807:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to compare against.
5808:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5809:/usr/include/c++/7/bits/basic_string.h ****        *
5810:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5811:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5812:/usr/include/c++/7/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5813:/usr/include/c++/7/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5814:/usr/include/c++/7/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5815:/usr/include/c++/7/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5816:/usr/include/c++/7/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5817:/usr/include/c++/7/bits/basic_string.h ****        *  function then compares the two string by calling
5818:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5819:/usr/include/c++/7/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5820:/usr/include/c++/7/bits/basic_string.h ****        *  one is ordered first.
5821:/usr/include/c++/7/bits/basic_string.h ****       */
5822:/usr/include/c++/7/bits/basic_string.h ****       int
5823:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5824:/usr/include/c++/7/bits/basic_string.h **** 
5825:/usr/include/c++/7/bits/basic_string.h ****       /**
5826:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5827:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5828:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5829:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5830:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5831:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5832:/usr/include/c++/7/bits/basic_string.h ****        *
5833:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5834:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5835:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5836:/usr/include/c++/7/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5837:/usr/include/c++/7/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5838:/usr/include/c++/7/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5839:/usr/include/c++/7/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5840:/usr/include/c++/7/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5841:/usr/include/c++/7/bits/basic_string.h ****        *  function then compares the two strings by calling
5842:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5843:/usr/include/c++/7/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5844:/usr/include/c++/7/bits/basic_string.h ****        *  one is ordered first.
5845:/usr/include/c++/7/bits/basic_string.h ****        *
5846:/usr/include/c++/7/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5847:/usr/include/c++/7/bits/basic_string.h ****        *  no special meaning.
5848:/usr/include/c++/7/bits/basic_string.h ****       */
5849:/usr/include/c++/7/bits/basic_string.h ****       int
5850:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5851:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __n2) const;
5852:/usr/include/c++/7/bits/basic_string.h **** 
5853:/usr/include/c++/7/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5854:/usr/include/c++/7/bits/basic_string.h ****       friend void
5855:/usr/include/c++/7/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5856:/usr/include/c++/7/bits/basic_string.h **** 					    void* exc);
5857:/usr/include/c++/7/bits/basic_string.h ****       friend const char*
5858:/usr/include/c++/7/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5859:/usr/include/c++/7/bits/basic_string.h ****       friend void
5860:/usr/include/c++/7/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5861:/usr/include/c++/7/bits/basic_string.h ****       friend void
5862:/usr/include/c++/7/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5863:/usr/include/c++/7/bits/basic_string.h **** # endif
5864:/usr/include/c++/7/bits/basic_string.h ****   };
5865:/usr/include/c++/7/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5866:/usr/include/c++/7/bits/basic_string.h **** 
5867:/usr/include/c++/7/bits/basic_string.h ****   // operator+
5868:/usr/include/c++/7/bits/basic_string.h ****   /**
5869:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Concatenate two strings.
5870:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5871:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Last string.
5872:/usr/include/c++/7/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
5873:/usr/include/c++/7/bits/basic_string.h ****    */
5874:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5875:/usr/include/c++/7/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
5876:/usr/include/c++/7/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5877:/usr/include/c++/7/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5878:/usr/include/c++/7/bits/basic_string.h ****     {
5879:/usr/include/c++/7/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
5880:/usr/include/c++/7/bits/basic_string.h ****       __str.append(__rhs);
5881:/usr/include/c++/7/bits/basic_string.h ****       return __str;
5882:/usr/include/c++/7/bits/basic_string.h ****     }
5883:/usr/include/c++/7/bits/basic_string.h **** 
5884:/usr/include/c++/7/bits/basic_string.h ****   /**
5885:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
5886:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5887:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Last string.
5888:/usr/include/c++/7/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
5889:/usr/include/c++/7/bits/basic_string.h ****    */
5890:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5891:/usr/include/c++/7/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
5892:/usr/include/c++/7/bits/basic_string.h ****     operator+(const _CharT* __lhs,
5893:/usr/include/c++/7/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
5894:/usr/include/c++/7/bits/basic_string.h **** 
5895:/usr/include/c++/7/bits/basic_string.h ****   /**
5896:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Concatenate character and string.
5897:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5898:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Last string.
5899:/usr/include/c++/7/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
5900:/usr/include/c++/7/bits/basic_string.h ****    */
5901:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5902:/usr/include/c++/7/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
5903:/usr/include/c++/7/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
5904:/usr/include/c++/7/bits/basic_string.h **** 
5905:/usr/include/c++/7/bits/basic_string.h ****   /**
5906:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
5907:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5908:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Last string.
5909:/usr/include/c++/7/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
5910:/usr/include/c++/7/bits/basic_string.h ****    */
5911:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5912:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5913:/usr/include/c++/7/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5914:/usr/include/c++/7/bits/basic_string.h **** 	      const _CharT* __rhs)
5915:/usr/include/c++/7/bits/basic_string.h ****     {
5916:/usr/include/c++/7/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
5917:/usr/include/c++/7/bits/basic_string.h ****       __str.append(__rhs);
5918:/usr/include/c++/7/bits/basic_string.h ****       return __str;
5919:/usr/include/c++/7/bits/basic_string.h ****     }
5920:/usr/include/c++/7/bits/basic_string.h **** 
5921:/usr/include/c++/7/bits/basic_string.h ****   /**
5922:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Concatenate string and character.
5923:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5924:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Last string.
5925:/usr/include/c++/7/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
5926:/usr/include/c++/7/bits/basic_string.h ****    */
5927:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5928:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5929:/usr/include/c++/7/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
5930:/usr/include/c++/7/bits/basic_string.h ****     {
5931:/usr/include/c++/7/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
5932:/usr/include/c++/7/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
5933:/usr/include/c++/7/bits/basic_string.h ****       __string_type __str(__lhs);
5934:/usr/include/c++/7/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
5935:/usr/include/c++/7/bits/basic_string.h ****       return __str;
5936:/usr/include/c++/7/bits/basic_string.h ****     }
5937:/usr/include/c++/7/bits/basic_string.h **** 
5938:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
5939:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5940:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5941:/usr/include/c++/7/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5942:/usr/include/c++/7/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5943:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
5944:/usr/include/c++/7/bits/basic_string.h **** 
5945:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5946:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5947:/usr/include/c++/7/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5948:/usr/include/c++/7/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5949:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
5950:/usr/include/c++/7/bits/basic_string.h **** 
5951:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5952:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5953:/usr/include/c++/7/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5954:/usr/include/c++/7/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5955:/usr/include/c++/7/bits/basic_string.h ****     {
5956:/usr/include/c++/7/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
5957:/usr/include/c++/7/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
5958:/usr/include/c++/7/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
5959:/usr/include/c++/7/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
5960:/usr/include/c++/7/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
5961:/usr/include/c++/7/bits/basic_string.h ****     }
5962:/usr/include/c++/7/bits/basic_string.h **** 
5963:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5964:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5965:/usr/include/c++/7/bits/basic_string.h ****     operator+(const _CharT* __lhs,
5966:/usr/include/c++/7/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5967:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
5968:/usr/include/c++/7/bits/basic_string.h **** 
5969:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5970:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5971:/usr/include/c++/7/bits/basic_string.h ****     operator+(_CharT __lhs,
5972:/usr/include/c++/7/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5973:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
5974:/usr/include/c++/7/bits/basic_string.h **** 
5975:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5976:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5977:/usr/include/c++/7/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5978:/usr/include/c++/7/bits/basic_string.h **** 	      const _CharT* __rhs)
5979:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
5980:/usr/include/c++/7/bits/basic_string.h **** 
5981:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5982:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5983:/usr/include/c++/7/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5984:/usr/include/c++/7/bits/basic_string.h **** 	      _CharT __rhs)
5985:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
5986:/usr/include/c++/7/bits/basic_string.h **** #endif
5987:/usr/include/c++/7/bits/basic_string.h **** 
5988:/usr/include/c++/7/bits/basic_string.h ****   // operator ==
5989:/usr/include/c++/7/bits/basic_string.h ****   /**
5990:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
5991:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5992:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Second string.
5993:/usr/include/c++/7/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
5994:/usr/include/c++/7/bits/basic_string.h ****    */
5995:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5996:/usr/include/c++/7/bits/basic_string.h ****     inline bool
5997:/usr/include/c++/7/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5998:/usr/include/c++/7/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5999:/usr/include/c++/7/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6000:/usr/include/c++/7/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6001:/usr/include/c++/7/bits/basic_string.h **** 
6002:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT>
6003:/usr/include/c++/7/bits/basic_string.h ****     inline
6004:/usr/include/c++/7/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6005:/usr/include/c++/7/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6006:/usr/include/c++/7/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6007:/usr/include/c++/7/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6008:/usr/include/c++/7/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6009:/usr/include/c++/7/bits/basic_string.h **** 						    __lhs.size())); }
6010:/usr/include/c++/7/bits/basic_string.h **** 
6011:/usr/include/c++/7/bits/basic_string.h ****   /**
6012:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6013:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  C string.
6014:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  String.
6015:/usr/include/c++/7/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6016:/usr/include/c++/7/bits/basic_string.h ****    */
6017:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6018:/usr/include/c++/7/bits/basic_string.h ****     inline bool
6019:/usr/include/c++/7/bits/basic_string.h ****     operator==(const _CharT* __lhs,
 8054              		.loc 10 6019 0
 8055              		.cfi_startproc
 8056 0000 55       		pushq	%rbp
 8057              		.cfi_def_cfa_offset 16
 8058              		.cfi_offset 6, -16
 8059 0001 4889E5   		movq	%rsp, %rbp
 8060              		.cfi_def_cfa_register 6
 8061 0004 4883EC10 		subq	$16, %rsp
 8062 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8063 000c 488975F0 		movq	%rsi, -16(%rbp)
6020:/usr/include/c++/7/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6021:/usr/include/c++/7/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
 8064              		.loc 10 6021 0
 8065 0010 488B55F8 		movq	-8(%rbp), %rdx
 8066 0014 488B45F0 		movq	-16(%rbp), %rax
 8067 0018 4889D6   		movq	%rdx, %rsi
 8068 001b 4889C7   		movq	%rax, %rdi
 8069 001e E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@PLT
 8069      00
 8070 0023 85C0     		testl	%eax, %eax
 8071 0025 0F94C0   		sete	%al
 8072 0028 C9       		leave
 8073              		.cfi_def_cfa 7, 8
 8074 0029 C3       		ret
 8075              		.cfi_endproc
 8076              	.LFE1545:
 8078              		.section	.text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_,"axG",@progbits,_ZN8UnitTest8AreCloseIff
 8079              		.weak	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 8081              	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:
 8082              	.LFB1547:
  39:../Checks.h   **** {
 8083              		.loc 8 39 0
 8084              		.cfi_startproc
 8085 0000 55       		pushq	%rbp
 8086              		.cfi_def_cfa_offset 16
 8087              		.cfi_offset 6, -16
 8088 0001 4889E5   		movq	%rsp, %rbp
 8089              		.cfi_def_cfa_register 6
 8090 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8091 0008 488975F0 		movq	%rsi, -16(%rbp)
 8092 000c 488955E8 		movq	%rdx, -24(%rbp)
  41:../Checks.h   **** }
 8093              		.loc 8 41 0
 8094 0010 488B45F0 		movq	-16(%rbp), %rax
 8095 0014 F30F1008 		movss	(%rax), %xmm1
 8096 0018 488B45F8 		movq	-8(%rbp), %rax
 8097 001c F30F1000 		movss	(%rax), %xmm0
 8098 0020 488B45E8 		movq	-24(%rbp), %rax
 8099 0024 F30F1010 		movss	(%rax), %xmm2
 8100 0028 F30F5CC2 		subss	%xmm2, %xmm0
 8101 002c 0F2EC8   		ucomiss	%xmm0, %xmm1
 8102 002f 7228     		jb	.L437
  41:../Checks.h   **** }
 8103              		.loc 8 41 0 is_stmt 0 discriminator 1
 8104 0031 488B45F0 		movq	-16(%rbp), %rax
 8105 0035 F30F1008 		movss	(%rax), %xmm1
 8106 0039 488B45F8 		movq	-8(%rbp), %rax
 8107 003d F30F1010 		movss	(%rax), %xmm2
 8108 0041 488B45E8 		movq	-24(%rbp), %rax
 8109 0045 F30F1000 		movss	(%rax), %xmm0
 8110 0049 F30F58C2 		addss	%xmm2, %xmm0
 8111 004d 0F2EC1   		ucomiss	%xmm1, %xmm0
 8112 0050 7207     		jb	.L437
  41:../Checks.h   **** }
 8113              		.loc 8 41 0 discriminator 3
 8114 0052 B8010000 		movl	$1, %eax
 8114      00
 8115 0057 EB05     		jmp	.L440
 8116              	.L437:
  41:../Checks.h   **** }
 8117              		.loc 8 41 0 discriminator 4
 8118 0059 B8000000 		movl	$0, %eax
 8118      00
 8119              	.L440:
  42:../Checks.h   **** 
 8120              		.loc 8 42 0 is_stmt 1 discriminator 6
 8121 005e 5D       		popq	%rbp
 8122              		.cfi_def_cfa 7, 8
 8123 005f C3       		ret
 8124              		.cfi_endproc
 8125              	.LFE1547:
 8127              		.section	.text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_E
 8128              		.align 2
 8129              		.weak	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_ran
 8131              	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_range_chec
 8132              	.LFB1549:
 822:/usr/include/c++/7/bits/stl_vector.h ****       {
 8133              		.loc 6 822 0
 8134              		.cfi_startproc
 8135 0000 55       		pushq	%rbp
 8136              		.cfi_def_cfa_offset 16
 8137              		.cfi_offset 6, -16
 8138 0001 4889E5   		movq	%rsp, %rbp
 8139              		.cfi_def_cfa_register 6
 8140 0004 4883EC10 		subq	$16, %rsp
 8141 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8142 000c 488975F0 		movq	%rsi, -16(%rbp)
 824:/usr/include/c++/7/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 8143              		.loc 6 824 0
 8144 0010 488B45F8 		movq	-8(%rbp), %rax
 8145 0014 4889C7   		movq	%rax, %rdi
 8146 0017 E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 8146      00
 8147 001c 483945F0 		cmpq	%rax, -16(%rbp)
 8148 0020 0F93C0   		setnb	%al
 8149 0023 84C0     		testb	%al, %al
 8150 0025 7427     		je	.L446
 825:/usr/include/c++/7/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 8151              		.loc 6 825 0
 8152 0027 488B45F8 		movq	-8(%rbp), %rax
 8153 002b 4889C7   		movq	%rax, %rdi
 8154 002e E8000000 		call	_ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
 8154      00
 8155 0033 4889C2   		movq	%rax, %rdx
 8156 0036 488B45F0 		movq	-16(%rbp), %rax
 8157 003a 4889C6   		movq	%rax, %rsi
 8158 003d 488D3D00 		leaq	.LC37(%rip), %rdi
 8158      000000
 8159 0044 B8000000 		movl	$0, %eax
 8159      00
 8160 0049 E8000000 		call	_ZSt24__throw_out_of_range_fmtPKcz@PLT
 8160      00
 8161              	.L446:
 829:/usr/include/c++/7/bits/stl_vector.h **** 
 8162              		.loc 6 829 0
 8163 004e 90       		nop
 8164 004f C9       		leave
 8165              		.cfi_def_cfa 7, 8
 8166 0050 C3       		ret
 8167              		.cfi_endproc
 8168              	.LFE1549:
 8170              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev,"axG"
 8171              		.align 2
 8172              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev
 8174              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:
 8175              	.LFB1560:
  88:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
 8176              		.loc 6 88 0
 8177              		.cfi_startproc
 8178 0000 55       		pushq	%rbp
 8179              		.cfi_def_cfa_offset 16
 8180              		.cfi_offset 6, -16
 8181 0001 4889E5   		movq	%rsp, %rbp
 8182              		.cfi_def_cfa_register 6
 8183 0004 4883EC10 		subq	$16, %rsp
 8184 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8185              	.LBB147:
  89:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
 8186              		.loc 6 89 0
 8187 000c 488B45F8 		movq	-8(%rbp), %rax
 8188 0010 4889C7   		movq	%rax, %rdi
 8189 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8189      00
 8190 0018 488B45F8 		movq	-8(%rbp), %rax
 8191 001c 48C70000 		movq	$0, (%rax)
 8191      000000
 8192 0023 488B45F8 		movq	-8(%rbp), %rax
 8193 0027 48C74008 		movq	$0, 8(%rax)
 8193      00000000 
 8194 002f 488B45F8 		movq	-8(%rbp), %rax
 8195 0033 48C74010 		movq	$0, 16(%rax)
 8195      00000000 
 8196              	.LBE147:
  90:/usr/include/c++/7/bits/stl_vector.h **** 
 8197              		.loc 6 90 0
 8198 003b 90       		nop
 8199 003c C9       		leave
 8200              		.cfi_def_cfa 7, 8
 8201 003d C3       		ret
 8202              		.cfi_endproc
 8203              	.LFE1560:
 8205              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
 8206              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev,_ZNSt12_Vector_
 8207              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 8208              		.align 2
 8209              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 8211              	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev:
 8212              	.LFB1563:
 8213              		.file 11 "/usr/include/c++/7/bits/allocator.h"
   1:/usr/include/c++/7/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/7/bits/allocator.h **** 
   3:/usr/include/c++/7/bits/allocator.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/allocator.h **** //
   5:/usr/include/c++/7/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/allocator.h **** // any later version.
  10:/usr/include/c++/7/bits/allocator.h **** 
  11:/usr/include/c++/7/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/allocator.h **** 
  16:/usr/include/c++/7/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/allocator.h **** 
  20:/usr/include/c++/7/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/allocator.h **** 
  25:/usr/include/c++/7/bits/allocator.h **** /*
  26:/usr/include/c++/7/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/7/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/7/bits/allocator.h ****  *
  29:/usr/include/c++/7/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/7/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/7/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/7/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/7/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/7/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/7/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/7/bits/allocator.h ****  */
  37:/usr/include/c++/7/bits/allocator.h **** 
  38:/usr/include/c++/7/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/7/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/7/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/7/bits/allocator.h ****  */
  42:/usr/include/c++/7/bits/allocator.h **** 
  43:/usr/include/c++/7/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/7/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/7/bits/allocator.h **** 
  46:/usr/include/c++/7/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/7/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/7/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/7/bits/allocator.h **** #endif
  51:/usr/include/c++/7/bits/allocator.h **** 
  52:/usr/include/c++/7/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/usr/include/c++/7/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/usr/include/c++/7/bits/allocator.h **** #endif
  56:/usr/include/c++/7/bits/allocator.h **** 
  57:/usr/include/c++/7/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/c++/7/bits/allocator.h **** {
  59:/usr/include/c++/7/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/c++/7/bits/allocator.h **** 
  61:/usr/include/c++/7/bits/allocator.h ****   /**
  62:/usr/include/c++/7/bits/allocator.h ****    *  @addtogroup allocators
  63:/usr/include/c++/7/bits/allocator.h ****    *  @{
  64:/usr/include/c++/7/bits/allocator.h ****    */
  65:/usr/include/c++/7/bits/allocator.h **** 
  66:/usr/include/c++/7/bits/allocator.h ****   /// allocator<void> specialization.
  67:/usr/include/c++/7/bits/allocator.h ****   template<>
  68:/usr/include/c++/7/bits/allocator.h ****     class allocator<void>
  69:/usr/include/c++/7/bits/allocator.h ****     {
  70:/usr/include/c++/7/bits/allocator.h ****     public:
  71:/usr/include/c++/7/bits/allocator.h ****       typedef size_t      size_type;
  72:/usr/include/c++/7/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/usr/include/c++/7/bits/allocator.h ****       typedef void*       pointer;
  74:/usr/include/c++/7/bits/allocator.h ****       typedef const void* const_pointer;
  75:/usr/include/c++/7/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/7/bits/allocator.h **** 
  77:/usr/include/c++/7/bits/allocator.h ****       template<typename _Tp1>
  78:/usr/include/c++/7/bits/allocator.h **** 	struct rebind
  79:/usr/include/c++/7/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:/usr/include/c++/7/bits/allocator.h **** 
  81:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/usr/include/c++/7/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/usr/include/c++/7/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/usr/include/c++/7/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/usr/include/c++/7/bits/allocator.h **** 
  86:/usr/include/c++/7/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/usr/include/c++/7/bits/allocator.h **** 
  88:/usr/include/c++/7/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/usr/include/c++/7/bits/allocator.h **** 	void
  90:/usr/include/c++/7/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/usr/include/c++/7/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  92:/usr/include/c++/7/bits/allocator.h **** 
  93:/usr/include/c++/7/bits/allocator.h ****       template<typename _Up>
  94:/usr/include/c++/7/bits/allocator.h **** 	void
  95:/usr/include/c++/7/bits/allocator.h **** 	destroy(_Up* __p) { __p->~_Up(); }
  96:/usr/include/c++/7/bits/allocator.h **** #endif
  97:/usr/include/c++/7/bits/allocator.h ****     };
  98:/usr/include/c++/7/bits/allocator.h **** 
  99:/usr/include/c++/7/bits/allocator.h ****   /**
 100:/usr/include/c++/7/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 101:/usr/include/c++/7/bits/allocator.h ****    *
 102:/usr/include/c++/7/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 103:/usr/include/c++/7/bits/allocator.h ****    *  for further details.
 104:/usr/include/c++/7/bits/allocator.h ****    *
 105:/usr/include/c++/7/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 106:/usr/include/c++/7/bits/allocator.h ****    */
 107:/usr/include/c++/7/bits/allocator.h ****   template<typename _Tp>
 108:/usr/include/c++/7/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
 109:/usr/include/c++/7/bits/allocator.h ****     {
 110:/usr/include/c++/7/bits/allocator.h ****    public:
 111:/usr/include/c++/7/bits/allocator.h ****       typedef size_t     size_type;
 112:/usr/include/c++/7/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 113:/usr/include/c++/7/bits/allocator.h ****       typedef _Tp*       pointer;
 114:/usr/include/c++/7/bits/allocator.h ****       typedef const _Tp* const_pointer;
 115:/usr/include/c++/7/bits/allocator.h ****       typedef _Tp&       reference;
 116:/usr/include/c++/7/bits/allocator.h ****       typedef const _Tp& const_reference;
 117:/usr/include/c++/7/bits/allocator.h ****       typedef _Tp        value_type;
 118:/usr/include/c++/7/bits/allocator.h **** 
 119:/usr/include/c++/7/bits/allocator.h ****       template<typename _Tp1>
 120:/usr/include/c++/7/bits/allocator.h **** 	struct rebind
 121:/usr/include/c++/7/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 122:/usr/include/c++/7/bits/allocator.h **** 
 123:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
 124:/usr/include/c++/7/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 125:/usr/include/c++/7/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 126:/usr/include/c++/7/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 127:/usr/include/c++/7/bits/allocator.h **** 
 128:/usr/include/c++/7/bits/allocator.h ****       typedef true_type is_always_equal;
 129:/usr/include/c++/7/bits/allocator.h **** #endif
 130:/usr/include/c++/7/bits/allocator.h **** 
 131:/usr/include/c++/7/bits/allocator.h ****       allocator() throw() { }
 132:/usr/include/c++/7/bits/allocator.h **** 
 133:/usr/include/c++/7/bits/allocator.h ****       allocator(const allocator& __a) throw()
 134:/usr/include/c++/7/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 135:/usr/include/c++/7/bits/allocator.h **** 
 136:/usr/include/c++/7/bits/allocator.h ****       template<typename _Tp1>
 137:/usr/include/c++/7/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) throw() { }
 138:/usr/include/c++/7/bits/allocator.h **** 
 139:/usr/include/c++/7/bits/allocator.h ****       ~allocator() throw() { }
 8214              		.loc 11 139 0
 8215              		.cfi_startproc
 8216 0000 55       		pushq	%rbp
 8217              		.cfi_def_cfa_offset 16
 8218              		.cfi_offset 6, -16
 8219 0001 4889E5   		movq	%rsp, %rbp
 8220              		.cfi_def_cfa_register 6
 8221 0004 4883EC10 		subq	$16, %rsp
 8222 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8223              	.LBB148:
 8224              		.loc 11 139 0
 8225 000c 488B45F8 		movq	-8(%rbp), %rax
 8226 0010 4889C7   		movq	%rax, %rdi
 8227 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 8227      00
 8228              	.LBE148:
 8229 0018 90       		nop
 8230 0019 C9       		leave
 8231              		.cfi_def_cfa 7, 8
 8232 001a C3       		ret
 8233              		.cfi_endproc
 8234              	.LFE1563:
 8236              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev
 8237              		.set	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev,_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 8238              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m,"a
 8239              		.align 2
 8240              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 8242              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:
 8243              	.LFB1565:
 176:/usr/include/c++/7/bits/stl_vector.h ****       {
 8244              		.loc 6 176 0
 8245              		.cfi_startproc
 8246 0000 55       		pushq	%rbp
 8247              		.cfi_def_cfa_offset 16
 8248              		.cfi_offset 6, -16
 8249 0001 4889E5   		movq	%rsp, %rbp
 8250              		.cfi_def_cfa_register 6
 8251 0004 4883EC20 		subq	$32, %rsp
 8252 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8253 000c 488975F0 		movq	%rsi, -16(%rbp)
 8254 0010 488955E8 		movq	%rdx, -24(%rbp)
 179:/usr/include/c++/7/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8255              		.loc 6 179 0
 8256 0014 48837DF0 		cmpq	$0, -16(%rbp)
 8256      00
 8257 0019 7417     		je	.L451
 180:/usr/include/c++/7/bits/stl_vector.h ****       }
 8258              		.loc 6 180 0
 8259 001b 488B45F8 		movq	-8(%rbp), %rax
 8260 001f 488B55E8 		movq	-24(%rbp), %rdx
 8261 0023 488B4DF0 		movq	-16(%rbp), %rcx
 8262 0027 4889CE   		movq	%rcx, %rsi
 8263 002a 4889C7   		movq	%rax, %rdi
 8264 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 8264      00
 8265              	.L451:
 181:/usr/include/c++/7/bits/stl_vector.h **** 
 8266              		.loc 6 181 0
 8267 0032 90       		nop
 8268 0033 C9       		leave
 8269              		.cfi_def_cfa 7, 8
 8270 0034 C3       		ret
 8271              		.cfi_endproc
 8272              	.LFE1565:
 8274              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_,"axG",@progbits,_ZSt8_Destroy
 8275              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 8277              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:
 8278              	.LFB1566:
 127:/usr/include/c++/7/bits/stl_construct.h ****     {
 8279              		.loc 9 127 0
 8280              		.cfi_startproc
 8281 0000 55       		pushq	%rbp
 8282              		.cfi_def_cfa_offset 16
 8283              		.cfi_offset 6, -16
 8284 0001 4889E5   		movq	%rsp, %rbp
 8285              		.cfi_def_cfa_register 6
 8286 0004 4883EC10 		subq	$16, %rsp
 8287 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8288 000c 488975F0 		movq	%rsi, -16(%rbp)
 137:/usr/include/c++/7/bits/stl_construct.h ****     }
 8289              		.loc 9 137 0
 8290 0010 488B55F0 		movq	-16(%rbp), %rdx
 8291 0014 488B45F8 		movq	-8(%rbp), %rax
 8292 0018 4889D6   		movq	%rdx, %rsi
 8293 001b 4889C7   		movq	%rax, %rdi
 8294 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 8294      00
 138:/usr/include/c++/7/bits/stl_construct.h **** 
 8295              		.loc 9 138 0
 8296 0023 90       		nop
 8297 0024 C9       		leave
 8298              		.cfi_def_cfa 7, 8
 8299 0025 C3       		ret
 8300              		.cfi_endproc
 8301              	.LFE1566:
 8303              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 8304              		.align 2
 8305              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8307              	_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:
 8308              	.LFB1578:
 131:/usr/include/c++/7/bits/allocator.h **** 
 8309              		.loc 11 131 0
 8310              		.cfi_startproc
 8311 0000 55       		pushq	%rbp
 8312              		.cfi_def_cfa_offset 16
 8313              		.cfi_offset 6, -16
 8314 0001 4889E5   		movq	%rsp, %rbp
 8315              		.cfi_def_cfa_register 6
 8316 0004 4883EC10 		subq	$16, %rsp
 8317 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8318              	.LBB149:
 131:/usr/include/c++/7/bits/allocator.h **** 
 8319              		.loc 11 131 0
 8320 000c 488B45F8 		movq	-8(%rbp), %rax
 8321 0010 4889C7   		movq	%rax, %rdi
 8322 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
 8322      00
 8323              	.LBE149:
 8324 0018 90       		nop
 8325 0019 C9       		leave
 8326              		.cfi_def_cfa 7, 8
 8327 001a C3       		ret
 8328              		.cfi_endproc
 8329              	.LFE1578:
 8331              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEEC1Ev
 8332              		.set	_ZNSaIN8UnitTest18DeferredTestResultEEC1Ev,_ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
 8333              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_
 8334              		.align 2
 8335              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 8337              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:
 8338              	.LFB1581:
 8339              		.file 12 "/usr/include/c++/7/ext/new_allocator.h"
   1:/usr/include/c++/7/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/7/ext/new_allocator.h **** 
   3:/usr/include/c++/7/ext/new_allocator.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/ext/new_allocator.h **** //
   5:/usr/include/c++/7/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/7/ext/new_allocator.h **** 
  11:/usr/include/c++/7/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/ext/new_allocator.h **** 
  16:/usr/include/c++/7/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/ext/new_allocator.h **** 
  20:/usr/include/c++/7/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/ext/new_allocator.h **** 
  25:/usr/include/c++/7/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/7/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/7/ext/new_allocator.h ****  */
  28:/usr/include/c++/7/ext/new_allocator.h **** 
  29:/usr/include/c++/7/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/7/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/7/ext/new_allocator.h **** 
  32:/usr/include/c++/7/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/7/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/7/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/7/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/7/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/7/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/7/ext/new_allocator.h **** #endif
  39:/usr/include/c++/7/ext/new_allocator.h **** 
  40:/usr/include/c++/7/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/7/ext/new_allocator.h **** {
  42:/usr/include/c++/7/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/7/ext/new_allocator.h **** 
  44:/usr/include/c++/7/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/7/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/7/ext/new_allocator.h **** 
  47:/usr/include/c++/7/ext/new_allocator.h ****   /**
  48:/usr/include/c++/7/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/7/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/7/ext/new_allocator.h ****    *
  51:/usr/include/c++/7/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:/usr/include/c++/7/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/7/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/7/ext/new_allocator.h ****    *
  55:/usr/include/c++/7/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/7/ext/new_allocator.h ****    */
  57:/usr/include/c++/7/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/7/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/7/ext/new_allocator.h ****     {
  60:/usr/include/c++/7/ext/new_allocator.h ****     public:
  61:/usr/include/c++/7/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/7/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/7/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/7/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/7/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/7/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/7/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/7/ext/new_allocator.h **** 
  69:/usr/include/c++/7/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/7/ext/new_allocator.h **** 	struct rebind
  71:/usr/include/c++/7/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/7/ext/new_allocator.h **** 
  73:/usr/include/c++/7/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/7/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/7/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/7/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/7/ext/new_allocator.h **** #endif
  78:/usr/include/c++/7/ext/new_allocator.h **** 
  79:/usr/include/c++/7/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/7/ext/new_allocator.h **** 
  81:/usr/include/c++/7/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/7/ext/new_allocator.h **** 
  83:/usr/include/c++/7/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/7/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/7/ext/new_allocator.h **** 
  86:/usr/include/c++/7/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8340              		.loc 12 86 0
 8341              		.cfi_startproc
 8342 0000 55       		pushq	%rbp
 8343              		.cfi_def_cfa_offset 16
 8344              		.cfi_offset 6, -16
 8345 0001 4889E5   		movq	%rsp, %rbp
 8346              		.cfi_def_cfa_register 6
 8347 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8348              		.loc 12 86 0
 8349 0008 90       		nop
 8350 0009 5D       		popq	%rbp
 8351              		.cfi_def_cfa 7, 8
 8352 000a C3       		ret
 8353              		.cfi_endproc
 8354              	.LFE1581:
 8356              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
 8357              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev,_ZN9__gnu_cxx13new_allocato
 8358              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_
 8359              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 8361              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:
 8362              	.LFB1583:
 8363              		.file 13 "/usr/include/c++/7/ext/alloc_traits.h"
   1:/usr/include/c++/7/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/7/ext/alloc_traits.h **** 
   3:/usr/include/c++/7/ext/alloc_traits.h **** // Copyright (C) 2011-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/ext/alloc_traits.h **** //
   5:/usr/include/c++/7/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/7/ext/alloc_traits.h **** 
  11:/usr/include/c++/7/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/ext/alloc_traits.h **** 
  16:/usr/include/c++/7/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/ext/alloc_traits.h **** 
  20:/usr/include/c++/7/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/ext/alloc_traits.h **** 
  25:/usr/include/c++/7/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/7/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/7/ext/alloc_traits.h ****  */
  28:/usr/include/c++/7/ext/alloc_traits.h **** 
  29:/usr/include/c++/7/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/7/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/7/ext/alloc_traits.h **** 
  32:/usr/include/c++/7/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/7/ext/alloc_traits.h **** 
  34:/usr/include/c++/7/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/7/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/7/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/7/ext/alloc_traits.h **** #else
  38:/usr/include/c++/7/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/7/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/7/ext/alloc_traits.h **** 
  41:/usr/include/c++/7/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/7/ext/alloc_traits.h **** {
  43:/usr/include/c++/7/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/7/ext/alloc_traits.h **** 
  45:/usr/include/c++/7/ext/alloc_traits.h **** /**
  46:/usr/include/c++/7/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  47:/usr/include/c++/7/ext/alloc_traits.h ****  * @ingroup allocators
  48:/usr/include/c++/7/ext/alloc_traits.h **** */
  49:/usr/include/c++/7/ext/alloc_traits.h **** template<typename _Alloc>
  50:/usr/include/c++/7/ext/alloc_traits.h ****   struct __alloc_traits
  51:/usr/include/c++/7/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  52:/usr/include/c++/7/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  53:/usr/include/c++/7/ext/alloc_traits.h **** #endif
  54:/usr/include/c++/7/ext/alloc_traits.h ****   {
  55:/usr/include/c++/7/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
  56:/usr/include/c++/7/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  57:/usr/include/c++/7/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  58:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  59:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  60:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  61:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  62:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  63:/usr/include/c++/7/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  64:/usr/include/c++/7/ext/alloc_traits.h ****     typedef value_type&                             reference;
  65:/usr/include/c++/7/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
  66:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::allocate;
  67:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::deallocate;
  68:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::construct;
  69:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::destroy;
  70:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::max_size;
  71:/usr/include/c++/7/ext/alloc_traits.h **** 
  72:/usr/include/c++/7/ext/alloc_traits.h ****   private:
  73:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Ptr>
  74:/usr/include/c++/7/ext/alloc_traits.h ****       using __is_custom_pointer
  75:/usr/include/c++/7/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  76:/usr/include/c++/7/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  77:/usr/include/c++/7/ext/alloc_traits.h **** 
  78:/usr/include/c++/7/ext/alloc_traits.h ****   public:
  79:/usr/include/c++/7/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
  80:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  81:/usr/include/c++/7/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  82:/usr/include/c++/7/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  83:/usr/include/c++/7/ext/alloc_traits.h ****       {
  84:/usr/include/c++/7/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
  85:/usr/include/c++/7/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  86:/usr/include/c++/7/ext/alloc_traits.h ****       }
  87:/usr/include/c++/7/ext/alloc_traits.h **** 
  88:/usr/include/c++/7/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
  89:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Ptr>
  90:/usr/include/c++/7/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  91:/usr/include/c++/7/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  92:/usr/include/c++/7/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
  93:/usr/include/c++/7/ext/alloc_traits.h **** 
  94:/usr/include/c++/7/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
  95:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
  96:/usr/include/c++/7/ext/alloc_traits.h **** 
  97:/usr/include/c++/7/ext/alloc_traits.h ****     static void _S_on_swap(_Alloc& __a, _Alloc& __b)
  98:/usr/include/c++/7/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
  99:/usr/include/c++/7/ext/alloc_traits.h **** 
 100:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 101:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 102:/usr/include/c++/7/ext/alloc_traits.h **** 
 103:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 104:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 105:/usr/include/c++/7/ext/alloc_traits.h **** 
 106:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 107:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 108:/usr/include/c++/7/ext/alloc_traits.h **** 
 109:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 110:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::is_always_equal::value; }
 111:/usr/include/c++/7/ext/alloc_traits.h **** 
 112:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 113:/usr/include/c++/7/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 114:/usr/include/c++/7/ext/alloc_traits.h **** 
 115:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Tp>
 116:/usr/include/c++/7/ext/alloc_traits.h ****       struct rebind
 117:/usr/include/c++/7/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 118:/usr/include/c++/7/ext/alloc_traits.h **** #else
 119:/usr/include/c++/7/ext/alloc_traits.h **** 
 120:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 121:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 122:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 123:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 124:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 125:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 126:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 127:/usr/include/c++/7/ext/alloc_traits.h **** 
 128:/usr/include/c++/7/ext/alloc_traits.h ****     static pointer
 129:/usr/include/c++/7/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 130:/usr/include/c++/7/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 131:/usr/include/c++/7/ext/alloc_traits.h **** 
 132:/usr/include/c++/7/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 8364              		.loc 13 132 0
 8365              		.cfi_startproc
 8366 0000 55       		pushq	%rbp
 8367              		.cfi_def_cfa_offset 16
 8368              		.cfi_offset 6, -16
 8369 0001 4889E5   		movq	%rsp, %rbp
 8370              		.cfi_def_cfa_register 6
 8371 0004 4883EC20 		subq	$32, %rsp
 8372 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8373 000c 488975F0 		movq	%rsi, -16(%rbp)
 8374 0010 488955E8 		movq	%rdx, -24(%rbp)
 133:/usr/include/c++/7/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 8375              		.loc 13 133 0
 8376 0014 488B55E8 		movq	-24(%rbp), %rdx
 8377 0018 488B4DF0 		movq	-16(%rbp), %rcx
 8378 001c 488B45F8 		movq	-8(%rbp), %rax
 8379 0020 4889CE   		movq	%rcx, %rsi
 8380 0023 4889C7   		movq	%rax, %rdi
 8381 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 8381      00
 8382 002b 90       		nop
 8383 002c C9       		leave
 8384              		.cfi_def_cfa 7, 8
 8385 002d C3       		ret
 8386              		.cfi_endproc
 8387              	.LFE1583:
 8389              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_,"axG",
 8390              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 8392              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:
 8393              	.LFB1584:
 105:/usr/include/c++/7/bits/stl_construct.h **** 	{
 8394              		.loc 9 105 0
 8395              		.cfi_startproc
 8396 0000 55       		pushq	%rbp
 8397              		.cfi_def_cfa_offset 16
 8398              		.cfi_offset 6, -16
 8399 0001 4889E5   		movq	%rsp, %rbp
 8400              		.cfi_def_cfa_register 6
 8401 0004 4883EC10 		subq	$16, %rsp
 8402 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8403 000c 488975F0 		movq	%rsi, -16(%rbp)
 8404              	.L458:
 107:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8405              		.loc 9 107 0 discriminator 2
 8406 0010 488B45F8 		movq	-8(%rbp), %rax
 8407 0014 483B45F0 		cmpq	-16(%rbp), %rax
 8408 0018 741B     		je	.L459
 108:/usr/include/c++/7/bits/stl_construct.h **** 	}
 8409              		.loc 9 108 0 discriminator 1
 8410 001a 488B45F8 		movq	-8(%rbp), %rax
 8411 001e 4889C7   		movq	%rax, %rdi
 8412 0021 E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 8412      00
 8413 0026 4889C7   		movq	%rax, %rdi
 8414 0029 E8000000 		call	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 8414      00
 107:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 8415              		.loc 9 107 0 discriminator 1
 8416 002e 48836DF8 		subq	$-128, -8(%rbp)
 8416      80
 8417 0033 EBDB     		jmp	.L458
 8418              	.L459:
 109:/usr/include/c++/7/bits/stl_construct.h ****     };
 8419              		.loc 9 109 0
 8420 0035 90       		nop
 8421 0036 C9       		leave
 8422              		.cfi_def_cfa 7, 8
 8423 0037 C3       		ret
 8424              		.cfi_endproc
 8425              	.LFE1584:
 8427              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev,"axG",@progbits,_
 8428              		.align 2
 8429              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
 8431              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:
 8432              	.LFB1588:
  79:/usr/include/c++/7/ext/new_allocator.h **** 
 8433              		.loc 12 79 0
 8434              		.cfi_startproc
 8435 0000 55       		pushq	%rbp
 8436              		.cfi_def_cfa_offset 16
 8437              		.cfi_offset 6, -16
 8438 0001 4889E5   		movq	%rsp, %rbp
 8439              		.cfi_def_cfa_register 6
 8440 0004 48897DF8 		movq	%rdi, -8(%rbp)
  79:/usr/include/c++/7/ext/new_allocator.h **** 
 8441              		.loc 12 79 0
 8442 0008 90       		nop
 8443 0009 5D       		popq	%rbp
 8444              		.cfi_def_cfa 7, 8
 8445 000a C3       		ret
 8446              		.cfi_endproc
 8447              	.LFE1588:
 8449              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev
 8450              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev,_ZN9__gnu_cxx13new_allocato
 8451              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m,"ax
 8452              		.align 2
 8453              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 8455              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:
 8456              	.LFB1590:
  87:/usr/include/c++/7/ext/new_allocator.h **** 
  88:/usr/include/c++/7/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/7/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/7/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/7/ext/new_allocator.h **** 
  92:/usr/include/c++/7/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/7/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/7/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/7/ext/new_allocator.h **** 
  96:/usr/include/c++/7/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/7/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/7/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/7/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 100:/usr/include/c++/7/ext/new_allocator.h ****       {
 101:/usr/include/c++/7/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/7/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/7/ext/new_allocator.h **** 
 104:/usr/include/c++/7/ext/new_allocator.h **** #if __cpp_aligned_new
 105:/usr/include/c++/7/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 106:/usr/include/c++/7/ext/new_allocator.h **** 	  {
 107:/usr/include/c++/7/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 108:/usr/include/c++/7/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 109:/usr/include/c++/7/ext/new_allocator.h **** 	  }
 110:/usr/include/c++/7/ext/new_allocator.h **** #endif
 111:/usr/include/c++/7/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 112:/usr/include/c++/7/ext/new_allocator.h ****       }
 113:/usr/include/c++/7/ext/new_allocator.h **** 
 114:/usr/include/c++/7/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 115:/usr/include/c++/7/ext/new_allocator.h ****       void
 116:/usr/include/c++/7/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 8457              		.loc 12 116 0
 8458              		.cfi_startproc
 8459 0000 55       		pushq	%rbp
 8460              		.cfi_def_cfa_offset 16
 8461              		.cfi_offset 6, -16
 8462 0001 4889E5   		movq	%rsp, %rbp
 8463              		.cfi_def_cfa_register 6
 8464 0004 4883EC20 		subq	$32, %rsp
 8465 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8466 000c 488975F0 		movq	%rsi, -16(%rbp)
 8467 0010 488955E8 		movq	%rdx, -24(%rbp)
 117:/usr/include/c++/7/ext/new_allocator.h ****       {
 118:/usr/include/c++/7/ext/new_allocator.h **** #if __cpp_aligned_new
 119:/usr/include/c++/7/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 120:/usr/include/c++/7/ext/new_allocator.h **** 	  {
 121:/usr/include/c++/7/ext/new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 122:/usr/include/c++/7/ext/new_allocator.h **** 	    return;
 123:/usr/include/c++/7/ext/new_allocator.h **** 	  }
 124:/usr/include/c++/7/ext/new_allocator.h **** #endif
 125:/usr/include/c++/7/ext/new_allocator.h **** 	::operator delete(__p);
 8468              		.loc 12 125 0
 8469 0014 488B45F0 		movq	-16(%rbp), %rax
 8470 0018 4889C7   		movq	%rax, %rdi
 8471 001b E8000000 		call	_ZdlPv@PLT
 8471      00
 126:/usr/include/c++/7/ext/new_allocator.h ****       }
 8472              		.loc 12 126 0
 8473 0020 90       		nop
 8474 0021 C9       		leave
 8475              		.cfi_def_cfa 7, 8
 8476 0022 C3       		ret
 8477              		.cfi_endproc
 8478              	.LFE1590:
 8480              		.section	.text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_,"axG",@progbits,_ZSt11__a
 8481              		.weak	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 8483              	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:
 8484              	.LFB1591:
 8485              		.file 14 "/usr/include/c++/7/bits/move.h"
   1:/usr/include/c++/7/bits/move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:/usr/include/c++/7/bits/move.h **** 
   3:/usr/include/c++/7/bits/move.h **** // Copyright (C) 2007-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/move.h **** //
   5:/usr/include/c++/7/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/move.h **** // any later version.
  10:/usr/include/c++/7/bits/move.h **** 
  11:/usr/include/c++/7/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/move.h **** 
  16:/usr/include/c++/7/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/move.h **** 
  20:/usr/include/c++/7/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/move.h **** 
  25:/usr/include/c++/7/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/7/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/7/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/7/bits/move.h ****  */
  29:/usr/include/c++/7/bits/move.h **** 
  30:/usr/include/c++/7/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/7/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/7/bits/move.h **** 
  33:/usr/include/c++/7/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/7/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/7/bits/move.h **** 
  36:/usr/include/c++/7/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/7/bits/move.h **** {
  38:/usr/include/c++/7/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/7/bits/move.h **** 
  40:/usr/include/c++/7/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/7/bits/move.h ****   /**
  42:/usr/include/c++/7/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/7/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/7/bits/move.h ****    */
  45:/usr/include/c++/7/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/7/bits/move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  47:/usr/include/c++/7/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8486              		.loc 14 47 0
 8487              		.cfi_startproc
 8488 0000 55       		pushq	%rbp
 8489              		.cfi_def_cfa_offset 16
 8490              		.cfi_offset 6, -16
 8491 0001 4889E5   		movq	%rsp, %rbp
 8492              		.cfi_def_cfa_register 6
 8493 0004 48897DF8 		movq	%rdi, -8(%rbp)
  48:/usr/include/c++/7/bits/move.h ****     { return __builtin_addressof(__r); }
 8494              		.loc 14 48 0
 8495 0008 488B45F8 		movq	-8(%rbp), %rax
 8496 000c 5D       		popq	%rbp
 8497              		.cfi_def_cfa 7, 8
 8498 000d C3       		ret
 8499              		.cfi_endproc
 8500              	.LFE1591:
 8502              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 8503              		.align 2
 8504              		.weak	_ZN8UnitTest18DeferredTestResultD2Ev
 8506              	_ZN8UnitTest18DeferredTestResultD2Ev:
 8507              	.LFB1594:
 8508              		.file 15 "../DeferredTestResult.h"
   1:../DeferredTestResult.h **** #ifndef UNITTEST_DEFERREDTESTRESULT_H
   2:../DeferredTestResult.h **** #define UNITTEST_DEFERREDTESTRESULT_H
   3:../DeferredTestResult.h **** 
   4:../DeferredTestResult.h **** #include <string>
   5:../DeferredTestResult.h **** #include <vector>
   6:../DeferredTestResult.h **** 
   7:../DeferredTestResult.h **** namespace UnitTest
   8:../DeferredTestResult.h **** {
   9:../DeferredTestResult.h **** 
  10:../DeferredTestResult.h **** struct DeferredTestResult
 8509              		.loc 15 10 0
 8510              		.cfi_startproc
 8511              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8512              		.cfi_lsda 0x1b,.LLSDA1594
 8513 0000 55       		pushq	%rbp
 8514              		.cfi_def_cfa_offset 16
 8515              		.cfi_offset 6, -16
 8516 0001 4889E5   		movq	%rsp, %rbp
 8517              		.cfi_def_cfa_register 6
 8518 0004 53       		pushq	%rbx
 8519 0005 4883EC18 		subq	$24, %rsp
 8520              		.cfi_offset 3, -24
 8521 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8522              	.LBB150:
 8523              		.loc 15 10 0
 8524 000d 488B45E8 		movq	-24(%rbp), %rax
 8525 0011 4883C060 		addq	$96, %rax
 8526 0015 4889C7   		movq	%rax, %rdi
 8527              	.LEHB226:
 8528 0018 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 8528      00
 8529              	.LEHE226:
 8530              		.loc 15 10 0 is_stmt 0 discriminator 2
 8531 001d 488B45E8 		movq	-24(%rbp), %rax
 8532 0021 4883C040 		addq	$64, %rax
 8533 0025 4889C7   		movq	%rax, %rdi
 8534              	.LEHB227:
 8535 0028 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8535      00
 8536              	.LEHE227:
 8537              		.loc 15 10 0 discriminator 4
 8538 002d 488B45E8 		movq	-24(%rbp), %rax
 8539 0031 4883C020 		addq	$32, %rax
 8540 0035 4889C7   		movq	%rax, %rdi
 8541              	.LEHB228:
 8542 0038 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8542      00
 8543              	.LEHE228:
 8544              		.loc 15 10 0 discriminator 6
 8545 003d 488B45E8 		movq	-24(%rbp), %rax
 8546 0041 4889C7   		movq	%rax, %rdi
 8547              	.LEHB229:
 8548 0044 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8548      00
 8549              	.LEHE229:
 8550              	.LBE150:
 8551 0049 EB44     		jmp	.L471
 8552              	.L468:
 8553 004b 4889C3   		movq	%rax, %rbx
 8554              	.LBB151:
 8555              		.loc 15 10 0
 8556 004e 488B45E8 		movq	-24(%rbp), %rax
 8557 0052 4883C040 		addq	$64, %rax
 8558 0056 4889C7   		movq	%rax, %rdi
 8559 0059 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8559      00
 8560 005e EB03     		jmp	.L466
 8561              	.L469:
 8562 0060 4889C3   		movq	%rax, %rbx
 8563              	.L466:
 8564              		.loc 15 10 0 discriminator 3
 8565 0063 488B45E8 		movq	-24(%rbp), %rax
 8566 0067 4883C020 		addq	$32, %rax
 8567 006b 4889C7   		movq	%rax, %rdi
 8568 006e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8568      00
 8569 0073 EB03     		jmp	.L467
 8570              	.L470:
 8571 0075 4889C3   		movq	%rax, %rbx
 8572              	.L467:
 8573              		.loc 15 10 0 discriminator 5
 8574 0078 488B45E8 		movq	-24(%rbp), %rax
 8575 007c 4889C7   		movq	%rax, %rdi
 8576 007f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 8576      00
 8577 0084 4889D8   		movq	%rbx, %rax
 8578 0087 4889C7   		movq	%rax, %rdi
 8579              	.LEHB230:
 8580 008a E8000000 		call	_Unwind_Resume@PLT
 8580      00
 8581              	.LEHE230:
 8582              	.L471:
 8583              	.LBE151:
 8584              		.loc 15 10 0
 8585 008f 4883C418 		addq	$24, %rsp
 8586 0093 5B       		popq	%rbx
 8587 0094 5D       		popq	%rbp
 8588              		.cfi_def_cfa 7, 8
 8589 0095 C3       		ret
 8590              		.cfi_endproc
 8591              	.LFE1594:
 8592              		.section	.gcc_except_table
 8593              	.LLSDA1594:
 8594 0638 FF       		.byte	0xff
 8595 0639 FF       		.byte	0xff
 8596 063a 01       		.byte	0x1
 8597 063b 15       		.uleb128 .LLSDACSE1594-.LLSDACSB1594
 8598              	.LLSDACSB1594:
 8599 063c 18       		.uleb128 .LEHB226-.LFB1594
 8600 063d 05       		.uleb128 .LEHE226-.LEHB226
 8601 063e 4B       		.uleb128 .L468-.LFB1594
 8602 063f 00       		.uleb128 0
 8603 0640 28       		.uleb128 .LEHB227-.LFB1594
 8604 0641 05       		.uleb128 .LEHE227-.LEHB227
 8605 0642 60       		.uleb128 .L469-.LFB1594
 8606 0643 00       		.uleb128 0
 8607 0644 38       		.uleb128 .LEHB228-.LFB1594
 8608 0645 05       		.uleb128 .LEHE228-.LEHB228
 8609 0646 75       		.uleb128 .L470-.LFB1594
 8610 0647 00       		.uleb128 0
 8611 0648 44       		.uleb128 .LEHB229-.LFB1594
 8612 0649 05       		.uleb128 .LEHE229-.LEHB229
 8613 064a 00       		.uleb128 0
 8614 064b 00       		.uleb128 0
 8615 064c 8A01     		.uleb128 .LEHB230-.LFB1594
 8616 064e 05       		.uleb128 .LEHE230-.LEHB230
 8617 064f 00       		.uleb128 0
 8618 0650 00       		.uleb128 0
 8619              	.LLSDACSE1594:
 8620              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 8622              		.weak	_ZN8UnitTest18DeferredTestResultD1Ev
 8623              		.set	_ZN8UnitTest18DeferredTestResultD1Ev,_ZN8UnitTest18DeferredTestResultD2Ev
 8624              		.section	.text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_,"axG",@progbits,_ZSt8_DestroyIN8
 8625              		.weak	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 8627              	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:
 8628              	.LFB1592:
  97:/usr/include/c++/7/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 8629              		.loc 9 97 0 is_stmt 1
 8630              		.cfi_startproc
 8631 0000 55       		pushq	%rbp
 8632              		.cfi_def_cfa_offset 16
 8633              		.cfi_offset 6, -16
 8634 0001 4889E5   		movq	%rsp, %rbp
 8635              		.cfi_def_cfa_register 6
 8636 0004 4883EC10 		subq	$16, %rsp
 8637 0008 48897DF8 		movq	%rdi, -8(%rbp)
  98:/usr/include/c++/7/bits/stl_construct.h **** 
 8638              		.loc 9 98 0
 8639 000c 488B45F8 		movq	-8(%rbp), %rax
 8640 0010 4889C7   		movq	%rax, %rdi
 8641 0013 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev
 8641      00
 8642 0018 90       		nop
 8643 0019 C9       		leave
 8644              		.cfi_def_cfa 7, 8
 8645 001a C3       		ret
 8646              		.cfi_endproc
 8647              	.LFE1592:
 8649              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 8650              		.align 2
 8651              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
 8653              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 8654              	.LFB1602:
 433:/usr/include/c++/7/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8655              		.loc 6 433 0
 8656              		.cfi_startproc
 8657              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8658              		.cfi_lsda 0x1b,.LLSDA1602
 8659 0000 55       		pushq	%rbp
 8660              		.cfi_def_cfa_offset 16
 8661              		.cfi_offset 6, -16
 8662 0001 4889E5   		movq	%rsp, %rbp
 8663              		.cfi_def_cfa_register 6
 8664 0004 53       		pushq	%rbx
 8665 0005 4883EC18 		subq	$24, %rsp
 8666              		.cfi_offset 3, -24
 8667 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8668              	.LBB152:
 435:/usr/include/c++/7/bits/stl_vector.h **** 
 8669              		.loc 6 435 0
 8670 000d 488B45E8 		movq	-24(%rbp), %rax
 8671 0011 4889C7   		movq	%rax, %rdi
 8672 0014 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 8672      00
 8673 0019 4889C2   		movq	%rax, %rdx
 434:/usr/include/c++/7/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 8674              		.loc 6 434 0
 8675 001c 488B45E8 		movq	-24(%rbp), %rax
 8676 0020 488B4808 		movq	8(%rax), %rcx
 8677 0024 488B45E8 		movq	-24(%rbp), %rax
 8678 0028 488B00   		movq	(%rax), %rax
 8679 002b 4889CE   		movq	%rcx, %rsi
 8680 002e 4889C7   		movq	%rax, %rdi
 8681              	.LEHB231:
 8682 0031 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0
 8682      00
 8683              	.LEHE231:
 435:/usr/include/c++/7/bits/stl_vector.h **** 
 8684              		.loc 6 435 0
 8685 0036 488B45E8 		movq	-24(%rbp), %rax
 8686 003a 4889C7   		movq	%rax, %rdi
 8687              	.LEHB232:
 8688 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 8688      00
 8689              	.LEHE232:
 8690              	.LBE152:
 8691 0042 EB1A     		jmp	.L476
 8692              	.L475:
 8693 0044 4889C3   		movq	%rax, %rbx
 8694              	.LBB153:
 8695 0047 488B45E8 		movq	-24(%rbp), %rax
 8696 004b 4889C7   		movq	%rax, %rdi
 8697 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 8697      00
 8698 0053 4889D8   		movq	%rbx, %rax
 8699 0056 4889C7   		movq	%rax, %rdi
 8700              	.LEHB233:
 8701 0059 E8000000 		call	_Unwind_Resume@PLT
 8701      00
 8702              	.LEHE233:
 8703              	.L476:
 8704              	.LBE153:
 8705 005e 4883C418 		addq	$24, %rsp
 8706 0062 5B       		popq	%rbx
 8707 0063 5D       		popq	%rbp
 8708              		.cfi_def_cfa 7, 8
 8709 0064 C3       		ret
 8710              		.cfi_endproc
 8711              	.LFE1602:
 8712              		.section	.gcc_except_table
 8713              	.LLSDA1602:
 8714 0651 FF       		.byte	0xff
 8715 0652 FF       		.byte	0xff
 8716 0653 01       		.byte	0x1
 8717 0654 0C       		.uleb128 .LLSDACSE1602-.LLSDACSB1602
 8718              	.LLSDACSB1602:
 8719 0655 31       		.uleb128 .LEHB231-.LFB1602
 8720 0656 05       		.uleb128 .LEHE231-.LEHB231
 8721 0657 44       		.uleb128 .L475-.LFB1602
 8722 0658 00       		.uleb128 0
 8723 0659 3D       		.uleb128 .LEHB232-.LFB1602
 8724 065a 05       		.uleb128 .LEHE232-.LEHB232
 8725 065b 00       		.uleb128 0
 8726 065c 00       		.uleb128 0
 8727 065d 59       		.uleb128 .LEHB233-.LFB1602
 8728 065e 05       		.uleb128 .LEHE233-.LEHB233
 8729 065f 00       		.uleb128 0
 8730 0660 00       		.uleb128 0
 8731              	.LLSDACSE1602:
 8732              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 8734              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 8735              		.set	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev,_ZNSt
 8736              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 8737              		.align 2
 8738              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 8740              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector
 8741              	.LFB1609:
  81:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
 8742              		.loc 6 81 0
 8743              		.cfi_startproc
 8744 0000 55       		pushq	%rbp
 8745              		.cfi_def_cfa_offset 16
 8746              		.cfi_offset 6, -16
 8747 0001 4889E5   		movq	%rsp, %rbp
 8748              		.cfi_def_cfa_register 6
 8749 0004 4883EC10 		subq	$16, %rsp
 8750 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8751              	.LBB154:
  81:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
 8752              		.loc 6 81 0
 8753 000c 488B45F8 		movq	-8(%rbp), %rax
 8754 0010 4889C7   		movq	%rax, %rdi
 8755 0013 E8000000 		call	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 8755      00
 8756              	.LBE154:
 8757 0018 90       		nop
 8758 0019 C9       		leave
 8759              		.cfi_def_cfa 7, 8
 8760 001a C3       		ret
 8761              		.cfi_endproc
 8762              	.LFE1609:
 8764              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 8765              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 8766              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 8767              		.align 2
 8768              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2
 8770              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 8771              	.LFB1611:
 161:/usr/include/c++/7/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 8772              		.loc 6 161 0
 8773              		.cfi_startproc
 8774              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8775              		.cfi_lsda 0x1b,.LLSDA1611
 8776 0000 55       		pushq	%rbp
 8777              		.cfi_def_cfa_offset 16
 8778              		.cfi_offset 6, -16
 8779 0001 4889E5   		movq	%rsp, %rbp
 8780              		.cfi_def_cfa_register 6
 8781 0004 53       		pushq	%rbx
 8782 0005 4883EC18 		subq	$24, %rsp
 8783              		.cfi_offset 3, -24
 8784 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8785              	.LBB155:
 162:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 8786              		.loc 6 162 0
 8787 000d 488B45E8 		movq	-24(%rbp), %rax
 8788 0011 488B4010 		movq	16(%rax), %rax
 163:/usr/include/c++/7/bits/stl_vector.h **** 
 8789              		.loc 6 163 0
 8790 0015 4889C2   		movq	%rax, %rdx
 8791 0018 488B45E8 		movq	-24(%rbp), %rax
 8792 001c 488B00   		movq	(%rax), %rax
 8793 001f 4829C2   		subq	%rax, %rdx
 8794 0022 4889D0   		movq	%rdx, %rax
 8795 0025 48C1F803 		sarq	$3, %rax
 8796 0029 4889C2   		movq	%rax, %rdx
 8797 002c 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 8797      CCCCCCCC 
 8797      CCCC
 8798 0036 480FAFC2 		imulq	%rdx, %rax
 162:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 8799              		.loc 6 162 0
 8800 003a 4889C2   		movq	%rax, %rdx
 8801 003d 488B45E8 		movq	-24(%rbp), %rax
 8802 0041 488B08   		movq	(%rax), %rcx
 8803 0044 488B45E8 		movq	-24(%rbp), %rax
 8804 0048 4889CE   		movq	%rcx, %rsi
 8805 004b 4889C7   		movq	%rax, %rdi
 8806              	.LEHB234:
 8807 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 8807      00
 8808              	.LEHE234:
 163:/usr/include/c++/7/bits/stl_vector.h **** 
 8809              		.loc 6 163 0
 8810 0053 488B45E8 		movq	-24(%rbp), %rax
 8811 0057 4889C7   		movq	%rax, %rdi
 8812 005a E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 8812      00
 8813              	.LBE155:
 8814 005f EB1A     		jmp	.L481
 8815              	.L480:
 8816 0061 4889C3   		movq	%rax, %rbx
 8817              	.LBB156:
 8818 0064 488B45E8 		movq	-24(%rbp), %rax
 8819 0068 4889C7   		movq	%rax, %rdi
 8820 006b E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 8820      00
 8821 0070 4889D8   		movq	%rbx, %rax
 8822 0073 4889C7   		movq	%rax, %rdi
 8823              	.LEHB235:
 8824 0076 E8000000 		call	_Unwind_Resume@PLT
 8824      00
 8825              	.LEHE235:
 8826              	.L481:
 8827              	.LBE156:
 8828 007b 4883C418 		addq	$24, %rsp
 8829 007f 5B       		popq	%rbx
 8830 0080 5D       		popq	%rbp
 8831              		.cfi_def_cfa 7, 8
 8832 0081 C3       		ret
 8833              		.cfi_endproc
 8834              	.LFE1611:
 8835              		.section	.gcc_except_table
 8836              	.LLSDA1611:
 8837 0661 FF       		.byte	0xff
 8838 0662 FF       		.byte	0xff
 8839 0663 01       		.byte	0x1
 8840 0664 08       		.uleb128 .LLSDACSE1611-.LLSDACSB1611
 8841              	.LLSDACSB1611:
 8842 0665 4E       		.uleb128 .LEHB234-.LFB1611
 8843 0666 05       		.uleb128 .LEHE234-.LEHB234
 8844 0667 61       		.uleb128 .L480-.LFB1611
 8845 0668 00       		.uleb128 0
 8846 0669 76       		.uleb128 .LEHB235-.LFB1611
 8847 066a 05       		.uleb128 .LEHE235-.LEHB235
 8848 066b 00       		.uleb128 0
 8849 066c 00       		.uleb128 0
 8850              	.LLSDACSE1611:
 8851              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 8853              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1
 8854              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1E
 8855              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 8856              		.align 2
 8857              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19
 8859              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_
 8860              	.LFB1613:
 115:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 8861              		.loc 6 115 0
 8862              		.cfi_startproc
 8863 0000 55       		pushq	%rbp
 8864              		.cfi_def_cfa_offset 16
 8865              		.cfi_offset 6, -16
 8866 0001 4889E5   		movq	%rsp, %rbp
 8867              		.cfi_def_cfa_register 6
 8868 0004 48897DF8 		movq	%rdi, -8(%rbp)
 116:/usr/include/c++/7/bits/stl_vector.h **** 
 8869              		.loc 6 116 0
 8870 0008 488B45F8 		movq	-8(%rbp), %rax
 8871 000c 5D       		popq	%rbp
 8872              		.cfi_def_cfa 7, 8
 8873 000d C3       		ret
 8874              		.cfi_endproc
 8875              	.LFE1613:
 8877              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT
 8878              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT
 8880              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:
 8881              	.LFB1614:
 203:/usr/include/c++/7/bits/stl_construct.h **** 	     allocator<_Tp>&)
 8882              		.loc 9 203 0
 8883              		.cfi_startproc
 8884 0000 55       		pushq	%rbp
 8885              		.cfi_def_cfa_offset 16
 8886              		.cfi_offset 6, -16
 8887 0001 4889E5   		movq	%rsp, %rbp
 8888              		.cfi_def_cfa_register 6
 8889 0004 4883EC20 		subq	$32, %rsp
 8890 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8891 000c 488975F0 		movq	%rsi, -16(%rbp)
 8892 0010 488955E8 		movq	%rdx, -24(%rbp)
 206:/usr/include/c++/7/bits/stl_construct.h ****     }
 8893              		.loc 9 206 0
 8894 0014 488B55F0 		movq	-16(%rbp), %rdx
 8895 0018 488B45F8 		movq	-8(%rbp), %rax
 8896 001c 4889D6   		movq	%rdx, %rsi
 8897 001f 4889C7   		movq	%rax, %rdi
 8898 0022 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 8898      00
 8899              		.loc 9 207 0
 8900 0027 90       		nop
 8901 0028 C9       		leave
 8902              		.cfi_def_cfa 7, 8
 8903 0029 C3       		ret
 8904              		.cfi_endproc
 8905              	.LFE1614:
 8907              		.section	.text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev,"axG",@pr
 8908              		.align 2
 8909              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 8911              	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 8912              	.LFB1616:
 8913              		.loc 11 139 0
 8914              		.cfi_startproc
 8915 0000 55       		pushq	%rbp
 8916              		.cfi_def_cfa_offset 16
 8917              		.cfi_offset 6, -16
 8918 0001 4889E5   		movq	%rsp, %rbp
 8919              		.cfi_def_cfa_register 6
 8920 0004 4883EC10 		subq	$16, %rsp
 8921 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8922              	.LBB157:
 8923              		.loc 11 139 0
 8924 000c 488B45F8 		movq	-8(%rbp), %rax
 8925 0010 4889C7   		movq	%rax, %rdi
 8926 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 8926      00
 8927              	.LBE157:
 8928 0018 90       		nop
 8929 0019 C9       		leave
 8930              		.cfi_def_cfa 7, 8
 8931 001a C3       		ret
 8932              		.cfi_endproc
 8933              	.LFE1616:
 8935              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
 8936              		.set	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev,_ZNSaISt4pairIiNSt7
 8937              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 8938              		.align 2
 8939              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13
 8941              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deal
 8942              	.LFB1618:
 176:/usr/include/c++/7/bits/stl_vector.h ****       {
 8943              		.loc 6 176 0
 8944              		.cfi_startproc
 8945 0000 55       		pushq	%rbp
 8946              		.cfi_def_cfa_offset 16
 8947              		.cfi_offset 6, -16
 8948 0001 4889E5   		movq	%rsp, %rbp
 8949              		.cfi_def_cfa_register 6
 8950 0004 4883EC20 		subq	$32, %rsp
 8951 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8952 000c 488975F0 		movq	%rsi, -16(%rbp)
 8953 0010 488955E8 		movq	%rdx, -24(%rbp)
 179:/usr/include/c++/7/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8954              		.loc 6 179 0
 8955 0014 48837DF0 		cmpq	$0, -16(%rbp)
 8955      00
 8956 0019 7417     		je	.L488
 180:/usr/include/c++/7/bits/stl_vector.h ****       }
 8957              		.loc 6 180 0
 8958 001b 488B45F8 		movq	-8(%rbp), %rax
 8959 001f 488B55E8 		movq	-24(%rbp), %rdx
 8960 0023 488B4DF0 		movq	-16(%rbp), %rcx
 8961 0027 4889CE   		movq	%rcx, %rsi
 8962 002a 4889C7   		movq	%rax, %rdi
 8963 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 8963      00
 8964              	.L488:
 181:/usr/include/c++/7/bits/stl_vector.h **** 
 8965              		.loc 6 181 0
 8966 0032 90       		nop
 8967 0033 C9       		leave
 8968              		.cfi_def_cfa 7, 8
 8969 0034 C3       		ret
 8970              		.cfi_endproc
 8971              	.LFE1618:
 8973              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9
 8974              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 8976              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:
 8977              	.LFB1619:
 127:/usr/include/c++/7/bits/stl_construct.h ****     {
 8978              		.loc 9 127 0
 8979              		.cfi_startproc
 8980 0000 55       		pushq	%rbp
 8981              		.cfi_def_cfa_offset 16
 8982              		.cfi_offset 6, -16
 8983 0001 4889E5   		movq	%rsp, %rbp
 8984              		.cfi_def_cfa_register 6
 8985 0004 4883EC10 		subq	$16, %rsp
 8986 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8987 000c 488975F0 		movq	%rsi, -16(%rbp)
 137:/usr/include/c++/7/bits/stl_construct.h ****     }
 8988              		.loc 9 137 0
 8989 0010 488B55F0 		movq	-16(%rbp), %rdx
 8990 0014 488B45F8 		movq	-8(%rbp), %rax
 8991 0018 4889D6   		movq	%rdx, %rsi
 8992 001b 4889C7   		movq	%rax, %rdi
 8993 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 8993      00
 138:/usr/include/c++/7/bits/stl_construct.h **** 
 8994              		.loc 9 138 0
 8995 0023 90       		nop
 8996 0024 C9       		leave
 8997              		.cfi_def_cfa 7, 8
 8998 0025 C3       		ret
 8999              		.cfi_endproc
 9000              	.LFE1619:
 9002              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 9003              		.align 2
 9004              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 9006              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 9007              	.LFB1621:
  86:/usr/include/c++/7/ext/new_allocator.h **** 
 9008              		.loc 12 86 0
 9009              		.cfi_startproc
 9010 0000 55       		pushq	%rbp
 9011              		.cfi_def_cfa_offset 16
 9012              		.cfi_offset 6, -16
 9013 0001 4889E5   		movq	%rsp, %rbp
 9014              		.cfi_def_cfa_register 6
 9015 0004 48897DF8 		movq	%rdi, -8(%rbp)
  86:/usr/include/c++/7/ext/new_allocator.h **** 
 9016              		.loc 12 86 0
 9017 0008 90       		nop
 9018 0009 5D       		popq	%rbp
 9019              		.cfi_def_cfa 7, 8
 9020 000a C3       		ret
 9021              		.cfi_endproc
 9022              	.LFE1621:
 9024              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 9025              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 9026              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 9027              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 9029              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10
 9030              	.LFB1623:
 132:/usr/include/c++/7/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 9031              		.loc 13 132 0
 9032              		.cfi_startproc
 9033 0000 55       		pushq	%rbp
 9034              		.cfi_def_cfa_offset 16
 9035              		.cfi_offset 6, -16
 9036 0001 4889E5   		movq	%rsp, %rbp
 9037              		.cfi_def_cfa_register 6
 9038 0004 4883EC20 		subq	$32, %rsp
 9039 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9040 000c 488975F0 		movq	%rsi, -16(%rbp)
 9041 0010 488955E8 		movq	%rdx, -24(%rbp)
 9042              		.loc 13 133 0
 9043 0014 488B55E8 		movq	-24(%rbp), %rdx
 9044 0018 488B4DF0 		movq	-16(%rbp), %rcx
 9045 001c 488B45F8 		movq	-8(%rbp), %rax
 9046 0020 4889CE   		movq	%rcx, %rsi
 9047 0023 4889C7   		movq	%rax, %rdi
 9048 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE1
 9048      00
 9049 002b 90       		nop
 9050 002c C9       		leave
 9051              		.cfi_def_cfa 7, 8
 9052 002d C3       		ret
 9053              		.cfi_endproc
 9054              	.LFE1623:
 9056              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_t
 9057              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcES
 9059              	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 9060              	.LFB1624:
 105:/usr/include/c++/7/bits/stl_construct.h **** 	{
 9061              		.loc 9 105 0
 9062              		.cfi_startproc
 9063 0000 55       		pushq	%rbp
 9064              		.cfi_def_cfa_offset 16
 9065              		.cfi_offset 6, -16
 9066 0001 4889E5   		movq	%rsp, %rbp
 9067              		.cfi_def_cfa_register 6
 9068 0004 4883EC10 		subq	$16, %rsp
 9069 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9070 000c 488975F0 		movq	%rsi, -16(%rbp)
 9071              	.L494:
 107:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 9072              		.loc 9 107 0 discriminator 2
 9073 0010 488B45F8 		movq	-8(%rbp), %rax
 9074 0014 483B45F0 		cmpq	-16(%rbp), %rax
 9075 0018 741B     		je	.L495
 108:/usr/include/c++/7/bits/stl_construct.h **** 	}
 9076              		.loc 9 108 0 discriminator 1
 9077 001a 488B45F8 		movq	-8(%rbp), %rax
 9078 001e 4889C7   		movq	%rax, %rdi
 9079 0021 E8000000 		call	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 9079      00
 9080 0026 4889C7   		movq	%rax, %rdi
 9081 0029 E8000000 		call	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 9081      00
 107:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 9082              		.loc 9 107 0 discriminator 1
 9083 002e 488345F8 		addq	$40, -8(%rbp)
 9083      28
 9084 0033 EBDB     		jmp	.L494
 9085              	.L495:
 109:/usr/include/c++/7/bits/stl_construct.h ****     };
 9086              		.loc 9 109 0
 9087 0035 90       		nop
 9088 0036 C9       		leave
 9089              		.cfi_def_cfa 7, 8
 9090 0037 C3       		ret
 9091              		.cfi_endproc
 9092              	.LFE1624:
 9094              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 9095              		.align 2
 9096              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 9098              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deall
 9099              	.LFB1625:
 116:/usr/include/c++/7/ext/new_allocator.h ****       {
 9100              		.loc 12 116 0
 9101              		.cfi_startproc
 9102 0000 55       		pushq	%rbp
 9103              		.cfi_def_cfa_offset 16
 9104              		.cfi_offset 6, -16
 9105 0001 4889E5   		movq	%rsp, %rbp
 9106              		.cfi_def_cfa_register 6
 9107 0004 4883EC20 		subq	$32, %rsp
 9108 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9109 000c 488975F0 		movq	%rsi, -16(%rbp)
 9110 0010 488955E8 		movq	%rdx, -24(%rbp)
 125:/usr/include/c++/7/ext/new_allocator.h ****       }
 9111              		.loc 12 125 0
 9112 0014 488B45F0 		movq	-16(%rbp), %rax
 9113 0018 4889C7   		movq	%rax, %rdi
 9114 001b E8000000 		call	_ZdlPv@PLT
 9114      00
 9115              		.loc 12 126 0
 9116 0020 90       		nop
 9117 0021 C9       		leave
 9118              		.cfi_def_cfa 7, 8
 9119 0022 C3       		ret
 9120              		.cfi_endproc
 9121              	.LFE1625:
 9123              		.section	.text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT
 9124              		.weak	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 9126              	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:
 9127              	.LFB1626:
  47:/usr/include/c++/7/bits/move.h ****     { return __builtin_addressof(__r); }
 9128              		.loc 14 47 0
 9129              		.cfi_startproc
 9130 0000 55       		pushq	%rbp
 9131              		.cfi_def_cfa_offset 16
 9132              		.cfi_offset 6, -16
 9133 0001 4889E5   		movq	%rsp, %rbp
 9134              		.cfi_def_cfa_register 6
 9135 0004 48897DF8 		movq	%rdi, -8(%rbp)
 9136              		.loc 14 48 0
 9137 0008 488B45F8 		movq	-8(%rbp), %rax
 9138 000c 5D       		popq	%rbp
 9139              		.cfi_def_cfa 7, 8
 9140 000d C3       		ret
 9141              		.cfi_endproc
 9142              	.LFE1626:
 9144              		.section	.text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev,"axG",@progbi
 9145              		.align 2
 9146              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
 9148              	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
 9149              	.LFB1629:
 9150              		.file 16 "/usr/include/c++/7/bits/stl_pair.h"
   1:/usr/include/c++/7/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/7/bits/stl_pair.h **** 
   3:/usr/include/c++/7/bits/stl_pair.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/stl_pair.h **** //
   5:/usr/include/c++/7/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/7/bits/stl_pair.h **** 
  11:/usr/include/c++/7/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/stl_pair.h **** 
  16:/usr/include/c++/7/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/stl_pair.h **** 
  20:/usr/include/c++/7/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/stl_pair.h **** 
  25:/usr/include/c++/7/bits/stl_pair.h **** /*
  26:/usr/include/c++/7/bits/stl_pair.h ****  *
  27:/usr/include/c++/7/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/7/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/7/bits/stl_pair.h ****  *
  30:/usr/include/c++/7/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/7/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/7/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/7/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/7/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/7/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/7/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/7/bits/stl_pair.h ****  *
  38:/usr/include/c++/7/bits/stl_pair.h ****  *
  39:/usr/include/c++/7/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/7/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/7/bits/stl_pair.h ****  *
  42:/usr/include/c++/7/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/7/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/7/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/7/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/7/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/7/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/7/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/7/bits/stl_pair.h ****  */
  50:/usr/include/c++/7/bits/stl_pair.h **** 
  51:/usr/include/c++/7/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/7/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/7/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/7/bits/stl_pair.h ****  */
  55:/usr/include/c++/7/bits/stl_pair.h **** 
  56:/usr/include/c++/7/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/7/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/7/bits/stl_pair.h **** 
  59:/usr/include/c++/7/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/7/bits/stl_pair.h **** 
  61:/usr/include/c++/7/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/7/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/c++/7/bits/stl_pair.h **** #endif
  64:/usr/include/c++/7/bits/stl_pair.h **** 
  65:/usr/include/c++/7/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/7/bits/stl_pair.h **** {
  67:/usr/include/c++/7/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/7/bits/stl_pair.h **** 
  69:/usr/include/c++/7/bits/stl_pair.h ****   /**
  70:/usr/include/c++/7/bits/stl_pair.h ****    *  @addtogroup utilities
  71:/usr/include/c++/7/bits/stl_pair.h ****    *  @{
  72:/usr/include/c++/7/bits/stl_pair.h ****    */
  73:/usr/include/c++/7/bits/stl_pair.h **** 
  74:/usr/include/c++/7/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/c++/7/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/c++/7/bits/stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  77:/usr/include/c++/7/bits/stl_pair.h **** 
  78:/usr/include/c++/7/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/c++/7/bits/stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  80:/usr/include/c++/7/bits/stl_pair.h ****     piecewise_construct_t();
  81:/usr/include/c++/7/bits/stl_pair.h **** 
  82:/usr/include/c++/7/bits/stl_pair.h ****   // Forward declarations.
  83:/usr/include/c++/7/bits/stl_pair.h ****   template<typename...>
  84:/usr/include/c++/7/bits/stl_pair.h ****     class tuple;
  85:/usr/include/c++/7/bits/stl_pair.h **** 
  86:/usr/include/c++/7/bits/stl_pair.h ****   template<std::size_t...>
  87:/usr/include/c++/7/bits/stl_pair.h ****     struct _Index_tuple;
  88:/usr/include/c++/7/bits/stl_pair.h **** 
  89:/usr/include/c++/7/bits/stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  90:/usr/include/c++/7/bits/stl_pair.h ****   // constructors.
  91:/usr/include/c++/7/bits/stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  92:/usr/include/c++/7/bits/stl_pair.h ****   // is_convertible if the types are the same to
  93:/usr/include/c++/7/bits/stl_pair.h ****   // avoid querying those properties for incomplete types.
  94:/usr/include/c++/7/bits/stl_pair.h ****   template <bool, typename _T1, typename _T2>
  95:/usr/include/c++/7/bits/stl_pair.h ****     struct _PCC
  96:/usr/include/c++/7/bits/stl_pair.h ****     {
  97:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
  98:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
  99:/usr/include/c++/7/bits/stl_pair.h ****       {
 100:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 101:/usr/include/c++/7/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 102:/usr/include/c++/7/bits/stl_pair.h ****       }
 103:/usr/include/c++/7/bits/stl_pair.h **** 
 104:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 105:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 106:/usr/include/c++/7/bits/stl_pair.h ****       {
 107:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 108:/usr/include/c++/7/bits/stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 109:/usr/include/c++/7/bits/stl_pair.h ****       }
 110:/usr/include/c++/7/bits/stl_pair.h **** 
 111:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 112:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 113:/usr/include/c++/7/bits/stl_pair.h ****       {
 114:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 115:/usr/include/c++/7/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 116:/usr/include/c++/7/bits/stl_pair.h ****       }
 117:/usr/include/c++/7/bits/stl_pair.h **** 
 118:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 119:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 120:/usr/include/c++/7/bits/stl_pair.h ****       {
 121:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 122:/usr/include/c++/7/bits/stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 123:/usr/include/c++/7/bits/stl_pair.h ****       }
 124:/usr/include/c++/7/bits/stl_pair.h **** 
 125:/usr/include/c++/7/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 126:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _CopyMovePair()
 127:/usr/include/c++/7/bits/stl_pair.h ****       {
 128:/usr/include/c++/7/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 129:/usr/include/c++/7/bits/stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 130:/usr/include/c++/7/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 131:/usr/include/c++/7/bits/stl_pair.h **** 				       __do_converts,
 132:/usr/include/c++/7/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 133:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 134:/usr/include/c++/7/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 135:/usr/include/c++/7/bits/stl_pair.h **** 		      __converts
 136:/usr/include/c++/7/bits/stl_pair.h **** 		      >::value;
 137:/usr/include/c++/7/bits/stl_pair.h ****       }
 138:/usr/include/c++/7/bits/stl_pair.h **** 
 139:/usr/include/c++/7/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 140:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _MoveCopyPair()
 141:/usr/include/c++/7/bits/stl_pair.h ****       {
 142:/usr/include/c++/7/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 143:/usr/include/c++/7/bits/stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 144:/usr/include/c++/7/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 145:/usr/include/c++/7/bits/stl_pair.h **** 				       __do_converts,
 146:/usr/include/c++/7/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 147:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 148:/usr/include/c++/7/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 149:/usr/include/c++/7/bits/stl_pair.h **** 		      __converts
 150:/usr/include/c++/7/bits/stl_pair.h **** 		      >::value;
 151:/usr/include/c++/7/bits/stl_pair.h ****       }
 152:/usr/include/c++/7/bits/stl_pair.h ****   };
 153:/usr/include/c++/7/bits/stl_pair.h **** 
 154:/usr/include/c++/7/bits/stl_pair.h ****   template <typename _T1, typename _T2>
 155:/usr/include/c++/7/bits/stl_pair.h ****     struct _PCC<false, _T1, _T2>
 156:/usr/include/c++/7/bits/stl_pair.h ****     {
 157:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 158:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 159:/usr/include/c++/7/bits/stl_pair.h ****       {
 160:/usr/include/c++/7/bits/stl_pair.h **** 	return false;
 161:/usr/include/c++/7/bits/stl_pair.h ****       }
 162:/usr/include/c++/7/bits/stl_pair.h **** 
 163:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 164:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 165:/usr/include/c++/7/bits/stl_pair.h ****       {
 166:/usr/include/c++/7/bits/stl_pair.h **** 	return false;
 167:/usr/include/c++/7/bits/stl_pair.h ****       }
 168:/usr/include/c++/7/bits/stl_pair.h **** 
 169:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 170:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 171:/usr/include/c++/7/bits/stl_pair.h ****       {
 172:/usr/include/c++/7/bits/stl_pair.h **** 	return false;
 173:/usr/include/c++/7/bits/stl_pair.h ****       }
 174:/usr/include/c++/7/bits/stl_pair.h **** 
 175:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 176:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 177:/usr/include/c++/7/bits/stl_pair.h ****       {
 178:/usr/include/c++/7/bits/stl_pair.h **** 	return false;
 179:/usr/include/c++/7/bits/stl_pair.h ****       }
 180:/usr/include/c++/7/bits/stl_pair.h ****   };
 181:/usr/include/c++/7/bits/stl_pair.h **** 
 182:/usr/include/c++/7/bits/stl_pair.h ****   // PR libstdc++/79141, a utility type for preventing
 183:/usr/include/c++/7/bits/stl_pair.h ****   // initialization of an argument of a disabled assignment
 184:/usr/include/c++/7/bits/stl_pair.h ****   // operator from a pair of empty braces.
 185:/usr/include/c++/7/bits/stl_pair.h ****   struct __nonesuch_no_braces : std::__nonesuch {
 186:/usr/include/c++/7/bits/stl_pair.h ****     explicit __nonesuch_no_braces(const __nonesuch&) = delete;
 187:/usr/include/c++/7/bits/stl_pair.h ****   };
 188:/usr/include/c++/7/bits/stl_pair.h **** 
 189:/usr/include/c++/7/bits/stl_pair.h **** #endif
 190:/usr/include/c++/7/bits/stl_pair.h **** 
 191:/usr/include/c++/7/bits/stl_pair.h ****  /**
 192:/usr/include/c++/7/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 193:/usr/include/c++/7/bits/stl_pair.h ****    *
 194:/usr/include/c++/7/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
 195:/usr/include/c++/7/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
 196:/usr/include/c++/7/bits/stl_pair.h ****    */
 197:/usr/include/c++/7/bits/stl_pair.h ****   template<typename _T1, typename _T2>
 198:/usr/include/c++/7/bits/stl_pair.h ****     struct pair
 9151              		.loc 16 198 0
 9152              		.cfi_startproc
 9153 0000 55       		pushq	%rbp
 9154              		.cfi_def_cfa_offset 16
 9155              		.cfi_offset 6, -16
 9156 0001 4889E5   		movq	%rsp, %rbp
 9157              		.cfi_def_cfa_register 6
 9158 0004 4883EC10 		subq	$16, %rsp
 9159 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9160              	.LBB158:
 9161              		.loc 16 198 0
 9162 000c 488B45F8 		movq	-8(%rbp), %rax
 9163 0010 4883C008 		addq	$8, %rax
 9164 0014 4889C7   		movq	%rax, %rdi
 9165 0017 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 9165      00
 9166              	.LBE158:
 9167 001c 90       		nop
 9168 001d C9       		leave
 9169              		.cfi_def_cfa 7, 8
 9170 001e C3       		ret
 9171              		.cfi_endproc
 9172              	.LFE1629:
 9174              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 9175              		.set	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev,_ZNSt4pairIiNSt7__cxx11
 9176              		.section	.text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_,"
 9177              		.weak	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 9179              	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:
 9180              	.LFB1627:
  97:/usr/include/c++/7/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 9181              		.loc 9 97 0
 9182              		.cfi_startproc
 9183 0000 55       		pushq	%rbp
 9184              		.cfi_def_cfa_offset 16
 9185              		.cfi_offset 6, -16
 9186 0001 4889E5   		movq	%rsp, %rbp
 9187              		.cfi_def_cfa_register 6
 9188 0004 4883EC10 		subq	$16, %rsp
 9189 0008 48897DF8 		movq	%rdi, -8(%rbp)
  98:/usr/include/c++/7/bits/stl_construct.h **** 
 9190              		.loc 9 98 0
 9191 000c 488B45F8 		movq	-8(%rbp), %rax
 9192 0010 4889C7   		movq	%rax, %rdi
 9193 0013 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 9193      00
 9194 0018 90       		nop
 9195 0019 C9       		leave
 9196              		.cfi_def_cfa 7, 8
 9197 001a C3       		ret
 9198              		.cfi_endproc
 9199              	.LFE1627:
 9201              		.section	.data.rel.ro.local,"aw",@progbits
 9202              		.align 8
 9205              	_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 9206 0000 00000000 		.quad	0
 9206      00000000 
 9207 0008 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 9207      00000000 
 9208 0010 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9208      00000000 
 9209 0018 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 9209      00000000 
 9210 0020 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfF
 9210      00000000 
 9211              		.text
 9212 341b 90       		.align 2
 9214              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 9215              	.LFB1632:
  98:TestDeferredTestReporter.cpp **** {
 9216              		.loc 3 98 0
 9217              		.cfi_startproc
 9218 341c 55       		pushq	%rbp
 9219              		.cfi_def_cfa_offset 16
 9220              		.cfi_offset 6, -16
 9221 341d 4889E5   		movq	%rsp, %rbp
 9222              		.cfi_def_cfa_register 6
 9223 3420 4883EC10 		subq	$16, %rsp
 9224 3424 48897DF8 		movq	%rdi, -8(%rbp)
 9225              	.LBB159:
  98:TestDeferredTestReporter.cpp **** {
 9226              		.loc 3 98 0
 9227 3428 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopy
 9227      000000
 9228 342f 488B45F8 		movq	-8(%rbp), %rax
 9229 3433 488910   		movq	%rdx, (%rax)
 9230 3436 488B45F8 		movq	-8(%rbp), %rax
 9231 343a 4889C7   		movq	%rax, %rdi
 9232 343d E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9232      00
 9233              	.LBE159:
 9234 3442 90       		nop
 9235 3443 C9       		leave
 9236              		.cfi_def_cfa 7, 8
 9237 3444 C3       		ret
 9238              		.cfi_endproc
 9239              	.LFE1632:
 9241              		.set	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 9242 3445 90       		.align 2
 9244              	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMe
 9245              	.LFB1634:
  98:TestDeferredTestReporter.cpp **** {
 9246              		.loc 3 98 0
 9247              		.cfi_startproc
 9248              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9249              		.cfi_lsda 0x1b,.LLSDA1634
 9250 3446 55       		pushq	%rbp
 9251              		.cfi_def_cfa_offset 16
 9252              		.cfi_offset 6, -16
 9253 3447 4889E5   		movq	%rsp, %rbp
 9254              		.cfi_def_cfa_register 6
 9255 344a 53       		pushq	%rbx
 9256 344b 4883EC18 		subq	$24, %rsp
 9257              		.cfi_offset 3, -24
 9258 344f 48897DE8 		movq	%rdi, -24(%rbp)
  98:TestDeferredTestReporter.cpp **** {
 9259              		.loc 3 98 0
 9260 3453 488B45E8 		movq	-24(%rbp), %rax
 9261 3457 4889C7   		movq	%rax, %rdi
 9262              	.LEHB236:
 9263 345a E8BDFFFF 		call	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 9263      FF
 9264              	.LEHE236:
  98:TestDeferredTestReporter.cpp **** {
 9265              		.loc 3 98 0 is_stmt 0 discriminator 2
 9266 345f 488B45E8 		movq	-24(%rbp), %rax
 9267 3463 4889C7   		movq	%rax, %rdi
 9268 3466 E8000000 		call	_ZdlPv@PLT
 9268      00
 9269 346b EB1A     		jmp	.L505
 9270              	.L504:
 9271 346d 4889C3   		movq	%rax, %rbx
  98:TestDeferredTestReporter.cpp **** {
 9272              		.loc 3 98 0
 9273 3470 488B45E8 		movq	-24(%rbp), %rax
 9274 3474 4889C7   		movq	%rax, %rdi
 9275 3477 E8000000 		call	_ZdlPv@PLT
 9275      00
 9276 347c 4889D8   		movq	%rbx, %rax
 9277 347f 4889C7   		movq	%rax, %rdi
 9278              	.LEHB237:
 9279 3482 E8000000 		call	_Unwind_Resume@PLT
 9279      00
 9280              	.LEHE237:
 9281              	.L505:
 9282 3487 4883C418 		addq	$24, %rsp
 9283 348b 5B       		popq	%rbx
 9284 348c 5D       		popq	%rbp
 9285              		.cfi_def_cfa 7, 8
 9286 348d C3       		ret
 9287              		.cfi_endproc
 9288              	.LFE1634:
 9289              		.section	.gcc_except_table
 9290              	.LLSDA1634:
 9291 066d FF       		.byte	0xff
 9292 066e FF       		.byte	0xff
 9293 066f 01       		.byte	0x1
 9294 0670 08       		.uleb128 .LLSDACSE1634-.LLSDACSB1634
 9295              	.LLSDACSB1634:
 9296 0671 14       		.uleb128 .LEHB236-.LFB1634
 9297 0672 05       		.uleb128 .LEHE236-.LEHB236
 9298 0673 27       		.uleb128 .L504-.LFB1634
 9299 0674 00       		.uleb128 0
 9300 0675 3C       		.uleb128 .LEHB237-.LFB1634
 9301 0676 05       		.uleb128 .LEHE237-.LEHB237
 9302 0677 00       		.uleb128 0
 9303 0678 00       		.uleb128 0
 9304              	.LLSDACSE1634:
 9305              		.text
 9307              		.section	.data.rel.ro.local
 9308              		.align 8
 9311              	_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 9312 0028 00000000 		.quad	0
 9312      00000000 
 9313 0030 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9313      00000000 
 9314 0038 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9314      00000000 
 9315 0040 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 9315      00000000 
 9316 0048 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9316      00000000 
 9317              		.text
 9318              		.align 2
 9320              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 9321              	.LFB1636:
  83:TestDeferredTestReporter.cpp **** {
 9322              		.loc 3 83 0 is_stmt 1
 9323              		.cfi_startproc
 9324 348e 55       		pushq	%rbp
 9325              		.cfi_def_cfa_offset 16
 9326              		.cfi_offset 6, -16
 9327 348f 4889E5   		movq	%rsp, %rbp
 9328              		.cfi_def_cfa_register 6
 9329 3492 4883EC10 		subq	$16, %rsp
 9330 3496 48897DF8 		movq	%rdi, -8(%rbp)
 9331              	.LBB160:
  83:TestDeferredTestReporter.cpp **** {
 9332              		.loc 3 83 0
 9333 349a 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDeta
 9333      000000
 9334 34a1 488B45F8 		movq	-8(%rbp), %rax
 9335 34a5 488910   		movq	%rdx, (%rax)
 9336 34a8 488B45F8 		movq	-8(%rbp), %rax
 9337 34ac 4889C7   		movq	%rax, %rdi
 9338 34af E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9338      00
 9339              	.LBE160:
 9340 34b4 90       		nop
 9341 34b5 C9       		leave
 9342              		.cfi_def_cfa 7, 8
 9343 34b6 C3       		ret
 9344              		.cfi_endproc
 9345              	.LFE1636:
 9347              		.set	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9348 34b7 90       		.align 2
 9350              	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMulti
 9351              	.LFB1638:
  83:TestDeferredTestReporter.cpp **** {
 9352              		.loc 3 83 0
 9353              		.cfi_startproc
 9354              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9355              		.cfi_lsda 0x1b,.LLSDA1638
 9356 34b8 55       		pushq	%rbp
 9357              		.cfi_def_cfa_offset 16
 9358              		.cfi_offset 6, -16
 9359 34b9 4889E5   		movq	%rsp, %rbp
 9360              		.cfi_def_cfa_register 6
 9361 34bc 53       		pushq	%rbx
 9362 34bd 4883EC18 		subq	$24, %rsp
 9363              		.cfi_offset 3, -24
 9364 34c1 48897DE8 		movq	%rdi, -24(%rbp)
  83:TestDeferredTestReporter.cpp **** {
 9365              		.loc 3 83 0
 9366 34c5 488B45E8 		movq	-24(%rbp), %rax
 9367 34c9 4889C7   		movq	%rax, %rdi
 9368              	.LEHB238:
 9369 34cc E8BDFFFF 		call	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 9369      FF
 9370              	.LEHE238:
  83:TestDeferredTestReporter.cpp **** {
 9371              		.loc 3 83 0 is_stmt 0 discriminator 2
 9372 34d1 488B45E8 		movq	-24(%rbp), %rax
 9373 34d5 4889C7   		movq	%rax, %rdi
 9374 34d8 E8000000 		call	_ZdlPv@PLT
 9374      00
 9375 34dd EB1A     		jmp	.L510
 9376              	.L509:
 9377 34df 4889C3   		movq	%rax, %rbx
  83:TestDeferredTestReporter.cpp **** {
 9378              		.loc 3 83 0
 9379 34e2 488B45E8 		movq	-24(%rbp), %rax
 9380 34e6 4889C7   		movq	%rax, %rdi
 9381 34e9 E8000000 		call	_ZdlPv@PLT
 9381      00
 9382 34ee 4889D8   		movq	%rbx, %rax
 9383 34f1 4889C7   		movq	%rax, %rdi
 9384              	.LEHB239:
 9385 34f4 E8000000 		call	_Unwind_Resume@PLT
 9385      00
 9386              	.LEHE239:
 9387              	.L510:
 9388 34f9 4883C418 		addq	$24, %rsp
 9389 34fd 5B       		popq	%rbx
 9390 34fe 5D       		popq	%rbp
 9391              		.cfi_def_cfa 7, 8
 9392 34ff C3       		ret
 9393              		.cfi_endproc
 9394              	.LFE1638:
 9395              		.section	.gcc_except_table
 9396              	.LLSDA1638:
 9397 0679 FF       		.byte	0xff
 9398 067a FF       		.byte	0xff
 9399 067b 01       		.byte	0x1
 9400 067c 08       		.uleb128 .LLSDACSE1638-.LLSDACSB1638
 9401              	.LLSDACSB1638:
 9402 067d 14       		.uleb128 .LEHB238-.LFB1638
 9403 067e 05       		.uleb128 .LEHE238-.LEHB238
 9404 067f 27       		.uleb128 .L509-.LFB1638
 9405 0680 00       		.uleb128 0
 9406 0681 3C       		.uleb128 .LEHB239-.LFB1638
 9407 0682 05       		.uleb128 .LEHE239-.LEHB239
 9408 0683 00       		.uleb128 0
 9409 0684 00       		.uleb128 0
 9410              	.LLSDACSE1638:
 9411              		.text
 9413              		.section	.data.rel.ro.local
 9414              		.align 8
 9417              	_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 9418 0050 00000000 		.quad	0
 9418      00000000 
 9419 0058 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 9419      00000000 
 9420 0060 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9420      00000000 
 9421 0068 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD
 9421      00000000 
 9422 0070 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails
 9422      00000000 
 9423              		.text
 9424              		.align 2
 9426              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2Ev:
 9427              	.LFB1640:
  71:TestDeferredTestReporter.cpp **** {
 9428              		.loc 3 71 0 is_stmt 1
 9429              		.cfi_startproc
 9430 3500 55       		pushq	%rbp
 9431              		.cfi_def_cfa_offset 16
 9432              		.cfi_offset 6, -16
 9433 3501 4889E5   		movq	%rsp, %rbp
 9434              		.cfi_def_cfa_register 6
 9435 3504 4883EC10 		subq	$16, %rsp
 9436 3508 48897DF8 		movq	%rdi, -8(%rbp)
 9437              	.LBB161:
  71:TestDeferredTestReporter.cpp **** {
 9438              		.loc 3 71 0
 9439 350c 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDeta
 9439      000000
 9440 3513 488B45F8 		movq	-8(%rbp), %rax
 9441 3517 488910   		movq	%rdx, (%rax)
 9442 351a 488B45F8 		movq	-8(%rbp), %rax
 9443 351e 4889C7   		movq	%rax, %rdi
 9444 3521 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9444      00
 9445              	.LBE161:
 9446 3526 90       		nop
 9447 3527 C9       		leave
 9448              		.cfi_def_cfa 7, 8
 9449 3528 C3       		ret
 9450              		.cfi_endproc
 9451              	.LFE1640:
 9453              		.set	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 9454 3529 90       		.align 2
 9456              	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD0Ev:
 9457              	.LFB1642:
  71:TestDeferredTestReporter.cpp **** {
 9458              		.loc 3 71 0
 9459              		.cfi_startproc
 9460              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9461              		.cfi_lsda 0x1b,.LLSDA1642
 9462 352a 55       		pushq	%rbp
 9463              		.cfi_def_cfa_offset 16
 9464              		.cfi_offset 6, -16
 9465 352b 4889E5   		movq	%rsp, %rbp
 9466              		.cfi_def_cfa_register 6
 9467 352e 53       		pushq	%rbx
 9468 352f 4883EC18 		subq	$24, %rsp
 9469              		.cfi_offset 3, -24
 9470 3533 48897DE8 		movq	%rdi, -24(%rbp)
  71:TestDeferredTestReporter.cpp **** {
 9471              		.loc 3 71 0
 9472 3537 488B45E8 		movq	-24(%rbp), %rax
 9473 353b 4889C7   		movq	%rax, %rdi
 9474              	.LEHB240:
 9475 353e E8BDFFFF 		call	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 9475      FF
 9476              	.LEHE240:
  71:TestDeferredTestReporter.cpp **** {
 9477              		.loc 3 71 0 is_stmt 0 discriminator 2
 9478 3543 488B45E8 		movq	-24(%rbp), %rax
 9479 3547 4889C7   		movq	%rax, %rdi
 9480 354a E8000000 		call	_ZdlPv@PLT
 9480      00
 9481 354f EB1A     		jmp	.L515
 9482              	.L514:
 9483 3551 4889C3   		movq	%rax, %rbx
  71:TestDeferredTestReporter.cpp **** {
 9484              		.loc 3 71 0
 9485 3554 488B45E8 		movq	-24(%rbp), %rax
 9486 3558 4889C7   		movq	%rax, %rdi
 9487 355b E8000000 		call	_ZdlPv@PLT
 9487      00
 9488 3560 4889D8   		movq	%rbx, %rax
 9489 3563 4889C7   		movq	%rax, %rdi
 9490              	.LEHB241:
 9491 3566 E8000000 		call	_Unwind_Resume@PLT
 9491      00
 9492              	.LEHE241:
 9493              	.L515:
 9494 356b 4883C418 		addq	$24, %rsp
 9495 356f 5B       		popq	%rbx
 9496 3570 5D       		popq	%rbp
 9497              		.cfi_def_cfa 7, 8
 9498 3571 C3       		ret
 9499              		.cfi_endproc
 9500              	.LFE1642:
 9501              		.section	.gcc_except_table
 9502              	.LLSDA1642:
 9503 0685 FF       		.byte	0xff
 9504 0686 FF       		.byte	0xff
 9505 0687 01       		.byte	0x1
 9506 0688 08       		.uleb128 .LLSDACSE1642-.LLSDACSB1642
 9507              	.LLSDACSB1642:
 9508 0689 14       		.uleb128 .LEHB240-.LFB1642
 9509 068a 05       		.uleb128 .LEHE240-.LEHB240
 9510 068b 27       		.uleb128 .L514-.LFB1642
 9511 068c 00       		.uleb128 0
 9512 068d 3C       		.uleb128 .LEHB241-.LFB1642
 9513 068e 05       		.uleb128 .LEHE241-.LEHB241
 9514 068f 00       		.uleb128 0
 9515 0690 00       		.uleb128 0
 9516              	.LLSDACSE1642:
 9517              		.text
 9519              		.section	.data.rel.ro.local
 9520              		.align 8
 9523              	_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 9524 0078 00000000 		.quad	0
 9524      00000000 
 9525 0080 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 9525      00000000 
 9526 0088 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9526      00000000 
 9527 0090 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev
 9527      00000000 
 9528 0098 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7Ru
 9528      00000000 
 9529              		.text
 9530              		.align 2
 9532              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev:
 9533              	.LFB1644:
  61:TestDeferredTestReporter.cpp **** {
 9534              		.loc 3 61 0 is_stmt 1
 9535              		.cfi_startproc
 9536 3572 55       		pushq	%rbp
 9537              		.cfi_def_cfa_offset 16
 9538              		.cfi_offset 6, -16
 9539 3573 4889E5   		movq	%rsp, %rbp
 9540              		.cfi_def_cfa_register 6
 9541 3576 4883EC10 		subq	$16, %rsp
 9542 357a 48897DF8 		movq	%rdi, -8(%rbp)
 9543              	.LBB162:
  61:TestDeferredTestReporter.cpp **** {
 9544              		.loc 3 61 0
 9545 357e 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime
 9545      000000
 9546 3585 488B45F8 		movq	-8(%rbp), %rax
 9547 3589 488910   		movq	%rdx, (%rax)
 9548 358c 488B45F8 		movq	-8(%rbp), %rax
 9549 3590 4889C7   		movq	%rax, %rdi
 9550 3593 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9550      00
 9551              	.LBE162:
 9552 3598 90       		nop
 9553 3599 C9       		leave
 9554              		.cfi_def_cfa 7, 8
 9555 359a C3       		ret
 9556              		.cfi_endproc
 9557              	.LFE1644:
 9559              		.set	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev,
 9560 359b 90       		.align 2
 9562              	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev:
 9563              	.LFB1646:
  61:TestDeferredTestReporter.cpp **** {
 9564              		.loc 3 61 0
 9565              		.cfi_startproc
 9566              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9567              		.cfi_lsda 0x1b,.LLSDA1646
 9568 359c 55       		pushq	%rbp
 9569              		.cfi_def_cfa_offset 16
 9570              		.cfi_offset 6, -16
 9571 359d 4889E5   		movq	%rsp, %rbp
 9572              		.cfi_def_cfa_register 6
 9573 35a0 53       		pushq	%rbx
 9574 35a1 4883EC18 		subq	$24, %rsp
 9575              		.cfi_offset 3, -24
 9576 35a5 48897DE8 		movq	%rdi, -24(%rbp)
  61:TestDeferredTestReporter.cpp **** {
 9577              		.loc 3 61 0
 9578 35a9 488B45E8 		movq	-24(%rbp), %rax
 9579 35ad 4889C7   		movq	%rax, %rdi
 9580              	.LEHB242:
 9581 35b0 E8BDFFFF 		call	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
 9581      FF
 9582              	.LEHE242:
  61:TestDeferredTestReporter.cpp **** {
 9583              		.loc 3 61 0 is_stmt 0 discriminator 2
 9584 35b5 488B45E8 		movq	-24(%rbp), %rax
 9585 35b9 4889C7   		movq	%rax, %rdi
 9586 35bc E8000000 		call	_ZdlPv@PLT
 9586      00
 9587 35c1 EB1A     		jmp	.L520
 9588              	.L519:
 9589 35c3 4889C3   		movq	%rax, %rbx
  61:TestDeferredTestReporter.cpp **** {
 9590              		.loc 3 61 0
 9591 35c6 488B45E8 		movq	-24(%rbp), %rax
 9592 35ca 4889C7   		movq	%rax, %rdi
 9593 35cd E8000000 		call	_ZdlPv@PLT
 9593      00
 9594 35d2 4889D8   		movq	%rbx, %rax
 9595 35d5 4889C7   		movq	%rax, %rdi
 9596              	.LEHB243:
 9597 35d8 E8000000 		call	_Unwind_Resume@PLT
 9597      00
 9598              	.LEHE243:
 9599              	.L520:
 9600 35dd 4883C418 		addq	$24, %rsp
 9601 35e1 5B       		popq	%rbx
 9602 35e2 5D       		popq	%rbp
 9603              		.cfi_def_cfa 7, 8
 9604 35e3 C3       		ret
 9605              		.cfi_endproc
 9606              	.LFE1646:
 9607              		.section	.gcc_except_table
 9608              	.LLSDA1646:
 9609 0691 FF       		.byte	0xff
 9610 0692 FF       		.byte	0xff
 9611 0693 01       		.byte	0x1
 9612 0694 08       		.uleb128 .LLSDACSE1646-.LLSDACSB1646
 9613              	.LLSDACSB1646:
 9614 0695 14       		.uleb128 .LEHB242-.LFB1646
 9615 0696 05       		.uleb128 .LEHE242-.LEHB242
 9616 0697 27       		.uleb128 .L519-.LFB1646
 9617 0698 00       		.uleb128 0
 9618 0699 3C       		.uleb128 .LEHB243-.LFB1646
 9619 069a 05       		.uleb128 .LEHE243-.LEHB243
 9620 069b 00       		.uleb128 0
 9621 069c 00       		.uleb128 0
 9622              	.LLSDACSE1646:
 9623              		.text
 9625              		.section	.data.rel.ro.local
 9626              		.align 8
 9629              	_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 9630 00a0 00000000 		.quad	0
 9630      00000000 
 9631 00a8 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 9631      00000000 
 9632 00b0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9632      00000000 
 9633 00b8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 9633      00000000 
 9634 00c0 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameA
 9634      00000000 
 9635              		.text
 9636              		.align 2
 9638              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD
 9639              	.LFB1648:
  52:TestDeferredTestReporter.cpp **** {
 9640              		.loc 3 52 0 is_stmt 1
 9641              		.cfi_startproc
 9642 35e4 55       		pushq	%rbp
 9643              		.cfi_def_cfa_offset 16
 9644              		.cfi_offset 6, -16
 9645 35e5 4889E5   		movq	%rsp, %rbp
 9646              		.cfi_def_cfa_register 6
 9647 35e8 4883EC10 		subq	$16, %rsp
 9648 35ec 48897DF8 		movq	%rdi, -8(%rbp)
 9649              	.LBB163:
  52:TestDeferredTestReporter.cpp **** {
 9650              		.loc 3 52 0
 9651 35f0 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNa
 9651      000000
 9652 35f7 488B45F8 		movq	-8(%rbp), %rax
 9653 35fb 488910   		movq	%rdx, (%rax)
 9654 35fe 488B45F8 		movq	-8(%rbp), %rax
 9655 3602 4889C7   		movq	%rax, %rdi
 9656 3605 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9656      00
 9657              	.LBE163:
 9658 360a 90       		nop
 9659 360b C9       		leave
 9660              		.cfi_def_cfa 7, 8
 9661 360c C3       		ret
 9662              		.cfi_endproc
 9663              	.LFE1648:
 9665              		.set	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9666 360d 90       		.align 2
 9668              	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD
 9669              	.LFB1650:
  52:TestDeferredTestReporter.cpp **** {
 9670              		.loc 3 52 0
 9671              		.cfi_startproc
 9672              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9673              		.cfi_lsda 0x1b,.LLSDA1650
 9674 360e 55       		pushq	%rbp
 9675              		.cfi_def_cfa_offset 16
 9676              		.cfi_offset 6, -16
 9677 360f 4889E5   		movq	%rsp, %rbp
 9678              		.cfi_def_cfa_register 6
 9679 3612 53       		pushq	%rbx
 9680 3613 4883EC18 		subq	$24, %rsp
 9681              		.cfi_offset 3, -24
 9682 3617 48897DE8 		movq	%rdi, -24(%rbp)
  52:TestDeferredTestReporter.cpp **** {
 9683              		.loc 3 52 0
 9684 361b 488B45E8 		movq	-24(%rbp), %rax
 9685 361f 4889C7   		movq	%rax, %rdi
 9686              	.LEHB244:
 9687 3622 E8BDFFFF 		call	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 9687      FF
 9688              	.LEHE244:
  52:TestDeferredTestReporter.cpp **** {
 9689              		.loc 3 52 0 is_stmt 0 discriminator 2
 9690 3627 488B45E8 		movq	-24(%rbp), %rax
 9691 362b 4889C7   		movq	%rax, %rdi
 9692 362e E8000000 		call	_ZdlPv@PLT
 9692      00
 9693 3633 EB1A     		jmp	.L525
 9694              	.L524:
 9695 3635 4889C3   		movq	%rax, %rbx
  52:TestDeferredTestReporter.cpp **** {
 9696              		.loc 3 52 0
 9697 3638 488B45E8 		movq	-24(%rbp), %rax
 9698 363c 4889C7   		movq	%rax, %rdi
 9699 363f E8000000 		call	_ZdlPv@PLT
 9699      00
 9700 3644 4889D8   		movq	%rbx, %rax
 9701 3647 4889C7   		movq	%rax, %rdi
 9702              	.LEHB245:
 9703 364a E8000000 		call	_Unwind_Resume@PLT
 9703      00
 9704              	.LEHE245:
 9705              	.L525:
 9706 364f 4883C418 		addq	$24, %rsp
 9707 3653 5B       		popq	%rbx
 9708 3654 5D       		popq	%rbp
 9709              		.cfi_def_cfa 7, 8
 9710 3655 C3       		ret
 9711              		.cfi_endproc
 9712              	.LFE1650:
 9713              		.section	.gcc_except_table
 9714              	.LLSDA1650:
 9715 069d FF       		.byte	0xff
 9716 069e FF       		.byte	0xff
 9717 069f 01       		.byte	0x1
 9718 06a0 08       		.uleb128 .LLSDACSE1650-.LLSDACSB1650
 9719              	.LLSDACSB1650:
 9720 06a1 14       		.uleb128 .LEHB244-.LFB1650
 9721 06a2 05       		.uleb128 .LEHE244-.LEHB244
 9722 06a3 27       		.uleb128 .L524-.LFB1650
 9723 06a4 00       		.uleb128 0
 9724 06a5 3C       		.uleb128 .LEHB245-.LFB1650
 9725 06a6 05       		.uleb128 .LEHE245-.LEHB245
 9726 06a7 00       		.uleb128 0
 9727 06a8 00       		.uleb128 0
 9728              	.LLSDACSE1650:
 9729              		.text
 9731              		.section	.data.rel.ro.local
 9732              		.align 8
 9735              	_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 9736 00c8 00000000 		.quad	0
 9736      00000000 
 9737 00d0 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 9737      00000000 
 9738 00d8 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9738      00000000 
 9739 00e0 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 9739      00000000 
 9740 00e8 00000000 		.quad	_ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferr
 9740      00000000 
 9741              		.text
 9742              		.align 2
 9744              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD2
 9745              	.LFB1652:
  46:TestDeferredTestReporter.cpp **** {
 9746              		.loc 3 46 0 is_stmt 1
 9747              		.cfi_startproc
 9748 3656 55       		pushq	%rbp
 9749              		.cfi_def_cfa_offset 16
 9750              		.cfi_offset 6, -16
 9751 3657 4889E5   		movq	%rsp, %rbp
 9752              		.cfi_def_cfa_register 6
 9753 365a 4883EC10 		subq	$16, %rsp
 9754 365e 48897DF8 		movq	%rdi, -8(%rbp)
 9755              	.LBB164:
  46:TestDeferredTestReporter.cpp **** {
 9756              		.loc 3 46 0
 9757 3662 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDef
 9757      000000
 9758 3669 488B45F8 		movq	-8(%rbp), %rax
 9759 366d 488910   		movq	%rdx, (%rax)
 9760 3670 488B45F8 		movq	-8(%rbp), %rax
 9761 3674 4889C7   		movq	%rax, %rdi
 9762 3677 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9762      00
 9763              	.LBE164:
 9764 367c 90       		nop
 9765 367d C9       		leave
 9766              		.cfi_def_cfa 7, 8
 9767 367e C3       		ret
 9768              		.cfi_endproc
 9769              	.LFE1652:
 9771              		.set	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9772 367f 90       		.align 2
 9774              	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD0
 9775              	.LFB1654:
  46:TestDeferredTestReporter.cpp **** {
 9776              		.loc 3 46 0
 9777              		.cfi_startproc
 9778              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9779              		.cfi_lsda 0x1b,.LLSDA1654
 9780 3680 55       		pushq	%rbp
 9781              		.cfi_def_cfa_offset 16
 9782              		.cfi_offset 6, -16
 9783 3681 4889E5   		movq	%rsp, %rbp
 9784              		.cfi_def_cfa_register 6
 9785 3684 53       		pushq	%rbx
 9786 3685 4883EC18 		subq	$24, %rsp
 9787              		.cfi_offset 3, -24
 9788 3689 48897DE8 		movq	%rdi, -24(%rbp)
  46:TestDeferredTestReporter.cpp **** {
 9789              		.loc 3 46 0
 9790 368d 488B45E8 		movq	-24(%rbp), %rax
 9791 3691 4889C7   		movq	%rax, %rdi
 9792              	.LEHB246:
 9793 3694 E8BDFFFF 		call	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 9793      FF
 9794              	.LEHE246:
  46:TestDeferredTestReporter.cpp **** {
 9795              		.loc 3 46 0 is_stmt 0 discriminator 2
 9796 3699 488B45E8 		movq	-24(%rbp), %rax
 9797 369d 4889C7   		movq	%rax, %rdi
 9798 36a0 E8000000 		call	_ZdlPv@PLT
 9798      00
 9799 36a5 EB1A     		jmp	.L530
 9800              	.L529:
 9801 36a7 4889C3   		movq	%rax, %rbx
  46:TestDeferredTestReporter.cpp **** {
 9802              		.loc 3 46 0
 9803 36aa 488B45E8 		movq	-24(%rbp), %rax
 9804 36ae 4889C7   		movq	%rax, %rdi
 9805 36b1 E8000000 		call	_ZdlPv@PLT
 9805      00
 9806 36b6 4889D8   		movq	%rbx, %rax
 9807 36b9 4889C7   		movq	%rax, %rdi
 9808              	.LEHB247:
 9809 36bc E8000000 		call	_Unwind_Resume@PLT
 9809      00
 9810              	.LEHE247:
 9811              	.L530:
 9812 36c1 4883C418 		addq	$24, %rsp
 9813 36c5 5B       		popq	%rbx
 9814 36c6 5D       		popq	%rbp
 9815              		.cfi_def_cfa 7, 8
 9816 36c7 C3       		ret
 9817              		.cfi_endproc
 9818              	.LFE1654:
 9819              		.section	.gcc_except_table
 9820              	.LLSDA1654:
 9821 06a9 FF       		.byte	0xff
 9822 06aa FF       		.byte	0xff
 9823 06ab 01       		.byte	0x1
 9824 06ac 08       		.uleb128 .LLSDACSE1654-.LLSDACSB1654
 9825              	.LLSDACSB1654:
 9826 06ad 14       		.uleb128 .LEHB246-.LFB1654
 9827 06ae 05       		.uleb128 .LEHE246-.LEHB246
 9828 06af 27       		.uleb128 .L529-.LFB1654
 9829 06b0 00       		.uleb128 0
 9830 06b1 3C       		.uleb128 .LEHB247-.LFB1654
 9831 06b2 05       		.uleb128 .LEHE247-.LEHB247
 9832 06b3 00       		.uleb128 0
 9833 06b4 00       		.uleb128 0
 9834              	.LLSDACSE1654:
 9835              		.text
 9837              		.section	.data.rel.ro,"aw",@progbits
 9838              		.align 8
 9841              	_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 9842 0000 00000000 		.quad	0
 9842      00000000 
 9843 0008 00000000 		.quad	_ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
 9843      00000000 
 9844 0010 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 9844      00000000 
 9845 0018 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev
 9845      00000000 
 9846 0020 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
 9846      00000000 
 9847 0028 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
 9847      00000000 
 9848 0030 00000000 		.quad	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
 9848      00000000 
 9849 0038 00000000 		.quad	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif
 9849      00000000 
 9850              		.text
 9851              		.align 2
 9853              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev:
 9854              	.LFB1656:
  20:TestDeferredTestReporter.cpp **** {
 9855              		.loc 3 20 0 is_stmt 1
 9856              		.cfi_startproc
 9857 36c8 55       		pushq	%rbp
 9858              		.cfi_def_cfa_offset 16
 9859              		.cfi_offset 6, -16
 9860 36c9 4889E5   		movq	%rsp, %rbp
 9861              		.cfi_def_cfa_register 6
 9862 36cc 4883EC10 		subq	$16, %rsp
 9863 36d0 48897DF8 		movq	%rdi, -8(%rbp)
 9864              	.LBB165:
  20:TestDeferredTestReporter.cpp **** {
 9865              		.loc 3 20 0
 9866 36d4 488D1500 		leaq	16+_ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE(%rip), %rdx
 9866      000000
 9867 36db 488B45F8 		movq	-8(%rbp), %rax
 9868 36df 488910   		movq	%rdx, (%rax)
 9869 36e2 488B45F8 		movq	-8(%rbp), %rax
 9870 36e6 4889C7   		movq	%rax, %rdi
 9871 36e9 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD2Ev
 9871      00
 9872              	.LBE165:
 9873 36ee 90       		nop
 9874 36ef C9       		leave
 9875              		.cfi_def_cfa 7, 8
 9876 36f0 C3       		ret
 9877              		.cfi_endproc
 9878              	.LFE1656:
 9880              		.set	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev,_ZN8UnitTest12_GLOBAL__N_124MockDefe
 9881 36f1 90       		.align 2
 9883              	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev:
 9884              	.LFB1658:
  20:TestDeferredTestReporter.cpp **** {
 9885              		.loc 3 20 0
 9886              		.cfi_startproc
 9887              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9888              		.cfi_lsda 0x1b,.LLSDA1658
 9889 36f2 55       		pushq	%rbp
 9890              		.cfi_def_cfa_offset 16
 9891              		.cfi_offset 6, -16
 9892 36f3 4889E5   		movq	%rsp, %rbp
 9893              		.cfi_def_cfa_register 6
 9894 36f6 53       		pushq	%rbx
 9895 36f7 4883EC18 		subq	$24, %rsp
 9896              		.cfi_offset 3, -24
 9897 36fb 48897DE8 		movq	%rdi, -24(%rbp)
  20:TestDeferredTestReporter.cpp **** {
 9898              		.loc 3 20 0
 9899 36ff 488B45E8 		movq	-24(%rbp), %rax
 9900 3703 4889C7   		movq	%rax, %rdi
 9901              	.LEHB248:
 9902 3706 E8BDFFFF 		call	_ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
 9902      FF
 9903              	.LEHE248:
  20:TestDeferredTestReporter.cpp **** {
 9904              		.loc 3 20 0 is_stmt 0 discriminator 2
 9905 370b 488B45E8 		movq	-24(%rbp), %rax
 9906 370f 4889C7   		movq	%rax, %rdi
 9907 3712 E8000000 		call	_ZdlPv@PLT
 9907      00
 9908 3717 EB1A     		jmp	.L535
 9909              	.L534:
 9910 3719 4889C3   		movq	%rax, %rbx
  20:TestDeferredTestReporter.cpp **** {
 9911              		.loc 3 20 0
 9912 371c 488B45E8 		movq	-24(%rbp), %rax
 9913 3720 4889C7   		movq	%rax, %rdi
 9914 3723 E8000000 		call	_ZdlPv@PLT
 9914      00
 9915 3728 4889D8   		movq	%rbx, %rax
 9916 372b 4889C7   		movq	%rax, %rdi
 9917              	.LEHB249:
 9918 372e E8000000 		call	_Unwind_Resume@PLT
 9918      00
 9919              	.LEHE249:
 9920              	.L535:
 9921 3733 4883C418 		addq	$24, %rsp
 9922 3737 5B       		popq	%rbx
 9923 3738 5D       		popq	%rbp
 9924              		.cfi_def_cfa 7, 8
 9925 3739 C3       		ret
 9926              		.cfi_endproc
 9927              	.LFE1658:
 9928              		.section	.gcc_except_table
 9929              	.LLSDA1658:
 9930 06b5 FF       		.byte	0xff
 9931 06b6 FF       		.byte	0xff
 9932 06b7 01       		.byte	0x1
 9933 06b8 08       		.uleb128 .LLSDACSE1658-.LLSDACSB1658
 9934              	.LLSDACSB1658:
 9935 06b9 14       		.uleb128 .LEHB248-.LFB1658
 9936 06ba 05       		.uleb128 .LEHE248-.LEHB248
 9937 06bb 27       		.uleb128 .L534-.LFB1658
 9938 06bc 00       		.uleb128 0
 9939 06bd 3C       		.uleb128 .LEHB249-.LFB1658
 9940 06be 05       		.uleb128 .LEHE249-.LEHB249
 9941 06bf 00       		.uleb128 0
 9942 06c0 00       		.uleb128 0
 9943              	.LLSDACSE1658:
 9944              		.text
 9946              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 9947              		.section	.data.rel.ro.local._ZTVN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTVN8UnitTest15Memor
 9948              		.align 8
 9951              	_ZTVN8UnitTest15MemoryOutStreamE:
 9952 0000 90000000 		.quad	144
 9952      00000000 
 9953 0008 00000000 		.quad	0
 9953      00000000 
 9954 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9954      00000000 
 9955 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 9955      00000000 
 9956 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 9956      00000000 
 9957 0028 70FFFFFF 		.quad	-144
 9957      FFFFFFFF 
 9958 0030 70FFFFFF 		.quad	-144
 9958      FFFFFFFF 
 9959 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9959      00000000 
 9960 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9960      00000000 
 9961 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9961      00000000 
 9962              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 9963              		.section	.data.rel.ro.local._ZTTN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTVN8UnitTest15Memor
 9964              		.align 8
 9967              	_ZTTN8UnitTest15MemoryOutStreamE:
 9968 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 9968      00000000 
 9969 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9969      00000000 
 9970 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 9970      00000000 
 9971 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 9971      00000000 
 9972 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9972      00000000 
 9973 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 9973      00000000 
 9974              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIc
 9975              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9976              		.section	.data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char
 9977              		.align 8
 9980              	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:
 9981 0000 90000000 		.quad	144
 9981      00000000 
 9982 0008 00000000 		.quad	0
 9982      00000000 
 9983 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9983      00000000 
 9984 0018 00000000 		.quad	0
 9984      00000000 
 9985 0020 00000000 		.quad	0
 9985      00000000 
 9986 0028 70FFFFFF 		.quad	-144
 9986      FFFFFFFF 
 9987 0030 70FFFFFF 		.quad	-144
 9987      FFFFFFFF 
 9988 0038 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9988      00000000 
 9989 0040 00000000 		.quad	0
 9989      00000000 
 9990 0048 00000000 		.quad	0
 9990      00000000 
 9991              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9992              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9993              		.section	.data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_So,"awG",@progbits,_ZTVN8UnitTest15MemoryO
 9994              		.align 8
 9997              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 9998 0000 90000000 		.quad	144
 9998      00000000 
 9999 0008 00000000 		.quad	0
 9999      00000000 
 10000 0010 00000000 		.quad	_ZTISo
 10000      00000000 
 10001 0018 00000000 		.quad	0
 10001      00000000 
 10002 0020 00000000 		.quad	0
 10002      00000000 
 10003 0028 70FFFFFF 		.quad	-144
 10003      FFFFFFFF 
 10004 0030 70FFFFFF 		.quad	-144
 10004      FFFFFFFF 
 10005 0038 00000000 		.quad	_ZTISo
 10005      00000000 
 10006 0040 00000000 		.quad	0
 10006      00000000 
 10007 0048 00000000 		.quad	0
 10007      00000000 
 10008              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 10009              		.align 2
 10010              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 10012              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 10013              	.LFB1661:
  13:../MemoryOutStream.h **** {
 10014              		.loc 2 13 0 is_stmt 1
 10015              		.cfi_startproc
 10016              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10017              		.cfi_lsda 0x1b,.LLSDA1661
 10018 0000 55       		pushq	%rbp
 10019              		.cfi_def_cfa_offset 16
 10020              		.cfi_offset 6, -16
 10021 0001 4889E5   		movq	%rsp, %rbp
 10022              		.cfi_def_cfa_register 6
 10023 0004 53       		pushq	%rbx
 10024 0005 4883EC18 		subq	$24, %rsp
 10025              		.cfi_offset 3, -24
 10026 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10027              	.LBB166:
  13:../MemoryOutStream.h **** {
 10028              		.loc 2 13 0
 10029 000d 488D1500 		leaq	24+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10029      000000
 10030 0014 488B45E8 		movq	-24(%rbp), %rax
 10031 0018 488910   		movq	%rdx, (%rax)
 10032 001b 488B45E8 		movq	-24(%rbp), %rax
 10033 001f 488D9090 		leaq	144(%rax), %rdx
 10033      000000
 10034 0026 488D0500 		leaq	64+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rax
 10034      000000
 10035 002d 488902   		movq	%rax, (%rdx)
 10036 0030 488B45E8 		movq	-24(%rbp), %rax
 10037 0034 4883C070 		addq	$112, %rax
 10038 0038 4889C7   		movq	%rax, %rdi
 10039              	.LEHB250:
 10040 003b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 10040      00
 10041              	.LEHE250:
  13:../MemoryOutStream.h **** {
 10042              		.loc 2 13 0 is_stmt 0 discriminator 2
 10043 0040 488B45E8 		movq	-24(%rbp), %rax
 10044 0044 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10044      000000
 10045 004b 4889D6   		movq	%rdx, %rsi
 10046 004e 4889C7   		movq	%rax, %rdi
 10047              	.LEHB251:
 10048 0051 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
 10048      00
 10049              	.LEHE251:
  13:../MemoryOutStream.h **** {
 10050              		.loc 2 13 0 discriminator 4
 10051 0056 488B45E8 		movq	-24(%rbp), %rax
 10052 005a 48059000 		addq	$144, %rax
 10052      0000
 10053 0060 4889C7   		movq	%rax, %rdi
 10054              	.LEHB252:
 10055 0063 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 10055      00
 10056              	.LEHE252:
 10057              	.LBE166:
 10058 0068 EB3B     		jmp	.L541
 10059              	.L539:
 10060 006a 4889C3   		movq	%rax, %rbx
 10061              	.LBB167:
  13:../MemoryOutStream.h **** {
 10062              		.loc 2 13 0
 10063 006d 488B45E8 		movq	-24(%rbp), %rax
 10064 0071 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
 10064      000000
 10065 0078 4889D6   		movq	%rdx, %rsi
 10066 007b 4889C7   		movq	%rax, %rdi
 10067 007e E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
 10067      00
 10068 0083 EB03     		jmp	.L538
 10069              	.L540:
 10070 0085 4889C3   		movq	%rax, %rbx
 10071              	.L538:
  13:../MemoryOutStream.h **** {
 10072              		.loc 2 13 0 discriminator 3
 10073 0088 488B45E8 		movq	-24(%rbp), %rax
 10074 008c 48059000 		addq	$144, %rax
 10074      0000
 10075 0092 4889C7   		movq	%rax, %rdi
 10076 0095 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 10076      00
 10077 009a 4889D8   		movq	%rbx, %rax
 10078 009d 4889C7   		movq	%rax, %rdi
 10079              	.LEHB253:
 10080 00a0 E8000000 		call	_Unwind_Resume@PLT
 10080      00
 10081              	.LEHE253:
 10082              	.L541:
 10083              	.LBE167:
  13:../MemoryOutStream.h **** {
 10084              		.loc 2 13 0
 10085 00a5 4883C418 		addq	$24, %rsp
 10086 00a9 5B       		popq	%rbx
 10087 00aa 5D       		popq	%rbp
 10088              		.cfi_def_cfa 7, 8
 10089 00ab C3       		ret
 10090              		.cfi_endproc
 10091              	.LFE1661:
 10092              		.section	.gcc_except_table
 10093              	.LLSDA1661:
 10094 06c1 FF       		.byte	0xff
 10095 06c2 FF       		.byte	0xff
 10096 06c3 01       		.byte	0x1
 10097 06c4 12       		.uleb128 .LLSDACSE1661-.LLSDACSB1661
 10098              	.LLSDACSB1661:
 10099 06c5 3B       		.uleb128 .LEHB250-.LFB1661
 10100 06c6 05       		.uleb128 .LEHE250-.LEHB250
 10101 06c7 6A       		.uleb128 .L539-.LFB1661
 10102 06c8 00       		.uleb128 0
 10103 06c9 51       		.uleb128 .LEHB251-.LFB1661
 10104 06ca 05       		.uleb128 .LEHE251-.LEHB251
 10105 06cb 8501     		.uleb128 .L540-.LFB1661
 10106 06cd 00       		.uleb128 0
 10107 06ce 63       		.uleb128 .LEHB252-.LFB1661
 10108 06cf 05       		.uleb128 .LEHE252-.LEHB252
 10109 06d0 00       		.uleb128 0
 10110 06d1 00       		.uleb128 0
 10111 06d2 A001     		.uleb128 .LEHB253-.LFB1661
 10112 06d4 05       		.uleb128 .LEHE253-.LEHB253
 10113 06d5 00       		.uleb128 0
 10114 06d6 00       		.uleb128 0
 10115              	.LLSDACSE1661:
 10116              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 10118              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 10119              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 10121              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 10122              	.LFB1665:
  13:../MemoryOutStream.h **** {
 10123              		.loc 2 13 0 is_stmt 1
 10124              		.cfi_startproc
 10125 00ac 4C8B17   		movq	(%rdi), %r10
 10126 00af 49037AE8 		addq	-24(%r10), %rdi
 10127 00b3 E948FFFF 		jmp	.LTHUNK0
 10127      FF
 10128              		.cfi_endproc
 10129              	.LFE1665:
 10131              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 10132              		.align 2
 10133              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 10135              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 10136              	.LFB1662:
  13:../MemoryOutStream.h **** {
 10137              		.loc 2 13 0
 10138              		.cfi_startproc
 10139              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10140              		.cfi_lsda 0x1b,.LLSDA1662
 10141 0000 55       		pushq	%rbp
 10142              		.cfi_def_cfa_offset 16
 10143              		.cfi_offset 6, -16
 10144 0001 4889E5   		movq	%rsp, %rbp
 10145              		.cfi_def_cfa_register 6
 10146 0004 53       		pushq	%rbx
 10147 0005 4883EC18 		subq	$24, %rsp
 10148              		.cfi_offset 3, -24
 10149 0009 48897DE8 		movq	%rdi, -24(%rbp)
  13:../MemoryOutStream.h **** {
 10150              		.loc 2 13 0
 10151 000d 488B45E8 		movq	-24(%rbp), %rax
 10152 0011 4889C7   		movq	%rax, %rdi
 10153              	.LEHB254:
 10154 0014 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 10154      00
 10155              	.LEHE254:
  13:../MemoryOutStream.h **** {
 10156              		.loc 2 13 0 is_stmt 0 discriminator 2
 10157 0019 488B45E8 		movq	-24(%rbp), %rax
 10158 001d 4889C7   		movq	%rax, %rdi
 10159 0020 E8000000 		call	_ZdlPv@PLT
 10159      00
 10160 0025 EB1A     		jmp	.L545
 10161              	.L544:
 10162 0027 4889C3   		movq	%rax, %rbx
  13:../MemoryOutStream.h **** {
 10163              		.loc 2 13 0
 10164 002a 488B45E8 		movq	-24(%rbp), %rax
 10165 002e 4889C7   		movq	%rax, %rdi
 10166 0031 E8000000 		call	_ZdlPv@PLT
 10166      00
 10167 0036 4889D8   		movq	%rbx, %rax
 10168 0039 4889C7   		movq	%rax, %rdi
 10169              	.LEHB255:
 10170 003c E8000000 		call	_Unwind_Resume@PLT
 10170      00
 10171              	.LEHE255:
 10172              	.L545:
 10173 0041 4883C418 		addq	$24, %rsp
 10174 0045 5B       		popq	%rbx
 10175 0046 5D       		popq	%rbp
 10176              		.cfi_def_cfa 7, 8
 10177 0047 C3       		ret
 10178              		.cfi_endproc
 10179              	.LFE1662:
 10180              		.section	.gcc_except_table
 10181              	.LLSDA1662:
 10182 06d7 FF       		.byte	0xff
 10183 06d8 FF       		.byte	0xff
 10184 06d9 01       		.byte	0x1
 10185 06da 08       		.uleb128 .LLSDACSE1662-.LLSDACSB1662
 10186              	.LLSDACSB1662:
 10187 06db 14       		.uleb128 .LEHB254-.LFB1662
 10188 06dc 05       		.uleb128 .LEHE254-.LEHB254
 10189 06dd 27       		.uleb128 .L544-.LFB1662
 10190 06de 00       		.uleb128 0
 10191 06df 3C       		.uleb128 .LEHB255-.LFB1662
 10192 06e0 05       		.uleb128 .LEHE255-.LEHB255
 10193 06e1 00       		.uleb128 0
 10194 06e2 00       		.uleb128 0
 10195              	.LLSDACSE1662:
 10196              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 10198              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 10199              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 10201              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 10202              	.LFB1666:
  13:../MemoryOutStream.h **** {
 10203              		.loc 2 13 0 is_stmt 1
 10204              		.cfi_startproc
 10205 0048 4C8B17   		movq	(%rdi), %r10
 10206 004b 49037AE8 		addq	-24(%r10), %rdi
 10207 004f EBAF     		jmp	.LTHUNK1
 10208              		.cfi_endproc
 10209              	.LFE1666:
 10211              		.section	.rodata
 10212 05c2 00000000 		.align 32
 10212      00000000 
 10212      00000000 
 10212      00000000 
 10212      00000000 
 10215              	_ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 10216 05e0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 10216      6E697454 
 10216      65737431 
 10216      325F474C 
 10216      4F42414C 
 10217              		.section	.data.rel.ro
 10218              		.align 8
 10221              	_ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailure
 10222 0040 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10222      00000000 
 10223 0048 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOf
 10223      00000000 
 10224 0050 00000000 		.quad	_ZTIN8UnitTest4TestE
 10224      00000000 
 10225              		.section	.rodata
 10226 0649 00000000 		.align 32
 10226      00000000 
 10226      00000000 
 10226      00000000 
 10226      00000000 
 10229              	_ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 10230 0660 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10230      6E697454 
 10230      65737431 
 10230      325F474C 
 10230      4F42414C 
 10231              		.section	.data.rel.ro
 10232              		.align 8
 10235              	_ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMul
 10236 0058 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10236      00000000 
 10237 0060 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10237      00000000 
 10238 0068 00000000 		.quad	_ZTIN8UnitTest4TestE
 10238      00000000 
 10239              		.section	.rodata
 10240 06cf 00000000 		.align 32
 10240      00000000 
 10240      00000000 
 10240      00000000 
 10240      00
 10243              	_ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 10244 06e0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10244      6E697454 
 10244      65737431 
 10244      325F474C 
 10244      4F42414C 
 10245              		.section	.data.rel.ro
 10246              		.align 8
 10249              	_ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE:
 10250 0070 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10250      00000000 
 10251 0078 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetail
 10251      00000000 
 10252 0080 00000000 		.quad	_ZTIN8UnitTest4TestE
 10252      00000000 
 10253              		.section	.rodata
 10254 073c 00000000 		.align 32
 10257              	_ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 10258 0740 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE"
 10258      6E697454 
 10258      65737431 
 10258      325F474C 
 10258      4F42414C 
 10259              		.section	.data.rel.ro
 10260              		.align 8
 10263              	_ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE:
 10264 0088 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10264      00000000 
 10265 0090 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
 10265      00000000 
 10266 0098 00000000 		.quad	_ZTIN8UnitTest4TestE
 10266      00000000 
 10267              		.section	.rodata
 10268 0799 00000000 		.align 32
 10268      000000
 10271              	_ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 10272 07a0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 10272      6E697454 
 10272      65737431 
 10272      325F474C 
 10272      4F42414C 
 10273              		.section	.data.rel.ro
 10274              		.align 8
 10277              	_ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuit
 10278 00a0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10278      00000000 
 10279 00a8 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestName
 10279      00000000 
 10280 00b0 00000000 		.quad	_ZTIN8UnitTest4TestE
 10280      00000000 
 10281              		.section	.rodata
 10282 0803 00000000 		.align 32
 10282      00000000 
 10282      00000000 
 10282      00000000 
 10282      00000000 
 10285              	_ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 10286 0820 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 10286      6E697454 
 10286      65737431 
 10286      325F474C 
 10286      4F42414C 
 10287              		.section	.data.rel.ro
 10288              		.align 8
 10291              	_ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest
 10292 00b8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10292      00000000 
 10293 00c0 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDefer
 10293      00000000 
 10294 00c8 00000000 		.quad	_ZTIN8UnitTest4TestE
 10294      00000000 
 10295              		.section	.rodata
 10296 0882 00000000 		.align 32
 10296      00000000 
 10296      00000000 
 10296      00000000 
 10296      00000000 
 10299              	_ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 10300 08a0 2A4E3855 		.string	"*N8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE"
 10300      6E697454 
 10300      65737431 
 10300      325F474C 
 10300      4F42414C 
 10301              		.section	.data.rel.ro
 10302              		.align 8
 10305              	_ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE:
 10306 00d0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10306      00000000 
 10307 00d8 00000000 		.quad	_ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
 10307      00000000 
 10308 00e0 00000000 		.quad	_ZTIN8UnitTest20DeferredTestReporterE
 10308      00000000 
 10309              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 10310              		.section	.data.rel.ro._ZTIN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTIN8UnitTest15MemoryOutSt
 10311              		.align 8
 10314              	_ZTIN8UnitTest15MemoryOutStreamE:
 10315 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10315      00000000 
 10316 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 10316      00000000 
 10317 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 10317      00000000 
 10318              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 10319              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 10320              		.align 16
 10323              	_ZTSN8UnitTest15MemoryOutStreamE:
 10324 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 10324      69745465 
 10324      73743135 
 10324      4D656D6F 
 10324      72794F75 
 10325              		.text
 10327              	_Z41__static_initialization_and_destruction_0ii:
 10328              	.LFB1663:
 116:TestDeferredTestReporter.cpp **** 
 117:TestDeferredTestReporter.cpp **** }}
 10329              		.loc 3 117 0
 10330              		.cfi_startproc
 10331 373a 55       		pushq	%rbp
 10332              		.cfi_def_cfa_offset 16
 10333              		.cfi_offset 6, -16
 10334 373b 4889E5   		movq	%rsp, %rbp
 10335              		.cfi_def_cfa_register 6
 10336 373e 4883EC10 		subq	$16, %rsp
 10337 3742 897DFC   		movl	%edi, -4(%rbp)
 10338 3745 8975F8   		movl	%esi, -8(%rbp)
 10339              		.loc 3 117 0
 10340 3748 837DFC01 		cmpl	$1, -4(%rbp)
 10341 374c 0F859301 		jne	.L548
 10341      0000
 10342              		.loc 3 117 0 is_stmt 0 discriminator 1
 10343 3752 817DF8FF 		cmpl	$65535, -8(%rbp)
 10343      FF0000
 10344 3759 0F858601 		jne	.L548
 10344      0000
  46:TestDeferredTestReporter.cpp **** {
 10345              		.loc 3 46 0 is_stmt 1
 10346 375f 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10346      000000
 10347 3766 E87BCBFF 		call	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10347      FF
 10348 376b 488D1500 		leaq	__dso_handle(%rip), %rdx
 10348      000000
 10349 3772 488D3500 		leaq	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10349      000000
 10350 3779 488D3DD6 		leaq	_ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10350      FEFFFF
 10351 3780 E8000000 		call	__cxa_atexit@PLT
 10351      00
 10352 3785 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10352      00
 10353 378a 488D1500 		leaq	_ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferred
 10353      000000
 10354 3791 4889C6   		movq	%rax, %rsi
 10355 3794 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferre
 10355      000000
 10356 379b E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10356      00
  52:TestDeferredTestReporter.cpp **** {
 10357              		.loc 3 52 0
 10358 37a0 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10358      000000
 10359 37a7 E8E6CFFF 		call	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10359      FF
 10360 37ac 488D1500 		leaq	__dso_handle(%rip), %rdx
 10360      000000
 10361 37b3 488D3500 		leaq	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10361      000000
 10362 37ba 488D3D23 		leaq	_ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10362      FEFFFF
 10363 37c1 E8000000 		call	__cxa_atexit@PLT
 10363      00
 10364 37c6 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10364      00
 10365 37cb 488D1500 		leaq	_ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAnd
 10365      000000
 10366 37d2 4889C6   		movq	%rax, %rsi
 10367 37d5 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameAn
 10367      000000
 10368 37dc E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10368      00
  61:TestDeferredTestReporter.cpp **** {
 10369              		.loc 3 61 0
 10370 37e1 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInsta
 10370      000000
 10371 37e8 E81FD5FF 		call	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev
 10371      FF
 10372 37ed 488D1500 		leaq	__dso_handle(%rip), %rdx
 10372      000000
 10373 37f4 488D3500 		leaq	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInsta
 10373      000000
 10374 37fb 488D3D70 		leaq	_ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev(
 10374      FDFFFF
 10375 3802 E8000000 		call	__cxa_atexit@PLT
 10375      00
 10376 3807 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10376      00
 10377 380c 488D1500 		leaq	_ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInsta
 10377      000000
 10378 3813 4889C6   		movq	%rax, %rsi
 10379 3816 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE(%r
 10379      000000
 10380 381d E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10380      00
  71:TestDeferredTestReporter.cpp **** {
 10381              		.loc 3 71 0
 10382 3822 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsIn
 10382      000000
 10383 3829 E8D6D9FF 		call	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1
 10383      FF
 10384 382e 488D1500 		leaq	__dso_handle(%rip), %rdx
 10384      000000
 10385 3835 488D3500 		leaq	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsIn
 10385      000000
 10386 383c 488D3DBD 		leaq	_ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1
 10386      FCFFFF
 10387 3843 E8000000 		call	__cxa_atexit@PLT
 10387      00
 10388 3848 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10388      00
 10389 384d 488D1500 		leaq	_ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsIn
 10389      000000
 10390 3854 4889C6   		movq	%rax, %rsi
 10391 3857 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
 10391      000000
 10392 385e E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10392      00
  83:TestDeferredTestReporter.cpp **** {
 10393              		.loc 3 83 0
 10394 3863 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 10394      000000
 10395 386a E839DFFF 		call	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 10395      FF
 10396 386f 488D1500 		leaq	__dso_handle(%rip), %rdx
 10396      000000
 10397 3876 488D3500 		leaq	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 10397      000000
 10398 387d 488D3D0A 		leaq	_ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 10398      FCFFFF
 10399 3884 E8000000 		call	__cxa_atexit@PLT
 10399      00
 10400 3889 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10400      00
 10401 388e 488D1500 		leaq	_ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsFo
 10401      000000
 10402 3895 4889C6   		movq	%rax, %rsi
 10403 3898 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsF
 10403      000000
 10404 389f E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10404      00
  98:TestDeferredTestReporter.cpp **** {
 10405              		.loc 3 98 0
 10406 38a4 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10406      000000
 10407 38ab E876E5FF 		call	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10407      FF
 10408 38b0 488D1500 		leaq	__dso_handle(%rip), %rdx
 10408      000000
 10409 38b7 488D3500 		leaq	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10409      000000
 10410 38be 488D3D57 		leaq	_ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10410      FBFFFF
 10411 38c5 E8000000 		call	__cxa_atexit@PLT
 10411      00
 10412 38ca E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10412      00
 10413 38cf 488D1500 		leaq	_ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFai
 10413      000000
 10414 38d6 4889C6   		movq	%rax, %rsi
 10415 38d9 488D3D00 		leaq	_ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFa
 10415      000000
 10416 38e0 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10416      00
 10417              	.L548:
 10418              		.loc 3 117 0
 10419 38e5 90       		nop
 10420 38e6 C9       		leave
 10421              		.cfi_def_cfa 7, 8
 10422 38e7 C3       		ret
 10423              		.cfi_endproc
 10424              	.LFE1663:
 10427              	_GLOBAL__sub_I_TestDeferredTestReporter.cpp:
 10428              	.LFB1664:
 10429              		.loc 3 117 0
 10430              		.cfi_startproc
 10431 38e8 55       		pushq	%rbp
 10432              		.cfi_def_cfa_offset 16
 10433              		.cfi_offset 6, -16
 10434 38e9 4889E5   		movq	%rsp, %rbp
 10435              		.cfi_def_cfa_register 6
 10436              		.loc 3 117 0
 10437 38ec BEFFFF00 		movl	$65535, %esi
 10437      00
 10438 38f1 BF010000 		movl	$1, %edi
 10438      00
 10439 38f6 E83FFEFF 		call	_Z41__static_initialization_and_destruction_0ii
 10439      FF
 10440 38fb 5D       		popq	%rbp
 10441              		.cfi_def_cfa 7, 8
 10442 38fc C3       		ret
 10443              		.cfi_endproc
 10444              	.LFE1664:
 10446              		.section	.init_array,"aw"
 10447              		.align 8
 10448 0000 00000000 		.quad	_GLOBAL__sub_I_TestDeferredTestReporter.cpp
 10448      00000000 
 10449              		.section	.rodata
 10450 08d5 000000   		.align 4
 10451              	.LC14:
 10452 08d8 66E6F642 		.long	1123477094
 10453              		.align 4
 10454              	.LC15:
 10455 08dc 17B7D138 		.long	953267991
 10456              		.text
 10457              	.Letext0:
 10458              		.file 17 "../TestDetails.h"
 10459              		.file 18 "../TestList.h"
 10460              		.file 19 "../TestResults.h"
 10461              		.file 20 "../PosixUtils/SignalTranslator.h"
 10462              		.file 21 "/usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h"
 10463              		.file 22 "/usr/include/c++/7/bits/basic_string.tcc"
 10464              		.file 23 "/usr/include/c++/7/bits/stringfwd.h"
 10465              		.file 24 "/usr/include/c++/7/cwchar"
 10466              		.file 25 "/usr/include/c++/7/bits/cpp_type_traits.h"
 10467              		.file 26 "/usr/include/c++/7/bits/stl_iterator_base_types.h"
 10468              		.file 27 "/usr/include/c++/7/bits/char_traits.h"
 10469              		.file 28 "/usr/include/c++/7/clocale"
 10470              		.file 29 "/usr/include/c++/7/new"
 10471              		.file 30 "/usr/include/c++/7/cwctype"
 10472              		.file 31 "/usr/include/c++/7/bits/vector.tcc"
 10473              		.file 32 "/usr/include/c++/7/cstring"
 10474              		.file 33 "/usr/include/c++/7/bits/stl_iterator_base_funcs.h"
 10475              		.file 34 "/usr/include/c++/7/debug/debug.h"
 10476              		.file 35 "/usr/include/c++/7/bits/predefined_ops.h"
 10477              		.file 36 "/usr/include/c++/7/ext/numeric_traits.h"
 10478              		.file 37 "/usr/include/c++/7/bits/stl_iterator.h"
 10479              		.file 38 "/usr/include/c++/7/ext/type_traits.h"
 10480              		.file 39 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 10481              		.file 40 "<built-in>"
 10482              		.file 41 "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h"
 10483              		.file 42 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h"
 10484              		.file 43 "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h"
 10485              		.file 44 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h"
 10486              		.file 45 "/usr/include/wchar.h"
 10487              		.file 46 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h"
 10488              		.file 47 "/usr/include/locale.h"
 10489              		.file 48 "/usr/include/x86_64-linux-gnu/bits/types.h"
 10490              		.file 49 "/usr/include/time.h"
 10491              		.file 50 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 10492              		.file 51 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h"
 10493              		.file 52 "/usr/include/wctype.h"
 10494              		.file 53 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 10495              		.file 54 "/usr/include/setjmp.h"
 10496              		.file 55 "/usr/include/x86_64-linux-gnu/bits/types/sigval_t.h"
 10497              		.file 56 "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h"
 10498              		.file 57 "/usr/include/signal.h"
 10499              		.file 58 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
 10500              		.file 59 "/usr/include/x86_64-linux-gnu/sys/time.h"
 10501              		.file 60 "/usr/include/string.h"
 31244              		.align 8
 31247              	DW.ref._ZTIN8UnitTest15AssertExceptionE:
 31248 0000 00000000 		.quad	_ZTIN8UnitTest15AssertExceptionE
 31248      00000000 
 31249              		.hidden	DW.ref._ZTISt9exception
 31250              		.weak	DW.ref._ZTISt9exception
 31251              		.section	.data.DW.ref._ZTISt9exception,"awG",@progbits,DW.ref._ZTISt9exception,comdat
 31252              		.align 8
 31255              	DW.ref._ZTISt9exception:
 31256 0000 00000000 		.quad	_ZTISt9exception
 31256      00000000 
 31257              		.hidden	DW.ref.__gxx_personality_v0
 31258              		.weak	DW.ref.__gxx_personality_v0
 31259              		.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
 31260              		.align 8
 31263              	DW.ref.__gxx_personality_v0:
 31264 0000 00000000 		.quad	__gxx_personality_v0
 31264      00000000 
 31265              		.hidden	__dso_handle
 31266              		.ident	"GCC: (Ubuntu 7.2.0-8ubuntu3.2) 7.2.0"
 31267              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestDeferredTestReporter.cpp
     /tmp/ccWWEfdY.s:10     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/ccWWEfdY.s:33     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/ccWWEfdY.s:31263  .data.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccWWEfdY.s:9967   .data.rel.ro.local._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/ccWWEfdY.s:9951   .data.rel.ro.local._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/ccWWEfdY.s:144    .text:0000000000000000 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporter13ReportSummaryEiiif
     /tmp/ccWWEfdY.s:171    .text._ZN8UnitTest12TestReporterC2Ev:0000000000000000 _ZN8UnitTest12TestReporterC2Ev
     /tmp/ccWWEfdY.s:171    .text._ZN8UnitTest12TestReporterC2Ev:0000000000000000 _ZN8UnitTest12TestReporterC1Ev
     /tmp/ccWWEfdY.s:201    .text._ZN8UnitTest20DeferredTestReporterC2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterC2Ev
     /tmp/ccWWEfdY.s:4902   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
     /tmp/ccWWEfdY.s:201    .text._ZN8UnitTest20DeferredTestReporterC2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterC1Ev
     /tmp/ccWWEfdY.s:277    .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD2Ev
     /tmp/ccWWEfdY.s:4933   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccWWEfdY.s:277    .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD1Ev
     /tmp/ccWWEfdY.s:360    .text._ZN8UnitTest20DeferredTestReporterD0Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD0Ev
     /tmp/ccWWEfdY.s:426    .text:000000000000001a _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC2Ev
     /tmp/ccWWEfdY.s:9841   .data.rel.ro:0000000000000000 _ZTVN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/ccWWEfdY.s:426    .text:000000000000001a _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterC1Ev
     /tmp/ccWWEfdY.s:464    .text:0000000000000044 _ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureC2Ev
     /tmp/ccWWEfdY.s:9853   .text:00000000000036c8 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD1Ev
     /tmp/ccWWEfdY.s:676    .text:0000000000000222 _ZN8UnitTest12_GLOBAL__N_127DeferredTestReporterFixtureD2Ev
     /tmp/ccWWEfdY.s:793    .text:00000000000002b8 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperC2ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:793    .text:00000000000002b8 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperC1ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:831    .text:00000000000002e6 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC2Ev
     /tmp/ccWWEfdY.s:9735   .data.rel.ro.local:00000000000000c8 _ZTVN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccWWEfdY.s:831    .text:00000000000002e6 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestC1Ev
     /tmp/ccWWEfdY.s:869    .bss:0000000000000000 _ZN8UnitTest12_GLOBAL__N_177testDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestInstanceE
     /tmp/ccWWEfdY.s:869    .bss:0000000000000038 _ZN8UnitTest12_GLOBAL__N_170adderDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccWWEfdY.s:874    .text:0000000000000332 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperD2Ev
     /tmp/ccWWEfdY.s:874    .text:0000000000000332 _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperD1Ev
     /tmp/ccWWEfdY.s:911    .text:000000000000034e _ZNK8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTest7RunImplEv
     /tmp/ccWWEfdY.s:5023   .text:0000000000002365 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:10012  .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccWWEfdY.s:31255  .data.DW.ref._ZTISt9exception:0000000000000000 DW.ref._ZTISt9exception
     /tmp/ccWWEfdY.s:31247  .data.DW.ref._ZTIN8UnitTest15AssertExceptionE:0000000000000000 DW.ref._ZTIN8UnitTest15AssertExceptionE
     /tmp/ccWWEfdY.s:1259   .text:000000000000065c _ZN8UnitTest12_GLOBAL__N_171DeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestHelper7RunImplEv
     /tmp/ccWWEfdY.s:5379   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE4sizeEv
     /tmp/ccWWEfdY.s:5412   .text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:1418   .text:0000000000000764 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperC2ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:1418   .text:0000000000000764 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperC1ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:1454   .text:0000000000000792 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC2Ev
     /tmp/ccWWEfdY.s:9629   .data.rel.ro.local:00000000000000a0 _ZTVN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccWWEfdY.s:1454   .text:0000000000000792 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteC1Ev
     /tmp/ccWWEfdY.s:1492   .bss:0000000000000040 _ZN8UnitTest12_GLOBAL__N_178testDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteInstanceE
     /tmp/ccWWEfdY.s:1492   .bss:0000000000000078 _ZN8UnitTest12_GLOBAL__N_171adderDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccWWEfdY.s:1497   .text:00000000000007de _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperD2Ev
     /tmp/ccWWEfdY.s:1497   .text:00000000000007de _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperD1Ev
     /tmp/ccWWEfdY.s:1524   .text:00000000000007fa _ZNK8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuite7RunImplEv
     /tmp/ccWWEfdY.s:5552   .text:000000000000262e _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:1875   .text:0000000000000b08 _ZN8UnitTest12_GLOBAL__N_172DeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteHelper7RunImplEv
     /tmp/ccWWEfdY.s:5907   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE2atEm
     /tmp/ccWWEfdY.s:5941   .text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:2111   .text:0000000000000cde _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC2ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:2111   .text:0000000000000cde _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperC1ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:2146   .text:0000000000000d0c _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC2Ev
     /tmp/ccWWEfdY.s:9523   .data.rel.ro.local:0000000000000078 _ZTVN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccWWEfdY.s:2146   .text:0000000000000d0c _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeC1Ev
     /tmp/ccWWEfdY.s:2184   .bss:0000000000000080 _ZN8UnitTest12_GLOBAL__N_168testDeferredTestReporterFixtureReportTestEndCapturesTestTimeInstanceE
     /tmp/ccWWEfdY.s:2184   .bss:00000000000000b8 _ZN8UnitTest12_GLOBAL__N_161adderDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccWWEfdY.s:2189   .text:0000000000000d58 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD2Ev
     /tmp/ccWWEfdY.s:2189   .text:0000000000000d58 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperD1Ev
     /tmp/ccWWEfdY.s:2216   .text:0000000000000d74 _ZNK8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTime7RunImplEv
     /tmp/ccWWEfdY.s:6082   .text:00000000000028f7 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:2564   .text:0000000000001082 _ZN8UnitTest12_GLOBAL__N_162DeferredTestReporterFixtureReportTestEndCapturesTestTimeHelper7RunImplEv
     /tmp/ccWWEfdY.s:6439   .text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:2741   .text:00000000000011d6 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC2ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:2741   .text:00000000000011d6 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperC1ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:2777   .text:0000000000001204 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC2Ev
     /tmp/ccWWEfdY.s:9417   .data.rel.ro.local:0000000000000050 _ZTVN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccWWEfdY.s:2777   .text:0000000000001204 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsC1Ev
     /tmp/ccWWEfdY.s:2815   .bss:00000000000000c0 _ZN8UnitTest12_GLOBAL__N_171testDeferredTestReporterFixtureReportFailureSavesFailureDetailsInstanceE
     /tmp/ccWWEfdY.s:2815   .bss:00000000000000f8 _ZN8UnitTest12_GLOBAL__N_164adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccWWEfdY.s:2820   .text:0000000000001250 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD2Ev
     /tmp/ccWWEfdY.s:2820   .text:0000000000001250 _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperD1Ev
     /tmp/ccWWEfdY.s:2847   .text:000000000000126c _ZNK8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetails7RunImplEv
     /tmp/ccWWEfdY.s:6596   .text:0000000000002bc0 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:3202   .text:000000000000157a _ZN8UnitTest12_GLOBAL__N_165DeferredTestReporterFixtureReportFailureSavesFailureDetailsHelper7RunImplEv
     /tmp/ccWWEfdY.s:6950   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/ccWWEfdY.s:3451   .text:000000000000177a _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperC2ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:3451   .text:000000000000177a _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperC1ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:3487   .text:00000000000017a8 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresC2Ev
     /tmp/ccWWEfdY.s:9311   .data.rel.ro.local:0000000000000028 _ZTVN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccWWEfdY.s:3487   .text:00000000000017a8 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresC1Ev
     /tmp/ccWWEfdY.s:3525   .bss:0000000000000100 _ZN8UnitTest12_GLOBAL__N_190testDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresInstanceE
     /tmp/ccWWEfdY.s:3525   .bss:0000000000000138 _ZN8UnitTest12_GLOBAL__N_183adderDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccWWEfdY.s:3530   .text:00000000000017f4 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperD2Ev
     /tmp/ccWWEfdY.s:3530   .text:00000000000017f4 _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperD1Ev
     /tmp/ccWWEfdY.s:3557   .text:0000000000001810 _ZNK8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailures7RunImplEv
     /tmp/ccWWEfdY.s:6972   .text:0000000000002e89 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:3915   .text:0000000000001b1e _ZN8UnitTest12_GLOBAL__N_184DeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresHelper7RunImplEv
     /tmp/ccWWEfdY.s:7327   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE4sizeEv
     /tmp/ccWWEfdY.s:7359   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEixEm
     /tmp/ccWWEfdY.s:4258   .text:0000000000001df8 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperC2ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:4258   .text:0000000000001df8 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperC1ERKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:4294   .text:0000000000001e26 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageC2Ev
     /tmp/ccWWEfdY.s:9205   .data.rel.ro.local:0000000000000000 _ZTVN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccWWEfdY.s:4294   .text:0000000000001e26 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageC1Ev
     /tmp/ccWWEfdY.s:4332   .bss:0000000000000140 _ZN8UnitTest12_GLOBAL__N_184testDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageInstanceE
     /tmp/ccWWEfdY.s:4332   .bss:0000000000000178 _ZN8UnitTest12_GLOBAL__N_177adderDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccWWEfdY.s:4337   .text:0000000000001e72 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperD2Ev
     /tmp/ccWWEfdY.s:4337   .text:0000000000001e72 _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperD1Ev
     /tmp/ccWWEfdY.s:4364   .text:0000000000001e8e _ZNK8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessage7RunImplEv
     /tmp/ccWWEfdY.s:7388   .text:0000000000003152 _ZN8UnitTest11ExecuteTestINS_12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/ccWWEfdY.s:4716   .text:000000000000219c _ZN8UnitTest12_GLOBAL__N_178DeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageHelper7RunImplEv
     /tmp/ccWWEfdY.s:7743   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE2atEm
     /tmp/ccWWEfdY.s:4902   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
     /tmp/ccWWEfdY.s:7808   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev
     /tmp/ccWWEfdY.s:4933   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccWWEfdY.s:7924   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/ccWWEfdY.s:7945   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
     /tmp/ccWWEfdY.s:7838   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/ccWWEfdY.s:7981   .text._ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm:0000000000000000 _ZNKSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EE14_M_range_checkEm
     /tmp/ccWWEfdY.s:8024   .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEixEm
     /tmp/ccWWEfdY.s:8051   .text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:0000000000000000 _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
     /tmp/ccWWEfdY.s:8081   .text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:0000000000000000 _ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
     /tmp/ccWWEfdY.s:8131   .text._ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_range_checkEm:0000000000000000 _ZNKSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE14_M_range_checkEm
     /tmp/ccWWEfdY.s:7778   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
     /tmp/ccWWEfdY.s:8211   .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccWWEfdY.s:7778   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
     /tmp/ccWWEfdY.s:8174   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC1Ev
     /tmp/ccWWEfdY.s:7808   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC1Ev
     /tmp/ccWWEfdY.s:8242   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
     /tmp/ccWWEfdY.s:7838   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/ccWWEfdY.s:8277   .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
     /tmp/ccWWEfdY.s:8174   .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC2Ev
     /tmp/ccWWEfdY.s:8307   .text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC2Ev
     /tmp/ccWWEfdY.s:8337   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/ccWWEfdY.s:8211   .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccWWEfdY.s:8361   .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
     /tmp/ccWWEfdY.s:8392   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
     /tmp/ccWWEfdY.s:8431   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev
     /tmp/ccWWEfdY.s:8307   .text._ZNSaIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC1Ev
     /tmp/ccWWEfdY.s:8337   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/ccWWEfdY.s:8455   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
     /tmp/ccWWEfdY.s:8483   .text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:0000000000000000 _ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
     /tmp/ccWWEfdY.s:8627   .text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:0000000000000000 _ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
     /tmp/ccWWEfdY.s:8431   .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC1Ev
     /tmp/ccWWEfdY.s:8506   .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD2Ev
     /tmp/ccWWEfdY.s:8653   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/ccWWEfdY.s:8506   .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD1Ev
     /tmp/ccWWEfdY.s:8653   .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/ccWWEfdY.s:8859   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv
     /tmp/ccWWEfdY.s:8880   .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E
     /tmp/ccWWEfdY.s:8770   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/ccWWEfdY.s:8740   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev
     /tmp/ccWWEfdY.s:8911   .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/ccWWEfdY.s:8740   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD1Ev
     /tmp/ccWWEfdY.s:8941   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m
     /tmp/ccWWEfdY.s:8770   .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/ccWWEfdY.s:8976   .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
     /tmp/ccWWEfdY.s:9006   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/ccWWEfdY.s:8911   .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/ccWWEfdY.s:9029   .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS9_PS8_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS9_PS8_m
     /tmp/ccWWEfdY.s:9059   .text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_
     /tmp/ccWWEfdY.s:9006   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/ccWWEfdY.s:9098   .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m
     /tmp/ccWWEfdY.s:9126   .text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:0000000000000000 _ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
     /tmp/ccWWEfdY.s:9179   .text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:0000000000000000 _ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
     /tmp/ccWWEfdY.s:9148   .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
     /tmp/ccWWEfdY.s:9148   .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
     /tmp/ccWWEfdY.s:10221  .data.rel.ro:0000000000000040 _ZTIN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccWWEfdY.s:9214   .text:000000000000341c _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD1Ev
     /tmp/ccWWEfdY.s:9244   .text:0000000000003446 _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD0Ev
     /tmp/ccWWEfdY.s:9214   .text:000000000000341c _ZN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageD2Ev
     /tmp/ccWWEfdY.s:10235  .data.rel.ro:0000000000000058 _ZTIN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccWWEfdY.s:9320   .text:000000000000348e _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD1Ev
     /tmp/ccWWEfdY.s:9350   .text:00000000000034b8 _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD0Ev
     /tmp/ccWWEfdY.s:9320   .text:000000000000348e _ZN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresD2Ev
     /tmp/ccWWEfdY.s:10249  .data.rel.ro:0000000000000070 _ZTIN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccWWEfdY.s:9426   .text:0000000000003500 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD1Ev
     /tmp/ccWWEfdY.s:9456   .text:000000000000352a _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD0Ev
     /tmp/ccWWEfdY.s:9426   .text:0000000000003500 _ZN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsD2Ev
     /tmp/ccWWEfdY.s:10263  .data.rel.ro:0000000000000088 _ZTIN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccWWEfdY.s:9532   .text:0000000000003572 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD1Ev
     /tmp/ccWWEfdY.s:9562   .text:000000000000359c _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD0Ev
     /tmp/ccWWEfdY.s:9532   .text:0000000000003572 _ZN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeD2Ev
     /tmp/ccWWEfdY.s:10277  .data.rel.ro:00000000000000a0 _ZTIN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccWWEfdY.s:9638   .text:00000000000035e4 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD1Ev
     /tmp/ccWWEfdY.s:9668   .text:000000000000360e _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD0Ev
     /tmp/ccWWEfdY.s:9638   .text:00000000000035e4 _ZN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteD2Ev
     /tmp/ccWWEfdY.s:10291  .data.rel.ro:00000000000000b8 _ZTIN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccWWEfdY.s:9744   .text:0000000000003656 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD1Ev
     /tmp/ccWWEfdY.s:9774   .text:0000000000003680 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD0Ev
     /tmp/ccWWEfdY.s:9744   .text:0000000000003656 _ZN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestD2Ev
     /tmp/ccWWEfdY.s:10305  .data.rel.ro:00000000000000d0 _ZTIN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/ccWWEfdY.s:9883   .text:00000000000036f2 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD0Ev
     /tmp/ccWWEfdY.s:9853   .text:00000000000036c8 _ZN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterD2Ev
     /tmp/ccWWEfdY.s:10314  .data.rel.ro._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/ccWWEfdY.s:10135  .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccWWEfdY.s:10121  .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000ac _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/ccWWEfdY.s:10201  .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000048 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/ccWWEfdY.s:9980   .data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
     /tmp/ccWWEfdY.s:9997   .data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/ccWWEfdY.s:10215  .rodata:00000000000005e0 _ZTSN8UnitTest12_GLOBAL__N_176TestDeferredTestReporterFixtureDeferredTestReporterTakesCopyOfFailureMessageE
     /tmp/ccWWEfdY.s:10229  .rodata:0000000000000660 _ZTSN8UnitTest12_GLOBAL__N_182TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsForMultipleFailuresE
     /tmp/ccWWEfdY.s:10243  .rodata:00000000000006e0 _ZTSN8UnitTest12_GLOBAL__N_163TestDeferredTestReporterFixtureReportFailureSavesFailureDetailsE
     /tmp/ccWWEfdY.s:10257  .rodata:0000000000000740 _ZTSN8UnitTest12_GLOBAL__N_160TestDeferredTestReporterFixtureReportTestEndCapturesTestTimeE
     /tmp/ccWWEfdY.s:10271  .rodata:00000000000007a0 _ZTSN8UnitTest12_GLOBAL__N_170TestDeferredTestReporterFixtureReportTestStartCapturesTestNameAndSuiteE
     /tmp/ccWWEfdY.s:10285  .rodata:0000000000000820 _ZTSN8UnitTest12_GLOBAL__N_169TestDeferredTestReporterFixtureReportTestStartCreatesANewDeferredTestE
     /tmp/ccWWEfdY.s:10299  .rodata:00000000000008a0 _ZTSN8UnitTest12_GLOBAL__N_124MockDeferredTestReporterE
     /tmp/ccWWEfdY.s:10323  .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/ccWWEfdY.s:10327  .text:000000000000373a _Z41__static_initialization_and_destruction_0ii
     /tmp/ccWWEfdY.s:10427  .text:00000000000038e8 _GLOBAL__sub_I_TestDeferredTestReporter.cpp
                           .group:0000000000000000 _ZN8UnitTest12TestReporterC5Ev
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterC5Ev
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterD5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EEC5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implC5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEEC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEEC5Ev
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultD5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED5Ev

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
__gxx_personality_v0
_ZTVN8UnitTest12TestReporterE
_ZTVN8UnitTest20DeferredTestReporterE
_ZN8UnitTest12TestReporterD2Ev
_ZdlPv
_ZNSaIcEC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
_ZNSaIcED1Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
__stack_chk_fail
_ZN8UnitTest4TestC2EPKcS2_S2_i
__cxa_begin_catch
_ZN8UnitTest11CurrentTest7ResultsEv
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
__cxa_end_catch
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZN8UnitTest11TestDetailsC1ERKS0_i
_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
_ZN8UnitTest11CurrentTest7DetailsEv
_ZN8UnitTest20DeferredTestReporter10GetResultsEv
_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
strcpy
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
__cxa_allocate_exception
_ZTIPKc
__cxa_throw
_ZN8UnitTest16SignalTranslatorD1Ev
_ZNSolsEi
_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE
_ZNSolsEf
_ZSt24__throw_out_of_range_fmtPKcz
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZN8UnitTest4TestD2Ev
_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
_ZTISo
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN8UnitTest4TestE
_ZTIN8UnitTest20DeferredTestReporterE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
_ZTIN8UnitTest15AssertExceptionE
_ZTISt9exception
