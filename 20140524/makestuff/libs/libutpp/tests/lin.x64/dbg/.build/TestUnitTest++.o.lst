   1              		.file	"TestUnitTest++.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 44656661 		.string	"DefaultSuite"
   6      756C7453 
   6      75697465 
   6      00
   7              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   8              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  10              	_ZN13UnitTestSuite12GetSuiteNameEv:
  11              	.LFB0:
  12              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  13              		.loc 1 7 0
  14              		.cfi_startproc
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0001 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  20              		.loc 1 8 0
  21 0004 488D0500 		leaq	.LC0(%rip), %rax
  21      000000
   9:../TestSuite.h ****     }
  22              		.loc 1 9 0
  23 000b 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 000c C3       		ret
  26              		.cfi_endproc
  27              	.LFE0:
  29              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  30              		.align 2
  31              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  33              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  34              	.LFB1076:
  35              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  36              		.loc 2 16 0
  37              		.cfi_startproc
  38              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  39              		.cfi_lsda 0x1b,.LLSDA1076
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
  45 0004 53       		pushq	%rbx
  46 0005 4883EC18 		subq	$24, %rsp
  47              		.cfi_offset 3, -24
  48 0009 48897DE8 		movq	%rdi, -24(%rbp)
  49              	.LBB2:
  50              		.loc 2 16 0
  51 000d 488B45E8 		movq	-24(%rbp), %rax
  52 0011 48059000 		addq	$144, %rax
  52      0000
  53 0017 4889C7   		movq	%rax, %rdi
  54              	.LEHB0:
  55 001a E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev@PLT
  55      00
  56              	.LEHE0:
  57 001f 488B45E8 		movq	-24(%rbp), %rax
  58 0023 488D0D00 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rcx
  58      000000
  59 002a BA100000 		movl	$16, %edx
  59      00
  60 002f 4889CE   		movq	%rcx, %rsi
  61 0032 4889C7   		movq	%rax, %rdi
  62              	.LEHB1:
  63 0035 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode@PLT
  63      00
  64              	.LEHE1:
  65              		.loc 2 16 0 is_stmt 0 discriminator 8
  66 003a 488D1500 		leaq	24+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
  66      000000
  67 0041 488B45E8 		movq	-24(%rbp), %rax
  68 0045 488910   		movq	%rdx, (%rax)
  69 0048 488B45E8 		movq	-24(%rbp), %rax
  70 004c 488D9090 		leaq	144(%rax), %rdx
  70      000000
  71 0053 488D0500 		leaq	64+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rax
  71      000000
  72 005a 488902   		movq	%rax, (%rdx)
  73 005d 488B45E8 		movq	-24(%rbp), %rax
  74 0061 4883C070 		addq	$112, %rax
  75 0065 4889C7   		movq	%rax, %rdi
  76              	.LEHB2:
  77 0068 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@PLT
  77      00
  78              	.LEHE2:
  79              	.LBE2:
  80              		.loc 2 16 0
  81 006d EB3B     		jmp	.L9
  82              	.L7:
  83 006f 4889C3   		movq	%rax, %rbx
  84              	.LBB3:
  85 0072 488B45E8 		movq	-24(%rbp), %rax
  86 0076 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
  86      000000
  87 007d 4889D6   		movq	%rdx, %rsi
  88 0080 4889C7   		movq	%rax, %rdi
  89 0083 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
  89      00
  90 0088 EB03     		jmp	.L8
  91              	.L6:
  92 008a 4889C3   		movq	%rax, %rbx
  93              	.L8:
  94              		.loc 2 16 0 discriminator 11
  95 008d 488B45E8 		movq	-24(%rbp), %rax
  96 0091 48059000 		addq	$144, %rax
  96      0000
  97 0097 4889C7   		movq	%rax, %rdi
  98 009a E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
  98      00
  99 009f 4889D8   		movq	%rbx, %rax
 100 00a2 4889C7   		movq	%rax, %rdi
 101              	.LEHB3:
 102 00a5 E8000000 		call	_Unwind_Resume@PLT
 102      00
 103              	.LEHE3:
 104              	.L9:
 105              	.LBE3:
 106              		.loc 2 16 0
 107 00aa 4883C418 		addq	$24, %rsp
 108 00ae 5B       		popq	%rbx
 109 00af 5D       		popq	%rbp
 110              		.cfi_def_cfa 7, 8
 111 00b0 C3       		ret
 112              		.cfi_endproc
 113              	.LFE1076:
 114              		.globl	__gxx_personality_v0
 115              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 116              	.LLSDA1076:
 117 0000 FF       		.byte	0xff
 118 0001 FF       		.byte	0xff
 119 0002 01       		.byte	0x1
 120 0003 12       		.uleb128 .LLSDACSE1076-.LLSDACSB1076
 121              	.LLSDACSB1076:
 122 0004 1A       		.uleb128 .LEHB0-.LFB1076
 123 0005 05       		.uleb128 .LEHE0-.LEHB0
 124 0006 00       		.uleb128 0
 125 0007 00       		.uleb128 0
 126 0008 35       		.uleb128 .LEHB1-.LFB1076
 127 0009 05       		.uleb128 .LEHE1-.LEHB1
 128 000a 8A01     		.uleb128 .L6-.LFB1076
 129 000c 00       		.uleb128 0
 130 000d 68       		.uleb128 .LEHB2-.LFB1076
 131 000e 05       		.uleb128 .LEHE2-.LEHB2
 132 000f 6F       		.uleb128 .L7-.LFB1076
 133 0010 00       		.uleb128 0
 134 0011 A501     		.uleb128 .LEHB3-.LFB1076
 135 0013 05       		.uleb128 .LEHE3-.LEHB3
 136 0014 00       		.uleb128 0
 137 0015 00       		.uleb128 0
 138              	.LLSDACSE1076:
 139              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 141              		.section	.text._ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE,"axG",@progb
 142              		.align 2
 143              		.weak	_ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 145              	_ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE:
 146              	.LFB1092:
 147              		.file 3 "ScopedCurrentTest.h"
   1:ScopedCurrentTest.h **** #ifndef UNITTEST_SCOPEDCURRENTTEST_H
   2:ScopedCurrentTest.h **** #define UNITTEST_SCOPEDCURRENTTEST_H
   3:ScopedCurrentTest.h **** 
   4:ScopedCurrentTest.h **** #include "../CurrentTest.h"
   5:ScopedCurrentTest.h **** #include <cstddef>
   6:ScopedCurrentTest.h **** 
   7:ScopedCurrentTest.h **** class ScopedCurrentTest
   8:ScopedCurrentTest.h **** {
   9:ScopedCurrentTest.h **** public:
  10:ScopedCurrentTest.h **** 	ScopedCurrentTest()
  11:ScopedCurrentTest.h **** 		: m_oldTestResults(UnitTest::CurrentTest::Results())
  12:ScopedCurrentTest.h **** 		, m_oldTestDetails(UnitTest::CurrentTest::Details())
  13:ScopedCurrentTest.h **** 	{
  14:ScopedCurrentTest.h **** 	}
  15:ScopedCurrentTest.h **** 
  16:ScopedCurrentTest.h **** 	explicit ScopedCurrentTest(UnitTest::TestResults& newResults, const UnitTest::TestDetails* newDeta
 148              		.loc 3 16 0 is_stmt 1
 149              		.cfi_startproc
 150 0000 55       		pushq	%rbp
 151              		.cfi_def_cfa_offset 16
 152              		.cfi_offset 6, -16
 153 0001 4889E5   		movq	%rsp, %rbp
 154              		.cfi_def_cfa_register 6
 155 0004 4883EC20 		subq	$32, %rsp
 156 0008 48897DF8 		movq	%rdi, -8(%rbp)
 157 000c 488975F0 		movq	%rsi, -16(%rbp)
 158 0010 488955E8 		movq	%rdx, -24(%rbp)
 159              	.LBB4:
  17:ScopedCurrentTest.h **** 		: m_oldTestResults(UnitTest::CurrentTest::Results())
 160              		.loc 3 17 0
 161 0014 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 161      00
 162 0019 488B10   		movq	(%rax), %rdx
  18:ScopedCurrentTest.h **** 		, m_oldTestDetails(UnitTest::CurrentTest::Details())
 163              		.loc 3 18 0
 164 001c 488B45F8 		movq	-8(%rbp), %rax
 165 0020 488910   		movq	%rdx, (%rax)
 166 0023 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 166      00
 167 0028 488B10   		movq	(%rax), %rdx
 168 002b 488B45F8 		movq	-8(%rbp), %rax
 169 002f 48895008 		movq	%rdx, 8(%rax)
  19:ScopedCurrentTest.h **** 	{
  20:ScopedCurrentTest.h **** 		UnitTest::CurrentTest::Results() = &newResults;
 170              		.loc 3 20 0
 171 0033 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 171      00
 172 0038 4889C2   		movq	%rax, %rdx
 173 003b 488B45F0 		movq	-16(%rbp), %rax
 174 003f 488902   		movq	%rax, (%rdx)
  21:ScopedCurrentTest.h **** 
  22:ScopedCurrentTest.h **** 		if (newDetails != NULL)
 175              		.loc 3 22 0
 176 0042 48837DE8 		cmpq	$0, -24(%rbp)
 176      00
 177 0047 740F     		je	.L12
  23:ScopedCurrentTest.h **** 			UnitTest::CurrentTest::Details() = newDetails;
 178              		.loc 3 23 0
 179 0049 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 179      00
 180 004e 4889C2   		movq	%rax, %rdx
 181 0051 488B45E8 		movq	-24(%rbp), %rax
 182 0055 488902   		movq	%rax, (%rdx)
 183              	.L12:
 184              	.LBE4:
  24:ScopedCurrentTest.h **** 	}
 185              		.loc 3 24 0
 186 0058 90       		nop
 187 0059 C9       		leave
 188              		.cfi_def_cfa 7, 8
 189 005a C3       		ret
 190              		.cfi_endproc
 191              	.LFE1092:
 193              		.weak	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 194              		.set	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE,_ZN17ScopedCurrentTest
 195              		.section	.text._ZN17ScopedCurrentTestD2Ev,"axG",@progbits,_ZN17ScopedCurrentTestD5Ev,comdat
 196              		.align 2
 197              		.weak	_ZN17ScopedCurrentTestD2Ev
 199              	_ZN17ScopedCurrentTestD2Ev:
 200              	.LFB1095:
  25:ScopedCurrentTest.h **** 
  26:ScopedCurrentTest.h **** 	~ScopedCurrentTest()
 201              		.loc 3 26 0
 202              		.cfi_startproc
 203 0000 55       		pushq	%rbp
 204              		.cfi_def_cfa_offset 16
 205              		.cfi_offset 6, -16
 206 0001 4889E5   		movq	%rsp, %rbp
 207              		.cfi_def_cfa_register 6
 208 0004 4883EC10 		subq	$16, %rsp
 209 0008 48897DF8 		movq	%rdi, -8(%rbp)
 210              	.LBB5:
  27:ScopedCurrentTest.h **** 	{
  28:ScopedCurrentTest.h **** 		UnitTest::CurrentTest::Results() = m_oldTestResults;
 211              		.loc 3 28 0
 212 000c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 212      00
 213 0011 4889C2   		movq	%rax, %rdx
 214 0014 488B45F8 		movq	-8(%rbp), %rax
 215 0018 488B00   		movq	(%rax), %rax
 216 001b 488902   		movq	%rax, (%rdx)
  29:ScopedCurrentTest.h **** 		UnitTest::CurrentTest::Details() = m_oldTestDetails;
 217              		.loc 3 29 0
 218 001e E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 218      00
 219 0023 4889C2   		movq	%rax, %rdx
 220 0026 488B45F8 		movq	-8(%rbp), %rax
 221 002a 488B4008 		movq	8(%rax), %rax
 222 002e 488902   		movq	%rax, (%rdx)
 223              	.LBE5:
  30:ScopedCurrentTest.h **** 	}
 224              		.loc 3 30 0
 225 0031 90       		nop
 226 0032 C9       		leave
 227              		.cfi_def_cfa 7, 8
 228 0033 C3       		ret
 229              		.cfi_endproc
 230              	.LFE1095:
 232              		.weak	_ZN17ScopedCurrentTestD1Ev
 233              		.set	_ZN17ScopedCurrentTestD1Ev,_ZN17ScopedCurrentTestD2Ev
 234              		.section	.rodata
 235              	.LC1:
 236 000d 54657374 		.string	"TestUnitTest++.cpp"
 236      556E6974 
 236      54657374 
 236      2B2B2E63 
 236      707000
 237              	.LC2:
 238 0020 56616C69 		.string	"ValidCheckSucceeds"
 238      64436865 
 238      636B5375 
 238      63636565 
 238      647300
 239              		.text
 240              		.align 2
 242              	_ZN12_GLOBAL__N_122TestValidCheckSucceedsC2Ev:
 243              	.LFB1365:
 244              		.file 4 "TestUnitTest++.cpp"
   1:TestUnitTest++.cpp **** #include "../UnitTest++.h"
   2:TestUnitTest++.cpp **** #include "../ReportAssert.h"
   3:TestUnitTest++.cpp **** #include "ScopedCurrentTest.h"
   4:TestUnitTest++.cpp **** 
   5:TestUnitTest++.cpp **** #include <vector>
   6:TestUnitTest++.cpp **** 
   7:TestUnitTest++.cpp **** // These are sample tests that show the different features of the framework
   8:TestUnitTest++.cpp **** 
   9:TestUnitTest++.cpp **** namespace {
  10:TestUnitTest++.cpp **** 
  11:TestUnitTest++.cpp **** TEST(ValidCheckSucceeds)
 245              		.loc 4 11 0
 246              		.cfi_startproc
 247 0000 55       		pushq	%rbp
 248              		.cfi_def_cfa_offset 16
 249              		.cfi_offset 6, -16
 250 0001 4889E5   		movq	%rsp, %rbp
 251              		.cfi_def_cfa_register 6
 252 0004 53       		pushq	%rbx
 253 0005 4883EC18 		subq	$24, %rsp
 254              		.cfi_offset 3, -24
 255 0009 48897DE8 		movq	%rdi, -24(%rbp)
 256              	.LBB6:
 257              		.loc 4 11 0
 258 000d 488B5DE8 		movq	-24(%rbp), %rbx
 259 0011 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 259      00
 260 0016 41B80B00 		movl	$11, %r8d
 260      0000
 261 001c 488D0D00 		leaq	.LC1(%rip), %rcx
 261      000000
 262 0023 4889C2   		movq	%rax, %rdx
 263 0026 488D3500 		leaq	.LC2(%rip), %rsi
 263      000000
 264 002d 4889DF   		movq	%rbx, %rdi
 265 0030 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 265      00
 266 0035 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE(%rip), %rdx
 266      000000
 267 003c 488B45E8 		movq	-24(%rbp), %rax
 268 0040 488910   		movq	%rdx, (%rax)
 269              	.LBE6:
 270 0043 90       		nop
 271 0044 4883C418 		addq	$24, %rsp
 272 0048 5B       		popq	%rbx
 273 0049 5D       		popq	%rbp
 274              		.cfi_def_cfa 7, 8
 275 004a C3       		ret
 276              		.cfi_endproc
 277              	.LFE1365:
 279              		.set	_ZN12_GLOBAL__N_122TestValidCheckSucceedsC1Ev,_ZN12_GLOBAL__N_122TestValidCheckSucceedsC2Ev
 280              		.local	_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE
 281              		.comm	_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE,56,32
 282              		.local	_ZN12_GLOBAL__N_123adderValidCheckSucceedsE
 283              		.comm	_ZN12_GLOBAL__N_123adderValidCheckSucceedsE,1,1
 284              		.section	.rodata
 285              	.LC3:
 286 0033 6200     		.string	"b"
 287 0035 000000   		.align 8
 288              	.LC4:
 289 0038 556E6861 		.string	"Unhandled exception in CHECK(b)"
 289      6E646C65 
 289      64206578 
 289      63657074 
 289      696F6E20 
 290              		.text
 291 004b 90       		.align 2
 293              	_ZNK12_GLOBAL__N_122TestValidCheckSucceeds7RunImplEv:
 294              	.LFB1367:
  12:TestUnitTest++.cpp **** {
 295              		.loc 4 12 0
 296              		.cfi_startproc
 297              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 298              		.cfi_lsda 0x1b,.LLSDA1367
 299 004c 55       		pushq	%rbp
 300              		.cfi_def_cfa_offset 16
 301              		.cfi_offset 6, -16
 302 004d 4889E5   		movq	%rsp, %rbp
 303              		.cfi_def_cfa_register 6
 304 0050 53       		pushq	%rbx
 305 0051 4883EC58 		subq	$88, %rsp
 306              		.cfi_offset 3, -24
 307 0055 48897DA8 		movq	%rdi, -88(%rbp)
 308              		.loc 4 12 0
 309 0059 64488B04 		movq	%fs:40, %rax
 309      25280000 
 309      00
 310 0062 488945E8 		movq	%rax, -24(%rbp)
 311 0066 31C0     		xorl	%eax, %eax
  13:TestUnitTest++.cpp ****     bool const b = true;
 312              		.loc 4 13 0
 313 0068 C645BF01 		movb	$1, -65(%rbp)
  14:TestUnitTest++.cpp ****     CHECK(b);
 314              		.loc 4 14 0
 315 006c BF010000 		movl	$1, %edi
 315      00
 316 0071 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 316      00
 317 0076 83F001   		xorl	$1, %eax
 318 0079 84C0     		testb	%al, %al
 319 007b 0F849800 		je	.L22
 319      0000
 320              	.LEHB4:
 321              		.loc 4 14 0 is_stmt 0 discriminator 1
 322 0081 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 322      00
 323 0086 488B18   		movq	(%rax), %rbx
 324 0089 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 324      00
 325              		.loc 4 14 0 discriminator 2
 326 008e 488B08   		movq	(%rax), %rcx
 327 0091 488D45C0 		leaq	-64(%rbp), %rax
 328 0095 BA0E0000 		movl	$14, %edx
 328      00
 329 009a 4889CE   		movq	%rcx, %rsi
 330 009d 4889C7   		movq	%rax, %rdi
 331 00a0 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 331      00
 332              		.loc 4 14 0 discriminator 4
 333 00a5 488D45C0 		leaq	-64(%rbp), %rax
 334 00a9 488D1500 		leaq	.LC3(%rip), %rdx
 334      000000
 335 00b0 4889C6   		movq	%rax, %rsi
 336 00b3 4889DF   		movq	%rbx, %rdi
 337 00b6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 337      00
 338              	.LEHE4:
  15:TestUnitTest++.cpp **** }
 339              		.loc 4 15 0 is_stmt 1
 340 00bb EB5C     		jmp	.L22
 341              	.L20:
  14:TestUnitTest++.cpp ****     CHECK(b);
 342              		.loc 4 14 0
 343 00bd 4889C7   		movq	%rax, %rdi
 344 00c0 E8000000 		call	__cxa_begin_catch@PLT
 344      00
 345              	.LEHB5:
 346 00c5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 346      00
 347 00ca 488B18   		movq	(%rax), %rbx
 348 00cd E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 348      00
  14:TestUnitTest++.cpp ****     CHECK(b);
 349              		.loc 4 14 0 is_stmt 0 discriminator 8
 350 00d2 488B08   		movq	(%rax), %rcx
 351 00d5 488D45C0 		leaq	-64(%rbp), %rax
 352 00d9 BA0E0000 		movl	$14, %edx
 352      00
 353 00de 4889CE   		movq	%rcx, %rsi
 354 00e1 4889C7   		movq	%rax, %rdi
 355 00e4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 355      00
  14:TestUnitTest++.cpp ****     CHECK(b);
 356              		.loc 4 14 0 discriminator 12
 357 00e9 488D45C0 		leaq	-64(%rbp), %rax
 358 00ed 488D1500 		leaq	.LC4(%rip), %rdx
 358      000000
 359 00f4 4889C6   		movq	%rax, %rsi
 360 00f7 4889DF   		movq	%rbx, %rdi
 361 00fa E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 361      00
 362              	.LEHE5:
 363              	.LEHB6:
  14:TestUnitTest++.cpp ****     CHECK(b);
 364              		.loc 4 14 0 discriminator 14
 365 00ff E8000000 		call	__cxa_end_catch@PLT
 365      00
 366              	.LEHE6:
 367              		.loc 4 15 0 is_stmt 1 discriminator 14
 368 0104 EB13     		jmp	.L22
 369              	.L21:
 370 0106 4889C3   		movq	%rax, %rbx
  14:TestUnitTest++.cpp ****     CHECK(b);
 371              		.loc 4 14 0
 372 0109 E8000000 		call	__cxa_end_catch@PLT
 372      00
 373 010e 4889D8   		movq	%rbx, %rax
 374 0111 4889C7   		movq	%rax, %rdi
 375              	.LEHB7:
 376 0114 E8000000 		call	_Unwind_Resume@PLT
 376      00
 377              	.LEHE7:
 378              	.L22:
 379              		.loc 4 15 0
 380 0119 90       		nop
 381 011a 488B45E8 		movq	-24(%rbp), %rax
 382 011e 64483304 		xorq	%fs:40, %rax
 382      25280000 
 382      00
 383 0127 7405     		je	.L19
 384 0129 E8000000 		call	__stack_chk_fail@PLT
 384      00
 385              	.L19:
 386 012e 4883C458 		addq	$88, %rsp
 387 0132 5B       		popq	%rbx
 388 0133 5D       		popq	%rbp
 389              		.cfi_def_cfa 7, 8
 390 0134 C3       		ret
 391              		.cfi_endproc
 392              	.LFE1367:
 393              		.section	.gcc_except_table,"a",@progbits
 394              		.align 4
 395              	.LLSDA1367:
 396 0000 FF       		.byte	0xff
 397 0001 9B       		.byte	0x9b
 398 0002 1D       		.uleb128 .LLSDATT1367-.LLSDATTD1367
 399              	.LLSDATTD1367:
 400 0003 01       		.byte	0x1
 401 0004 13       		.uleb128 .LLSDACSE1367-.LLSDACSB1367
 402              	.LLSDACSB1367:
 403 0005 35       		.uleb128 .LEHB4-.LFB1367
 404 0006 3A       		.uleb128 .LEHE4-.LEHB4
 405 0007 71       		.uleb128 .L20-.LFB1367
 406 0008 01       		.uleb128 0x1
 407 0009 79       		.uleb128 .LEHB5-.LFB1367
 408 000a 3A       		.uleb128 .LEHE5-.LEHB5
 409 000b BA01     		.uleb128 .L21-.LFB1367
 410 000d 00       		.uleb128 0
 411 000e B301     		.uleb128 .LEHB6-.LFB1367
 412 0010 05       		.uleb128 .LEHE6-.LEHB6
 413 0011 00       		.uleb128 0
 414 0012 00       		.uleb128 0
 415 0013 C801     		.uleb128 .LEHB7-.LFB1367
 416 0015 05       		.uleb128 .LEHE7-.LEHB7
 417 0016 00       		.uleb128 0
 418 0017 00       		.uleb128 0
 419              	.LLSDACSE1367:
 420 0018 01       		.byte	0x1
 421 0019 00       		.byte	0
 422 001a 0000     		.align 4
 423 001c 00000000 		.long	0
 424              	
 425              	.LLSDATT1367:
 426              		.text
 428              		.section	.rodata
 429              	.LC5:
 430 0058 43686563 		.string	"CheckWorksWithPointers"
 430      6B576F72 
 430      6B735769 
 430      7468506F 
 430      696E7465 
 431              		.text
 432 0135 90       		.align 2
 434              	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersC2Ev:
 435              	.LFB1369:
  16:TestUnitTest++.cpp **** 
  17:TestUnitTest++.cpp **** TEST(CheckWorksWithPointers)
 436              		.loc 4 17 0
 437              		.cfi_startproc
 438 0136 55       		pushq	%rbp
 439              		.cfi_def_cfa_offset 16
 440              		.cfi_offset 6, -16
 441 0137 4889E5   		movq	%rsp, %rbp
 442              		.cfi_def_cfa_register 6
 443 013a 53       		pushq	%rbx
 444 013b 4883EC18 		subq	$24, %rsp
 445              		.cfi_offset 3, -24
 446 013f 48897DE8 		movq	%rdi, -24(%rbp)
 447              	.LBB7:
 448              		.loc 4 17 0
 449 0143 488B5DE8 		movq	-24(%rbp), %rbx
 450 0147 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 450      00
 451 014c 41B81100 		movl	$17, %r8d
 451      0000
 452 0152 488D0D00 		leaq	.LC1(%rip), %rcx
 452      000000
 453 0159 4889C2   		movq	%rax, %rdx
 454 015c 488D3500 		leaq	.LC5(%rip), %rsi
 454      000000
 455 0163 4889DF   		movq	%rbx, %rdi
 456 0166 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 456      00
 457 016b 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE(%rip), %rdx
 457      000000
 458 0172 488B45E8 		movq	-24(%rbp), %rax
 459 0176 488910   		movq	%rdx, (%rax)
 460              	.LBE7:
 461 0179 90       		nop
 462 017a 4883C418 		addq	$24, %rsp
 463 017e 5B       		popq	%rbx
 464 017f 5D       		popq	%rbp
 465              		.cfi_def_cfa 7, 8
 466 0180 C3       		ret
 467              		.cfi_endproc
 468              	.LFE1369:
 470              		.set	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersC1Ev,_ZN12_GLOBAL__N_126TestCheckWorksWithPointe
 471              		.local	_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE
 472              		.comm	_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE,56,32
 473              		.local	_ZN12_GLOBAL__N_127adderCheckWorksWithPointersE
 474              		.comm	_ZN12_GLOBAL__N_127adderCheckWorksWithPointersE,1,1
 475              		.section	.rodata
 476              	.LC6:
 477 006f 7000     		.string	"p"
 478              	.LC7:
 479 0071 7020213D 		.string	"p != 0"
 479      203000
 480              		.align 8
 481              	.LC8:
 482 0078 556E6861 		.string	"Unhandled exception in CHECK(p)"
 482      6E646C65 
 482      64206578 
 482      63657074 
 482      696F6E20 
 483              		.align 8
 484              	.LC9:
 485 0098 556E6861 		.string	"Unhandled exception in CHECK(p != 0)"
 485      6E646C65 
 485      64206578 
 485      63657074 
 485      696F6E20 
 486              		.text
 487 0181 90       		.align 2
 489              	_ZNK12_GLOBAL__N_126TestCheckWorksWithPointers7RunImplEv:
 490              	.LFB1371:
  18:TestUnitTest++.cpp **** {
 491              		.loc 4 18 0
 492              		.cfi_startproc
 493              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 494              		.cfi_lsda 0x1b,.LLSDA1371
 495 0182 55       		pushq	%rbp
 496              		.cfi_def_cfa_offset 16
 497              		.cfi_offset 6, -16
 498 0183 4889E5   		movq	%rsp, %rbp
 499              		.cfi_def_cfa_register 6
 500 0186 53       		pushq	%rbx
 501 0187 4883EC58 		subq	$88, %rsp
 502              		.cfi_offset 3, -24
 503 018b 48897DA8 		movq	%rdi, -88(%rbp)
 504              		.loc 4 18 0
 505 018f 64488B04 		movq	%fs:40, %rax
 505      25280000 
 505      00
 506 0198 488945E8 		movq	%rax, -24(%rbp)
 507 019c 31C0     		xorl	%eax, %eax
  19:TestUnitTest++.cpp ****     void* p = (void *)0x100;
 508              		.loc 4 19 0
 509 019e 48C745B8 		movq	$256, -72(%rbp)
 509      00010000 
  20:TestUnitTest++.cpp ****     CHECK(p);
 510              		.loc 4 20 0
 511 01a6 488B45B8 		movq	-72(%rbp), %rax
 512 01aa 4889C7   		movq	%rax, %rdi
 513 01ad E8000000 		call	_ZN8UnitTest5CheckIPvEEbT_
 513      00
 514 01b2 83F001   		xorl	$1, %eax
 515 01b5 84C0     		testb	%al, %al
 516 01b7 743A     		je	.L25
 517              	.LEHB8:
 518              		.loc 4 20 0 is_stmt 0 discriminator 1
 519 01b9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 519      00
 520 01be 488B18   		movq	(%rax), %rbx
 521 01c1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 521      00
 522              		.loc 4 20 0 discriminator 2
 523 01c6 488B08   		movq	(%rax), %rcx
 524 01c9 488D45C0 		leaq	-64(%rbp), %rax
 525 01cd BA140000 		movl	$20, %edx
 525      00
 526 01d2 4889CE   		movq	%rcx, %rsi
 527 01d5 4889C7   		movq	%rax, %rdi
 528 01d8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 528      00
 529              		.loc 4 20 0 discriminator 4
 530 01dd 488D45C0 		leaq	-64(%rbp), %rax
 531 01e1 488D1500 		leaq	.LC6(%rip), %rdx
 531      000000
 532 01e8 4889C6   		movq	%rax, %rsi
 533 01eb 4889DF   		movq	%rbx, %rdi
 534 01ee E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 534      00
 535              	.LEHE8:
 536              	.L25:
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 537              		.loc 4 21 0 is_stmt 1
 538 01f3 48837DB8 		cmpq	$0, -72(%rbp)
 538      00
 539 01f8 0F95C0   		setne	%al
 540 01fb 0FB6C0   		movzbl	%al, %eax
 541 01fe 89C7     		movl	%eax, %edi
 542 0200 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 542      00
 543 0205 83F001   		xorl	$1, %eax
 544 0208 84C0     		testb	%al, %al
 545 020a 0F84FA00 		je	.L36
 545      0000
 546              	.LEHB9:
 547              		.loc 4 21 0 is_stmt 0 discriminator 1
 548 0210 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 548      00
 549 0215 488B18   		movq	(%rax), %rbx
 550 0218 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 550      00
 551              		.loc 4 21 0 discriminator 2
 552 021d 488B08   		movq	(%rax), %rcx
 553 0220 488D45C0 		leaq	-64(%rbp), %rax
 554 0224 BA150000 		movl	$21, %edx
 554      00
 555 0229 4889CE   		movq	%rcx, %rsi
 556 022c 4889C7   		movq	%rax, %rdi
 557 022f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 557      00
 558              		.loc 4 21 0 discriminator 4
 559 0234 488D45C0 		leaq	-64(%rbp), %rax
 560 0238 488D1500 		leaq	.LC7(%rip), %rdx
 560      000000
 561 023f 4889C6   		movq	%rax, %rsi
 562 0242 4889DF   		movq	%rbx, %rdi
 563 0245 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 563      00
 564              	.LEHE9:
  22:TestUnitTest++.cpp **** }
 565              		.loc 4 22 0 is_stmt 1
 566 024a E9BB0000 		jmp	.L36
 566      00
 567              	.L32:
  20:TestUnitTest++.cpp ****     CHECK(p);
 568              		.loc 4 20 0
 569 024f 4889C7   		movq	%rax, %rdi
 570 0252 E8000000 		call	__cxa_begin_catch@PLT
 570      00
 571              	.LEHB10:
 572 0257 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 572      00
 573 025c 488B18   		movq	(%rax), %rbx
 574 025f E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 574      00
  20:TestUnitTest++.cpp ****     CHECK(p);
 575              		.loc 4 20 0 is_stmt 0 discriminator 8
 576 0264 488B08   		movq	(%rax), %rcx
 577 0267 488D45C0 		leaq	-64(%rbp), %rax
 578 026b BA140000 		movl	$20, %edx
 578      00
 579 0270 4889CE   		movq	%rcx, %rsi
 580 0273 4889C7   		movq	%rax, %rdi
 581 0276 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 581      00
  20:TestUnitTest++.cpp ****     CHECK(p);
 582              		.loc 4 20 0 discriminator 12
 583 027b 488D45C0 		leaq	-64(%rbp), %rax
 584 027f 488D1500 		leaq	.LC8(%rip), %rdx
 584      000000
 585 0286 4889C6   		movq	%rax, %rsi
 586 0289 4889DF   		movq	%rbx, %rdi
 587 028c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 587      00
 588              	.LEHE10:
 589              	.LEHB11:
  20:TestUnitTest++.cpp ****     CHECK(p);
 590              		.loc 4 20 0 discriminator 14
 591 0291 E8000000 		call	__cxa_end_catch@PLT
 591      00
 592              	.LEHE11:
 593 0296 E958FFFF 		jmp	.L25
 593      FF
 594              	.L33:
 595 029b 4889C3   		movq	%rax, %rbx
  20:TestUnitTest++.cpp ****     CHECK(p);
 596              		.loc 4 20 0
 597 029e E8000000 		call	__cxa_end_catch@PLT
 597      00
 598 02a3 4889D8   		movq	%rbx, %rax
 599 02a6 4889C7   		movq	%rax, %rdi
 600              	.LEHB12:
 601 02a9 E8000000 		call	_Unwind_Resume@PLT
 601      00
 602              	.LEHE12:
 603              	.L34:
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 604              		.loc 4 21 0 is_stmt 1
 605 02ae 4889C7   		movq	%rax, %rdi
 606 02b1 E8000000 		call	__cxa_begin_catch@PLT
 606      00
 607              	.LEHB13:
 608 02b6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 608      00
 609 02bb 488B18   		movq	(%rax), %rbx
 610 02be E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 610      00
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 611              		.loc 4 21 0 is_stmt 0 discriminator 8
 612 02c3 488B08   		movq	(%rax), %rcx
 613 02c6 488D45C0 		leaq	-64(%rbp), %rax
 614 02ca BA150000 		movl	$21, %edx
 614      00
 615 02cf 4889CE   		movq	%rcx, %rsi
 616 02d2 4889C7   		movq	%rax, %rdi
 617 02d5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 617      00
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 618              		.loc 4 21 0 discriminator 12
 619 02da 488D45C0 		leaq	-64(%rbp), %rax
 620 02de 488D1500 		leaq	.LC9(%rip), %rdx
 620      000000
 621 02e5 4889C6   		movq	%rax, %rsi
 622 02e8 4889DF   		movq	%rbx, %rdi
 623 02eb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 623      00
 624              	.LEHE13:
 625              	.LEHB14:
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 626              		.loc 4 21 0 discriminator 14
 627 02f0 E8000000 		call	__cxa_end_catch@PLT
 627      00
 628              	.LEHE14:
 629              		.loc 4 22 0 is_stmt 1 discriminator 14
 630 02f5 EB13     		jmp	.L36
 631              	.L35:
 632 02f7 4889C3   		movq	%rax, %rbx
  21:TestUnitTest++.cpp ****     CHECK(p != 0);
 633              		.loc 4 21 0
 634 02fa E8000000 		call	__cxa_end_catch@PLT
 634      00
 635 02ff 4889D8   		movq	%rbx, %rax
 636 0302 4889C7   		movq	%rax, %rdi
 637              	.LEHB15:
 638 0305 E8000000 		call	_Unwind_Resume@PLT
 638      00
 639              	.LEHE15:
 640              	.L36:
 641              		.loc 4 22 0
 642 030a 90       		nop
 643 030b 488B45E8 		movq	-24(%rbp), %rax
 644 030f 64483304 		xorq	%fs:40, %rax
 644      25280000 
 644      00
 645 0318 7405     		je	.L31
 646 031a E8000000 		call	__stack_chk_fail@PLT
 646      00
 647              	.L31:
 648 031f 4883C458 		addq	$88, %rsp
 649 0323 5B       		popq	%rbx
 650 0324 5D       		popq	%rbp
 651              		.cfi_def_cfa 7, 8
 652 0325 C3       		ret
 653              		.cfi_endproc
 654              	.LFE1371:
 655              		.section	.gcc_except_table
 656              		.align 4
 657              	.LLSDA1371:
 658 0020 FF       		.byte	0xff
 659 0021 9B       		.byte	0x9b
 660 0022 35       		.uleb128 .LLSDATT1371-.LLSDATTD1371
 661              	.LLSDATTD1371:
 662 0023 01       		.byte	0x1
 663 0024 2B       		.uleb128 .LLSDACSE1371-.LLSDACSB1371
 664              	.LLSDACSB1371:
 665 0025 37       		.uleb128 .LEHB8-.LFB1371
 666 0026 3A       		.uleb128 .LEHE8-.LEHB8
 667 0027 CD01     		.uleb128 .L32-.LFB1371
 668 0029 01       		.uleb128 0x1
 669 002a 8E01     		.uleb128 .LEHB9-.LFB1371
 670 002c 3A       		.uleb128 .LEHE9-.LEHB9
 671 002d AC02     		.uleb128 .L34-.LFB1371
 672 002f 01       		.uleb128 0x1
 673 0030 D501     		.uleb128 .LEHB10-.LFB1371
 674 0032 3A       		.uleb128 .LEHE10-.LEHB10
 675 0033 9902     		.uleb128 .L33-.LFB1371
 676 0035 00       		.uleb128 0
 677 0036 8F02     		.uleb128 .LEHB11-.LFB1371
 678 0038 05       		.uleb128 .LEHE11-.LEHB11
 679 0039 00       		.uleb128 0
 680 003a 00       		.uleb128 0
 681 003b A702     		.uleb128 .LEHB12-.LFB1371
 682 003d 05       		.uleb128 .LEHE12-.LEHB12
 683 003e 00       		.uleb128 0
 684 003f 00       		.uleb128 0
 685 0040 B402     		.uleb128 .LEHB13-.LFB1371
 686 0042 3A       		.uleb128 .LEHE13-.LEHB13
 687 0043 F502     		.uleb128 .L35-.LFB1371
 688 0045 00       		.uleb128 0
 689 0046 EE02     		.uleb128 .LEHB14-.LFB1371
 690 0048 05       		.uleb128 .LEHE14-.LEHB14
 691 0049 00       		.uleb128 0
 692 004a 00       		.uleb128 0
 693 004b 8303     		.uleb128 .LEHB15-.LFB1371
 694 004d 05       		.uleb128 .LEHE15-.LEHB15
 695 004e 00       		.uleb128 0
 696 004f 00       		.uleb128 0
 697              	.LLSDACSE1371:
 698 0050 01       		.byte	0x1
 699 0051 00       		.byte	0
 700 0052 0000     		.align 4
 701 0054 00000000 		.long	0
 702              	
 703              	.LLSDATT1371:
 704              		.text
 706              		.section	.rodata
 707              	.LC10:
 708 00bd 56616C69 		.string	"ValidCheckEqualSucceeds"
 708      64436865 
 708      636B4571 
 708      75616C53 
 708      75636365 
 709              		.text
 710              		.align 2
 712              	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC2Ev:
 713              	.LFB1373:
  23:TestUnitTest++.cpp **** 
  24:TestUnitTest++.cpp **** TEST(ValidCheckEqualSucceeds)
 714              		.loc 4 24 0
 715              		.cfi_startproc
 716 0326 55       		pushq	%rbp
 717              		.cfi_def_cfa_offset 16
 718              		.cfi_offset 6, -16
 719 0327 4889E5   		movq	%rsp, %rbp
 720              		.cfi_def_cfa_register 6
 721 032a 53       		pushq	%rbx
 722 032b 4883EC18 		subq	$24, %rsp
 723              		.cfi_offset 3, -24
 724 032f 48897DE8 		movq	%rdi, -24(%rbp)
 725              	.LBB8:
 726              		.loc 4 24 0
 727 0333 488B5DE8 		movq	-24(%rbp), %rbx
 728 0337 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 728      00
 729 033c 41B81800 		movl	$24, %r8d
 729      0000
 730 0342 488D0D00 		leaq	.LC1(%rip), %rcx
 730      000000
 731 0349 4889C2   		movq	%rax, %rdx
 732 034c 488D3500 		leaq	.LC10(%rip), %rsi
 732      000000
 733 0353 4889DF   		movq	%rbx, %rdi
 734 0356 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 734      00
 735 035b 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE(%rip), %rdx
 735      000000
 736 0362 488B45E8 		movq	-24(%rbp), %rax
 737 0366 488910   		movq	%rdx, (%rax)
 738              	.LBE8:
 739 0369 90       		nop
 740 036a 4883C418 		addq	$24, %rsp
 741 036e 5B       		popq	%rbx
 742 036f 5D       		popq	%rbp
 743              		.cfi_def_cfa 7, 8
 744 0370 C3       		ret
 745              		.cfi_endproc
 746              	.LFE1373:
 748              		.set	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC1Ev,_ZN12_GLOBAL__N_127TestValidCheckEqualSucc
 749              		.local	_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE
 750              		.comm	_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE,56,32
 751              		.local	_ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE
 752              		.comm	_ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE,1,1
 753              		.section	.rodata
 754 00d5 000000   		.align 8
 755              	.LC11:
 756 00d8 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(x, y)"
 756      6E646C65 
 756      64206578 
 756      63657074 
 756      696F6E20 
 757              		.text
 758 0371 90       		.align 2
 760              	_ZNK12_GLOBAL__N_127TestValidCheckEqualSucceeds7RunImplEv:
 761              	.LFB1375:
  25:TestUnitTest++.cpp **** {
 762              		.loc 4 25 0
 763              		.cfi_startproc
 764              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 765              		.cfi_lsda 0x1b,.LLSDA1375
 766 0372 55       		pushq	%rbp
 767              		.cfi_def_cfa_offset 16
 768              		.cfi_offset 6, -16
 769 0373 4889E5   		movq	%rsp, %rbp
 770              		.cfi_def_cfa_register 6
 771 0376 53       		pushq	%rbx
 772 0377 4883EC58 		subq	$88, %rsp
 773              		.cfi_offset 3, -24
 774 037b 48897DA8 		movq	%rdi, -88(%rbp)
 775              		.loc 4 25 0
 776 037f 64488B04 		movq	%fs:40, %rax
 776      25280000 
 776      00
 777 0388 488945E8 		movq	%rax, -24(%rbp)
 778 038c 31C0     		xorl	%eax, %eax
  26:TestUnitTest++.cpp ****     int const x = 3;
 779              		.loc 4 26 0
 780 038e C745B803 		movl	$3, -72(%rbp)
 780      000000
  27:TestUnitTest++.cpp ****     int const y = 3;
 781              		.loc 4 27 0
 782 0395 C745BC03 		movl	$3, -68(%rbp)
 782      000000
 783              	.LEHB16:
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 784              		.loc 4 28 0
 785 039c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 785      00
 786 03a1 488B08   		movq	(%rax), %rcx
 787 03a4 488D45C0 		leaq	-64(%rbp), %rax
 788 03a8 BA1C0000 		movl	$28, %edx
 788      00
 789 03ad 4889CE   		movq	%rcx, %rsi
 790 03b0 4889C7   		movq	%rax, %rdi
 791 03b3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 791      00
 792              		.loc 4 28 0 is_stmt 0 discriminator 2
 793 03b8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 793      00
 794 03bd 488B00   		movq	(%rax), %rax
 795 03c0 488D4DC0 		leaq	-64(%rbp), %rcx
 796 03c4 488D55BC 		leaq	-68(%rbp), %rdx
 797 03c8 488D75B8 		leaq	-72(%rbp), %rsi
 798 03cc 4889C7   		movq	%rax, %rdi
 799 03cf E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 799      00
 800              	.LEHE16:
  29:TestUnitTest++.cpp **** }
 801              		.loc 4 29 0 is_stmt 1
 802 03d4 EB5C     		jmp	.L38
 803              	.L43:
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 804              		.loc 4 28 0
 805 03d6 4889C7   		movq	%rax, %rdi
 806 03d9 E8000000 		call	__cxa_begin_catch@PLT
 806      00
 807              	.LEHB17:
 808 03de E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 808      00
 809 03e3 488B18   		movq	(%rax), %rbx
 810 03e6 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 810      00
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 811              		.loc 4 28 0 is_stmt 0 discriminator 8
 812 03eb 488B08   		movq	(%rax), %rcx
 813 03ee 488D45C0 		leaq	-64(%rbp), %rax
 814 03f2 BA1C0000 		movl	$28, %edx
 814      00
 815 03f7 4889CE   		movq	%rcx, %rsi
 816 03fa 4889C7   		movq	%rax, %rdi
 817 03fd E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 817      00
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 818              		.loc 4 28 0 discriminator 12
 819 0402 488D45C0 		leaq	-64(%rbp), %rax
 820 0406 488D1500 		leaq	.LC11(%rip), %rdx
 820      000000
 821 040d 4889C6   		movq	%rax, %rsi
 822 0410 4889DF   		movq	%rbx, %rdi
 823 0413 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 823      00
 824              	.LEHE17:
 825              	.LEHB18:
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 826              		.loc 4 28 0 discriminator 14
 827 0418 E8000000 		call	__cxa_end_catch@PLT
 827      00
 828              	.LEHE18:
 829              		.loc 4 29 0 is_stmt 1 discriminator 14
 830 041d EB13     		jmp	.L38
 831              	.L44:
 832 041f 4889C3   		movq	%rax, %rbx
  28:TestUnitTest++.cpp ****     CHECK_EQUAL(x, y);
 833              		.loc 4 28 0
 834 0422 E8000000 		call	__cxa_end_catch@PLT
 834      00
 835 0427 4889D8   		movq	%rbx, %rax
 836 042a 4889C7   		movq	%rax, %rdi
 837              	.LEHB19:
 838 042d E8000000 		call	_Unwind_Resume@PLT
 838      00
 839              	.LEHE19:
 840              	.L38:
 841              		.loc 4 29 0
 842 0432 488B45E8 		movq	-24(%rbp), %rax
 843 0436 64483304 		xorq	%fs:40, %rax
 843      25280000 
 843      00
 844 043f 7405     		je	.L42
 845 0441 E8000000 		call	__stack_chk_fail@PLT
 845      00
 846              	.L42:
 847 0446 4883C458 		addq	$88, %rsp
 848 044a 5B       		popq	%rbx
 849 044b 5D       		popq	%rbp
 850              		.cfi_def_cfa 7, 8
 851 044c C3       		ret
 852              		.cfi_endproc
 853              	.LFE1375:
 854              		.section	.gcc_except_table
 855              		.align 4
 856              	.LLSDA1375:
 857 0058 FF       		.byte	0xff
 858 0059 9B       		.byte	0x9b
 859 005a 1D       		.uleb128 .LLSDATT1375-.LLSDATTD1375
 860              	.LLSDATTD1375:
 861 005b 01       		.byte	0x1
 862 005c 13       		.uleb128 .LLSDACSE1375-.LLSDACSB1375
 863              	.LLSDACSB1375:
 864 005d 2A       		.uleb128 .LEHB16-.LFB1375
 865 005e 38       		.uleb128 .LEHE16-.LEHB16
 866 005f 64       		.uleb128 .L43-.LFB1375
 867 0060 01       		.uleb128 0x1
 868 0061 6C       		.uleb128 .LEHB17-.LFB1375
 869 0062 3A       		.uleb128 .LEHE17-.LEHB17
 870 0063 AD01     		.uleb128 .L44-.LFB1375
 871 0065 00       		.uleb128 0
 872 0066 A601     		.uleb128 .LEHB18-.LFB1375
 873 0068 05       		.uleb128 .LEHE18-.LEHB18
 874 0069 00       		.uleb128 0
 875 006a 00       		.uleb128 0
 876 006b BB01     		.uleb128 .LEHB19-.LFB1375
 877 006d 05       		.uleb128 .LEHE19-.LEHB19
 878 006e 00       		.uleb128 0
 879 006f 00       		.uleb128 0
 880              	.LLSDACSE1375:
 881 0070 01       		.byte	0x1
 882 0071 00       		.byte	0
 883 0072 0000     		.align 4
 884 0074 00000000 		.long	0
 885              	
 886              	.LLSDATT1375:
 887              		.text
 889              		.section	.rodata
 890              	.LC12:
 891 0101 43686563 		.string	"CheckEqualWorksWithPointers"
 891      6B457175 
 891      616C576F 
 891      726B7357 
 891      69746850 
 892              		.text
 893 044d 90       		.align 2
 895              	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC2Ev:
 896              	.LFB1377:
  30:TestUnitTest++.cpp **** 
  31:TestUnitTest++.cpp **** TEST(CheckEqualWorksWithPointers)
 897              		.loc 4 31 0
 898              		.cfi_startproc
 899 044e 55       		pushq	%rbp
 900              		.cfi_def_cfa_offset 16
 901              		.cfi_offset 6, -16
 902 044f 4889E5   		movq	%rsp, %rbp
 903              		.cfi_def_cfa_register 6
 904 0452 53       		pushq	%rbx
 905 0453 4883EC18 		subq	$24, %rsp
 906              		.cfi_offset 3, -24
 907 0457 48897DE8 		movq	%rdi, -24(%rbp)
 908              	.LBB9:
 909              		.loc 4 31 0
 910 045b 488B5DE8 		movq	-24(%rbp), %rbx
 911 045f E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 911      00
 912 0464 41B81F00 		movl	$31, %r8d
 912      0000
 913 046a 488D0D00 		leaq	.LC1(%rip), %rcx
 913      000000
 914 0471 4889C2   		movq	%rax, %rdx
 915 0474 488D3500 		leaq	.LC12(%rip), %rsi
 915      000000
 916 047b 4889DF   		movq	%rbx, %rdi
 917 047e E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 917      00
 918 0483 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE(%rip), %rdx
 918      000000
 919 048a 488B45E8 		movq	-24(%rbp), %rax
 920 048e 488910   		movq	%rdx, (%rax)
 921              	.LBE9:
 922 0491 90       		nop
 923 0492 4883C418 		addq	$24, %rsp
 924 0496 5B       		popq	%rbx
 925 0497 5D       		popq	%rbp
 926              		.cfi_def_cfa 7, 8
 927 0498 C3       		ret
 928              		.cfi_endproc
 929              	.LFE1377:
 931              		.set	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC1Ev,_ZN12_GLOBAL__N_131TestCheckEqualWorks
 932              		.local	_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE
 933              		.comm	_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE,56,32
 934              		.local	_ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE
 935              		.comm	_ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE,1,1
 936              		.section	.rodata
 937 011d 000000   		.align 8
 938              	.LC13:
 939 0120 556E6861 		.string	"Unhandled exception in CHECK_EQUAL((void*)0, p)"
 939      6E646C65 
 939      64206578 
 939      63657074 
 939      696F6E20 
 940              		.text
 941 0499 90       		.align 2
 943              	_ZNK12_GLOBAL__N_131TestCheckEqualWorksWithPointers7RunImplEv:
 944              	.LFB1379:
  32:TestUnitTest++.cpp **** {
 945              		.loc 4 32 0
 946              		.cfi_startproc
 947              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 948              		.cfi_lsda 0x1b,.LLSDA1379
 949 049a 55       		pushq	%rbp
 950              		.cfi_def_cfa_offset 16
 951              		.cfi_offset 6, -16
 952 049b 4889E5   		movq	%rsp, %rbp
 953              		.cfi_def_cfa_register 6
 954 049e 53       		pushq	%rbx
 955 049f 4883EC58 		subq	$88, %rsp
 956              		.cfi_offset 3, -24
 957 04a3 48897DA8 		movq	%rdi, -88(%rbp)
 958              		.loc 4 32 0
 959 04a7 64488B04 		movq	%fs:40, %rax
 959      25280000 
 959      00
 960 04b0 488945E8 		movq	%rax, -24(%rbp)
 961 04b4 31C0     		xorl	%eax, %eax
  33:TestUnitTest++.cpp ****     void* p = (void *)0;
 962              		.loc 4 33 0
 963 04b6 48C745B0 		movq	$0, -80(%rbp)
 963      00000000 
 964              	.LEHB20:
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 965              		.loc 4 34 0
 966 04be E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 966      00
 967 04c3 488B08   		movq	(%rax), %rcx
 968 04c6 488D45C0 		leaq	-64(%rbp), %rax
 969 04ca BA220000 		movl	$34, %edx
 969      00
 970 04cf 4889CE   		movq	%rcx, %rsi
 971 04d2 4889C7   		movq	%rax, %rdi
 972 04d5 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 972      00
 973              	.LEHE20:
 974              		.loc 4 34 0 is_stmt 0 discriminator 2
 975 04da 48C745B8 		movq	$0, -72(%rbp)
 975      00000000 
 976              	.LEHB21:
 977 04e2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 977      00
 978 04e7 488B00   		movq	(%rax), %rax
 979 04ea 488D4DC0 		leaq	-64(%rbp), %rcx
 980 04ee 488D55B0 		leaq	-80(%rbp), %rdx
 981 04f2 488D75B8 		leaq	-72(%rbp), %rsi
 982 04f6 4889C7   		movq	%rax, %rdi
 983 04f9 E8000000 		call	_ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 983      00
 984              	.LEHE21:
  35:TestUnitTest++.cpp **** }
 985              		.loc 4 35 0 is_stmt 1
 986 04fe EB5E     		jmp	.L46
 987              	.L53:
 988 0500 EB00     		jmp	.L48
 989              	.L52:
 990              	.L48:
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 991              		.loc 4 34 0
 992 0502 4889C7   		movq	%rax, %rdi
 993 0505 E8000000 		call	__cxa_begin_catch@PLT
 993      00
 994              	.LEHB22:
 995 050a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 995      00
 996 050f 488B18   		movq	(%rax), %rbx
 997 0512 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 997      00
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 998              		.loc 4 34 0 is_stmt 0 discriminator 8
 999 0517 488B08   		movq	(%rax), %rcx
 1000 051a 488D45C0 		leaq	-64(%rbp), %rax
 1001 051e BA220000 		movl	$34, %edx
 1001      00
 1002 0523 4889CE   		movq	%rcx, %rsi
 1003 0526 4889C7   		movq	%rax, %rdi
 1004 0529 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1004      00
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 1005              		.loc 4 34 0 discriminator 12
 1006 052e 488D45C0 		leaq	-64(%rbp), %rax
 1007 0532 488D1500 		leaq	.LC13(%rip), %rdx
 1007      000000
 1008 0539 4889C6   		movq	%rax, %rsi
 1009 053c 4889DF   		movq	%rbx, %rdi
 1010 053f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1010      00
 1011              	.LEHE22:
 1012              	.LEHB23:
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 1013              		.loc 4 34 0 discriminator 14
 1014 0544 E8000000 		call	__cxa_end_catch@PLT
 1014      00
 1015              	.LEHE23:
 1016              		.loc 4 35 0 is_stmt 1 discriminator 14
 1017 0549 EB13     		jmp	.L46
 1018              	.L54:
 1019 054b 4889C3   		movq	%rax, %rbx
  34:TestUnitTest++.cpp ****     CHECK_EQUAL((void*)0, p);
 1020              		.loc 4 34 0
 1021 054e E8000000 		call	__cxa_end_catch@PLT
 1021      00
 1022 0553 4889D8   		movq	%rbx, %rax
 1023 0556 4889C7   		movq	%rax, %rdi
 1024              	.LEHB24:
 1025 0559 E8000000 		call	_Unwind_Resume@PLT
 1025      00
 1026              	.LEHE24:
 1027              	.L46:
 1028              		.loc 4 35 0
 1029 055e 488B45E8 		movq	-24(%rbp), %rax
 1030 0562 64483304 		xorq	%fs:40, %rax
 1030      25280000 
 1030      00
 1031 056b 7405     		je	.L51
 1032 056d E8000000 		call	__stack_chk_fail@PLT
 1032      00
 1033              	.L51:
 1034 0572 4883C458 		addq	$88, %rsp
 1035 0576 5B       		popq	%rbx
 1036 0577 5D       		popq	%rbp
 1037              		.cfi_def_cfa 7, 8
 1038 0578 C3       		ret
 1039              		.cfi_endproc
 1040              	.LFE1379:
 1041              		.section	.gcc_except_table
 1042              		.align 4
 1043              	.LLSDA1379:
 1044 0078 FF       		.byte	0xff
 1045 0079 9B       		.byte	0x9b
 1046 007a 21       		.uleb128 .LLSDATT1379-.LLSDATTD1379
 1047              	.LLSDATTD1379:
 1048 007b 01       		.byte	0x1
 1049 007c 17       		.uleb128 .LLSDACSE1379-.LLSDACSB1379
 1050              	.LLSDACSB1379:
 1051 007d 24       		.uleb128 .LEHB20-.LFB1379
 1052 007e 1C       		.uleb128 .LEHE20-.LEHB20
 1053 007f 68       		.uleb128 .L52-.LFB1379
 1054 0080 01       		.uleb128 0x1
 1055 0081 48       		.uleb128 .LEHB21-.LFB1379
 1056 0082 1C       		.uleb128 .LEHE21-.LEHB21
 1057 0083 66       		.uleb128 .L53-.LFB1379
 1058 0084 03       		.uleb128 0x3
 1059 0085 70       		.uleb128 .LEHB22-.LFB1379
 1060 0086 3A       		.uleb128 .LEHE22-.LEHB22
 1061 0087 B101     		.uleb128 .L54-.LFB1379
 1062 0089 00       		.uleb128 0
 1063 008a AA01     		.uleb128 .LEHB23-.LFB1379
 1064 008c 05       		.uleb128 .LEHE23-.LEHB23
 1065 008d 00       		.uleb128 0
 1066 008e 00       		.uleb128 0
 1067 008f BF01     		.uleb128 .LEHB24-.LFB1379
 1068 0091 05       		.uleb128 .LEHE24-.LEHB24
 1069 0092 00       		.uleb128 0
 1070 0093 00       		.uleb128 0
 1071              	.LLSDACSE1379:
 1072 0094 01       		.byte	0x1
 1073 0095 00       		.byte	0
 1074 0096 00       		.byte	0
 1075 0097 7D       		.byte	0x7d
 1076              		.align 4
 1077 0098 00000000 		.long	0
 1078              	
 1079              	.LLSDATT1379:
 1080              		.text
 1082              		.section	.rodata
 1083              	.LC14:
 1084 0150 56616C69 		.string	"ValidCheckCloseSucceeds"
 1084      64436865 
 1084      636B436C 
 1084      6F736553 
 1084      75636365 
 1085              		.text
 1086 0579 90       		.align 2
 1088              	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC2Ev:
 1089              	.LFB1381:
  36:TestUnitTest++.cpp **** 
  37:TestUnitTest++.cpp **** TEST(ValidCheckCloseSucceeds)
 1090              		.loc 4 37 0
 1091              		.cfi_startproc
 1092 057a 55       		pushq	%rbp
 1093              		.cfi_def_cfa_offset 16
 1094              		.cfi_offset 6, -16
 1095 057b 4889E5   		movq	%rsp, %rbp
 1096              		.cfi_def_cfa_register 6
 1097 057e 53       		pushq	%rbx
 1098 057f 4883EC18 		subq	$24, %rsp
 1099              		.cfi_offset 3, -24
 1100 0583 48897DE8 		movq	%rdi, -24(%rbp)
 1101              	.LBB10:
 1102              		.loc 4 37 0
 1103 0587 488B5DE8 		movq	-24(%rbp), %rbx
 1104 058b E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1104      00
 1105 0590 41B82500 		movl	$37, %r8d
 1105      0000
 1106 0596 488D0D00 		leaq	.LC1(%rip), %rcx
 1106      000000
 1107 059d 4889C2   		movq	%rax, %rdx
 1108 05a0 488D3500 		leaq	.LC14(%rip), %rsi
 1108      000000
 1109 05a7 4889DF   		movq	%rbx, %rdi
 1110 05aa E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 1110      00
 1111 05af 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE(%rip), %rdx
 1111      000000
 1112 05b6 488B45E8 		movq	-24(%rbp), %rax
 1113 05ba 488910   		movq	%rdx, (%rax)
 1114              	.LBE10:
 1115 05bd 90       		nop
 1116 05be 4883C418 		addq	$24, %rsp
 1117 05c2 5B       		popq	%rbx
 1118 05c3 5D       		popq	%rbp
 1119              		.cfi_def_cfa 7, 8
 1120 05c4 C3       		ret
 1121              		.cfi_endproc
 1122              	.LFE1381:
 1124              		.set	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC1Ev,_ZN12_GLOBAL__N_127TestValidCheckCloseSucc
 1125              		.local	_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE
 1126              		.comm	_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE,56,32
 1127              		.local	_ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE
 1128              		.comm	_ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE,1,1
 1129              		.section	.rodata
 1130              		.align 8
 1131              	.LC18:
 1132 0168 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(2.0f, 2.001f)"
 1132      6E646C65 
 1132      64206578 
 1132      63657074 
 1132      696F6E20 
 1133 0199 00000000 		.align 8
 1133      000000
 1134              	.LC19:
 1135 01a0 556E6861 		.string	"Unhandled exception in CHECK_CLOSE(2.001f, 2.0f)"
 1135      6E646C65 
 1135      64206578 
 1135      63657074 
 1135      696F6E20 
 1136              		.text
 1137 05c5 90       		.align 2
 1139              	_ZNK12_GLOBAL__N_127TestValidCheckCloseSucceeds7RunImplEv:
 1140              	.LFB1383:
  38:TestUnitTest++.cpp **** {
 1141              		.loc 4 38 0
 1142              		.cfi_startproc
 1143              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1144              		.cfi_lsda 0x1b,.LLSDA1383
 1145 05c6 55       		pushq	%rbp
 1146              		.cfi_def_cfa_offset 16
 1147              		.cfi_offset 6, -16
 1148 05c7 4889E5   		movq	%rsp, %rbp
 1149              		.cfi_def_cfa_register 6
 1150 05ca 53       		pushq	%rbx
 1151 05cb 4883EC58 		subq	$88, %rsp
 1152              		.cfi_offset 3, -24
 1153 05cf 48897DA8 		movq	%rdi, -88(%rbp)
 1154              		.loc 4 38 0
 1155 05d3 64488B04 		movq	%fs:40, %rax
 1155      25280000 
 1155      00
 1156 05dc 488945E8 		movq	%rax, -24(%rbp)
 1157 05e0 31C0     		xorl	%eax, %eax
 1158              	.LEHB25:
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1159              		.loc 4 39 0
 1160 05e2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1160      00
 1161 05e7 488B08   		movq	(%rax), %rcx
 1162 05ea 488D45C0 		leaq	-64(%rbp), %rax
 1163 05ee BA270000 		movl	$39, %edx
 1163      00
 1164 05f3 4889CE   		movq	%rcx, %rsi
 1165 05f6 4889C7   		movq	%rax, %rdi
 1166 05f9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1166      00
 1167              	.LEHE25:
 1168              		.loc 4 39 0 is_stmt 0 discriminator 2
 1169 05fe F30F1005 		movss	.LC15(%rip), %xmm0
 1169      00000000 
 1170 0606 F30F1145 		movss	%xmm0, -68(%rbp)
 1170      BC
 1171 060b F30F1005 		movss	.LC16(%rip), %xmm0
 1171      00000000 
 1172 0613 F30F1145 		movss	%xmm0, -72(%rbp)
 1172      B8
 1173 0618 F30F1005 		movss	.LC17(%rip), %xmm0
 1173      00000000 
 1174 0620 F30F1145 		movss	%xmm0, -76(%rbp)
 1174      B4
 1175              	.LEHB26:
 1176 0625 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1176      00
 1177 062a 488B00   		movq	(%rax), %rax
 1178 062d 488D7DC0 		leaq	-64(%rbp), %rdi
 1179 0631 488D4DBC 		leaq	-68(%rbp), %rcx
 1180 0635 488D55B8 		leaq	-72(%rbp), %rdx
 1181 0639 488D75B4 		leaq	-76(%rbp), %rsi
 1182 063d 4989F8   		movq	%rdi, %r8
 1183 0640 4889C7   		movq	%rax, %rdi
 1184 0643 E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 1184      00
 1185              	.LEHE26:
 1186              	.L59:
 1187              	.LEHB27:
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1188              		.loc 4 40 0 is_stmt 1
 1189 0648 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1189      00
 1190 064d 488B08   		movq	(%rax), %rcx
 1191 0650 488D45C0 		leaq	-64(%rbp), %rax
 1192 0654 BA280000 		movl	$40, %edx
 1192      00
 1193 0659 4889CE   		movq	%rcx, %rsi
 1194 065c 4889C7   		movq	%rax, %rdi
 1195 065f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1195      00
 1196              	.LEHE27:
 1197              		.loc 4 40 0 is_stmt 0 discriminator 2
 1198 0664 F30F1005 		movss	.LC15(%rip), %xmm0
 1198      00000000 
 1199 066c F30F1145 		movss	%xmm0, -68(%rbp)
 1199      BC
 1200 0671 F30F1005 		movss	.LC17(%rip), %xmm0
 1200      00000000 
 1201 0679 F30F1145 		movss	%xmm0, -72(%rbp)
 1201      B8
 1202 067e F30F1005 		movss	.LC16(%rip), %xmm0
 1202      00000000 
 1203 0686 F30F1145 		movss	%xmm0, -76(%rbp)
 1203      B4
 1204              	.LEHB28:
 1205 068b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1205      00
 1206 0690 488B00   		movq	(%rax), %rax
 1207 0693 488D7DC0 		leaq	-64(%rbp), %rdi
 1208 0697 488D4DBC 		leaq	-68(%rbp), %rcx
 1209 069b 488D55B8 		leaq	-72(%rbp), %rdx
 1210 069f 488D75B4 		leaq	-76(%rbp), %rsi
 1211 06a3 4989F8   		movq	%rdi, %r8
 1212 06a6 4889C7   		movq	%rax, %rdi
 1213 06a9 E8000000 		call	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 1213      00
 1214              	.LEHE28:
  41:TestUnitTest++.cpp **** }
 1215              		.loc 4 41 0 is_stmt 1
 1216 06ae E9BF0000 		jmp	.L56
 1216      00
 1217              	.L67:
 1218 06b3 EB00     		jmp	.L58
 1219              	.L66:
 1220              	.L58:
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1221              		.loc 4 39 0
 1222 06b5 4889C7   		movq	%rax, %rdi
 1223 06b8 E8000000 		call	__cxa_begin_catch@PLT
 1223      00
 1224              	.LEHB29:
 1225 06bd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1225      00
 1226 06c2 488B18   		movq	(%rax), %rbx
 1227 06c5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1227      00
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1228              		.loc 4 39 0 is_stmt 0 discriminator 8
 1229 06ca 488B08   		movq	(%rax), %rcx
 1230 06cd 488D45C0 		leaq	-64(%rbp), %rax
 1231 06d1 BA270000 		movl	$39, %edx
 1231      00
 1232 06d6 4889CE   		movq	%rcx, %rsi
 1233 06d9 4889C7   		movq	%rax, %rdi
 1234 06dc E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1234      00
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1235              		.loc 4 39 0 discriminator 12
 1236 06e1 488D45C0 		leaq	-64(%rbp), %rax
 1237 06e5 488D1500 		leaq	.LC18(%rip), %rdx
 1237      000000
 1238 06ec 4889C6   		movq	%rax, %rsi
 1239 06ef 4889DF   		movq	%rbx, %rdi
 1240 06f2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1240      00
 1241              	.LEHE29:
 1242              	.LEHB30:
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1243              		.loc 4 39 0 discriminator 14
 1244 06f7 E8000000 		call	__cxa_end_catch@PLT
 1244      00
 1245              	.LEHE30:
 1246 06fc E947FFFF 		jmp	.L59
 1246      FF
 1247              	.L68:
 1248 0701 4889C3   		movq	%rax, %rbx
  39:TestUnitTest++.cpp ****     CHECK_CLOSE(2.0f, 2.001f, 0.01f);
 1249              		.loc 4 39 0
 1250 0704 E8000000 		call	__cxa_end_catch@PLT
 1250      00
 1251 0709 4889D8   		movq	%rbx, %rax
 1252 070c 4889C7   		movq	%rax, %rdi
 1253              	.LEHB31:
 1254 070f E8000000 		call	_Unwind_Resume@PLT
 1254      00
 1255              	.LEHE31:
 1256              	.L70:
 1257 0714 EB00     		jmp	.L62
 1258              	.L69:
 1259              	.L62:
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1260              		.loc 4 40 0 is_stmt 1
 1261 0716 4889C7   		movq	%rax, %rdi
 1262 0719 E8000000 		call	__cxa_begin_catch@PLT
 1262      00
 1263              	.LEHB32:
 1264 071e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1264      00
 1265 0723 488B18   		movq	(%rax), %rbx
 1266 0726 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1266      00
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1267              		.loc 4 40 0 is_stmt 0 discriminator 8
 1268 072b 488B08   		movq	(%rax), %rcx
 1269 072e 488D45C0 		leaq	-64(%rbp), %rax
 1270 0732 BA280000 		movl	$40, %edx
 1270      00
 1271 0737 4889CE   		movq	%rcx, %rsi
 1272 073a 4889C7   		movq	%rax, %rdi
 1273 073d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1273      00
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1274              		.loc 4 40 0 discriminator 12
 1275 0742 488D45C0 		leaq	-64(%rbp), %rax
 1276 0746 488D1500 		leaq	.LC19(%rip), %rdx
 1276      000000
 1277 074d 4889C6   		movq	%rax, %rsi
 1278 0750 4889DF   		movq	%rbx, %rdi
 1279 0753 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1279      00
 1280              	.LEHE32:
 1281              	.LEHB33:
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1282              		.loc 4 40 0 discriminator 14
 1283 0758 E8000000 		call	__cxa_end_catch@PLT
 1283      00
 1284              	.LEHE33:
 1285              		.loc 4 41 0 is_stmt 1 discriminator 14
 1286 075d EB13     		jmp	.L56
 1287              	.L71:
 1288 075f 4889C3   		movq	%rax, %rbx
  40:TestUnitTest++.cpp ****     CHECK_CLOSE(2.001f, 2.0f, 0.01f);
 1289              		.loc 4 40 0
 1290 0762 E8000000 		call	__cxa_end_catch@PLT
 1290      00
 1291 0767 4889D8   		movq	%rbx, %rax
 1292 076a 4889C7   		movq	%rax, %rdi
 1293              	.LEHB34:
 1294 076d E8000000 		call	_Unwind_Resume@PLT
 1294      00
 1295              	.LEHE34:
 1296              	.L56:
 1297              		.loc 4 41 0
 1298 0772 488B45E8 		movq	-24(%rbp), %rax
 1299 0776 64483304 		xorq	%fs:40, %rax
 1299      25280000 
 1299      00
 1300 077f 7405     		je	.L65
 1301 0781 E8000000 		call	__stack_chk_fail@PLT
 1301      00
 1302              	.L65:
 1303 0786 4883C458 		addq	$88, %rsp
 1304 078a 5B       		popq	%rbx
 1305 078b 5D       		popq	%rbp
 1306              		.cfi_def_cfa 7, 8
 1307 078c C3       		ret
 1308              		.cfi_endproc
 1309              	.LFE1383:
 1310              		.section	.gcc_except_table
 1311              		.align 4
 1312              	.LLSDA1383:
 1313 009c FF       		.byte	0xff
 1314 009d 9B       		.byte	0x9b
 1315 009e 41       		.uleb128 .LLSDATT1383-.LLSDATTD1383
 1316              	.LLSDATTD1383:
 1317 009f 01       		.byte	0x1
 1318 00a0 36       		.uleb128 .LLSDACSE1383-.LLSDACSB1383
 1319              	.LLSDACSB1383:
 1320 00a1 1C       		.uleb128 .LEHB25-.LFB1383
 1321 00a2 1C       		.uleb128 .LEHE25-.LEHB25
 1322 00a3 EF01     		.uleb128 .L66-.LFB1383
 1323 00a5 01       		.uleb128 0x1
 1324 00a6 5F       		.uleb128 .LEHB26-.LFB1383
 1325 00a7 23       		.uleb128 .LEHE26-.LEHB26
 1326 00a8 ED01     		.uleb128 .L67-.LFB1383
 1327 00aa 03       		.uleb128 0x3
 1328 00ab 8201     		.uleb128 .LEHB27-.LFB1383
 1329 00ad 1C       		.uleb128 .LEHE27-.LEHB27
 1330 00ae D002     		.uleb128 .L69-.LFB1383
 1331 00b0 01       		.uleb128 0x1
 1332 00b1 C501     		.uleb128 .LEHB28-.LFB1383
 1333 00b3 23       		.uleb128 .LEHE28-.LEHB28
 1334 00b4 CE02     		.uleb128 .L70-.LFB1383
 1335 00b6 03       		.uleb128 0x3
 1336 00b7 F701     		.uleb128 .LEHB29-.LFB1383
 1337 00b9 3A       		.uleb128 .LEHE29-.LEHB29
 1338 00ba BB02     		.uleb128 .L68-.LFB1383
 1339 00bc 00       		.uleb128 0
 1340 00bd B102     		.uleb128 .LEHB30-.LFB1383
 1341 00bf 05       		.uleb128 .LEHE30-.LEHB30
 1342 00c0 00       		.uleb128 0
 1343 00c1 00       		.uleb128 0
 1344 00c2 C902     		.uleb128 .LEHB31-.LFB1383
 1345 00c4 05       		.uleb128 .LEHE31-.LEHB31
 1346 00c5 00       		.uleb128 0
 1347 00c6 00       		.uleb128 0
 1348 00c7 D802     		.uleb128 .LEHB32-.LFB1383
 1349 00c9 3A       		.uleb128 .LEHE32-.LEHB32
 1350 00ca 9903     		.uleb128 .L71-.LFB1383
 1351 00cc 00       		.uleb128 0
 1352 00cd 9203     		.uleb128 .LEHB33-.LFB1383
 1353 00cf 05       		.uleb128 .LEHE33-.LEHB33
 1354 00d0 00       		.uleb128 0
 1355 00d1 00       		.uleb128 0
 1356 00d2 A703     		.uleb128 .LEHB34-.LFB1383
 1357 00d4 05       		.uleb128 .LEHE34-.LEHB34
 1358 00d5 00       		.uleb128 0
 1359 00d6 00       		.uleb128 0
 1360              	.LLSDACSE1383:
 1361 00d7 01       		.byte	0x1
 1362 00d8 00       		.byte	0
 1363 00d9 00       		.byte	0
 1364 00da 7D       		.byte	0x7d
 1365 00db 00       		.align 4
 1366 00dc 00000000 		.long	0
 1367              	
 1368              	.LLSDATT1383:
 1369              		.text
 1371              		.section	.rodata
 1372              	.LC20:
 1373 01d1 41727261 		.string	"ArrayCloseSucceeds"
 1373      79436C6F 
 1373      73655375 
 1373      63636565 
 1373      647300
 1374              		.text
 1375 078d 90       		.align 2
 1377              	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsC2Ev:
 1378              	.LFB1385:
  42:TestUnitTest++.cpp **** 
  43:TestUnitTest++.cpp **** TEST(ArrayCloseSucceeds)
 1379              		.loc 4 43 0
 1380              		.cfi_startproc
 1381 078e 55       		pushq	%rbp
 1382              		.cfi_def_cfa_offset 16
 1383              		.cfi_offset 6, -16
 1384 078f 4889E5   		movq	%rsp, %rbp
 1385              		.cfi_def_cfa_register 6
 1386 0792 53       		pushq	%rbx
 1387 0793 4883EC18 		subq	$24, %rsp
 1388              		.cfi_offset 3, -24
 1389 0797 48897DE8 		movq	%rdi, -24(%rbp)
 1390              	.LBB11:
 1391              		.loc 4 43 0
 1392 079b 488B5DE8 		movq	-24(%rbp), %rbx
 1393 079f E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1393      00
 1394 07a4 41B82B00 		movl	$43, %r8d
 1394      0000
 1395 07aa 488D0D00 		leaq	.LC1(%rip), %rcx
 1395      000000
 1396 07b1 4889C2   		movq	%rax, %rdx
 1397 07b4 488D3500 		leaq	.LC20(%rip), %rsi
 1397      000000
 1398 07bb 4889DF   		movq	%rbx, %rdi
 1399 07be E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 1399      00
 1400 07c3 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE(%rip), %rdx
 1400      000000
 1401 07ca 488B45E8 		movq	-24(%rbp), %rax
 1402 07ce 488910   		movq	%rdx, (%rax)
 1403              	.LBE11:
 1404 07d1 90       		nop
 1405 07d2 4883C418 		addq	$24, %rsp
 1406 07d6 5B       		popq	%rbx
 1407 07d7 5D       		popq	%rbp
 1408              		.cfi_def_cfa 7, 8
 1409 07d8 C3       		ret
 1410              		.cfi_endproc
 1411              	.LFE1385:
 1413              		.set	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsC1Ev,_ZN12_GLOBAL__N_122TestArrayCloseSucceedsC2Ev
 1414              		.local	_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE
 1415              		.comm	_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE,56,32
 1416              		.local	_ZN12_GLOBAL__N_123adderArrayCloseSucceedsE
 1417              		.comm	_ZN12_GLOBAL__N_123adderArrayCloseSucceedsE,1,1
 1418              		.section	.rodata
 1419 01e4 00000000 		.align 8
 1420              	.LC25:
 1421 01e8 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_CLOSE(a1, a2)"
 1421      6E646C65 
 1421      64206578 
 1421      63657074 
 1421      696F6E20 
 1422              		.text
 1423 07d9 90       		.align 2
 1425              	_ZNK12_GLOBAL__N_122TestArrayCloseSucceeds7RunImplEv:
 1426              	.LFB1387:
  44:TestUnitTest++.cpp **** {
 1427              		.loc 4 44 0
 1428              		.cfi_startproc
 1429              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1430              		.cfi_lsda 0x1b,.LLSDA1387
 1431 07da 55       		pushq	%rbp
 1432              		.cfi_def_cfa_offset 16
 1433              		.cfi_offset 6, -16
 1434 07db 4889E5   		movq	%rsp, %rbp
 1435              		.cfi_def_cfa_register 6
 1436 07de 53       		pushq	%rbx
 1437 07df 4883EC68 		subq	$104, %rsp
 1438              		.cfi_offset 3, -24
 1439 07e3 48897D98 		movq	%rdi, -104(%rbp)
 1440              		.loc 4 44 0
 1441 07e7 64488B04 		movq	%fs:40, %rax
 1441      25280000 
 1441      00
 1442 07f0 488945E8 		movq	%rax, -24(%rbp)
 1443 07f4 31C0     		xorl	%eax, %eax
  45:TestUnitTest++.cpp ****     float const a1[] = {1, 2, 3};
 1444              		.loc 4 45 0
 1445 07f6 F30F1005 		movss	.LC21(%rip), %xmm0
 1445      00000000 
 1446 07fe F30F1145 		movss	%xmm0, -48(%rbp)
 1446      D0
 1447 0803 F30F1005 		movss	.LC17(%rip), %xmm0
 1447      00000000 
 1448 080b F30F1145 		movss	%xmm0, -44(%rbp)
 1448      D4
 1449 0810 F30F1005 		movss	.LC22(%rip), %xmm0
 1449      00000000 
 1450 0818 F30F1145 		movss	%xmm0, -40(%rbp)
 1450      D8
  46:TestUnitTest++.cpp ****     float const a2[] = {1, 2.01f, 3};
 1451              		.loc 4 46 0
 1452 081d F30F1005 		movss	.LC21(%rip), %xmm0
 1452      00000000 
 1453 0825 F30F1145 		movss	%xmm0, -36(%rbp)
 1453      DC
 1454 082a F30F1005 		movss	.LC23(%rip), %xmm0
 1454      00000000 
 1455 0832 F30F1145 		movss	%xmm0, -32(%rbp)
 1455      E0
 1456 0837 F30F1005 		movss	.LC22(%rip), %xmm0
 1456      00000000 
 1457 083f F30F1145 		movss	%xmm0, -28(%rbp)
 1457      E4
 1458              	.LEHB35:
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1459              		.loc 4 47 0
 1460 0844 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1460      00
 1461 0849 488B08   		movq	(%rax), %rcx
 1462 084c 488D45B0 		leaq	-80(%rbp), %rax
 1463 0850 BA2F0000 		movl	$47, %edx
 1463      00
 1464 0855 4889CE   		movq	%rcx, %rsi
 1465 0858 4889C7   		movq	%rax, %rdi
 1466 085b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1466      00
 1467              	.LEHE35:
 1468              		.loc 4 47 0 is_stmt 0 discriminator 2
 1469 0860 F30F1005 		movss	.LC24(%rip), %xmm0
 1469      00000000 
 1470 0868 F30F1145 		movss	%xmm0, -84(%rbp)
 1470      AC
 1471              	.LEHB36:
 1472 086d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1472      00
 1473 0872 488B00   		movq	(%rax), %rax
 1474 0875 488D7DB0 		leaq	-80(%rbp), %rdi
 1475 0879 488D4DAC 		leaq	-84(%rbp), %rcx
 1476 087d 488D55DC 		leaq	-36(%rbp), %rdx
 1477 0881 488D75D0 		leaq	-48(%rbp), %rsi
 1478 0885 4989F9   		movq	%rdi, %r9
 1479 0888 4989C8   		movq	%rcx, %r8
 1480 088b B9030000 		movl	$3, %ecx
 1480      00
 1481 0890 4889C7   		movq	%rax, %rdi
 1482 0893 E8000000 		call	_ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE
 1482      00
 1483              	.LEHE36:
  48:TestUnitTest++.cpp **** }
 1484              		.loc 4 48 0 is_stmt 1
 1485 0898 EB5E     		jmp	.L73
 1486              	.L80:
 1487 089a EB00     		jmp	.L75
 1488              	.L79:
 1489              	.L75:
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1490              		.loc 4 47 0
 1491 089c 4889C7   		movq	%rax, %rdi
 1492 089f E8000000 		call	__cxa_begin_catch@PLT
 1492      00
 1493              	.LEHB37:
 1494 08a4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1494      00
 1495 08a9 488B18   		movq	(%rax), %rbx
 1496 08ac E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1496      00
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1497              		.loc 4 47 0 is_stmt 0 discriminator 8
 1498 08b1 488B08   		movq	(%rax), %rcx
 1499 08b4 488D45B0 		leaq	-80(%rbp), %rax
 1500 08b8 BA2F0000 		movl	$47, %edx
 1500      00
 1501 08bd 4889CE   		movq	%rcx, %rsi
 1502 08c0 4889C7   		movq	%rax, %rdi
 1503 08c3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1503      00
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1504              		.loc 4 47 0 discriminator 12
 1505 08c8 488D45B0 		leaq	-80(%rbp), %rax
 1506 08cc 488D1500 		leaq	.LC25(%rip), %rdx
 1506      000000
 1507 08d3 4889C6   		movq	%rax, %rsi
 1508 08d6 4889DF   		movq	%rbx, %rdi
 1509 08d9 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1509      00
 1510              	.LEHE37:
 1511              	.LEHB38:
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1512              		.loc 4 47 0 discriminator 14
 1513 08de E8000000 		call	__cxa_end_catch@PLT
 1513      00
 1514              	.LEHE38:
 1515              		.loc 4 48 0 is_stmt 1 discriminator 14
 1516 08e3 EB13     		jmp	.L73
 1517              	.L81:
 1518 08e5 4889C3   		movq	%rax, %rbx
  47:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a1, a2, 3, 0.1f);
 1519              		.loc 4 47 0
 1520 08e8 E8000000 		call	__cxa_end_catch@PLT
 1520      00
 1521 08ed 4889D8   		movq	%rbx, %rax
 1522 08f0 4889C7   		movq	%rax, %rdi
 1523              	.LEHB39:
 1524 08f3 E8000000 		call	_Unwind_Resume@PLT
 1524      00
 1525              	.LEHE39:
 1526              	.L73:
 1527              		.loc 4 48 0
 1528 08f8 488B45E8 		movq	-24(%rbp), %rax
 1529 08fc 64483304 		xorq	%fs:40, %rax
 1529      25280000 
 1529      00
 1530 0905 7405     		je	.L78
 1531 0907 E8000000 		call	__stack_chk_fail@PLT
 1531      00
 1532              	.L78:
 1533 090c 4883C468 		addq	$104, %rsp
 1534 0910 5B       		popq	%rbx
 1535 0911 5D       		popq	%rbp
 1536              		.cfi_def_cfa 7, 8
 1537 0912 C3       		ret
 1538              		.cfi_endproc
 1539              	.LFE1387:
 1540              		.section	.gcc_except_table
 1541              		.align 4
 1542              	.LLSDA1387:
 1543 00e0 FF       		.byte	0xff
 1544 00e1 9B       		.byte	0x9b
 1545 00e2 25       		.uleb128 .LLSDATT1387-.LLSDATTD1387
 1546              	.LLSDATTD1387:
 1547 00e3 01       		.byte	0x1
 1548 00e4 1B       		.uleb128 .LLSDACSE1387-.LLSDACSB1387
 1549              	.LLSDACSB1387:
 1550 00e5 6A       		.uleb128 .LEHB35-.LFB1387
 1551 00e6 1C       		.uleb128 .LEHE35-.LEHB35
 1552 00e7 C201     		.uleb128 .L79-.LFB1387
 1553 00e9 01       		.uleb128 0x1
 1554 00ea 9301     		.uleb128 .LEHB36-.LFB1387
 1555 00ec 2B       		.uleb128 .LEHE36-.LEHB36
 1556 00ed C001     		.uleb128 .L80-.LFB1387
 1557 00ef 03       		.uleb128 0x3
 1558 00f0 CA01     		.uleb128 .LEHB37-.LFB1387
 1559 00f2 3A       		.uleb128 .LEHE37-.LEHB37
 1560 00f3 8B02     		.uleb128 .L81-.LFB1387
 1561 00f5 00       		.uleb128 0
 1562 00f6 8402     		.uleb128 .LEHB38-.LFB1387
 1563 00f8 05       		.uleb128 .LEHE38-.LEHB38
 1564 00f9 00       		.uleb128 0
 1565 00fa 00       		.uleb128 0
 1566 00fb 9902     		.uleb128 .LEHB39-.LFB1387
 1567 00fd 05       		.uleb128 .LEHE39-.LEHB39
 1568 00fe 00       		.uleb128 0
 1569 00ff 00       		.uleb128 0
 1570              	.LLSDACSE1387:
 1571 0100 01       		.byte	0x1
 1572 0101 00       		.byte	0
 1573 0102 00       		.byte	0
 1574 0103 7D       		.byte	0x7d
 1575              		.align 4
 1576 0104 00000000 		.long	0
 1577              	
 1578              	.LLSDATT1387:
 1579              		.text
 1581              		.section	.rodata
 1582 0219 00000000 		.align 8
 1582      000000
 1583              	.LC26:
 1584 0220 43686563 		.string	"CheckArrayCloseWorksWithVectors"
 1584      6B417272 
 1584      6179436C 
 1584      6F736557 
 1584      6F726B73 
 1585              		.text
 1586 0913 90       		.align 2
 1588              	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC2Ev:
 1589              	.LFB1389:
  49:TestUnitTest++.cpp **** 
  50:TestUnitTest++.cpp **** TEST (CheckArrayCloseWorksWithVectors)
 1590              		.loc 4 50 0
 1591              		.cfi_startproc
 1592 0914 55       		pushq	%rbp
 1593              		.cfi_def_cfa_offset 16
 1594              		.cfi_offset 6, -16
 1595 0915 4889E5   		movq	%rsp, %rbp
 1596              		.cfi_def_cfa_register 6
 1597 0918 53       		pushq	%rbx
 1598 0919 4883EC18 		subq	$24, %rsp
 1599              		.cfi_offset 3, -24
 1600 091d 48897DE8 		movq	%rdi, -24(%rbp)
 1601              	.LBB12:
 1602              		.loc 4 50 0
 1603 0921 488B5DE8 		movq	-24(%rbp), %rbx
 1604 0925 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1604      00
 1605 092a 41B83200 		movl	$50, %r8d
 1605      0000
 1606 0930 488D0D00 		leaq	.LC1(%rip), %rcx
 1606      000000
 1607 0937 4889C2   		movq	%rax, %rdx
 1608 093a 488D3500 		leaq	.LC26(%rip), %rsi
 1608      000000
 1609 0941 4889DF   		movq	%rbx, %rdi
 1610 0944 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 1610      00
 1611 0949 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE(%rip), %rdx
 1611      000000
 1612 0950 488B45E8 		movq	-24(%rbp), %rax
 1613 0954 488910   		movq	%rdx, (%rax)
 1614              	.LBE12:
 1615 0957 90       		nop
 1616 0958 4883C418 		addq	$24, %rsp
 1617 095c 5B       		popq	%rbx
 1618 095d 5D       		popq	%rbp
 1619              		.cfi_def_cfa 7, 8
 1620 095e C3       		ret
 1621              		.cfi_endproc
 1622              	.LFE1389:
 1624              		.set	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC1Ev,_ZN12_GLOBAL__N_135TestCheckArrayC
 1625              		.local	_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE
 1626              		.comm	_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE,56,32
 1627              		.local	_ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE
 1628              		.comm	_ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE,1,1
 1629              		.section	.rodata
 1630              		.align 8
 1631              	.LC29:
 1632 0240 556E6861 		.string	"Unhandled exception in CHECK_ARRAY_CLOSE(a, a)"
 1632      6E646C65 
 1632      64206578 
 1632      63657074 
 1632      696F6E20 
 1633              		.text
 1634 095f 90       		.align 2
 1636              	_ZNK12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectors7RunImplEv:
 1637              	.LFB1391:
  51:TestUnitTest++.cpp **** {
 1638              		.loc 4 51 0
 1639              		.cfi_startproc
 1640              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1641              		.cfi_lsda 0x1b,.LLSDA1391
 1642 0960 55       		pushq	%rbp
 1643              		.cfi_def_cfa_offset 16
 1644              		.cfi_offset 6, -16
 1645 0961 4889E5   		movq	%rsp, %rbp
 1646              		.cfi_def_cfa_register 6
 1647 0964 53       		pushq	%rbx
 1648 0965 4883EC78 		subq	$120, %rsp
 1649              		.cfi_offset 3, -24
 1650 0969 48897D88 		movq	%rdi, -120(%rbp)
 1651              		.loc 4 51 0
 1652 096d 64488B04 		movq	%fs:40, %rax
 1652      25280000 
 1652      00
 1653 0976 488945E8 		movq	%rax, -24(%rbp)
 1654 097a 31C0     		xorl	%eax, %eax
  52:TestUnitTest++.cpp ****     std::vector< float > a(4);
 1655              		.loc 4 52 0
 1656 097c 488D4598 		leaq	-104(%rbp), %rax
 1657 0980 4889C7   		movq	%rax, %rdi
 1658 0983 E8000000 		call	_ZNSaIfEC1Ev
 1658      00
 1659 0988 660FEFC0 		pxor	%xmm0, %xmm0
 1660 098c F30F1145 		movss	%xmm0, -64(%rbp)
 1660      C0
 1661 0991 488D4D98 		leaq	-104(%rbp), %rcx
 1662 0995 488D55C0 		leaq	-64(%rbp), %rdx
 1663 0999 488D45A0 		leaq	-96(%rbp), %rax
 1664 099d BE040000 		movl	$4, %esi
 1664      00
 1665 09a2 4889C7   		movq	%rax, %rdi
 1666              	.LEHB40:
 1667 09a5 E8000000 		call	_ZNSt6vectorIfSaIfEEC1EmRKfRKS0_
 1667      00
 1668              	.LEHE40:
 1669 09aa 488D4598 		leaq	-104(%rbp), %rax
 1670 09ae 4889C7   		movq	%rax, %rdi
 1671 09b1 E8000000 		call	_ZNSaIfED1Ev
 1671      00
 1672              	.LBB13:
  53:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1673              		.loc 4 53 0 discriminator 1
 1674 09b6 C7459C00 		movl	$0, -100(%rbp)
 1674      000000
 1675              	.L85:
 1676              		.loc 4 53 0 is_stmt 0 discriminator 3
 1677 09bd 837D9C03 		cmpl	$3, -100(%rbp)
 1678 09c1 7F24     		jg	.L84
  54:TestUnitTest++.cpp ****         a[i] = (float)i;
 1679              		.loc 4 54 0 is_stmt 1 discriminator 2
 1680 09c3 8B459C   		movl	-100(%rbp), %eax
 1681 09c6 4863D0   		movslq	%eax, %rdx
 1682 09c9 488D45A0 		leaq	-96(%rbp), %rax
 1683 09cd 4889D6   		movq	%rdx, %rsi
 1684 09d0 4889C7   		movq	%rax, %rdi
 1685 09d3 E8000000 		call	_ZNSt6vectorIfSaIfEEixEm
 1685      00
 1686 09d8 F30F2A45 		cvtsi2ss	-100(%rbp), %xmm0
 1686      9C
 1687 09dd F30F1100 		movss	%xmm0, (%rax)
  53:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1688              		.loc 4 53 0 discriminator 2
 1689 09e1 83459C01 		addl	$1, -100(%rbp)
 1690 09e5 EBD6     		jmp	.L85
 1691              	.L84:
 1692              	.LEHB41:
 1693              	.LBE13:
  55:TestUnitTest++.cpp **** 
  56:TestUnitTest++.cpp ****     CHECK_ARRAY_CLOSE(a, a, (int)a.size(), 0.0001f);
 1694              		.loc 4 56 0
 1695 09e7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1695      00
 1696 09ec 488B08   		movq	(%rax), %rcx
 1697 09ef 488D45C0 		leaq	-64(%rbp), %rax
 1698 09f3 BA380000 		movl	$56, %edx
 1698      00
 1699 09f8 4889CE   		movq	%rcx, %rsi
 1700 09fb 4889C7   		movq	%rax, %rdi
 1701 09fe E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1701      00
 1702              	.LEHE41:
 1703              		.loc 4 56 0 is_stmt 0 discriminator 2
 1704 0a03 F30F1005 		movss	.LC28(%rip), %xmm0
 1704      00000000 
 1705 0a0b F30F1145 		movss	%xmm0, -104(%rbp)
 1705      98
 1706 0a10 488D45A0 		leaq	-96(%rbp), %rax
 1707 0a14 4889C7   		movq	%rax, %rdi
 1708 0a17 E8000000 		call	_ZNKSt6vectorIfSaIfEE4sizeEv
 1708      00
 1709 0a1c 89C3     		movl	%eax, %ebx
 1710              	.LEHB42:
 1711 0a1e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1711      00
 1712 0a23 488B00   		movq	(%rax), %rax
 1713 0a26 488D7DC0 		leaq	-64(%rbp), %rdi
 1714 0a2a 488D4D98 		leaq	-104(%rbp), %rcx
 1715 0a2e 488D55A0 		leaq	-96(%rbp), %rdx
 1716 0a32 488D75A0 		leaq	-96(%rbp), %rsi
 1717 0a36 4989F9   		movq	%rdi, %r9
 1718 0a39 4989C8   		movq	%rcx, %r8
 1719 0a3c 89D9     		movl	%ebx, %ecx
 1720 0a3e 4889C7   		movq	%rax, %rdi
 1721 0a41 E8000000 		call	_ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_1
 1721      00
 1722              	.LEHE42:
 1723              	.L89:
  52:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1724              		.loc 4 52 0 is_stmt 1
 1725 0a46 488D45A0 		leaq	-96(%rbp), %rax
 1726 0a4a 4889C7   		movq	%rax, %rdi
 1727              	.LEHB43:
 1728 0a4d E8000000 		call	_ZNSt6vectorIfSaIfEED1Ev
 1728      00
  57:TestUnitTest++.cpp **** }
 1729              		.loc 4 57 0
 1730 0a52 90       		nop
 1731 0a53 488B45E8 		movq	-24(%rbp), %rax
 1732 0a57 64483304 		xorq	%fs:40, %rax
 1732      25280000 
 1732      00
 1733 0a60 0F849600 		je	.L92
 1733      0000
 1734 0a66 E98C0000 		jmp	.L98
 1734      00
 1735              	.L93:
 1736 0a6b 4889C3   		movq	%rax, %rbx
 1737 0a6e 488D4598 		leaq	-104(%rbp), %rax
 1738 0a72 4889C7   		movq	%rax, %rdi
 1739 0a75 E8000000 		call	_ZNSaIfED1Ev
 1739      00
 1740 0a7a 4889D8   		movq	%rbx, %rax
 1741 0a7d 4889C7   		movq	%rax, %rdi
 1742 0a80 E8000000 		call	_Unwind_Resume@PLT
 1742      00
 1743              	.LEHE43:
 1744              	.L95:
 1745 0a85 EB00     		jmp	.L88
 1746              	.L94:
 1747              	.L88:
  56:TestUnitTest++.cpp **** }
 1748              		.loc 4 56 0
 1749 0a87 4889C7   		movq	%rax, %rdi
 1750 0a8a E8000000 		call	__cxa_begin_catch@PLT
 1750      00
 1751              	.LEHB44:
 1752 0a8f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1752      00
 1753 0a94 488B18   		movq	(%rax), %rbx
 1754 0a97 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1754      00
  56:TestUnitTest++.cpp **** }
 1755              		.loc 4 56 0 is_stmt 0 discriminator 8
 1756 0a9c 488B08   		movq	(%rax), %rcx
 1757 0a9f 488D45C0 		leaq	-64(%rbp), %rax
 1758 0aa3 BA380000 		movl	$56, %edx
 1758      00
 1759 0aa8 4889CE   		movq	%rcx, %rsi
 1760 0aab 4889C7   		movq	%rax, %rdi
 1761 0aae E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1761      00
  56:TestUnitTest++.cpp **** }
 1762              		.loc 4 56 0 discriminator 12
 1763 0ab3 488D45C0 		leaq	-64(%rbp), %rax
 1764 0ab7 488D1500 		leaq	.LC29(%rip), %rdx
 1764      000000
 1765 0abe 4889C6   		movq	%rax, %rsi
 1766 0ac1 4889DF   		movq	%rbx, %rdi
 1767 0ac4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1767      00
 1768              	.LEHE44:
 1769              	.LEHB45:
  56:TestUnitTest++.cpp **** }
 1770              		.loc 4 56 0 discriminator 14
 1771 0ac9 E8000000 		call	__cxa_end_catch@PLT
 1771      00
 1772              	.LEHE45:
  56:TestUnitTest++.cpp **** }
 1773              		.loc 4 56 0
 1774 0ace E973FFFF 		jmp	.L89
 1774      FF
 1775              	.L97:
 1776 0ad3 4889C3   		movq	%rax, %rbx
 1777 0ad6 E8000000 		call	__cxa_end_catch@PLT
 1777      00
 1778 0adb EB03     		jmp	.L91
 1779              	.L96:
 1780 0add 4889C3   		movq	%rax, %rbx
 1781              	.L91:
  52:TestUnitTest++.cpp ****     for (int i = 0; i < 4; ++i)
 1782              		.loc 4 52 0 is_stmt 1
 1783 0ae0 488D45A0 		leaq	-96(%rbp), %rax
 1784 0ae4 4889C7   		movq	%rax, %rdi
 1785 0ae7 E8000000 		call	_ZNSt6vectorIfSaIfEED1Ev
 1785      00
 1786 0aec 4889D8   		movq	%rbx, %rax
 1787 0aef 4889C7   		movq	%rax, %rdi
 1788              	.LEHB46:
 1789 0af2 E8000000 		call	_Unwind_Resume@PLT
 1789      00
 1790              	.LEHE46:
 1791              	.L98:
 1792              		.loc 4 57 0
 1793 0af7 E8000000 		call	__stack_chk_fail@PLT
 1793      00
 1794              	.L92:
 1795 0afc 4883C478 		addq	$120, %rsp
 1796 0b00 5B       		popq	%rbx
 1797 0b01 5D       		popq	%rbp
 1798              		.cfi_def_cfa 7, 8
 1799 0b02 C3       		ret
 1800              		.cfi_endproc
 1801              	.LFE1391:
 1802              		.section	.gcc_except_table
 1803              		.align 4
 1804              	.LLSDA1391:
 1805 0108 FF       		.byte	0xff
 1806 0109 9B       		.byte	0x9b
 1807 010a 31       		.uleb128 .LLSDATT1391-.LLSDATTD1391
 1808              	.LLSDATTD1391:
 1809 010b 01       		.byte	0x1
 1810 010c 27       		.uleb128 .LLSDACSE1391-.LLSDACSB1391
 1811              	.LLSDACSB1391:
 1812 010d 45       		.uleb128 .LEHB40-.LFB1391
 1813 010e 05       		.uleb128 .LEHE40-.LEHB40
 1814 010f 8B02     		.uleb128 .L93-.LFB1391
 1815 0111 00       		.uleb128 0
 1816 0112 8701     		.uleb128 .LEHB41-.LFB1391
 1817 0114 1C       		.uleb128 .LEHE41-.LEHB41
 1818 0115 A702     		.uleb128 .L94-.LFB1391
 1819 0117 01       		.uleb128 0x1
 1820 0118 BE01     		.uleb128 .LEHB42-.LFB1391
 1821 011a 28       		.uleb128 .LEHE42-.LEHB42
 1822 011b A502     		.uleb128 .L95-.LFB1391
 1823 011d 01       		.uleb128 0x1
 1824 011e ED01     		.uleb128 .LEHB43-.LFB1391
 1825 0120 38       		.uleb128 .LEHE43-.LEHB43
 1826 0121 00       		.uleb128 0
 1827 0122 00       		.uleb128 0
 1828 0123 AF02     		.uleb128 .LEHB44-.LFB1391
 1829 0125 3A       		.uleb128 .LEHE44-.LEHB44
 1830 0126 F302     		.uleb128 .L97-.LFB1391
 1831 0128 00       		.uleb128 0
 1832 0129 E902     		.uleb128 .LEHB45-.LFB1391
 1833 012b 05       		.uleb128 .LEHE45-.LEHB45
 1834 012c FD02     		.uleb128 .L96-.LFB1391
 1835 012e 00       		.uleb128 0
 1836 012f 9203     		.uleb128 .LEHB46-.LFB1391
 1837 0131 05       		.uleb128 .LEHE46-.LEHB46
 1838 0132 00       		.uleb128 0
 1839 0133 00       		.uleb128 0
 1840              	.LLSDACSE1391:
 1841 0134 01       		.byte	0x1
 1842 0135 00       		.byte	0
 1843 0136 0000     		.align 4
 1844 0138 00000000 		.long	0
 1845              	
 1846              	.LLSDATT1391:
 1847              		.text
 1849              		.section	.rodata
 1850 026f 00       		.align 8
 1851              	.LC30:
 1852 0270 43686563 		.string	"CheckThrowMacroSucceedsOnCorrectException"
 1852      6B546872 
 1852      6F774D61 
 1852      63726F53 
 1852      75636365 
 1853              		.text
 1854 0b03 90       		.align 2
 1856              	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC2Ev:
 1857              	.LFB1393:
  58:TestUnitTest++.cpp **** 
  59:TestUnitTest++.cpp **** TEST(CheckThrowMacroSucceedsOnCorrectException)
 1858              		.loc 4 59 0
 1859              		.cfi_startproc
 1860 0b04 55       		pushq	%rbp
 1861              		.cfi_def_cfa_offset 16
 1862              		.cfi_offset 6, -16
 1863 0b05 4889E5   		movq	%rsp, %rbp
 1864              		.cfi_def_cfa_register 6
 1865 0b08 53       		pushq	%rbx
 1866 0b09 4883EC18 		subq	$24, %rsp
 1867              		.cfi_offset 3, -24
 1868 0b0d 48897DE8 		movq	%rdi, -24(%rbp)
 1869              	.LBB14:
 1870              		.loc 4 59 0
 1871 0b11 488B5DE8 		movq	-24(%rbp), %rbx
 1872 0b15 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1872      00
 1873 0b1a 41B83B00 		movl	$59, %r8d
 1873      0000
 1874 0b20 488D0D00 		leaq	.LC1(%rip), %rcx
 1874      000000
 1875 0b27 4889C2   		movq	%rax, %rdx
 1876 0b2a 488D3500 		leaq	.LC30(%rip), %rsi
 1876      000000
 1877 0b31 4889DF   		movq	%rbx, %rdi
 1878 0b34 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 1878      00
 1879 0b39 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE(%rip), %rdx
 1879      000000
 1880 0b40 488B45E8 		movq	-24(%rbp), %rax
 1881 0b44 488910   		movq	%rdx, (%rax)
 1882              	.LBE14:
 1883 0b47 90       		nop
 1884 0b48 4883C418 		addq	$24, %rsp
 1885 0b4c 5B       		popq	%rbx
 1886 0b4d 5D       		popq	%rbp
 1887              		.cfi_def_cfa 7, 8
 1888 0b4e C3       		ret
 1889              		.cfi_endproc
 1890              	.LFE1393:
 1892              		.set	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC1Ev,_ZN12_GLOBAL__N_145TestC
 1893              		.local	_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE
 1894              		.comm	_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE,56,32
 1895              		.local	_ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE
 1896              		.comm	_ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE,1,1
 1897              		.section	.rodata
 1898 029a 00000000 		.align 8
 1898      0000
 1899              	.LC31:
 1900 02a0 45787065 		.string	"Expected exception: \"TestException\" not thrown"
 1900      63746564 
 1900      20657863 
 1900      65707469 
 1900      6F6E3A20 
 1901              		.text
 1902 0b4f 90       		.align 2
 1904              	_ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEv:
 1905              	.LFB1395:
  60:TestUnitTest++.cpp **** {
 1906              		.loc 4 60 0
 1907              		.cfi_startproc
 1908              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1909              		.cfi_lsda 0x1b,.LLSDA1395
 1910 0b50 55       		pushq	%rbp
 1911              		.cfi_def_cfa_offset 16
 1912              		.cfi_offset 6, -16
 1913 0b51 4889E5   		movq	%rsp, %rbp
 1914              		.cfi_def_cfa_register 6
 1915 0b54 53       		pushq	%rbx
 1916 0b55 4883EC58 		subq	$88, %rsp
 1917              		.cfi_offset 3, -24
 1918 0b59 48897DA8 		movq	%rdi, -88(%rbp)
 1919              		.loc 4 60 0
 1920 0b5d 64488B04 		movq	%fs:40, %rax
 1920      25280000 
 1920      00
 1921 0b66 488945E8 		movq	%rax, -24(%rbp)
 1922 0b6a 31C0     		xorl	%eax, %eax
 1923              	.LBB15:
  61:TestUnitTest++.cpp ****     struct TestException {};
  62:TestUnitTest++.cpp ****     CHECK_THROW(throw TestException(), TestException);
 1924              		.loc 4 62 0
 1925 0b6c C645B700 		movb	$0, -73(%rbp)
 1926 0b70 BF010000 		movl	$1, %edi
 1926      00
 1927 0b75 E8000000 		call	__cxa_allocate_exception@PLT
 1927      00
 1928 0b7a BA000000 		movl	$0, %edx
 1928      00
 1929 0b7f 488D3500 		leaq	_ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExceptio
 1929      000000
 1930 0b86 4889C7   		movq	%rax, %rdi
 1931              	.LEHB47:
 1932 0b89 E8000000 		call	__cxa_throw@PLT
 1932      00
 1933              	.LEHE47:
 1934              	.L105:
 1935              		.loc 4 62 0 is_stmt 0 discriminator 4
 1936 0b8e 0FB645B7 		movzbl	-73(%rbp), %eax
 1937 0b92 83F001   		xorl	$1, %eax
 1938 0b95 84C0     		testb	%al, %al
 1939 0b97 7468     		je	.L109
 1940              	.LEHB48:
 1941              		.loc 4 62 0 discriminator 1
 1942 0b99 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1942      00
 1943 0b9e 488B18   		movq	(%rax), %rbx
 1944 0ba1 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1944      00
 1945 0ba6 488B08   		movq	(%rax), %rcx
 1946 0ba9 488D45C0 		leaq	-64(%rbp), %rax
 1947 0bad BA3E0000 		movl	$62, %edx
 1947      00
 1948 0bb2 4889CE   		movq	%rcx, %rsi
 1949 0bb5 4889C7   		movq	%rax, %rdi
 1950 0bb8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1950      00
 1951 0bbd 488D45C0 		leaq	-64(%rbp), %rax
 1952 0bc1 488D1500 		leaq	.LC31(%rip), %rdx
 1952      000000
 1953 0bc8 4889C6   		movq	%rax, %rsi
 1954 0bcb 4889DF   		movq	%rbx, %rdi
 1955 0bce E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1955      00
 1956              	.LBE15:
  63:TestUnitTest++.cpp **** }
 1957              		.loc 4 63 0 is_stmt 1 discriminator 1
 1958 0bd3 EB2C     		jmp	.L109
 1959              	.L107:
 1960 0bd5 4883FA01 		cmpq	$1, %rdx
 1961 0bd9 7517     		jne	.L108
 1962              	.LBB17:
 1963              	.LBB16:
  62:TestUnitTest++.cpp **** }
 1964              		.loc 4 62 0
 1965 0bdb 4889C7   		movq	%rax, %rdi
 1966 0bde E8000000 		call	__cxa_begin_catch@PLT
 1966      00
 1967 0be3 488945B8 		movq	%rax, -72(%rbp)
 1968 0be7 C645B701 		movb	$1, -73(%rbp)
 1969 0beb E8000000 		call	__cxa_end_catch@PLT
 1969      00
 1970 0bf0 EB9C     		jmp	.L105
 1971              	.L108:
 1972              	.LBE16:
  62:TestUnitTest++.cpp **** }
 1973              		.loc 4 62 0 is_stmt 0 discriminator 5
 1974 0bf2 4889C7   		movq	%rax, %rdi
 1975 0bf5 E8000000 		call	__cxa_begin_catch@PLT
 1975      00
 1976 0bfa E8000000 		call	__cxa_end_catch@PLT
 1976      00
 1977              	.LEHE48:
 1978 0bff EB8D     		jmp	.L105
 1979              	.L109:
 1980              	.LBE17:
 1981              		.loc 4 63 0 is_stmt 1
 1982 0c01 90       		nop
 1983 0c02 488B45E8 		movq	-24(%rbp), %rax
 1984 0c06 64483304 		xorq	%fs:40, %rax
 1984      25280000 
 1984      00
 1985 0c0f 7405     		je	.L106
 1986 0c11 E8000000 		call	__stack_chk_fail@PLT
 1986      00
 1987              	.L106:
 1988 0c16 4883C458 		addq	$88, %rsp
 1989 0c1a 5B       		popq	%rbx
 1990 0c1b 5D       		popq	%rbp
 1991              		.cfi_def_cfa 7, 8
 1992 0c1c C3       		ret
 1993              		.cfi_endproc
 1994              	.LFE1395:
 1995              		.section	.gcc_except_table
 1996              		.align 4
 1997              	.LLSDA1395:
 1998 013c FF       		.byte	0xff
 1999 013d 9B       		.byte	0x9b
 2000 013e 19       		.uleb128 .LLSDATT1395-.LLSDATTD1395
 2001              	.LLSDATTD1395:
 2002 013f 01       		.byte	0x1
 2003 0140 09       		.uleb128 .LLSDACSE1395-.LLSDACSB1395
 2004              	.LLSDACSB1395:
 2005 0141 39       		.uleb128 .LEHB47-.LFB1395
 2006 0142 05       		.uleb128 .LEHE47-.LEHB47
 2007 0143 8501     		.uleb128 .L107-.LFB1395
 2008 0145 03       		.uleb128 0x3
 2009 0146 49       		.uleb128 .LEHB48-.LFB1395
 2010 0147 66       		.uleb128 .LEHE48-.LEHB48
 2011 0148 00       		.uleb128 0
 2012 0149 00       		.uleb128 0
 2013              	.LLSDACSE1395:
 2014 014a 02       		.byte	0x2
 2015 014b 00       		.byte	0
 2016 014c 01       		.byte	0x1
 2017 014d 7D       		.byte	0x7d
 2018 014e 0000     		.align 4
 2019 0150 00000000 		.long	0
 2020              	
 2021 0154 00000000 		.long	.LDFCM0-.
 2022              	.LLSDATT1395:
 2023              		.text
 2025              		.section	.rodata
 2026              	.LC32:
 2027 02cf 43686563 		.string	"CheckAssertSucceeds"
 2027      6B417373 
 2027      65727453 
 2027      75636365 
 2027      65647300 
 2028              		.text
 2029 0c1d 90       		.align 2
 2031              	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsC2Ev:
 2032              	.LFB1397:
  64:TestUnitTest++.cpp **** 
  65:TestUnitTest++.cpp **** TEST(CheckAssertSucceeds)
 2033              		.loc 4 65 0
 2034              		.cfi_startproc
 2035 0c1e 55       		pushq	%rbp
 2036              		.cfi_def_cfa_offset 16
 2037              		.cfi_offset 6, -16
 2038 0c1f 4889E5   		movq	%rsp, %rbp
 2039              		.cfi_def_cfa_register 6
 2040 0c22 53       		pushq	%rbx
 2041 0c23 4883EC18 		subq	$24, %rsp
 2042              		.cfi_offset 3, -24
 2043 0c27 48897DE8 		movq	%rdi, -24(%rbp)
 2044              	.LBB18:
 2045              		.loc 4 65 0
 2046 0c2b 488B5DE8 		movq	-24(%rbp), %rbx
 2047 0c2f E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2047      00
 2048 0c34 41B84100 		movl	$65, %r8d
 2048      0000
 2049 0c3a 488D0D00 		leaq	.LC1(%rip), %rcx
 2049      000000
 2050 0c41 4889C2   		movq	%rax, %rdx
 2051 0c44 488D3500 		leaq	.LC32(%rip), %rsi
 2051      000000
 2052 0c4b 4889DF   		movq	%rbx, %rdi
 2053 0c4e E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2053      00
 2054 0c53 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE(%rip), %rdx
 2054      000000
 2055 0c5a 488B45E8 		movq	-24(%rbp), %rax
 2056 0c5e 488910   		movq	%rdx, (%rax)
 2057              	.LBE18:
 2058 0c61 90       		nop
 2059 0c62 4883C418 		addq	$24, %rsp
 2060 0c66 5B       		popq	%rbx
 2061 0c67 5D       		popq	%rbp
 2062              		.cfi_def_cfa 7, 8
 2063 0c68 C3       		ret
 2064              		.cfi_endproc
 2065              	.LFE1397:
 2067              		.set	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsC1Ev,_ZN12_GLOBAL__N_123TestCheckAssertSucceedsC2Ev
 2068              		.local	_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE
 2069              		.comm	_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE,56,32
 2070              		.local	_ZN12_GLOBAL__N_124adderCheckAssertSucceedsE
 2071              		.comm	_ZN12_GLOBAL__N_124adderCheckAssertSucceedsE,1,1
 2072              		.section	.rodata
 2073              	.LC33:
 2074 02e3 66696C65 		.string	"file"
 2074      00
 2075              	.LC34:
 2076 02e8 64657363 		.string	"desc"
 2076      00
 2077 02ed 000000   		.align 8
 2078              	.LC35:
 2079 02f0 45787065 		.string	"Expected exception: \"UnitTest::AssertException\" not thrown"
 2079      63746564 
 2079      20657863 
 2079      65707469 
 2079      6F6E3A20 
 2080              		.text
 2081 0c69 90       		.align 2
 2083              	_ZNK12_GLOBAL__N_123TestCheckAssertSucceeds7RunImplEv:
 2084              	.LFB1399:
  66:TestUnitTest++.cpp **** {
 2085              		.loc 4 66 0
 2086              		.cfi_startproc
 2087              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2088              		.cfi_lsda 0x1b,.LLSDA1399
 2089 0c6a 55       		pushq	%rbp
 2090              		.cfi_def_cfa_offset 16
 2091              		.cfi_offset 6, -16
 2092 0c6b 4889E5   		movq	%rsp, %rbp
 2093              		.cfi_def_cfa_register 6
 2094 0c6e 53       		pushq	%rbx
 2095 0c6f 4883EC58 		subq	$88, %rsp
 2096              		.cfi_offset 3, -24
 2097 0c73 48897DA8 		movq	%rdi, -88(%rbp)
 2098              		.loc 4 66 0
 2099 0c77 64488B04 		movq	%fs:40, %rax
 2099      25280000 
 2099      00
 2100 0c80 488945E8 		movq	%rax, -24(%rbp)
 2101 0c84 31C0     		xorl	%eax, %eax
 2102              	.LBB19:
  67:TestUnitTest++.cpp ****     CHECK_ASSERT(UnitTest::ReportAssert("desc", "file", 0));
 2103              		.loc 4 67 0
 2104 0c86 C645B700 		movb	$0, -73(%rbp)
 2105 0c8a BA000000 		movl	$0, %edx
 2105      00
 2106 0c8f 488D3500 		leaq	.LC33(%rip), %rsi
 2106      000000
 2107 0c96 488D3D00 		leaq	.LC34(%rip), %rdi
 2107      000000
 2108              	.LEHB49:
 2109 0c9d E8000000 		call	_ZN8UnitTest12ReportAssertEPKcS1_i@PLT
 2109      00
 2110              	.LEHE49:
 2111              	.L116:
 2112              		.loc 4 67 0 is_stmt 0 discriminator 1
 2113 0ca2 0FB645B7 		movzbl	-73(%rbp), %eax
 2114 0ca6 83F001   		xorl	$1, %eax
 2115 0ca9 84C0     		testb	%al, %al
 2116 0cab 7468     		je	.L120
 2117              	.LEHB50:
 2118              		.loc 4 67 0 discriminator 2
 2119 0cad E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2119      00
 2120 0cb2 488B18   		movq	(%rax), %rbx
 2121 0cb5 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2121      00
 2122 0cba 488B08   		movq	(%rax), %rcx
 2123 0cbd 488D45C0 		leaq	-64(%rbp), %rax
 2124 0cc1 BA430000 		movl	$67, %edx
 2124      00
 2125 0cc6 4889CE   		movq	%rcx, %rsi
 2126 0cc9 4889C7   		movq	%rax, %rdi
 2127 0ccc E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2127      00
 2128 0cd1 488D45C0 		leaq	-64(%rbp), %rax
 2129 0cd5 488D1500 		leaq	.LC35(%rip), %rdx
 2129      000000
 2130 0cdc 4889C6   		movq	%rax, %rsi
 2131 0cdf 4889DF   		movq	%rbx, %rdi
 2132 0ce2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2132      00
 2133              	.LBE19:
  68:TestUnitTest++.cpp **** }
 2134              		.loc 4 68 0 is_stmt 1 discriminator 2
 2135 0ce7 EB2C     		jmp	.L120
 2136              	.L118:
 2137 0ce9 4883FA01 		cmpq	$1, %rdx
 2138 0ced 7517     		jne	.L119
 2139              	.LBB21:
 2140              	.LBB20:
  67:TestUnitTest++.cpp ****     CHECK_ASSERT(UnitTest::ReportAssert("desc", "file", 0));
 2141              		.loc 4 67 0 discriminator 5
 2142 0cef 4889C7   		movq	%rax, %rdi
 2143 0cf2 E8000000 		call	__cxa_begin_catch@PLT
 2143      00
 2144 0cf7 488945B8 		movq	%rax, -72(%rbp)
 2145 0cfb C645B701 		movb	$1, -73(%rbp)
 2146 0cff E8000000 		call	__cxa_end_catch@PLT
 2146      00
 2147 0d04 EB9C     		jmp	.L116
 2148              	.L119:
 2149              	.LBE20:
  67:TestUnitTest++.cpp ****     CHECK_ASSERT(UnitTest::ReportAssert("desc", "file", 0));
 2150              		.loc 4 67 0 is_stmt 0 discriminator 6
 2151 0d06 4889C7   		movq	%rax, %rdi
 2152 0d09 E8000000 		call	__cxa_begin_catch@PLT
 2152      00
 2153 0d0e E8000000 		call	__cxa_end_catch@PLT
 2153      00
 2154              	.LEHE50:
 2155 0d13 EB8D     		jmp	.L116
 2156              	.L120:
 2157              	.LBE21:
 2158              		.loc 4 68 0 is_stmt 1
 2159 0d15 90       		nop
 2160 0d16 488B45E8 		movq	-24(%rbp), %rax
 2161 0d1a 64483304 		xorq	%fs:40, %rax
 2161      25280000 
 2161      00
 2162 0d23 7405     		je	.L117
 2163 0d25 E8000000 		call	__stack_chk_fail@PLT
 2163      00
 2164              	.L117:
 2165 0d2a 4883C458 		addq	$88, %rsp
 2166 0d2e 5B       		popq	%rbx
 2167 0d2f 5D       		popq	%rbp
 2168              		.cfi_def_cfa 7, 8
 2169 0d30 C3       		ret
 2170              		.cfi_endproc
 2171              	.LFE1399:
 2172              		.section	.gcc_except_table
 2173              		.align 4
 2174              	.LLSDA1399:
 2175 0158 FF       		.byte	0xff
 2176 0159 9B       		.byte	0x9b
 2177 015a 19       		.uleb128 .LLSDATT1399-.LLSDATTD1399
 2178              	.LLSDATTD1399:
 2179 015b 01       		.byte	0x1
 2180 015c 08       		.uleb128 .LLSDACSE1399-.LLSDACSB1399
 2181              	.LLSDACSB1399:
 2182 015d 33       		.uleb128 .LEHB49-.LFB1399
 2183 015e 05       		.uleb128 .LEHE49-.LEHB49
 2184 015f 7F       		.uleb128 .L118-.LFB1399
 2185 0160 03       		.uleb128 0x3
 2186 0161 43       		.uleb128 .LEHB50-.LFB1399
 2187 0162 66       		.uleb128 .LEHE50-.LEHB50
 2188 0163 00       		.uleb128 0
 2189 0164 00       		.uleb128 0
 2190              	.LLSDACSE1399:
 2191 0165 02       		.byte	0x2
 2192 0166 00       		.byte	0
 2193 0167 01       		.byte	0x1
 2194 0168 7D       		.byte	0x7d
 2195 0169 000000   		.align 4
 2196 016c 00000000 		.long	0
 2197              	
 2198 0170 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 2199              	.LLSDATT1399:
 2200              		.text
 2202              		.section	.rodata
 2203 032b 00000000 		.align 8
 2203      00
 2204              	.LC36:
 2205 0330 43686563 		.string	"CheckThrowMacroFailsOnMissingException"
 2205      6B546872 
 2205      6F774D61 
 2205      63726F46 
 2205      61696C73 
 2206              		.text
 2207 0d31 90       		.align 2
 2209              	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC2Ev:
 2210              	.LFB1401:
  69:TestUnitTest++.cpp **** 
  70:TestUnitTest++.cpp **** TEST(CheckThrowMacroFailsOnMissingException)
 2211              		.loc 4 70 0
 2212              		.cfi_startproc
 2213 0d32 55       		pushq	%rbp
 2214              		.cfi_def_cfa_offset 16
 2215              		.cfi_offset 6, -16
 2216 0d33 4889E5   		movq	%rsp, %rbp
 2217              		.cfi_def_cfa_register 6
 2218 0d36 53       		pushq	%rbx
 2219 0d37 4883EC18 		subq	$24, %rsp
 2220              		.cfi_offset 3, -24
 2221 0d3b 48897DE8 		movq	%rdi, -24(%rbp)
 2222              	.LBB22:
 2223              		.loc 4 70 0
 2224 0d3f 488B5DE8 		movq	-24(%rbp), %rbx
 2225 0d43 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2225      00
 2226 0d48 41B84600 		movl	$70, %r8d
 2226      0000
 2227 0d4e 488D0D00 		leaq	.LC1(%rip), %rcx
 2227      000000
 2228 0d55 4889C2   		movq	%rax, %rdx
 2229 0d58 488D3500 		leaq	.LC36(%rip), %rsi
 2229      000000
 2230 0d5f 4889DF   		movq	%rbx, %rdi
 2231 0d62 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2231      00
 2232 0d67 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE(%rip), %rdx
 2232      000000
 2233 0d6e 488B45E8 		movq	-24(%rbp), %rax
 2234 0d72 488910   		movq	%rdx, (%rax)
 2235              	.LBE22:
 2236 0d75 90       		nop
 2237 0d76 4883C418 		addq	$24, %rsp
 2238 0d7a 5B       		popq	%rbx
 2239 0d7b 5D       		popq	%rbp
 2240              		.cfi_def_cfa 7, 8
 2241 0d7c C3       		ret
 2242              		.cfi_endproc
 2243              	.LFE1401:
 2245              		.set	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC1Ev,_ZN12_GLOBAL__N_142TestChec
 2246              		.local	_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE
 2247              		.comm	_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE,56,32
 2248              		.local	_ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE
 2249              		.comm	_ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE,1,1
 2250              		.section	.rodata
 2251              	.LC37:
 2252 0357 00       		.string	""
 2253              	.LC38:
 2254 0358 6E6F7468 		.string	"nothrow"
 2254      726F7700 
 2255              		.text
 2256 0d7d 90       		.align 2
 2258              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC2Ev:
 2259              	.LFB1405:
  71:TestUnitTest++.cpp **** {
  72:TestUnitTest++.cpp ****     class NoThrowTest : public UnitTest::Test
  73:TestUnitTest++.cpp ****     {
  74:TestUnitTest++.cpp ****     public:
  75:TestUnitTest++.cpp ****         NoThrowTest() : Test("nothrow") {}
 2260              		.loc 4 75 0
 2261              		.cfi_startproc
 2262 0d7e 55       		pushq	%rbp
 2263              		.cfi_def_cfa_offset 16
 2264              		.cfi_offset 6, -16
 2265 0d7f 4889E5   		movq	%rsp, %rbp
 2266              		.cfi_def_cfa_register 6
 2267 0d82 4883EC10 		subq	$16, %rsp
 2268 0d86 48897DF8 		movq	%rdi, -8(%rbp)
 2269              	.LBB23:
 2270              		.loc 4 75 0
 2271 0d8a 488B45F8 		movq	-8(%rbp), %rax
 2272 0d8e 41B80000 		movl	$0, %r8d
 2272      0000
 2273 0d94 488D0D00 		leaq	.LC37(%rip), %rcx
 2273      000000
 2274 0d9b 488D1500 		leaq	.LC0(%rip), %rdx
 2274      000000
 2275 0da2 488D3500 		leaq	.LC38(%rip), %rsi
 2275      000000
 2276 0da9 4889C7   		movq	%rax, %rdi
 2277 0dac E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2277      00
 2278 0db1 488D1500 		leaq	16+_ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest(
 2278      000000
 2279 0db8 488B45F8 		movq	-8(%rbp), %rax
 2280 0dbc 488910   		movq	%rdx, (%rax)
 2281              	.LBE23:
 2282 0dbf 90       		nop
 2283 0dc0 C9       		leave
 2284              		.cfi_def_cfa 7, 8
 2285 0dc1 C3       		ret
 2286              		.cfi_endproc
 2287              	.LFE1405:
 2289              		.set	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC1Ev,
 2290              		.align 2
 2292              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest9DontThrow
 2293              	.LFB1407:
  76:TestUnitTest++.cpp ****         void DontThrow() const
 2294              		.loc 4 76 0
 2295              		.cfi_startproc
 2296 0dc2 55       		pushq	%rbp
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 6, -16
 2299 0dc3 4889E5   		movq	%rsp, %rbp
 2300              		.cfi_def_cfa_register 6
 2301 0dc6 48897DF8 		movq	%rdi, -8(%rbp)
  77:TestUnitTest++.cpp ****         {
  78:TestUnitTest++.cpp ****         }
 2302              		.loc 4 78 0
 2303 0dca 90       		nop
 2304 0dcb 5D       		popq	%rbp
 2305              		.cfi_def_cfa 7, 8
 2306 0dcc C3       		ret
 2307              		.cfi_endproc
 2308              	.LFE1407:
 2310              		.section	.rodata
 2311              		.align 8
 2312              	.LC39:
 2313 0360 45787065 		.string	"Expected exception: \"int\" not thrown"
 2313      63746564 
 2313      20657863 
 2313      65707469 
 2313      6F6E3A20 
 2314              		.text
 2315 0dcd 90       		.align 2
 2317              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest7RunImplEv
 2318              	.LFB1408:
  79:TestUnitTest++.cpp **** 
  80:TestUnitTest++.cpp ****         virtual void RunImpl() const
 2319              		.loc 4 80 0
 2320              		.cfi_startproc
 2321 0dce 55       		pushq	%rbp
 2322              		.cfi_def_cfa_offset 16
 2323              		.cfi_offset 6, -16
 2324 0dcf 4889E5   		movq	%rsp, %rbp
 2325              		.cfi_def_cfa_register 6
 2326 0dd2 53       		pushq	%rbx
 2327 0dd3 4883EC58 		subq	$88, %rsp
 2328              		.cfi_offset 3, -24
 2329 0dd7 48897DA8 		movq	%rdi, -88(%rbp)
 2330              		.loc 4 80 0
 2331 0ddb 64488B04 		movq	%fs:40, %rax
 2331      25280000 
 2331      00
 2332 0de4 488945E8 		movq	%rax, -24(%rbp)
 2333 0de8 31C0     		xorl	%eax, %eax
 2334              	.LBB24:
  81:TestUnitTest++.cpp ****         {
  82:TestUnitTest++.cpp ****             CHECK_THROW(DontThrow(), int);
 2335              		.loc 4 82 0
 2336 0dea C645BF00 		movb	$0, -65(%rbp)
 2337 0dee 488B45A8 		movq	-88(%rbp), %rax
 2338 0df2 4889C7   		movq	%rax, %rdi
 2339 0df5 E8C8FFFF 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest9Don
 2339      FF
 2340 0dfa 0FB645BF 		movzbl	-65(%rbp), %eax
 2341 0dfe 83F001   		xorl	$1, %eax
 2342 0e01 84C0     		testb	%al, %al
 2343 0e03 743A     		je	.L127
 2344              		.loc 4 82 0 is_stmt 0 discriminator 1
 2345 0e05 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2345      00
 2346 0e0a 488B18   		movq	(%rax), %rbx
 2347 0e0d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2347      00
 2348 0e12 488B08   		movq	(%rax), %rcx
 2349 0e15 488D45C0 		leaq	-64(%rbp), %rax
 2350 0e19 BA520000 		movl	$82, %edx
 2350      00
 2351 0e1e 4889CE   		movq	%rcx, %rsi
 2352 0e21 4889C7   		movq	%rax, %rdi
 2353 0e24 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2353      00
 2354 0e29 488D45C0 		leaq	-64(%rbp), %rax
 2355 0e2d 488D1500 		leaq	.LC39(%rip), %rdx
 2355      000000
 2356 0e34 4889C6   		movq	%rax, %rsi
 2357 0e37 4889DF   		movq	%rbx, %rdi
 2358 0e3a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2358      00
 2359              	.L127:
 2360              	.LBE24:
  83:TestUnitTest++.cpp ****         }
 2361              		.loc 4 83 0 is_stmt 1
 2362 0e3f 90       		nop
 2363 0e40 488B45E8 		movq	-24(%rbp), %rax
 2364 0e44 64483304 		xorq	%fs:40, %rax
 2364      25280000 
 2364      00
 2365 0e4d 7405     		je	.L126
 2366 0e4f E8000000 		call	__stack_chk_fail@PLT
 2366      00
 2367              	.L126:
 2368 0e54 4883C458 		addq	$88, %rsp
 2369 0e58 5B       		popq	%rbx
 2370 0e59 5D       		popq	%rbp
 2371              		.cfi_def_cfa 7, 8
 2372 0e5a C3       		ret
 2373              		.cfi_endproc
 2374              	.LFE1408:
 2376              		.section	.rodata
 2377 0385 000000   		.align 8
 2378              	.LC40:
 2379 0388 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, results.GetFailureCount())"
 2379      6E646C65 
 2379      64206578 
 2379      63657074 
 2379      696F6E20 
 2380              		.text
 2381 0e5b 90       		.align 2
 2383              	_ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEv:
 2384              	.LFB1403:
  71:TestUnitTest++.cpp ****     class NoThrowTest : public UnitTest::Test
 2385              		.loc 4 71 0
 2386              		.cfi_startproc
 2387              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2388              		.cfi_lsda 0x1b,.LLSDA1403
 2389 0e5c 55       		pushq	%rbp
 2390              		.cfi_def_cfa_offset 16
 2391              		.cfi_offset 6, -16
 2392 0e5d 4889E5   		movq	%rsp, %rbp
 2393              		.cfi_def_cfa_register 6
 2394 0e60 53       		pushq	%rbx
 2395 0e61 4881EC98 		subq	$152, %rsp
 2395      000000
 2396              		.cfi_offset 3, -24
 2397 0e68 4889BD68 		movq	%rdi, -152(%rbp)
 2397      FFFFFF
  71:TestUnitTest++.cpp ****     class NoThrowTest : public UnitTest::Test
 2398              		.loc 4 71 0
 2399 0e6f 64488B04 		movq	%fs:40, %rax
 2399      25280000 
 2399      00
 2400 0e78 488945E8 		movq	%rax, -24(%rbp)
 2401 0e7c 31C0     		xorl	%eax, %eax
  84:TestUnitTest++.cpp ****     };
  85:TestUnitTest++.cpp **** 
  86:TestUnitTest++.cpp ****     UnitTest::TestResults results;
 2402              		.loc 4 86 0
 2403 0e7e 488D4590 		leaq	-112(%rbp), %rax
 2404 0e82 BE000000 		movl	$0, %esi
 2404      00
 2405 0e87 4889C7   		movq	%rax, %rdi
 2406              	.LEHB51:
 2407 0e8a E8000000 		call	_ZN8UnitTest11TestResultsC1EPNS_12TestReporterE@PLT
 2407      00
 2408              	.LBB25:
  87:TestUnitTest++.cpp **** 	{
  88:TestUnitTest++.cpp **** 		ScopedCurrentTest scopedResults(results);
 2409              		.loc 4 88 0
 2410 0e8f 488D4D90 		leaq	-112(%rbp), %rcx
 2411 0e93 488D4580 		leaq	-128(%rbp), %rax
 2412 0e97 BA000000 		movl	$0, %edx
 2412      00
 2413 0e9c 4889CE   		movq	%rcx, %rsi
 2414 0e9f 4889C7   		movq	%rax, %rdi
 2415 0ea2 E8000000 		call	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 2415      00
 2416              	.LEHE51:
  89:TestUnitTest++.cpp **** 
  90:TestUnitTest++.cpp **** 		NoThrowTest test;
 2417              		.loc 4 90 0
 2418 0ea7 488D45B0 		leaq	-80(%rbp), %rax
 2419 0eab 4889C7   		movq	%rax, %rdi
 2420              	.LEHB52:
 2421 0eae E8CBFEFF 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC1Ev
 2421      FF
 2422              	.LEHE52:
  91:TestUnitTest++.cpp **** 		test.Run();
 2423              		.loc 4 91 0
 2424 0eb3 488D45B0 		leaq	-80(%rbp), %rax
 2425 0eb7 4889C7   		movq	%rax, %rdi
 2426              	.LEHB53:
 2427 0eba E8000000 		call	_ZN8UnitTest4Test3RunEv@PLT
 2427      00
 2428              	.LEHE53:
  90:TestUnitTest++.cpp **** 		test.Run();
 2429              		.loc 4 90 0
 2430 0ebf 488D45B0 		leaq	-80(%rbp), %rax
 2431 0ec3 4889C7   		movq	%rax, %rdi
 2432              	.LEHB54:
 2433 0ec6 E8B91600 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
 2433      00
 2434              	.LEHE54:
  88:TestUnitTest++.cpp **** 
 2435              		.loc 4 88 0
 2436 0ecb 488D4580 		leaq	-128(%rbp), %rax
 2437 0ecf 4889C7   		movq	%rax, %rdi
 2438              	.LEHB55:
 2439 0ed2 E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2439      00
 2440              	.LEHE55:
 2441              	.LEHB56:
 2442              	.LBE25:
  92:TestUnitTest++.cpp **** 	}
  93:TestUnitTest++.cpp **** 
  94:TestUnitTest++.cpp **** 	CHECK_EQUAL(1, results.GetFailureCount());
 2443              		.loc 4 94 0
 2444 0ed7 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2444      00
 2445 0edc 488B08   		movq	(%rax), %rcx
 2446 0edf 488D45B0 		leaq	-80(%rbp), %rax
 2447 0ee3 BA5E0000 		movl	$94, %edx
 2447      00
 2448 0ee8 4889CE   		movq	%rcx, %rsi
 2449 0eeb 4889C7   		movq	%rax, %rdi
 2450 0eee E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2450      00
 2451              		.loc 4 94 0 is_stmt 0 discriminator 2
 2452 0ef3 488D4590 		leaq	-112(%rbp), %rax
 2453 0ef7 4889C7   		movq	%rax, %rdi
 2454 0efa E8000000 		call	_ZNK8UnitTest11TestResults15GetFailureCountEv@PLT
 2454      00
 2455              	.LEHE56:
 2456 0eff 894580   		movl	%eax, -128(%rbp)
 2457 0f02 C7857CFF 		movl	$1, -132(%rbp)
 2457      FFFF0100 
 2457      0000
 2458              	.LEHB57:
 2459 0f0c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2459      00
 2460              		.loc 4 94 0 discriminator 4
 2461 0f11 488B00   		movq	(%rax), %rax
 2462 0f14 488D4DB0 		leaq	-80(%rbp), %rcx
 2463 0f18 488D5580 		leaq	-128(%rbp), %rdx
 2464 0f1c 488DB57C 		leaq	-132(%rbp), %rsi
 2464      FFFFFF
 2465 0f23 4889C7   		movq	%rax, %rdi
 2466 0f26 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2466      00
 2467              	.LEHE57:
  95:TestUnitTest++.cpp **** }
 2468              		.loc 4 95 0 is_stmt 1
 2469 0f2b E9890000 		jmp	.L128
 2469      00
 2470              	.L137:
 2471 0f30 4889C3   		movq	%rax, %rbx
 2472              	.LBB26:
  90:TestUnitTest++.cpp **** 		test.Run();
 2473              		.loc 4 90 0
 2474 0f33 488D45B0 		leaq	-80(%rbp), %rax
 2475 0f37 4889C7   		movq	%rax, %rdi
 2476 0f3a E8451600 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
 2476      00
 2477 0f3f EB03     		jmp	.L130
 2478              	.L136:
 2479 0f41 4889C3   		movq	%rax, %rbx
 2480              	.L130:
  88:TestUnitTest++.cpp **** 
 2481              		.loc 4 88 0
 2482 0f44 488D4580 		leaq	-128(%rbp), %rax
 2483 0f48 4889C7   		movq	%rax, %rdi
 2484 0f4b E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2484      00
 2485 0f50 4889D8   		movq	%rbx, %rax
 2486 0f53 4889C7   		movq	%rax, %rdi
 2487              	.LEHB58:
 2488 0f56 E8000000 		call	_Unwind_Resume@PLT
 2488      00
 2489              	.LEHE58:
 2490              	.L139:
 2491 0f5b EB00     		jmp	.L132
 2492              	.L138:
 2493              	.L132:
 2494              	.LBE26:
  94:TestUnitTest++.cpp **** }
 2495              		.loc 4 94 0
 2496 0f5d 4889C7   		movq	%rax, %rdi
 2497 0f60 E8000000 		call	__cxa_begin_catch@PLT
 2497      00
 2498              	.LEHB59:
 2499 0f65 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2499      00
 2500 0f6a 488B18   		movq	(%rax), %rbx
 2501 0f6d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2501      00
  94:TestUnitTest++.cpp **** }
 2502              		.loc 4 94 0 is_stmt 0 discriminator 10
 2503 0f72 488B08   		movq	(%rax), %rcx
 2504 0f75 488D45B0 		leaq	-80(%rbp), %rax
 2505 0f79 BA5E0000 		movl	$94, %edx
 2505      00
 2506 0f7e 4889CE   		movq	%rcx, %rsi
 2507 0f81 4889C7   		movq	%rax, %rdi
 2508 0f84 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2508      00
  94:TestUnitTest++.cpp **** }
 2509              		.loc 4 94 0 discriminator 14
 2510 0f89 488D45B0 		leaq	-80(%rbp), %rax
 2511 0f8d 488D1500 		leaq	.LC40(%rip), %rdx
 2511      000000
 2512 0f94 4889C6   		movq	%rax, %rsi
 2513 0f97 4889DF   		movq	%rbx, %rdi
 2514 0f9a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2514      00
 2515              	.LEHE59:
 2516              	.LEHB60:
  94:TestUnitTest++.cpp **** }
 2517              		.loc 4 94 0 discriminator 16
 2518 0f9f E8000000 		call	__cxa_end_catch@PLT
 2518      00
 2519              	.LEHE60:
 2520              		.loc 4 95 0 is_stmt 1 discriminator 16
 2521 0fa4 EB13     		jmp	.L128
 2522              	.L140:
 2523 0fa6 4889C3   		movq	%rax, %rbx
  94:TestUnitTest++.cpp **** }
 2524              		.loc 4 94 0
 2525 0fa9 E8000000 		call	__cxa_end_catch@PLT
 2525      00
 2526 0fae 4889D8   		movq	%rbx, %rax
 2527 0fb1 4889C7   		movq	%rax, %rdi
 2528              	.LEHB61:
 2529 0fb4 E8000000 		call	_Unwind_Resume@PLT
 2529      00
 2530              	.LEHE61:
 2531              	.L128:
 2532              		.loc 4 95 0
 2533 0fb9 488B45E8 		movq	-24(%rbp), %rax
 2534 0fbd 64483304 		xorq	%fs:40, %rax
 2534      25280000 
 2534      00
 2535 0fc6 7405     		je	.L135
 2536 0fc8 E8000000 		call	__stack_chk_fail@PLT
 2536      00
 2537              	.L135:
 2538 0fcd 4881C498 		addq	$152, %rsp
 2538      000000
 2539 0fd4 5B       		popq	%rbx
 2540 0fd5 5D       		popq	%rbp
 2541              		.cfi_def_cfa 7, 8
 2542 0fd6 C3       		ret
 2543              		.cfi_endproc
 2544              	.LFE1403:
 2545              		.section	.gcc_except_table
 2546              		.align 4
 2547              	.LLSDA1403:
 2548 0174 FF       		.byte	0xff
 2549 0175 9B       		.byte	0x9b
 2550 0176 41       		.uleb128 .LLSDATT1403-.LLSDATTD1403
 2551              	.LLSDATTD1403:
 2552 0177 01       		.byte	0x1
 2553 0178 37       		.uleb128 .LLSDACSE1403-.LLSDACSB1403
 2554              	.LLSDACSB1403:
 2555 0179 2E       		.uleb128 .LEHB51-.LFB1403
 2556 017a 1D       		.uleb128 .LEHE51-.LEHB51
 2557 017b 00       		.uleb128 0
 2558 017c 00       		.uleb128 0
 2559 017d 52       		.uleb128 .LEHB52-.LFB1403
 2560 017e 05       		.uleb128 .LEHE52-.LEHB52
 2561 017f E501     		.uleb128 .L136-.LFB1403
 2562 0181 00       		.uleb128 0
 2563 0182 5E       		.uleb128 .LEHB53-.LFB1403
 2564 0183 05       		.uleb128 .LEHE53-.LEHB53
 2565 0184 D401     		.uleb128 .L137-.LFB1403
 2566 0186 00       		.uleb128 0
 2567 0187 6A       		.uleb128 .LEHB54-.LFB1403
 2568 0188 05       		.uleb128 .LEHE54-.LEHB54
 2569 0189 E501     		.uleb128 .L136-.LFB1403
 2570 018b 00       		.uleb128 0
 2571 018c 76       		.uleb128 .LEHB55-.LFB1403
 2572 018d 05       		.uleb128 .LEHE55-.LEHB55
 2573 018e 00       		.uleb128 0
 2574 018f 00       		.uleb128 0
 2575 0190 7B       		.uleb128 .LEHB56-.LFB1403
 2576 0191 28       		.uleb128 .LEHE56-.LEHB56
 2577 0192 8102     		.uleb128 .L138-.LFB1403
 2578 0194 01       		.uleb128 0x1
 2579 0195 B001     		.uleb128 .LEHB57-.LFB1403
 2580 0197 1F       		.uleb128 .LEHE57-.LEHB57
 2581 0198 FF01     		.uleb128 .L139-.LFB1403
 2582 019a 03       		.uleb128 0x3
 2583 019b FA01     		.uleb128 .LEHB58-.LFB1403
 2584 019d 05       		.uleb128 .LEHE58-.LEHB58
 2585 019e 00       		.uleb128 0
 2586 019f 00       		.uleb128 0
 2587 01a0 8902     		.uleb128 .LEHB59-.LFB1403
 2588 01a2 3A       		.uleb128 .LEHE59-.LEHB59
 2589 01a3 CA02     		.uleb128 .L140-.LFB1403
 2590 01a5 00       		.uleb128 0
 2591 01a6 C302     		.uleb128 .LEHB60-.LFB1403
 2592 01a8 05       		.uleb128 .LEHE60-.LEHB60
 2593 01a9 00       		.uleb128 0
 2594 01aa 00       		.uleb128 0
 2595 01ab D802     		.uleb128 .LEHB61-.LFB1403
 2596 01ad 05       		.uleb128 .LEHE61-.LEHB61
 2597 01ae 00       		.uleb128 0
 2598 01af 00       		.uleb128 0
 2599              	.LLSDACSE1403:
 2600 01b0 01       		.byte	0x1
 2601 01b1 00       		.byte	0
 2602 01b2 00       		.byte	0
 2603 01b3 7D       		.byte	0x7d
 2604              		.align 4
 2605 01b4 00000000 		.long	0
 2606              	
 2607              	.LLSDATT1403:
 2608              		.text
 2610              		.section	.rodata
 2611 03c9 00000000 		.align 8
 2611      000000
 2612              	.LC41:
 2613 03d0 43686563 		.string	"CheckThrowMacroFailsOnWrongException"
 2613      6B546872 
 2613      6F774D61 
 2613      63726F46 
 2613      61696C73 
 2614              		.text
 2615 0fd7 90       		.align 2
 2617              	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC2Ev:
 2618              	.LFB1410:
  96:TestUnitTest++.cpp **** 
  97:TestUnitTest++.cpp **** TEST(CheckThrowMacroFailsOnWrongException)
 2619              		.loc 4 97 0
 2620              		.cfi_startproc
 2621 0fd8 55       		pushq	%rbp
 2622              		.cfi_def_cfa_offset 16
 2623              		.cfi_offset 6, -16
 2624 0fd9 4889E5   		movq	%rsp, %rbp
 2625              		.cfi_def_cfa_register 6
 2626 0fdc 53       		pushq	%rbx
 2627 0fdd 4883EC18 		subq	$24, %rsp
 2628              		.cfi_offset 3, -24
 2629 0fe1 48897DE8 		movq	%rdi, -24(%rbp)
 2630              	.LBB27:
 2631              		.loc 4 97 0
 2632 0fe5 488B5DE8 		movq	-24(%rbp), %rbx
 2633 0fe9 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2633      00
 2634 0fee 41B86100 		movl	$97, %r8d
 2634      0000
 2635 0ff4 488D0D00 		leaq	.LC1(%rip), %rcx
 2635      000000
 2636 0ffb 4889C2   		movq	%rax, %rdx
 2637 0ffe 488D3500 		leaq	.LC41(%rip), %rsi
 2637      000000
 2638 1005 4889DF   		movq	%rbx, %rdi
 2639 1008 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2639      00
 2640 100d 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE(%rip), %rdx
 2640      000000
 2641 1014 488B45E8 		movq	-24(%rbp), %rax
 2642 1018 488910   		movq	%rdx, (%rax)
 2643              	.LBE27:
 2644 101b 90       		nop
 2645 101c 4883C418 		addq	$24, %rsp
 2646 1020 5B       		popq	%rbx
 2647 1021 5D       		popq	%rbp
 2648              		.cfi_def_cfa 7, 8
 2649 1022 C3       		ret
 2650              		.cfi_endproc
 2651              	.LFE1410:
 2653              		.set	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC1Ev,_ZN12_GLOBAL__N_140TestCheckT
 2654              		.local	_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE
 2655              		.comm	_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE,56,32
 2656              		.local	_ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE
 2657              		.comm	_ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE,1,1
 2658              		.section	.rodata
 2659              	.LC42:
 2660 03f5 77726F6E 		.string	"wrongthrow"
 2660      67746872 
 2660      6F7700
 2661              		.text
 2662 1023 90       		.align 2
 2664              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC2Ev:
 2665              	.LFB1414:
  98:TestUnitTest++.cpp **** {
  99:TestUnitTest++.cpp ****     class WrongThrowTest : public UnitTest::Test
 100:TestUnitTest++.cpp ****     {
 101:TestUnitTest++.cpp ****     public:
 102:TestUnitTest++.cpp ****         WrongThrowTest() : Test("wrongthrow") {}
 2666              		.loc 4 102 0
 2667              		.cfi_startproc
 2668 1024 55       		pushq	%rbp
 2669              		.cfi_def_cfa_offset 16
 2670              		.cfi_offset 6, -16
 2671 1025 4889E5   		movq	%rsp, %rbp
 2672              		.cfi_def_cfa_register 6
 2673 1028 4883EC10 		subq	$16, %rsp
 2674 102c 48897DF8 		movq	%rdi, -8(%rbp)
 2675              	.LBB28:
 2676              		.loc 4 102 0
 2677 1030 488B45F8 		movq	-8(%rbp), %rax
 2678 1034 41B80000 		movl	$0, %r8d
 2678      0000
 2679 103a 488D0D00 		leaq	.LC37(%rip), %rcx
 2679      000000
 2680 1041 488D1500 		leaq	.LC0(%rip), %rdx
 2680      000000
 2681 1048 488D3500 		leaq	.LC42(%rip), %rsi
 2681      000000
 2682 104f 4889C7   		movq	%rax, %rdi
 2683 1052 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2683      00
 2684 1057 488D1500 		leaq	16+_ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
 2684      000000
 2685 105e 488B45F8 		movq	-8(%rbp), %rax
 2686 1062 488910   		movq	%rdx, (%rax)
 2687              	.LBE28:
 2688 1065 90       		nop
 2689 1066 C9       		leave
 2690              		.cfi_def_cfa 7, 8
 2691 1067 C3       		ret
 2692              		.cfi_endproc
 2693              	.LFE1414:
 2695              		.set	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC1Ev
 2696              		.section	.rodata
 2697              	.LC43:
 2698 0400 6F6F7073 		.string	"oops"
 2698      00
 2699              		.text
 2700              		.align 2
 2702              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvENK14WrongThrowTest7RunImplE
 2703              	.LFB1416:
 103:TestUnitTest++.cpp ****         virtual void RunImpl() const
 2704              		.loc 4 103 0
 2705              		.cfi_startproc
 2706              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2707              		.cfi_lsda 0x1b,.LLSDA1416
 2708 1068 55       		pushq	%rbp
 2709              		.cfi_def_cfa_offset 16
 2710              		.cfi_offset 6, -16
 2711 1069 4889E5   		movq	%rsp, %rbp
 2712              		.cfi_def_cfa_register 6
 2713 106c 53       		pushq	%rbx
 2714 106d 4883EC58 		subq	$88, %rsp
 2715              		.cfi_offset 3, -24
 2716 1071 48897DA8 		movq	%rdi, -88(%rbp)
 2717              		.loc 4 103 0
 2718 1075 64488B04 		movq	%fs:40, %rax
 2718      25280000 
 2718      00
 2719 107e 488945E8 		movq	%rax, -24(%rbp)
 2720 1082 31C0     		xorl	%eax, %eax
 2721              	.LBB29:
 104:TestUnitTest++.cpp ****         {
 105:TestUnitTest++.cpp ****             CHECK_THROW(throw "oops", int);
 2722              		.loc 4 105 0
 2723 1084 C645B700 		movb	$0, -73(%rbp)
 2724 1088 BF080000 		movl	$8, %edi
 2724      00
 2725 108d E8000000 		call	__cxa_allocate_exception@PLT
 2725      00
 2726 1092 488D1500 		leaq	.LC43(%rip), %rdx
 2726      000000
 2727 1099 488910   		movq	%rdx, (%rax)
 2728 109c BA000000 		movl	$0, %edx
 2728      00
 2729 10a1 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 2729      000000
 2730 10a8 4889C7   		movq	%rax, %rdi
 2731              	.LEHB62:
 2732 10ab E8000000 		call	__cxa_throw@PLT
 2732      00
 2733              	.LEHE62:
 2734              	.L148:
 2735              		.loc 4 105 0 is_stmt 0 discriminator 4
 2736 10b0 0FB645B7 		movzbl	-73(%rbp), %eax
 2737 10b4 83F001   		xorl	$1, %eax
 2738 10b7 84C0     		testb	%al, %al
 2739 10b9 7468     		je	.L152
 2740              	.LEHB63:
 2741              		.loc 4 105 0 discriminator 1
 2742 10bb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2742      00
 2743 10c0 488B18   		movq	(%rax), %rbx
 2744 10c3 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2744      00
 2745 10c8 488B08   		movq	(%rax), %rcx
 2746 10cb 488D45C0 		leaq	-64(%rbp), %rax
 2747 10cf BA690000 		movl	$105, %edx
 2747      00
 2748 10d4 4889CE   		movq	%rcx, %rsi
 2749 10d7 4889C7   		movq	%rax, %rdi
 2750 10da E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2750      00
 2751 10df 488D45C0 		leaq	-64(%rbp), %rax
 2752 10e3 488D1500 		leaq	.LC39(%rip), %rdx
 2752      000000
 2753 10ea 4889C6   		movq	%rax, %rsi
 2754 10ed 4889DF   		movq	%rbx, %rdi
 2755 10f0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2755      00
 2756              	.LBE29:
 106:TestUnitTest++.cpp ****         }
 2757              		.loc 4 106 0 is_stmt 1 discriminator 1
 2758 10f5 EB2C     		jmp	.L152
 2759              	.L150:
 2760 10f7 4883FA01 		cmpq	$1, %rdx
 2761 10fb 7517     		jne	.L151
 2762              	.LBB31:
 2763              	.LBB30:
 105:TestUnitTest++.cpp ****         }
 2764              		.loc 4 105 0
 2765 10fd 4889C7   		movq	%rax, %rdi
 2766 1100 E8000000 		call	__cxa_begin_catch@PLT
 2766      00
 2767 1105 488945B8 		movq	%rax, -72(%rbp)
 2768 1109 C645B701 		movb	$1, -73(%rbp)
 2769 110d E8000000 		call	__cxa_end_catch@PLT
 2769      00
 2770 1112 EB9C     		jmp	.L148
 2771              	.L151:
 2772              	.LBE30:
 105:TestUnitTest++.cpp ****         }
 2773              		.loc 4 105 0 is_stmt 0 discriminator 5
 2774 1114 4889C7   		movq	%rax, %rdi
 2775 1117 E8000000 		call	__cxa_begin_catch@PLT
 2775      00
 2776 111c E8000000 		call	__cxa_end_catch@PLT
 2776      00
 2777              	.LEHE63:
 2778 1121 EB8D     		jmp	.L148
 2779              	.L152:
 2780              	.LBE31:
 2781              		.loc 4 106 0 is_stmt 1
 2782 1123 90       		nop
 2783 1124 488B45E8 		movq	-24(%rbp), %rax
 2784 1128 64483304 		xorq	%fs:40, %rax
 2784      25280000 
 2784      00
 2785 1131 7405     		je	.L149
 2786 1133 E8000000 		call	__stack_chk_fail@PLT
 2786      00
 2787              	.L149:
 2788 1138 4883C458 		addq	$88, %rsp
 2789 113c 5B       		popq	%rbx
 2790 113d 5D       		popq	%rbp
 2791              		.cfi_def_cfa 7, 8
 2792 113e C3       		ret
 2793              		.cfi_endproc
 2794              	.LFE1416:
 2795              		.section	.gcc_except_table
 2796              		.align 4
 2797              	.LLSDA1416:
 2798 01b8 FF       		.byte	0xff
 2799 01b9 9B       		.byte	0x9b
 2800 01ba 19       		.uleb128 .LLSDATT1416-.LLSDATTD1416
 2801              	.LLSDATTD1416:
 2802 01bb 01       		.byte	0x1
 2803 01bc 09       		.uleb128 .LLSDACSE1416-.LLSDACSB1416
 2804              	.LLSDACSB1416:
 2805 01bd 43       		.uleb128 .LEHB62-.LFB1416
 2806 01be 05       		.uleb128 .LEHE62-.LEHB62
 2807 01bf 8F01     		.uleb128 .L150-.LFB1416
 2808 01c1 03       		.uleb128 0x3
 2809 01c2 53       		.uleb128 .LEHB63-.LFB1416
 2810 01c3 66       		.uleb128 .LEHE63-.LEHB63
 2811 01c4 00       		.uleb128 0
 2812 01c5 00       		.uleb128 0
 2813              	.LLSDACSE1416:
 2814 01c6 02       		.byte	0x2
 2815 01c7 00       		.byte	0
 2816 01c8 01       		.byte	0x1
 2817 01c9 7D       		.byte	0x7d
 2818 01ca 0000     		.align 4
 2819 01cc 00000000 		.long	0
 2820              	
 2821 01d0 00000000 		.long	DW.ref._ZTIi-.
 2822              	.LLSDATT1416:
 2823              		.text
 2825 113f 90       		.align 2
 2827              	_ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEv:
 2828              	.LFB1412:
  98:TestUnitTest++.cpp ****     class WrongThrowTest : public UnitTest::Test
 2829              		.loc 4 98 0
 2830              		.cfi_startproc
 2831              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2832              		.cfi_lsda 0x1b,.LLSDA1412
 2833 1140 55       		pushq	%rbp
 2834              		.cfi_def_cfa_offset 16
 2835              		.cfi_offset 6, -16
 2836 1141 4889E5   		movq	%rsp, %rbp
 2837              		.cfi_def_cfa_register 6
 2838 1144 53       		pushq	%rbx
 2839 1145 4881EC98 		subq	$152, %rsp
 2839      000000
 2840              		.cfi_offset 3, -24
 2841 114c 4889BD68 		movq	%rdi, -152(%rbp)
 2841      FFFFFF
  98:TestUnitTest++.cpp ****     class WrongThrowTest : public UnitTest::Test
 2842              		.loc 4 98 0
 2843 1153 64488B04 		movq	%fs:40, %rax
 2843      25280000 
 2843      00
 2844 115c 488945E8 		movq	%rax, -24(%rbp)
 2845 1160 31C0     		xorl	%eax, %eax
 107:TestUnitTest++.cpp ****     };
 108:TestUnitTest++.cpp **** 
 109:TestUnitTest++.cpp ****     UnitTest::TestResults results;
 2846              		.loc 4 109 0
 2847 1162 488D4590 		leaq	-112(%rbp), %rax
 2848 1166 BE000000 		movl	$0, %esi
 2848      00
 2849 116b 4889C7   		movq	%rax, %rdi
 2850              	.LEHB64:
 2851 116e E8000000 		call	_ZN8UnitTest11TestResultsC1EPNS_12TestReporterE@PLT
 2851      00
 2852              	.LBB32:
 110:TestUnitTest++.cpp **** 	{
 111:TestUnitTest++.cpp **** 		ScopedCurrentTest scopedResults(results);
 2853              		.loc 4 111 0
 2854 1173 488D4D90 		leaq	-112(%rbp), %rcx
 2855 1177 488D4580 		leaq	-128(%rbp), %rax
 2856 117b BA000000 		movl	$0, %edx
 2856      00
 2857 1180 4889CE   		movq	%rcx, %rsi
 2858 1183 4889C7   		movq	%rax, %rdi
 2859 1186 E8000000 		call	_ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
 2859      00
 2860              	.LEHE64:
 112:TestUnitTest++.cpp **** 
 113:TestUnitTest++.cpp **** 		WrongThrowTest test;
 2861              		.loc 4 113 0
 2862 118b 488D45B0 		leaq	-80(%rbp), %rax
 2863 118f 4889C7   		movq	%rax, %rdi
 2864              	.LEHB65:
 2865 1192 E88DFEFF 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC1Ev
 2865      FF
 2866              	.LEHE65:
 114:TestUnitTest++.cpp **** 		test.Run();
 2867              		.loc 4 114 0
 2868 1197 488D45B0 		leaq	-80(%rbp), %rax
 2869 119b 4889C7   		movq	%rax, %rdi
 2870              	.LEHB66:
 2871 119e E8000000 		call	_ZN8UnitTest4Test3RunEv@PLT
 2871      00
 2872              	.LEHE66:
 113:TestUnitTest++.cpp **** 		test.Run();
 2873              		.loc 4 113 0
 2874 11a3 488D45B0 		leaq	-80(%rbp), %rax
 2875 11a7 4889C7   		movq	%rax, %rdi
 2876              	.LEHB67:
 2877 11aa E8F11200 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
 2877      00
 2878              	.LEHE67:
 111:TestUnitTest++.cpp **** 
 2879              		.loc 4 111 0
 2880 11af 488D4580 		leaq	-128(%rbp), %rax
 2881 11b3 4889C7   		movq	%rax, %rdi
 2882              	.LEHB68:
 2883 11b6 E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2883      00
 2884              	.LEHE68:
 2885              	.LEHB69:
 2886              	.LBE32:
 115:TestUnitTest++.cpp **** 	}
 116:TestUnitTest++.cpp **** 
 117:TestUnitTest++.cpp **** 	CHECK_EQUAL(1, results.GetFailureCount());
 2887              		.loc 4 117 0
 2888 11bb E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2888      00
 2889 11c0 488B08   		movq	(%rax), %rcx
 2890 11c3 488D45B0 		leaq	-80(%rbp), %rax
 2891 11c7 BA750000 		movl	$117, %edx
 2891      00
 2892 11cc 4889CE   		movq	%rcx, %rsi
 2893 11cf 4889C7   		movq	%rax, %rdi
 2894 11d2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2894      00
 2895              		.loc 4 117 0 is_stmt 0 discriminator 2
 2896 11d7 488D4590 		leaq	-112(%rbp), %rax
 2897 11db 4889C7   		movq	%rax, %rdi
 2898 11de E8000000 		call	_ZNK8UnitTest11TestResults15GetFailureCountEv@PLT
 2898      00
 2899              	.LEHE69:
 2900 11e3 894580   		movl	%eax, -128(%rbp)
 2901 11e6 C7857CFF 		movl	$1, -132(%rbp)
 2901      FFFF0100 
 2901      0000
 2902              	.LEHB70:
 2903 11f0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2903      00
 2904              		.loc 4 117 0 discriminator 4
 2905 11f5 488B00   		movq	(%rax), %rax
 2906 11f8 488D4DB0 		leaq	-80(%rbp), %rcx
 2907 11fc 488D5580 		leaq	-128(%rbp), %rdx
 2908 1200 488DB57C 		leaq	-132(%rbp), %rsi
 2908      FFFFFF
 2909 1207 4889C7   		movq	%rax, %rdi
 2910 120a E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 2910      00
 2911              	.LEHE70:
 118:TestUnitTest++.cpp **** }
 2912              		.loc 4 118 0 is_stmt 1
 2913 120f E9890000 		jmp	.L153
 2913      00
 2914              	.L162:
 2915 1214 4889C3   		movq	%rax, %rbx
 2916              	.LBB33:
 113:TestUnitTest++.cpp **** 		test.Run();
 2917              		.loc 4 113 0
 2918 1217 488D45B0 		leaq	-80(%rbp), %rax
 2919 121b 4889C7   		movq	%rax, %rdi
 2920 121e E87D1200 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
 2920      00
 2921 1223 EB03     		jmp	.L155
 2922              	.L161:
 2923 1225 4889C3   		movq	%rax, %rbx
 2924              	.L155:
 111:TestUnitTest++.cpp **** 
 2925              		.loc 4 111 0
 2926 1228 488D4580 		leaq	-128(%rbp), %rax
 2927 122c 4889C7   		movq	%rax, %rdi
 2928 122f E8000000 		call	_ZN17ScopedCurrentTestD1Ev
 2928      00
 2929 1234 4889D8   		movq	%rbx, %rax
 2930 1237 4889C7   		movq	%rax, %rdi
 2931              	.LEHB71:
 2932 123a E8000000 		call	_Unwind_Resume@PLT
 2932      00
 2933              	.LEHE71:
 2934              	.L164:
 2935 123f EB00     		jmp	.L157
 2936              	.L163:
 2937              	.L157:
 2938              	.LBE33:
 117:TestUnitTest++.cpp **** }
 2939              		.loc 4 117 0
 2940 1241 4889C7   		movq	%rax, %rdi
 2941 1244 E8000000 		call	__cxa_begin_catch@PLT
 2941      00
 2942              	.LEHB72:
 2943 1249 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2943      00
 2944 124e 488B18   		movq	(%rax), %rbx
 2945 1251 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2945      00
 117:TestUnitTest++.cpp **** }
 2946              		.loc 4 117 0 is_stmt 0 discriminator 10
 2947 1256 488B08   		movq	(%rax), %rcx
 2948 1259 488D45B0 		leaq	-80(%rbp), %rax
 2949 125d BA750000 		movl	$117, %edx
 2949      00
 2950 1262 4889CE   		movq	%rcx, %rsi
 2951 1265 4889C7   		movq	%rax, %rdi
 2952 1268 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2952      00
 117:TestUnitTest++.cpp **** }
 2953              		.loc 4 117 0 discriminator 14
 2954 126d 488D45B0 		leaq	-80(%rbp), %rax
 2955 1271 488D1500 		leaq	.LC40(%rip), %rdx
 2955      000000
 2956 1278 4889C6   		movq	%rax, %rsi
 2957 127b 4889DF   		movq	%rbx, %rdi
 2958 127e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2958      00
 2959              	.LEHE72:
 2960              	.LEHB73:
 117:TestUnitTest++.cpp **** }
 2961              		.loc 4 117 0 discriminator 16
 2962 1283 E8000000 		call	__cxa_end_catch@PLT
 2962      00
 2963              	.LEHE73:
 2964              		.loc 4 118 0 is_stmt 1 discriminator 16
 2965 1288 EB13     		jmp	.L153
 2966              	.L165:
 2967 128a 4889C3   		movq	%rax, %rbx
 117:TestUnitTest++.cpp **** }
 2968              		.loc 4 117 0
 2969 128d E8000000 		call	__cxa_end_catch@PLT
 2969      00
 2970 1292 4889D8   		movq	%rbx, %rax
 2971 1295 4889C7   		movq	%rax, %rdi
 2972              	.LEHB74:
 2973 1298 E8000000 		call	_Unwind_Resume@PLT
 2973      00
 2974              	.LEHE74:
 2975              	.L153:
 2976              		.loc 4 118 0
 2977 129d 488B45E8 		movq	-24(%rbp), %rax
 2978 12a1 64483304 		xorq	%fs:40, %rax
 2978      25280000 
 2978      00
 2979 12aa 7405     		je	.L160
 2980 12ac E8000000 		call	__stack_chk_fail@PLT
 2980      00
 2981              	.L160:
 2982 12b1 4881C498 		addq	$152, %rsp
 2982      000000
 2983 12b8 5B       		popq	%rbx
 2984 12b9 5D       		popq	%rbp
 2985              		.cfi_def_cfa 7, 8
 2986 12ba C3       		ret
 2987              		.cfi_endproc
 2988              	.LFE1412:
 2989              		.section	.gcc_except_table
 2990              		.align 4
 2991              	.LLSDA1412:
 2992 01d4 FF       		.byte	0xff
 2993 01d5 9B       		.byte	0x9b
 2994 01d6 41       		.uleb128 .LLSDATT1412-.LLSDATTD1412
 2995              	.LLSDATTD1412:
 2996 01d7 01       		.byte	0x1
 2997 01d8 37       		.uleb128 .LLSDACSE1412-.LLSDACSB1412
 2998              	.LLSDACSB1412:
 2999 01d9 2E       		.uleb128 .LEHB64-.LFB1412
 3000 01da 1D       		.uleb128 .LEHE64-.LEHB64
 3001 01db 00       		.uleb128 0
 3002 01dc 00       		.uleb128 0
 3003 01dd 52       		.uleb128 .LEHB65-.LFB1412
 3004 01de 05       		.uleb128 .LEHE65-.LEHB65
 3005 01df E501     		.uleb128 .L161-.LFB1412
 3006 01e1 00       		.uleb128 0
 3007 01e2 5E       		.uleb128 .LEHB66-.LFB1412
 3008 01e3 05       		.uleb128 .LEHE66-.LEHB66
 3009 01e4 D401     		.uleb128 .L162-.LFB1412
 3010 01e6 00       		.uleb128 0
 3011 01e7 6A       		.uleb128 .LEHB67-.LFB1412
 3012 01e8 05       		.uleb128 .LEHE67-.LEHB67
 3013 01e9 E501     		.uleb128 .L161-.LFB1412
 3014 01eb 00       		.uleb128 0
 3015 01ec 76       		.uleb128 .LEHB68-.LFB1412
 3016 01ed 05       		.uleb128 .LEHE68-.LEHB68
 3017 01ee 00       		.uleb128 0
 3018 01ef 00       		.uleb128 0
 3019 01f0 7B       		.uleb128 .LEHB69-.LFB1412
 3020 01f1 28       		.uleb128 .LEHE69-.LEHB69
 3021 01f2 8102     		.uleb128 .L163-.LFB1412
 3022 01f4 01       		.uleb128 0x1
 3023 01f5 B001     		.uleb128 .LEHB70-.LFB1412
 3024 01f7 1F       		.uleb128 .LEHE70-.LEHB70
 3025 01f8 FF01     		.uleb128 .L164-.LFB1412
 3026 01fa 03       		.uleb128 0x3
 3027 01fb FA01     		.uleb128 .LEHB71-.LFB1412
 3028 01fd 05       		.uleb128 .LEHE71-.LEHB71
 3029 01fe 00       		.uleb128 0
 3030 01ff 00       		.uleb128 0
 3031 0200 8902     		.uleb128 .LEHB72-.LFB1412
 3032 0202 3A       		.uleb128 .LEHE72-.LEHB72
 3033 0203 CA02     		.uleb128 .L165-.LFB1412
 3034 0205 00       		.uleb128 0
 3035 0206 C302     		.uleb128 .LEHB73-.LFB1412
 3036 0208 05       		.uleb128 .LEHE73-.LEHB73
 3037 0209 00       		.uleb128 0
 3038 020a 00       		.uleb128 0
 3039 020b D802     		.uleb128 .LEHB74-.LFB1412
 3040 020d 05       		.uleb128 .LEHE74-.LEHB74
 3041 020e 00       		.uleb128 0
 3042 020f 00       		.uleb128 0
 3043              	.LLSDACSE1412:
 3044 0210 01       		.byte	0x1
 3045 0211 00       		.byte	0
 3046 0212 00       		.byte	0
 3047 0213 7D       		.byte	0x7d
 3048              		.align 4
 3049 0214 00000000 		.long	0
 3050              	
 3051              	.LLSDATT1412:
 3052              		.text
 3054 12bb 90       		.align 2
 3056              	_ZN12_GLOBAL__N_113SimpleFixtureC2Ev:
 3057              	.LFB1418:
 119:TestUnitTest++.cpp **** 
 120:TestUnitTest++.cpp **** struct SimpleFixture
 121:TestUnitTest++.cpp **** {
 122:TestUnitTest++.cpp ****     SimpleFixture()
 3058              		.loc 4 122 0
 3059              		.cfi_startproc
 3060 12bc 55       		pushq	%rbp
 3061              		.cfi_def_cfa_offset 16
 3062              		.cfi_offset 6, -16
 3063 12bd 4889E5   		movq	%rsp, %rbp
 3064              		.cfi_def_cfa_register 6
 3065 12c0 48897DF8 		movq	%rdi, -8(%rbp)
 3066              	.LBB34:
 123:TestUnitTest++.cpp ****     {
 124:TestUnitTest++.cpp ****         ++instanceCount;
 3067              		.loc 4 124 0
 3068 12c4 8B050000 		movl	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip), %eax
 3068      0000
 3069 12ca 83C001   		addl	$1, %eax
 3070 12cd 89050000 		movl	%eax, _ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip)
 3070      0000
 3071              	.LBE34:
 125:TestUnitTest++.cpp ****     }
 3072              		.loc 4 125 0
 3073 12d3 90       		nop
 3074 12d4 5D       		popq	%rbp
 3075              		.cfi_def_cfa 7, 8
 3076 12d5 C3       		ret
 3077              		.cfi_endproc
 3078              	.LFE1418:
 3080              		.align 2
 3082              	_ZN12_GLOBAL__N_113SimpleFixtureD2Ev:
 3083              	.LFB1421:
 126:TestUnitTest++.cpp ****     ~SimpleFixture()
 3084              		.loc 4 126 0
 3085              		.cfi_startproc
 3086 12d6 55       		pushq	%rbp
 3087              		.cfi_def_cfa_offset 16
 3088              		.cfi_offset 6, -16
 3089 12d7 4889E5   		movq	%rsp, %rbp
 3090              		.cfi_def_cfa_register 6
 3091 12da 48897DF8 		movq	%rdi, -8(%rbp)
 3092              	.LBB35:
 127:TestUnitTest++.cpp ****     {
 128:TestUnitTest++.cpp ****         --instanceCount;
 3093              		.loc 4 128 0
 3094 12de 8B050000 		movl	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip), %eax
 3094      0000
 3095 12e4 83E801   		subl	$1, %eax
 3096 12e7 89050000 		movl	%eax, _ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip)
 3096      0000
 3097              	.LBE35:
 129:TestUnitTest++.cpp ****     }
 3098              		.loc 4 129 0
 3099 12ed 90       		nop
 3100 12ee 5D       		popq	%rbp
 3101              		.cfi_def_cfa 7, 8
 3102 12ef C3       		ret
 3103              		.cfi_endproc
 3104              	.LFE1421:
 3106              		.local	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE
 3107              		.comm	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE,4,4
 3108              		.align 2
 3110              	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC2ERKN8UnitTest11TestDetailsE:
 3111              	.LFB1424:
 130:TestUnitTest++.cpp **** 
 131:TestUnitTest++.cpp ****     static int instanceCount;
 132:TestUnitTest++.cpp **** };
 133:TestUnitTest++.cpp **** 
 134:TestUnitTest++.cpp **** int SimpleFixture::instanceCount = 0;
 135:TestUnitTest++.cpp **** 
 136:TestUnitTest++.cpp **** TEST_FIXTURE(SimpleFixture, DefaultFixtureCtorIsCalled)
 3112              		.loc 4 136 0
 3113              		.cfi_startproc
 3114 12f0 55       		pushq	%rbp
 3115              		.cfi_def_cfa_offset 16
 3116              		.cfi_offset 6, -16
 3117 12f1 4889E5   		movq	%rsp, %rbp
 3118              		.cfi_def_cfa_register 6
 3119 12f4 4883EC10 		subq	$16, %rsp
 3120 12f8 48897DF8 		movq	%rdi, -8(%rbp)
 3121 12fc 488975F0 		movq	%rsi, -16(%rbp)
 3122              	.LBB36:
 3123              		.loc 4 136 0
 3124 1300 488B45F8 		movq	-8(%rbp), %rax
 3125 1304 4889C7   		movq	%rax, %rdi
 3126 1307 E8B0FFFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureC2Ev
 3126      FF
 3127 130c 488B45F8 		movq	-8(%rbp), %rax
 3128 1310 488B55F0 		movq	-16(%rbp), %rdx
 3129 1314 488910   		movq	%rdx, (%rax)
 3130              	.LBE36:
 3131 1317 90       		nop
 3132 1318 C9       		leave
 3133              		.cfi_def_cfa 7, 8
 3134 1319 C3       		ret
 3135              		.cfi_endproc
 3136              	.LFE1424:
 3138              		.set	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC1ERKN8UnitTest11TestDetailsE
 3139              		.section	.rodata
 3140              	.LC44:
 3141 0405 44656661 		.string	"DefaultFixtureCtorIsCalled"
 3141      756C7446 
 3141      69787475 
 3141      72654374 
 3141      6F724973 
 3142              		.text
 3143              		.align 2
 3145              	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC2Ev:
 3146              	.LFB1427:
 3147              		.loc 4 136 0
 3148              		.cfi_startproc
 3149 131a 55       		pushq	%rbp
 3150              		.cfi_def_cfa_offset 16
 3151              		.cfi_offset 6, -16
 3152 131b 4889E5   		movq	%rsp, %rbp
 3153              		.cfi_def_cfa_register 6
 3154 131e 53       		pushq	%rbx
 3155 131f 4883EC18 		subq	$24, %rsp
 3156              		.cfi_offset 3, -24
 3157 1323 48897DE8 		movq	%rdi, -24(%rbp)
 3158              	.LBB37:
 3159              		.loc 4 136 0
 3160 1327 488B5DE8 		movq	-24(%rbp), %rbx
 3161 132b E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3161      00
 3162 1330 41B88800 		movl	$136, %r8d
 3162      0000
 3163 1336 488D0D00 		leaq	.LC1(%rip), %rcx
 3163      000000
 3164 133d 4889C2   		movq	%rax, %rdx
 3165 1340 488D3500 		leaq	.LC44(%rip), %rsi
 3165      000000
 3166 1347 4889DF   		movq	%rbx, %rdi
 3167 134a E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 3167      00
 3168 134f 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE(%rip), %rdx
 3168      000000
 3169 1356 488B45E8 		movq	-24(%rbp), %rax
 3170 135a 488910   		movq	%rdx, (%rax)
 3171              	.LBE37:
 3172 135d 90       		nop
 3173 135e 4883C418 		addq	$24, %rsp
 3174 1362 5B       		popq	%rbx
 3175 1363 5D       		popq	%rbp
 3176              		.cfi_def_cfa 7, 8
 3177 1364 C3       		ret
 3178              		.cfi_endproc
 3179              	.LFE1427:
 3181              		.set	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC1Ev,_ZN12_GLOBAL__N_143TestSim
 3182              		.local	_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE
 3183              		.comm	_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE,56,32
 3184              		.local	_ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE
 3185              		.comm	_ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE,1,1
 3186 1365 90       		.align 2
 3188              	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD2Ev:
 3189              	.LFB1431:
 3190              		.loc 4 136 0
 3191              		.cfi_startproc
 3192 1366 55       		pushq	%rbp
 3193              		.cfi_def_cfa_offset 16
 3194              		.cfi_offset 6, -16
 3195 1367 4889E5   		movq	%rsp, %rbp
 3196              		.cfi_def_cfa_register 6
 3197 136a 4883EC08 		subq	$8, %rsp
 3198 136e 48897DF8 		movq	%rdi, -8(%rbp)
 3199              	.LBB38:
 3200              		.loc 4 136 0
 3201 1372 488B45F8 		movq	-8(%rbp), %rax
 3202 1376 4889C7   		movq	%rax, %rdi
 3203 1379 E858FFFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureD2Ev
 3203      FF
 3204              	.LBE38:
 3205 137e 90       		nop
 3206 137f C9       		leave
 3207              		.cfi_def_cfa 7, 8
 3208 1380 C3       		ret
 3209              		.cfi_endproc
 3210              	.LFE1431:
 3212              		.set	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD1Ev,_ZN12_GLOBAL__N_145Simpl
 3213              		.section	.rodata
 3214              	.LC45:
 3215 0420 556E6861 		.string	"Unhandled exception: "
 3215      6E646C65 
 3215      64206578 
 3215      63657074 
 3215      696F6E3A 
 3216 0436 0000     		.align 8
 3217              	.LC46:
 3218 0438 556E6861 		.string	"Unhandled exception while destroying fixture SimpleFixture"
 3218      6E646C65 
 3218      64206578 
 3218      63657074 
 3218      696F6E20 
 3219 0473 00000000 		.align 8
 3219      00
 3220              	.LC47:
 3221 0478 556E6861 		.string	"Unhandled exception while constructing fixture SimpleFixture"
 3221      6E646C65 
 3221      64206578 
 3221      63657074 
 3221      696F6E20 
 3222              		.text
 3223 1381 90       		.align 2
 3225              	_ZNK12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalled7RunImplEv:
 3226              	.LFB1429:
 3227              		.loc 4 136 0
 3228              		.cfi_startproc
 3229              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3230              		.cfi_lsda 0x1b,.LLSDA1429
 3231 1382 55       		pushq	%rbp
 3232              		.cfi_def_cfa_offset 16
 3233              		.cfi_offset 6, -16
 3234 1383 4889E5   		movq	%rsp, %rbp
 3235              		.cfi_def_cfa_register 6
 3236 1386 4155     		pushq	%r13
 3237 1388 4154     		pushq	%r12
 3238 138a 53       		pushq	%rbx
 3239 138b 4881ECF8 		subq	$504, %rsp
 3239      010000
 3240              		.cfi_offset 13, -24
 3241              		.cfi_offset 12, -32
 3242              		.cfi_offset 3, -40
 3243 1392 4889BDF8 		movq	%rdi, -520(%rbp)
 3243      FDFFFF
 3244              		.loc 4 136 0
 3245 1399 64488B04 		movq	%fs:40, %rax
 3245      25280000 
 3245      00
 3246 13a2 488945D8 		movq	%rax, -40(%rbp)
 3247 13a6 31C0     		xorl	%eax, %eax
 3248 13a8 C6850FFE 		movb	$0, -497(%rbp)
 3248      FFFF00
 3249              	.LBB39:
 3250 13af 488B85F8 		movq	-520(%rbp), %rax
 3250      FDFFFF
 3251 13b6 488D5008 		leaq	8(%rax), %rdx
 3252 13ba 488D8520 		leaq	-480(%rbp), %rax
 3252      FEFFFF
 3253 13c1 4889D6   		movq	%rdx, %rsi
 3254 13c4 4889C7   		movq	%rax, %rdi
 3255 13c7 E824FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC1ERKN8UnitTest11TestDetailsE
 3255      FF
 3256 13cc C6850FFE 		movb	$1, -497(%rbp)
 3256      FFFF01
 3257 13d3 488B85F8 		movq	-520(%rbp), %rax
 3257      FDFFFF
 3258 13da 488D5008 		leaq	8(%rax), %rdx
 3259 13de 488D8520 		leaq	-480(%rbp), %rax
 3259      FEFFFF
 3260 13e5 4889D6   		movq	%rdx, %rsi
 3261 13e8 4889C7   		movq	%rax, %rdi
 3262              	.LEHB75:
 3263 13eb E8550900 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperEEEvR
 3263      00
 3264              	.LEHE75:
 3265              		.loc 4 136 0 is_stmt 0 discriminator 2
 3266 13f0 488D8520 		leaq	-480(%rbp), %rax
 3266      FEFFFF
 3267 13f7 4889C7   		movq	%rax, %rdi
 3268 13fa E867FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD1Ev
 3268      FF
 3269              	.LBE39:
 3270 13ff E9670200 		jmp	.L171
 3270      00
 3271              	.L184:
 3272 1404 4989C4   		movq	%rax, %r12
 3273 1407 4889D3   		movq	%rdx, %rbx
 3274              	.LBB40:
 3275              		.loc 4 136 0
 3276 140a 488D8520 		leaq	-480(%rbp), %rax
 3276      FEFFFF
 3277 1411 4889C7   		movq	%rax, %rdi
 3278 1414 E84DFFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD1Ev
 3278      FF
 3279 1419 4C89E0   		movq	%r12, %rax
 3280 141c 4889DA   		movq	%rbx, %rdx
 3281 141f 4883FA01 		cmpq	$1, %rdx
 3282 1423 740F     		je	.L174
 3283 1425 4883FA02 		cmpq	$2, %rdx
 3284 1429 0F84A700 		je	.L175
 3284      0000
 3285 142f E94A0100 		jmp	.L189
 3285      00
 3286              	.L174:
 3287              	.LBE40:
 3288              	.LBB41:
 3289 1434 4889C7   		movq	%rax, %rdi
 3290 1437 E8000000 		call	__cxa_begin_catch@PLT
 3290      00
 3291 143c 48898518 		movq	%rax, -488(%rbp)
 3291      FEFFFF
 3292              	.LEHB76:
 3293 1443 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3293      00
 3294 1448 488B18   		movq	(%rax), %rbx
 3295 144b 488B8518 		movq	-488(%rbp), %rax
 3295      FEFFFF
 3296 1452 488B00   		movq	(%rax), %rax
 3297 1455 4883C010 		addq	$16, %rax
 3298 1459 488B00   		movq	(%rax), %rax
 3299 145c 488B9518 		movq	-488(%rbp), %rdx
 3299      FEFFFF
 3300 1463 4889D7   		movq	%rdx, %rdi
 3301 1466 FFD0     		call	*%rax
 3302              	.LVL0:
 3303 1468 4989C4   		movq	%rax, %r12
 3304 146b 488B8518 		movq	-488(%rbp), %rax
 3304      FEFFFF
 3305 1472 4889C7   		movq	%rax, %rdi
 3306 1475 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 3306      00
 3307              		.loc 4 136 0 discriminator 4
 3308 147a 4189C5   		movl	%eax, %r13d
 3309 147d 488B8518 		movq	-488(%rbp), %rax
 3309      FEFFFF
 3310 1484 4889C7   		movq	%rax, %rdi
 3311 1487 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 3311      00
 3312              		.loc 4 136 0 discriminator 6
 3313 148c 4889C1   		movq	%rax, %rcx
 3314 148f 488B85F8 		movq	-520(%rbp), %rax
 3314      FDFFFF
 3315 1496 488B5008 		movq	8(%rax), %rdx
 3316 149a 488B85F8 		movq	-520(%rbp), %rax
 3316      FDFFFF
 3317 14a1 488B7010 		movq	16(%rax), %rsi
 3318 14a5 488D8520 		leaq	-480(%rbp), %rax
 3318      FEFFFF
 3319 14ac 4589E8   		movl	%r13d, %r8d
 3320 14af 4889C7   		movq	%rax, %rdi
 3321 14b2 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 3321      00
 3322              		.loc 4 136 0 discriminator 10
 3323 14b7 488D8520 		leaq	-480(%rbp), %rax
 3323      FEFFFF
 3324 14be 4C89E2   		movq	%r12, %rdx
 3325 14c1 4889C6   		movq	%rax, %rsi
 3326 14c4 4889DF   		movq	%rbx, %rdi
 3327 14c7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3327      00
 3328              	.LEHE76:
 3329              		.loc 4 136 0 discriminator 12
 3330 14cc E8000000 		call	__cxa_end_catch@PLT
 3330      00
 3331              	.LBE41:
 3332 14d1 E9950100 		jmp	.L171
 3332      00
 3333              	.L175:
 3334              	.LBB42:
 3335              		.loc 4 136 0
 3336 14d6 4889C7   		movq	%rax, %rdi
 3337 14d9 E8000000 		call	__cxa_begin_catch@PLT
 3337      00
 3338 14de 48898510 		movq	%rax, -496(%rbp)
 3338      FEFFFF
 3339              	.LBB43:
 3340 14e5 488D8540 		leaq	-448(%rbp), %rax
 3340      FEFFFF
 3341 14ec 4889C7   		movq	%rax, %rdi
 3342              	.LEHB77:
 3343 14ef E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3343      00
 3344              	.LEHE77:
 3345              		.loc 4 136 0 discriminator 14
 3346 14f4 488D8540 		leaq	-448(%rbp), %rax
 3346      FEFFFF
 3347 14fb 488D3500 		leaq	.LC45(%rip), %rsi
 3347      000000
 3348 1502 4889C7   		movq	%rax, %rdi
 3349              	.LEHB78:
 3350 1505 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3350      00
 3351 150a 4889C3   		movq	%rax, %rbx
 3352 150d 488B8510 		movq	-496(%rbp), %rax
 3352      FEFFFF
 3353 1514 488B00   		movq	(%rax), %rax
 3354 1517 4883C010 		addq	$16, %rax
 3355 151b 488B00   		movq	(%rax), %rax
 3356 151e 488B9510 		movq	-496(%rbp), %rdx
 3356      FEFFFF
 3357 1525 4889D7   		movq	%rdx, %rdi
 3358 1528 FFD0     		call	*%rax
 3359              	.LVL1:
 3360 152a 4889C6   		movq	%rax, %rsi
 3361 152d 4889DF   		movq	%rbx, %rdi
 3362 1530 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3362      00
 3363              		.loc 4 136 0 discriminator 18
 3364 1535 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3364      00
 3365 153a 488B18   		movq	(%rax), %rbx
 3366 153d 488D8540 		leaq	-448(%rbp), %rax
 3366      FEFFFF
 3367 1544 4889C7   		movq	%rax, %rdi
 3368 1547 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 3368      00
 3369              		.loc 4 136 0 discriminator 20
 3370 154c 4889C2   		movq	%rax, %rdx
 3371 154f 488B85F8 		movq	-520(%rbp), %rax
 3371      FDFFFF
 3372 1556 4883C008 		addq	$8, %rax
 3373 155a 4889C6   		movq	%rax, %rsi
 3374 155d 4889DF   		movq	%rbx, %rdi
 3375 1560 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3375      00
 3376              	.LEHE78:
 3377              		.loc 4 136 0 discriminator 24
 3378 1565 488D8540 		leaq	-448(%rbp), %rax
 3378      FEFFFF
 3379 156c 4889C7   		movq	%rax, %rdi
 3380              	.LEHB79:
 3381 156f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3381      00
 3382              	.LEHE79:
 3383              	.LBE43:
 3384              		.loc 4 136 0 discriminator 25
 3385 1574 E8000000 		call	__cxa_end_catch@PLT
 3385      00
 3386              	.LBE42:
 3387 1579 E9ED0000 		jmp	.L171
 3387      00
 3388              	.L189:
 3389              		.loc 4 136 0
 3390 157e 4889C7   		movq	%rax, %rdi
 3391 1581 E8000000 		call	__cxa_begin_catch@PLT
 3391      00
 3392 1586 80BD0FFE 		cmpb	$0, -497(%rbp)
 3392      FFFF00
 3393 158d 7445     		je	.L177
 3394              	.LEHB80:
 3395              		.loc 4 136 0 discriminator 27
 3396 158f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3396      00
 3397 1594 488B18   		movq	(%rax), %rbx
 3398 1597 488B85F8 		movq	-520(%rbp), %rax
 3398      FDFFFF
 3399 159e 488D4808 		leaq	8(%rax), %rcx
 3400 15a2 488D8520 		leaq	-480(%rbp), %rax
 3400      FEFFFF
 3401 15a9 BA880000 		movl	$136, %edx
 3401      00
 3402 15ae 4889CE   		movq	%rcx, %rsi
 3403 15b1 4889C7   		movq	%rax, %rdi
 3404 15b4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3404      00
 3405              		.loc 4 136 0 discriminator 32
 3406 15b9 488D8520 		leaq	-480(%rbp), %rax
 3406      FEFFFF
 3407 15c0 488D1500 		leaq	.LC46(%rip), %rdx
 3407      000000
 3408 15c7 4889C6   		movq	%rax, %rsi
 3409 15ca 4889DF   		movq	%rbx, %rdi
 3410 15cd E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3410      00
 3411 15d2 EB43     		jmp	.L178
 3412              	.L177:
 3413              		.loc 4 136 0 discriminator 28
 3414 15d4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3414      00
 3415 15d9 488B18   		movq	(%rax), %rbx
 3416 15dc 488B85F8 		movq	-520(%rbp), %rax
 3416      FDFFFF
 3417 15e3 488D4808 		leaq	8(%rax), %rcx
 3418 15e7 488D8520 		leaq	-480(%rbp), %rax
 3418      FEFFFF
 3419 15ee BA880000 		movl	$136, %edx
 3419      00
 3420 15f3 4889CE   		movq	%rcx, %rsi
 3421 15f6 4889C7   		movq	%rax, %rdi
 3422 15f9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3422      00
 3423              		.loc 4 136 0 discriminator 39
 3424 15fe 488D8520 		leaq	-480(%rbp), %rax
 3424      FEFFFF
 3425 1605 488D1500 		leaq	.LC47(%rip), %rdx
 3425      000000
 3426 160c 4889C6   		movq	%rax, %rsi
 3427 160f 4889DF   		movq	%rbx, %rdi
 3428 1612 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3428      00
 3429              	.LEHE80:
 3430              	.L178:
 3431              	.LEHB81:
 3432              		.loc 4 136 0 discriminator 42
 3433 1617 E8000000 		call	__cxa_end_catch@PLT
 3433      00
 3434 161c EB4D     		jmp	.L171
 3435              	.L185:
 3436 161e 4889C3   		movq	%rax, %rbx
 3437              	.LBB45:
 3438              		.loc 4 136 0
 3439 1621 E8000000 		call	__cxa_end_catch@PLT
 3439      00
 3440 1626 4889D8   		movq	%rbx, %rax
 3441 1629 4889C7   		movq	%rax, %rdi
 3442 162c E8000000 		call	_Unwind_Resume@PLT
 3442      00
 3443              	.LEHE81:
 3444              	.L187:
 3445 1631 4889C3   		movq	%rax, %rbx
 3446              	.LBE45:
 3447              	.LBB46:
 3448              	.LBB44:
 3449 1634 488D8540 		leaq	-448(%rbp), %rax
 3449      FEFFFF
 3450 163b 4889C7   		movq	%rax, %rdi
 3451 163e E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3451      00
 3452 1643 EB03     		jmp	.L181
 3453              	.L186:
 3454 1645 4889C3   		movq	%rax, %rbx
 3455              	.L181:
 3456              	.LBE44:
 3457 1648 E8000000 		call	__cxa_end_catch@PLT
 3457      00
 3458 164d 4889D8   		movq	%rbx, %rax
 3459 1650 4889C7   		movq	%rax, %rdi
 3460              	.LEHB82:
 3461 1653 E8000000 		call	_Unwind_Resume@PLT
 3461      00
 3462              	.LEHE82:
 3463              	.L188:
 3464 1658 4889C3   		movq	%rax, %rbx
 3465              	.LBE46:
 3466 165b E8000000 		call	__cxa_end_catch@PLT
 3466      00
 3467 1660 4889D8   		movq	%rbx, %rax
 3468 1663 4889C7   		movq	%rax, %rdi
 3469              	.LEHB83:
 3470 1666 E8000000 		call	_Unwind_Resume@PLT
 3470      00
 3471              	.LEHE83:
 3472              	.L171:
 3473 166b 488B45D8 		movq	-40(%rbp), %rax
 3474 166f 64483304 		xorq	%fs:40, %rax
 3474      25280000 
 3474      00
 3475 1678 7405     		je	.L183
 3476 167a E8000000 		call	__stack_chk_fail@PLT
 3476      00
 3477              	.L183:
 3478 167f 4881C4F8 		addq	$504, %rsp
 3478      010000
 3479 1686 5B       		popq	%rbx
 3480 1687 415C     		popq	%r12
 3481 1689 415D     		popq	%r13
 3482 168b 5D       		popq	%rbp
 3483              		.cfi_def_cfa 7, 8
 3484 168c C3       		ret
 3485              		.cfi_endproc
 3486              	.LFE1429:
 3487              		.section	.gcc_except_table
 3488              		.align 4
 3489              	.LLSDA1429:
 3490 0218 FF       		.byte	0xff
 3491 0219 9B       		.byte	0x9b
 3492 021a 4D       		.uleb128 .LLSDATT1429-.LLSDATTD1429
 3493              	.LLSDATTD1429:
 3494 021b 01       		.byte	0x1
 3495 021c 34       		.uleb128 .LLSDACSE1429-.LLSDACSB1429
 3496              	.LLSDACSB1429:
 3497 021d 69       		.uleb128 .LEHB75-.LFB1429
 3498 021e 05       		.uleb128 .LEHE75-.LEHB75
 3499 021f 8201     		.uleb128 .L184-.LFB1429
 3500 0221 07       		.uleb128 0x7
 3501 0222 C101     		.uleb128 .LEHB76-.LFB1429
 3502 0224 8901     		.uleb128 .LEHE76-.LEHB76
 3503 0226 9C05     		.uleb128 .L185-.LFB1429
 3504 0228 00       		.uleb128 0
 3505 0229 ED02     		.uleb128 .LEHB77-.LFB1429
 3506 022b 05       		.uleb128 .LEHE77-.LEHB77
 3507 022c C305     		.uleb128 .L186-.LFB1429
 3508 022e 00       		.uleb128 0
 3509 022f 8303     		.uleb128 .LEHB78-.LFB1429
 3510 0231 60       		.uleb128 .LEHE78-.LEHB78
 3511 0232 AF05     		.uleb128 .L187-.LFB1429
 3512 0234 00       		.uleb128 0
 3513 0235 ED03     		.uleb128 .LEHB79-.LFB1429
 3514 0237 05       		.uleb128 .LEHE79-.LEHB79
 3515 0238 C305     		.uleb128 .L186-.LFB1429
 3516 023a 00       		.uleb128 0
 3517 023b 8D04     		.uleb128 .LEHB80-.LFB1429
 3518 023d 8801     		.uleb128 .LEHE80-.LEHB80
 3519 023f D605     		.uleb128 .L188-.LFB1429
 3520 0241 00       		.uleb128 0
 3521 0242 9505     		.uleb128 .LEHB81-.LFB1429
 3522 0244 1A       		.uleb128 .LEHE81-.LEHB81
 3523 0245 00       		.uleb128 0
 3524 0246 00       		.uleb128 0
 3525 0247 D105     		.uleb128 .LEHB82-.LFB1429
 3526 0249 05       		.uleb128 .LEHE82-.LEHB82
 3527 024a 00       		.uleb128 0
 3528 024b 00       		.uleb128 0
 3529 024c E405     		.uleb128 .LEHB83-.LFB1429
 3530 024e 05       		.uleb128 .LEHE83-.LEHB83
 3531 024f 00       		.uleb128 0
 3532 0250 00       		.uleb128 0
 3533              	.LLSDACSE1429:
 3534 0251 03       		.byte	0x3
 3535 0252 00       		.byte	0
 3536 0253 02       		.byte	0x2
 3537 0254 7D       		.byte	0x7d
 3538 0255 01       		.byte	0x1
 3539 0256 7D       		.byte	0x7d
 3540 0257 00       		.byte	0
 3541 0258 7D       		.byte	0x7d
 3542 0259 000000   		.align 4
 3543 025c 00000000 		.long	0
 3544              	
 3545 0260 00000000 		.long	DW.ref._ZTISt9exception-.
 3546 0264 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 3547              	.LLSDATT1429:
 3548              		.text
 3550              		.section	.rodata
 3551 04b5 000000   		.align 8
 3552              	.LC48:
 3553 04b8 53696D70 		.string	"SimpleFixture::instanceCount > 0"
 3553      6C654669 
 3553      78747572 
 3553      653A3A69 
 3553      6E737461 
 3554 04d9 00000000 		.align 8
 3554      000000
 3555              	.LC49:
 3556 04e0 556E6861 		.string	"Unhandled exception in CHECK(SimpleFixture::instanceCount > 0)"
 3556      6E646C65 
 3556      64206578 
 3556      63657074 
 3556      696F6E20 
 3557              		.text
 3558 168d 90       		.align 2
 3560              	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelper7RunImplEv:
 3561              	.LFB1433:
 137:TestUnitTest++.cpp **** {
 3562              		.loc 4 137 0 is_stmt 1
 3563              		.cfi_startproc
 3564              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3565              		.cfi_lsda 0x1b,.LLSDA1433
 3566 168e 55       		pushq	%rbp
 3567              		.cfi_def_cfa_offset 16
 3568              		.cfi_offset 6, -16
 3569 168f 4889E5   		movq	%rsp, %rbp
 3570              		.cfi_def_cfa_register 6
 3571 1692 53       		pushq	%rbx
 3572 1693 4883EC48 		subq	$72, %rsp
 3573              		.cfi_offset 3, -24
 3574 1697 48897DB8 		movq	%rdi, -72(%rbp)
 3575              		.loc 4 137 0
 3576 169b 64488B04 		movq	%fs:40, %rax
 3576      25280000 
 3576      00
 3577 16a4 488945E8 		movq	%rax, -24(%rbp)
 3578 16a8 31C0     		xorl	%eax, %eax
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3579              		.loc 4 138 0
 3580 16aa 8B050000 		movl	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip), %eax
 3580      0000
 3581 16b0 85C0     		testl	%eax, %eax
 3582 16b2 0F9FC0   		setg	%al
 3583 16b5 0FB6C0   		movzbl	%al, %eax
 3584 16b8 89C7     		movl	%eax, %edi
 3585 16ba E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 3585      00
 3586 16bf 83F001   		xorl	$1, %eax
 3587 16c2 84C0     		testb	%al, %al
 3588 16c4 0F849800 		je	.L197
 3588      0000
 3589              	.LEHB84:
 3590              		.loc 4 138 0 is_stmt 0 discriminator 1
 3591 16ca E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3591      00
 3592 16cf 488B18   		movq	(%rax), %rbx
 3593 16d2 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3593      00
 3594              		.loc 4 138 0 discriminator 2
 3595 16d7 488B08   		movq	(%rax), %rcx
 3596 16da 488D45C0 		leaq	-64(%rbp), %rax
 3597 16de BA8A0000 		movl	$138, %edx
 3597      00
 3598 16e3 4889CE   		movq	%rcx, %rsi
 3599 16e6 4889C7   		movq	%rax, %rdi
 3600 16e9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3600      00
 3601              		.loc 4 138 0 discriminator 4
 3602 16ee 488D45C0 		leaq	-64(%rbp), %rax
 3603 16f2 488D1500 		leaq	.LC48(%rip), %rdx
 3603      000000
 3604 16f9 4889C6   		movq	%rax, %rsi
 3605 16fc 4889DF   		movq	%rbx, %rdi
 3606 16ff E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3606      00
 3607              	.LEHE84:
 139:TestUnitTest++.cpp **** }
 3608              		.loc 4 139 0 is_stmt 1
 3609 1704 EB5C     		jmp	.L197
 3610              	.L195:
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3611              		.loc 4 138 0
 3612 1706 4889C7   		movq	%rax, %rdi
 3613 1709 E8000000 		call	__cxa_begin_catch@PLT
 3613      00
 3614              	.LEHB85:
 3615 170e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3615      00
 3616 1713 488B18   		movq	(%rax), %rbx
 3617 1716 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3617      00
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3618              		.loc 4 138 0 is_stmt 0 discriminator 8
 3619 171b 488B08   		movq	(%rax), %rcx
 3620 171e 488D45C0 		leaq	-64(%rbp), %rax
 3621 1722 BA8A0000 		movl	$138, %edx
 3621      00
 3622 1727 4889CE   		movq	%rcx, %rsi
 3623 172a 4889C7   		movq	%rax, %rdi
 3624 172d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3624      00
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3625              		.loc 4 138 0 discriminator 12
 3626 1732 488D45C0 		leaq	-64(%rbp), %rax
 3627 1736 488D1500 		leaq	.LC49(%rip), %rdx
 3627      000000
 3628 173d 4889C6   		movq	%rax, %rsi
 3629 1740 4889DF   		movq	%rbx, %rdi
 3630 1743 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3630      00
 3631              	.LEHE85:
 3632              	.LEHB86:
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3633              		.loc 4 138 0 discriminator 14
 3634 1748 E8000000 		call	__cxa_end_catch@PLT
 3634      00
 3635              	.LEHE86:
 3636              		.loc 4 139 0 is_stmt 1 discriminator 14
 3637 174d EB13     		jmp	.L197
 3638              	.L196:
 3639 174f 4889C3   		movq	%rax, %rbx
 138:TestUnitTest++.cpp ****     CHECK(SimpleFixture::instanceCount > 0);
 3640              		.loc 4 138 0
 3641 1752 E8000000 		call	__cxa_end_catch@PLT
 3641      00
 3642 1757 4889D8   		movq	%rbx, %rax
 3643 175a 4889C7   		movq	%rax, %rdi
 3644              	.LEHB87:
 3645 175d E8000000 		call	_Unwind_Resume@PLT
 3645      00
 3646              	.LEHE87:
 3647              	.L197:
 3648              		.loc 4 139 0
 3649 1762 90       		nop
 3650 1763 488B45E8 		movq	-24(%rbp), %rax
 3651 1767 64483304 		xorq	%fs:40, %rax
 3651      25280000 
 3651      00
 3652 1770 7405     		je	.L194
 3653 1772 E8000000 		call	__stack_chk_fail@PLT
 3653      00
 3654              	.L194:
 3655 1777 4883C448 		addq	$72, %rsp
 3656 177b 5B       		popq	%rbx
 3657 177c 5D       		popq	%rbp
 3658              		.cfi_def_cfa 7, 8
 3659 177d C3       		ret
 3660              		.cfi_endproc
 3661              	.LFE1433:
 3662              		.section	.gcc_except_table
 3663              		.align 4
 3664              	.LLSDA1433:
 3665 0268 FF       		.byte	0xff
 3666 0269 9B       		.byte	0x9b
 3667 026a 1D       		.uleb128 .LLSDATT1433-.LLSDATTD1433
 3668              	.LLSDATTD1433:
 3669 026b 01       		.byte	0x1
 3670 026c 14       		.uleb128 .LLSDACSE1433-.LLSDACSB1433
 3671              	.LLSDACSB1433:
 3672 026d 3C       		.uleb128 .LEHB84-.LFB1433
 3673 026e 3A       		.uleb128 .LEHE84-.LEHB84
 3674 026f 78       		.uleb128 .L195-.LFB1433
 3675 0270 01       		.uleb128 0x1
 3676 0271 8001     		.uleb128 .LEHB85-.LFB1433
 3677 0273 3A       		.uleb128 .LEHE85-.LEHB85
 3678 0274 C101     		.uleb128 .L196-.LFB1433
 3679 0276 00       		.uleb128 0
 3680 0277 BA01     		.uleb128 .LEHB86-.LFB1433
 3681 0279 05       		.uleb128 .LEHE86-.LEHB86
 3682 027a 00       		.uleb128 0
 3683 027b 00       		.uleb128 0
 3684 027c CF01     		.uleb128 .LEHB87-.LFB1433
 3685 027e 05       		.uleb128 .LEHE87-.LEHB87
 3686 027f 00       		.uleb128 0
 3687 0280 00       		.uleb128 0
 3688              	.LLSDACSE1433:
 3689 0281 01       		.byte	0x1
 3690 0282 00       		.byte	0
 3691 0283 00       		.align 4
 3692 0284 00000000 		.long	0
 3693              	
 3694              	.LLSDATT1433:
 3695              		.text
 3697              		.align 2
 3699              	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC2ERKN8UnitTest11TestDetailsE:
 3700              	.LFB1435:
 140:TestUnitTest++.cpp **** 
 141:TestUnitTest++.cpp **** TEST_FIXTURE(SimpleFixture, OnlyOneFixtureAliveAtATime)
 3701              		.loc 4 141 0
 3702              		.cfi_startproc
 3703 177e 55       		pushq	%rbp
 3704              		.cfi_def_cfa_offset 16
 3705              		.cfi_offset 6, -16
 3706 177f 4889E5   		movq	%rsp, %rbp
 3707              		.cfi_def_cfa_register 6
 3708 1782 4883EC10 		subq	$16, %rsp
 3709 1786 48897DF8 		movq	%rdi, -8(%rbp)
 3710 178a 488975F0 		movq	%rsi, -16(%rbp)
 3711              	.LBB47:
 3712              		.loc 4 141 0
 3713 178e 488B45F8 		movq	-8(%rbp), %rax
 3714 1792 4889C7   		movq	%rax, %rdi
 3715 1795 E822FBFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureC2Ev
 3715      FF
 3716 179a 488B45F8 		movq	-8(%rbp), %rax
 3717 179e 488B55F0 		movq	-16(%rbp), %rdx
 3718 17a2 488910   		movq	%rdx, (%rax)
 3719              	.LBE47:
 3720 17a5 90       		nop
 3721 17a6 C9       		leave
 3722              		.cfi_def_cfa 7, 8
 3723 17a7 C3       		ret
 3724              		.cfi_endproc
 3725              	.LFE1435:
 3727              		.set	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC1ERKN8UnitTest11TestDetailsE
 3728              		.section	.rodata
 3729              	.LC50:
 3730 051f 4F6E6C79 		.string	"OnlyOneFixtureAliveAtATime"
 3730      4F6E6546 
 3730      69787475 
 3730      7265416C 
 3730      69766541 
 3731              		.text
 3732              		.align 2
 3734              	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC2Ev:
 3735              	.LFB1438:
 3736              		.loc 4 141 0
 3737              		.cfi_startproc
 3738 17a8 55       		pushq	%rbp
 3739              		.cfi_def_cfa_offset 16
 3740              		.cfi_offset 6, -16
 3741 17a9 4889E5   		movq	%rsp, %rbp
 3742              		.cfi_def_cfa_register 6
 3743 17ac 53       		pushq	%rbx
 3744 17ad 4883EC18 		subq	$24, %rsp
 3745              		.cfi_offset 3, -24
 3746 17b1 48897DE8 		movq	%rdi, -24(%rbp)
 3747              	.LBB48:
 3748              		.loc 4 141 0
 3749 17b5 488B5DE8 		movq	-24(%rbp), %rbx
 3750 17b9 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3750      00
 3751 17be 41B88D00 		movl	$141, %r8d
 3751      0000
 3752 17c4 488D0D00 		leaq	.LC1(%rip), %rcx
 3752      000000
 3753 17cb 4889C2   		movq	%rax, %rdx
 3754 17ce 488D3500 		leaq	.LC50(%rip), %rsi
 3754      000000
 3755 17d5 4889DF   		movq	%rbx, %rdi
 3756 17d8 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 3756      00
 3757 17dd 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE(%rip), %rdx
 3757      000000
 3758 17e4 488B45E8 		movq	-24(%rbp), %rax
 3759 17e8 488910   		movq	%rdx, (%rax)
 3760              	.LBE48:
 3761 17eb 90       		nop
 3762 17ec 4883C418 		addq	$24, %rsp
 3763 17f0 5B       		popq	%rbx
 3764 17f1 5D       		popq	%rbp
 3765              		.cfi_def_cfa 7, 8
 3766 17f2 C3       		ret
 3767              		.cfi_endproc
 3768              	.LFE1438:
 3770              		.set	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC1Ev,_ZN12_GLOBAL__N_143TestSim
 3771              		.local	_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE
 3772              		.comm	_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE,56,32
 3773              		.local	_ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE
 3774              		.comm	_ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE,1,1
 3775 17f3 90       		.align 2
 3777              	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD2Ev:
 3778              	.LFB1442:
 3779              		.loc 4 141 0
 3780              		.cfi_startproc
 3781 17f4 55       		pushq	%rbp
 3782              		.cfi_def_cfa_offset 16
 3783              		.cfi_offset 6, -16
 3784 17f5 4889E5   		movq	%rsp, %rbp
 3785              		.cfi_def_cfa_register 6
 3786 17f8 4883EC08 		subq	$8, %rsp
 3787 17fc 48897DF8 		movq	%rdi, -8(%rbp)
 3788              	.LBB49:
 3789              		.loc 4 141 0
 3790 1800 488B45F8 		movq	-8(%rbp), %rax
 3791 1804 4889C7   		movq	%rax, %rdi
 3792 1807 E8CAFAFF 		call	_ZN12_GLOBAL__N_113SimpleFixtureD2Ev
 3792      FF
 3793              	.LBE49:
 3794 180c 90       		nop
 3795 180d C9       		leave
 3796              		.cfi_def_cfa 7, 8
 3797 180e C3       		ret
 3798              		.cfi_endproc
 3799              	.LFE1442:
 3801              		.set	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD1Ev,_ZN12_GLOBAL__N_145Simpl
 3802 180f 90       		.align 2
 3804              	_ZNK12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATime7RunImplEv:
 3805              	.LFB1440:
 3806              		.loc 4 141 0
 3807              		.cfi_startproc
 3808              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3809              		.cfi_lsda 0x1b,.LLSDA1440
 3810 1810 55       		pushq	%rbp
 3811              		.cfi_def_cfa_offset 16
 3812              		.cfi_offset 6, -16
 3813 1811 4889E5   		movq	%rsp, %rbp
 3814              		.cfi_def_cfa_register 6
 3815 1814 4155     		pushq	%r13
 3816 1816 4154     		pushq	%r12
 3817 1818 53       		pushq	%rbx
 3818 1819 4881ECF8 		subq	$504, %rsp
 3818      010000
 3819              		.cfi_offset 13, -24
 3820              		.cfi_offset 12, -32
 3821              		.cfi_offset 3, -40
 3822 1820 4889BDF8 		movq	%rdi, -520(%rbp)
 3822      FDFFFF
 3823              		.loc 4 141 0
 3824 1827 64488B04 		movq	%fs:40, %rax
 3824      25280000 
 3824      00
 3825 1830 488945D8 		movq	%rax, -40(%rbp)
 3826 1834 31C0     		xorl	%eax, %eax
 3827 1836 C6850FFE 		movb	$0, -497(%rbp)
 3827      FFFF00
 3828              	.LBB50:
 3829 183d 488B85F8 		movq	-520(%rbp), %rax
 3829      FDFFFF
 3830 1844 488D5008 		leaq	8(%rax), %rdx
 3831 1848 488D8520 		leaq	-480(%rbp), %rax
 3831      FEFFFF
 3832 184f 4889D6   		movq	%rdx, %rsi
 3833 1852 4889C7   		movq	%rax, %rdi
 3834 1855 E824FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC1ERKN8UnitTest11TestDetailsE
 3834      FF
 3835 185a C6850FFE 		movb	$1, -497(%rbp)
 3835      FFFF01
 3836 1861 488B85F8 		movq	-520(%rbp), %rax
 3836      FDFFFF
 3837 1868 488D5008 		leaq	8(%rax), %rdx
 3838 186c 488D8520 		leaq	-480(%rbp), %rax
 3838      FEFFFF
 3839 1873 4889D6   		movq	%rdx, %rsi
 3840 1876 4889C7   		movq	%rax, %rdi
 3841              	.LEHB88:
 3842 1879 E8900700 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperEEEvR
 3842      00
 3843              	.LEHE88:
 3844              		.loc 4 141 0 is_stmt 0 discriminator 2
 3845 187e 488D8520 		leaq	-480(%rbp), %rax
 3845      FEFFFF
 3846 1885 4889C7   		movq	%rax, %rdi
 3847 1888 E867FFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD1Ev
 3847      FF
 3848              	.LBE50:
 3849 188d E9670200 		jmp	.L201
 3849      00
 3850              	.L214:
 3851 1892 4989C4   		movq	%rax, %r12
 3852 1895 4889D3   		movq	%rdx, %rbx
 3853              	.LBB51:
 3854              		.loc 4 141 0
 3855 1898 488D8520 		leaq	-480(%rbp), %rax
 3855      FEFFFF
 3856 189f 4889C7   		movq	%rax, %rdi
 3857 18a2 E84DFFFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD1Ev
 3857      FF
 3858 18a7 4C89E0   		movq	%r12, %rax
 3859 18aa 4889DA   		movq	%rbx, %rdx
 3860 18ad 4883FA01 		cmpq	$1, %rdx
 3861 18b1 740F     		je	.L204
 3862 18b3 4883FA02 		cmpq	$2, %rdx
 3863 18b7 0F84A700 		je	.L205
 3863      0000
 3864 18bd E94A0100 		jmp	.L219
 3864      00
 3865              	.L204:
 3866              	.LBE51:
 3867              	.LBB52:
 3868 18c2 4889C7   		movq	%rax, %rdi
 3869 18c5 E8000000 		call	__cxa_begin_catch@PLT
 3869      00
 3870 18ca 48898518 		movq	%rax, -488(%rbp)
 3870      FEFFFF
 3871              	.LEHB89:
 3872 18d1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3872      00
 3873 18d6 488B18   		movq	(%rax), %rbx
 3874 18d9 488B8518 		movq	-488(%rbp), %rax
 3874      FEFFFF
 3875 18e0 488B00   		movq	(%rax), %rax
 3876 18e3 4883C010 		addq	$16, %rax
 3877 18e7 488B00   		movq	(%rax), %rax
 3878 18ea 488B9518 		movq	-488(%rbp), %rdx
 3878      FEFFFF
 3879 18f1 4889D7   		movq	%rdx, %rdi
 3880 18f4 FFD0     		call	*%rax
 3881              	.LVL2:
 3882 18f6 4989C4   		movq	%rax, %r12
 3883 18f9 488B8518 		movq	-488(%rbp), %rax
 3883      FEFFFF
 3884 1900 4889C7   		movq	%rax, %rdi
 3885 1903 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 3885      00
 3886              		.loc 4 141 0 discriminator 4
 3887 1908 4189C5   		movl	%eax, %r13d
 3888 190b 488B8518 		movq	-488(%rbp), %rax
 3888      FEFFFF
 3889 1912 4889C7   		movq	%rax, %rdi
 3890 1915 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 3890      00
 3891              		.loc 4 141 0 discriminator 6
 3892 191a 4889C1   		movq	%rax, %rcx
 3893 191d 488B85F8 		movq	-520(%rbp), %rax
 3893      FDFFFF
 3894 1924 488B5008 		movq	8(%rax), %rdx
 3895 1928 488B85F8 		movq	-520(%rbp), %rax
 3895      FDFFFF
 3896 192f 488B7010 		movq	16(%rax), %rsi
 3897 1933 488D8520 		leaq	-480(%rbp), %rax
 3897      FEFFFF
 3898 193a 4589E8   		movl	%r13d, %r8d
 3899 193d 4889C7   		movq	%rax, %rdi
 3900 1940 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 3900      00
 3901              		.loc 4 141 0 discriminator 10
 3902 1945 488D8520 		leaq	-480(%rbp), %rax
 3902      FEFFFF
 3903 194c 4C89E2   		movq	%r12, %rdx
 3904 194f 4889C6   		movq	%rax, %rsi
 3905 1952 4889DF   		movq	%rbx, %rdi
 3906 1955 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3906      00
 3907              	.LEHE89:
 3908              		.loc 4 141 0 discriminator 12
 3909 195a E8000000 		call	__cxa_end_catch@PLT
 3909      00
 3910              	.LBE52:
 3911 195f E9950100 		jmp	.L201
 3911      00
 3912              	.L205:
 3913              	.LBB53:
 3914              		.loc 4 141 0
 3915 1964 4889C7   		movq	%rax, %rdi
 3916 1967 E8000000 		call	__cxa_begin_catch@PLT
 3916      00
 3917 196c 48898510 		movq	%rax, -496(%rbp)
 3917      FEFFFF
 3918              	.LBB54:
 3919 1973 488D8540 		leaq	-448(%rbp), %rax
 3919      FEFFFF
 3920 197a 4889C7   		movq	%rax, %rdi
 3921              	.LEHB90:
 3922 197d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3922      00
 3923              	.LEHE90:
 3924              		.loc 4 141 0 discriminator 14
 3925 1982 488D8540 		leaq	-448(%rbp), %rax
 3925      FEFFFF
 3926 1989 488D3500 		leaq	.LC45(%rip), %rsi
 3926      000000
 3927 1990 4889C7   		movq	%rax, %rdi
 3928              	.LEHB91:
 3929 1993 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3929      00
 3930 1998 4889C3   		movq	%rax, %rbx
 3931 199b 488B8510 		movq	-496(%rbp), %rax
 3931      FEFFFF
 3932 19a2 488B00   		movq	(%rax), %rax
 3933 19a5 4883C010 		addq	$16, %rax
 3934 19a9 488B00   		movq	(%rax), %rax
 3935 19ac 488B9510 		movq	-496(%rbp), %rdx
 3935      FEFFFF
 3936 19b3 4889D7   		movq	%rdx, %rdi
 3937 19b6 FFD0     		call	*%rax
 3938              	.LVL3:
 3939 19b8 4889C6   		movq	%rax, %rsi
 3940 19bb 4889DF   		movq	%rbx, %rdi
 3941 19be E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3941      00
 3942              		.loc 4 141 0 discriminator 18
 3943 19c3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3943      00
 3944 19c8 488B18   		movq	(%rax), %rbx
 3945 19cb 488D8540 		leaq	-448(%rbp), %rax
 3945      FEFFFF
 3946 19d2 4889C7   		movq	%rax, %rdi
 3947 19d5 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 3947      00
 3948              		.loc 4 141 0 discriminator 20
 3949 19da 4889C2   		movq	%rax, %rdx
 3950 19dd 488B85F8 		movq	-520(%rbp), %rax
 3950      FDFFFF
 3951 19e4 4883C008 		addq	$8, %rax
 3952 19e8 4889C6   		movq	%rax, %rsi
 3953 19eb 4889DF   		movq	%rbx, %rdi
 3954 19ee E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3954      00
 3955              	.LEHE91:
 3956              		.loc 4 141 0 discriminator 24
 3957 19f3 488D8540 		leaq	-448(%rbp), %rax
 3957      FEFFFF
 3958 19fa 4889C7   		movq	%rax, %rdi
 3959              	.LEHB92:
 3960 19fd E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3960      00
 3961              	.LEHE92:
 3962              	.LBE54:
 3963              		.loc 4 141 0 discriminator 25
 3964 1a02 E8000000 		call	__cxa_end_catch@PLT
 3964      00
 3965              	.LBE53:
 3966 1a07 E9ED0000 		jmp	.L201
 3966      00
 3967              	.L219:
 3968              		.loc 4 141 0
 3969 1a0c 4889C7   		movq	%rax, %rdi
 3970 1a0f E8000000 		call	__cxa_begin_catch@PLT
 3970      00
 3971 1a14 80BD0FFE 		cmpb	$0, -497(%rbp)
 3971      FFFF00
 3972 1a1b 7445     		je	.L207
 3973              	.LEHB93:
 3974              		.loc 4 141 0 discriminator 27
 3975 1a1d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3975      00
 3976 1a22 488B18   		movq	(%rax), %rbx
 3977 1a25 488B85F8 		movq	-520(%rbp), %rax
 3977      FDFFFF
 3978 1a2c 488D4808 		leaq	8(%rax), %rcx
 3979 1a30 488D8520 		leaq	-480(%rbp), %rax
 3979      FEFFFF
 3980 1a37 BA8D0000 		movl	$141, %edx
 3980      00
 3981 1a3c 4889CE   		movq	%rcx, %rsi
 3982 1a3f 4889C7   		movq	%rax, %rdi
 3983 1a42 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3983      00
 3984              		.loc 4 141 0 discriminator 32
 3985 1a47 488D8520 		leaq	-480(%rbp), %rax
 3985      FEFFFF
 3986 1a4e 488D1500 		leaq	.LC46(%rip), %rdx
 3986      000000
 3987 1a55 4889C6   		movq	%rax, %rsi
 3988 1a58 4889DF   		movq	%rbx, %rdi
 3989 1a5b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3989      00
 3990 1a60 EB43     		jmp	.L208
 3991              	.L207:
 3992              		.loc 4 141 0 discriminator 28
 3993 1a62 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3993      00
 3994 1a67 488B18   		movq	(%rax), %rbx
 3995 1a6a 488B85F8 		movq	-520(%rbp), %rax
 3995      FDFFFF
 3996 1a71 488D4808 		leaq	8(%rax), %rcx
 3997 1a75 488D8520 		leaq	-480(%rbp), %rax
 3997      FEFFFF
 3998 1a7c BA8D0000 		movl	$141, %edx
 3998      00
 3999 1a81 4889CE   		movq	%rcx, %rsi
 4000 1a84 4889C7   		movq	%rax, %rdi
 4001 1a87 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4001      00
 4002              		.loc 4 141 0 discriminator 39
 4003 1a8c 488D8520 		leaq	-480(%rbp), %rax
 4003      FEFFFF
 4004 1a93 488D1500 		leaq	.LC47(%rip), %rdx
 4004      000000
 4005 1a9a 4889C6   		movq	%rax, %rsi
 4006 1a9d 4889DF   		movq	%rbx, %rdi
 4007 1aa0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4007      00
 4008              	.LEHE93:
 4009              	.L208:
 4010              	.LEHB94:
 4011              		.loc 4 141 0 discriminator 42
 4012 1aa5 E8000000 		call	__cxa_end_catch@PLT
 4012      00
 4013 1aaa EB4D     		jmp	.L201
 4014              	.L215:
 4015 1aac 4889C3   		movq	%rax, %rbx
 4016              	.LBB56:
 4017              		.loc 4 141 0
 4018 1aaf E8000000 		call	__cxa_end_catch@PLT
 4018      00
 4019 1ab4 4889D8   		movq	%rbx, %rax
 4020 1ab7 4889C7   		movq	%rax, %rdi
 4021 1aba E8000000 		call	_Unwind_Resume@PLT
 4021      00
 4022              	.LEHE94:
 4023              	.L217:
 4024 1abf 4889C3   		movq	%rax, %rbx
 4025              	.LBE56:
 4026              	.LBB57:
 4027              	.LBB55:
 4028 1ac2 488D8540 		leaq	-448(%rbp), %rax
 4028      FEFFFF
 4029 1ac9 4889C7   		movq	%rax, %rdi
 4030 1acc E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4030      00
 4031 1ad1 EB03     		jmp	.L211
 4032              	.L216:
 4033 1ad3 4889C3   		movq	%rax, %rbx
 4034              	.L211:
 4035              	.LBE55:
 4036 1ad6 E8000000 		call	__cxa_end_catch@PLT
 4036      00
 4037 1adb 4889D8   		movq	%rbx, %rax
 4038 1ade 4889C7   		movq	%rax, %rdi
 4039              	.LEHB95:
 4040 1ae1 E8000000 		call	_Unwind_Resume@PLT
 4040      00
 4041              	.LEHE95:
 4042              	.L218:
 4043 1ae6 4889C3   		movq	%rax, %rbx
 4044              	.LBE57:
 4045 1ae9 E8000000 		call	__cxa_end_catch@PLT
 4045      00
 4046 1aee 4889D8   		movq	%rbx, %rax
 4047 1af1 4889C7   		movq	%rax, %rdi
 4048              	.LEHB96:
 4049 1af4 E8000000 		call	_Unwind_Resume@PLT
 4049      00
 4050              	.LEHE96:
 4051              	.L201:
 4052 1af9 488B45D8 		movq	-40(%rbp), %rax
 4053 1afd 64483304 		xorq	%fs:40, %rax
 4053      25280000 
 4053      00
 4054 1b06 7405     		je	.L213
 4055 1b08 E8000000 		call	__stack_chk_fail@PLT
 4055      00
 4056              	.L213:
 4057 1b0d 4881C4F8 		addq	$504, %rsp
 4057      010000
 4058 1b14 5B       		popq	%rbx
 4059 1b15 415C     		popq	%r12
 4060 1b17 415D     		popq	%r13
 4061 1b19 5D       		popq	%rbp
 4062              		.cfi_def_cfa 7, 8
 4063 1b1a C3       		ret
 4064              		.cfi_endproc
 4065              	.LFE1440:
 4066              		.section	.gcc_except_table
 4067              		.align 4
 4068              	.LLSDA1440:
 4069 0288 FF       		.byte	0xff
 4070 0289 9B       		.byte	0x9b
 4071 028a 4D       		.uleb128 .LLSDATT1440-.LLSDATTD1440
 4072              	.LLSDATTD1440:
 4073 028b 01       		.byte	0x1
 4074 028c 34       		.uleb128 .LLSDACSE1440-.LLSDACSB1440
 4075              	.LLSDACSB1440:
 4076 028d 69       		.uleb128 .LEHB88-.LFB1440
 4077 028e 05       		.uleb128 .LEHE88-.LEHB88
 4078 028f 8201     		.uleb128 .L214-.LFB1440
 4079 0291 07       		.uleb128 0x7
 4080 0292 C101     		.uleb128 .LEHB89-.LFB1440
 4081 0294 8901     		.uleb128 .LEHE89-.LEHB89
 4082 0296 9C05     		.uleb128 .L215-.LFB1440
 4083 0298 00       		.uleb128 0
 4084 0299 ED02     		.uleb128 .LEHB90-.LFB1440
 4085 029b 05       		.uleb128 .LEHE90-.LEHB90
 4086 029c C305     		.uleb128 .L216-.LFB1440
 4087 029e 00       		.uleb128 0
 4088 029f 8303     		.uleb128 .LEHB91-.LFB1440
 4089 02a1 60       		.uleb128 .LEHE91-.LEHB91
 4090 02a2 AF05     		.uleb128 .L217-.LFB1440
 4091 02a4 00       		.uleb128 0
 4092 02a5 ED03     		.uleb128 .LEHB92-.LFB1440
 4093 02a7 05       		.uleb128 .LEHE92-.LEHB92
 4094 02a8 C305     		.uleb128 .L216-.LFB1440
 4095 02aa 00       		.uleb128 0
 4096 02ab 8D04     		.uleb128 .LEHB93-.LFB1440
 4097 02ad 8801     		.uleb128 .LEHE93-.LEHB93
 4098 02af D605     		.uleb128 .L218-.LFB1440
 4099 02b1 00       		.uleb128 0
 4100 02b2 9505     		.uleb128 .LEHB94-.LFB1440
 4101 02b4 1A       		.uleb128 .LEHE94-.LEHB94
 4102 02b5 00       		.uleb128 0
 4103 02b6 00       		.uleb128 0
 4104 02b7 D105     		.uleb128 .LEHB95-.LFB1440
 4105 02b9 05       		.uleb128 .LEHE95-.LEHB95
 4106 02ba 00       		.uleb128 0
 4107 02bb 00       		.uleb128 0
 4108 02bc E405     		.uleb128 .LEHB96-.LFB1440
 4109 02be 05       		.uleb128 .LEHE96-.LEHB96
 4110 02bf 00       		.uleb128 0
 4111 02c0 00       		.uleb128 0
 4112              	.LLSDACSE1440:
 4113 02c1 03       		.byte	0x3
 4114 02c2 00       		.byte	0
 4115 02c3 02       		.byte	0x2
 4116 02c4 7D       		.byte	0x7d
 4117 02c5 01       		.byte	0x1
 4118 02c6 7D       		.byte	0x7d
 4119 02c7 00       		.byte	0
 4120 02c8 7D       		.byte	0x7d
 4121 02c9 000000   		.align 4
 4122 02cc 00000000 		.long	0
 4123              	
 4124 02d0 00000000 		.long	DW.ref._ZTISt9exception-.
 4125 02d4 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 4126              	.LLSDATT1440:
 4127              		.text
 4129              		.section	.rodata
 4130 053a 00000000 		.align 8
 4130      0000
 4131              	.LC51:
 4132 0540 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(1, SimpleFixture::instanceCount)"
 4132      6E646C65 
 4132      64206578 
 4132      63657074 
 4132      696F6E20 
 4133              		.text
 4134 1b1b 90       		.align 2
 4136              	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelper7RunImplEv:
 4137              	.LFB1444:
 142:TestUnitTest++.cpp **** {
 4138              		.loc 4 142 0 is_stmt 1
 4139              		.cfi_startproc
 4140              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4141              		.cfi_lsda 0x1b,.LLSDA1444
 4142 1b1c 55       		pushq	%rbp
 4143              		.cfi_def_cfa_offset 16
 4144              		.cfi_offset 6, -16
 4145 1b1d 4889E5   		movq	%rsp, %rbp
 4146              		.cfi_def_cfa_register 6
 4147 1b20 53       		pushq	%rbx
 4148 1b21 4883EC58 		subq	$88, %rsp
 4149              		.cfi_offset 3, -24
 4150 1b25 48897DA8 		movq	%rdi, -88(%rbp)
 4151              		.loc 4 142 0
 4152 1b29 64488B04 		movq	%fs:40, %rax
 4152      25280000 
 4152      00
 4153 1b32 488945E8 		movq	%rax, -24(%rbp)
 4154 1b36 31C0     		xorl	%eax, %eax
 4155              	.LEHB97:
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4156              		.loc 4 143 0
 4157 1b38 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4157      00
 4158 1b3d 488B08   		movq	(%rax), %rcx
 4159 1b40 488D45C0 		leaq	-64(%rbp), %rax
 4160 1b44 BA8F0000 		movl	$143, %edx
 4160      00
 4161 1b49 4889CE   		movq	%rcx, %rsi
 4162 1b4c 4889C7   		movq	%rax, %rdi
 4163 1b4f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4163      00
 4164              	.LEHE97:
 4165              		.loc 4 143 0 is_stmt 0 discriminator 2
 4166 1b54 C745BC01 		movl	$1, -68(%rbp)
 4166      000000
 4167              	.LEHB98:
 4168 1b5b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4168      00
 4169 1b60 488B00   		movq	(%rax), %rax
 4170 1b63 488D55C0 		leaq	-64(%rbp), %rdx
 4171 1b67 488D75BC 		leaq	-68(%rbp), %rsi
 4172 1b6b 4889D1   		movq	%rdx, %rcx
 4173 1b6e 488D1500 		leaq	_ZN12_GLOBAL__N_113SimpleFixture13instanceCountE(%rip), %rdx
 4173      000000
 4174 1b75 4889C7   		movq	%rax, %rdi
 4175 1b78 E8000000 		call	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4175      00
 4176              	.LEHE98:
 144:TestUnitTest++.cpp **** }
 4177              		.loc 4 144 0 is_stmt 1
 4178 1b7d EB5E     		jmp	.L220
 4179              	.L227:
 4180 1b7f EB00     		jmp	.L222
 4181              	.L226:
 4182              	.L222:
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4183              		.loc 4 143 0
 4184 1b81 4889C7   		movq	%rax, %rdi
 4185 1b84 E8000000 		call	__cxa_begin_catch@PLT
 4185      00
 4186              	.LEHB99:
 4187 1b89 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4187      00
 4188 1b8e 488B18   		movq	(%rax), %rbx
 4189 1b91 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4189      00
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4190              		.loc 4 143 0 is_stmt 0 discriminator 8
 4191 1b96 488B08   		movq	(%rax), %rcx
 4192 1b99 488D45C0 		leaq	-64(%rbp), %rax
 4193 1b9d BA8F0000 		movl	$143, %edx
 4193      00
 4194 1ba2 4889CE   		movq	%rcx, %rsi
 4195 1ba5 4889C7   		movq	%rax, %rdi
 4196 1ba8 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4196      00
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4197              		.loc 4 143 0 discriminator 12
 4198 1bad 488D45C0 		leaq	-64(%rbp), %rax
 4199 1bb1 488D1500 		leaq	.LC51(%rip), %rdx
 4199      000000
 4200 1bb8 4889C6   		movq	%rax, %rsi
 4201 1bbb 4889DF   		movq	%rbx, %rdi
 4202 1bbe E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4202      00
 4203              	.LEHE99:
 4204              	.LEHB100:
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4205              		.loc 4 143 0 discriminator 14
 4206 1bc3 E8000000 		call	__cxa_end_catch@PLT
 4206      00
 4207              	.LEHE100:
 4208              		.loc 4 144 0 is_stmt 1 discriminator 14
 4209 1bc8 EB13     		jmp	.L220
 4210              	.L228:
 4211 1bca 4889C3   		movq	%rax, %rbx
 143:TestUnitTest++.cpp ****     CHECK_EQUAL(1, SimpleFixture::instanceCount);
 4212              		.loc 4 143 0
 4213 1bcd E8000000 		call	__cxa_end_catch@PLT
 4213      00
 4214 1bd2 4889D8   		movq	%rbx, %rax
 4215 1bd5 4889C7   		movq	%rax, %rdi
 4216              	.LEHB101:
 4217 1bd8 E8000000 		call	_Unwind_Resume@PLT
 4217      00
 4218              	.LEHE101:
 4219              	.L220:
 4220              		.loc 4 144 0
 4221 1bdd 488B45E8 		movq	-24(%rbp), %rax
 4222 1be1 64483304 		xorq	%fs:40, %rax
 4222      25280000 
 4222      00
 4223 1bea 7405     		je	.L225
 4224 1bec E8000000 		call	__stack_chk_fail@PLT
 4224      00
 4225              	.L225:
 4226 1bf1 4883C458 		addq	$88, %rsp
 4227 1bf5 5B       		popq	%rbx
 4228 1bf6 5D       		popq	%rbp
 4229              		.cfi_def_cfa 7, 8
 4230 1bf7 C3       		ret
 4231              		.cfi_endproc
 4232              	.LFE1444:
 4233              		.section	.gcc_except_table
 4234              		.align 4
 4235              	.LLSDA1444:
 4236 02d8 FF       		.byte	0xff
 4237 02d9 9B       		.byte	0x9b
 4238 02da 21       		.uleb128 .LLSDATT1444-.LLSDATTD1444
 4239              	.LLSDATTD1444:
 4240 02db 01       		.byte	0x1
 4241 02dc 17       		.uleb128 .LLSDACSE1444-.LLSDACSB1444
 4242              	.LLSDACSB1444:
 4243 02dd 1C       		.uleb128 .LEHB97-.LFB1444
 4244 02de 1C       		.uleb128 .LEHE97-.LEHB97
 4245 02df 65       		.uleb128 .L226-.LFB1444
 4246 02e0 01       		.uleb128 0x1
 4247 02e1 3F       		.uleb128 .LEHB98-.LFB1444
 4248 02e2 22       		.uleb128 .LEHE98-.LEHB98
 4249 02e3 63       		.uleb128 .L227-.LFB1444
 4250 02e4 03       		.uleb128 0x3
 4251 02e5 6D       		.uleb128 .LEHB99-.LFB1444
 4252 02e6 3A       		.uleb128 .LEHE99-.LEHB99
 4253 02e7 AE01     		.uleb128 .L228-.LFB1444
 4254 02e9 00       		.uleb128 0
 4255 02ea A701     		.uleb128 .LEHB100-.LFB1444
 4256 02ec 05       		.uleb128 .LEHE100-.LEHB100
 4257 02ed 00       		.uleb128 0
 4258 02ee 00       		.uleb128 0
 4259 02ef BC01     		.uleb128 .LEHB101-.LFB1444
 4260 02f1 05       		.uleb128 .LEHE101-.LEHB101
 4261 02f2 00       		.uleb128 0
 4262 02f3 00       		.uleb128 0
 4263              	.LLSDACSE1444:
 4264 02f4 01       		.byte	0x1
 4265 02f5 00       		.byte	0
 4266 02f6 00       		.byte	0
 4267 02f7 7D       		.byte	0x7d
 4268              		.align 4
 4269 02f8 00000000 		.long	0
 4270              	
 4271              	.LLSDATT1444:
 4272              		.text
 4275              	_ZN12_GLOBAL__N_19CheckBoolEb:
 4276              	.LFB1445:
 145:TestUnitTest++.cpp **** 
 146:TestUnitTest++.cpp **** void CheckBool(const bool b)
 147:TestUnitTest++.cpp **** {
 4277              		.loc 4 147 0
 4278              		.cfi_startproc
 4279              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4280              		.cfi_lsda 0x1b,.LLSDA1445
 4281 1bf8 55       		pushq	%rbp
 4282              		.cfi_def_cfa_offset 16
 4283              		.cfi_offset 6, -16
 4284 1bf9 4889E5   		movq	%rsp, %rbp
 4285              		.cfi_def_cfa_register 6
 4286 1bfc 53       		pushq	%rbx
 4287 1bfd 4883EC48 		subq	$72, %rsp
 4288              		.cfi_offset 3, -24
 4289 1c01 89F8     		movl	%edi, %eax
 4290 1c03 8845BC   		movb	%al, -68(%rbp)
 4291              		.loc 4 147 0
 4292 1c06 64488B04 		movq	%fs:40, %rax
 4292      25280000 
 4292      00
 4293 1c0f 488945E8 		movq	%rax, -24(%rbp)
 4294 1c13 31C0     		xorl	%eax, %eax
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4295              		.loc 4 148 0
 4296 1c15 0FB645BC 		movzbl	-68(%rbp), %eax
 4297 1c19 89C7     		movl	%eax, %edi
 4298 1c1b E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 4298      00
 4299 1c20 83F001   		xorl	$1, %eax
 4300 1c23 84C0     		testb	%al, %al
 4301 1c25 0F849800 		je	.L236
 4301      0000
 4302              	.LEHB102:
 4303              		.loc 4 148 0 is_stmt 0 discriminator 1
 4304 1c2b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4304      00
 4305 1c30 488B18   		movq	(%rax), %rbx
 4306 1c33 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4306      00
 4307              		.loc 4 148 0 discriminator 2
 4308 1c38 488B08   		movq	(%rax), %rcx
 4309 1c3b 488D45C0 		leaq	-64(%rbp), %rax
 4310 1c3f BA940000 		movl	$148, %edx
 4310      00
 4311 1c44 4889CE   		movq	%rcx, %rsi
 4312 1c47 4889C7   		movq	%rax, %rdi
 4313 1c4a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4313      00
 4314              		.loc 4 148 0 discriminator 4
 4315 1c4f 488D45C0 		leaq	-64(%rbp), %rax
 4316 1c53 488D1500 		leaq	.LC3(%rip), %rdx
 4316      000000
 4317 1c5a 4889C6   		movq	%rax, %rsi
 4318 1c5d 4889DF   		movq	%rbx, %rdi
 4319 1c60 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4319      00
 4320              	.LEHE102:
 149:TestUnitTest++.cpp **** }
 4321              		.loc 4 149 0 is_stmt 1
 4322 1c65 EB5C     		jmp	.L236
 4323              	.L234:
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4324              		.loc 4 148 0
 4325 1c67 4889C7   		movq	%rax, %rdi
 4326 1c6a E8000000 		call	__cxa_begin_catch@PLT
 4326      00
 4327              	.LEHB103:
 4328 1c6f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4328      00
 4329 1c74 488B18   		movq	(%rax), %rbx
 4330 1c77 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4330      00
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4331              		.loc 4 148 0 is_stmt 0 discriminator 8
 4332 1c7c 488B08   		movq	(%rax), %rcx
 4333 1c7f 488D45C0 		leaq	-64(%rbp), %rax
 4334 1c83 BA940000 		movl	$148, %edx
 4334      00
 4335 1c88 4889CE   		movq	%rcx, %rsi
 4336 1c8b 4889C7   		movq	%rax, %rdi
 4337 1c8e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4337      00
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4338              		.loc 4 148 0 discriminator 12
 4339 1c93 488D45C0 		leaq	-64(%rbp), %rax
 4340 1c97 488D1500 		leaq	.LC4(%rip), %rdx
 4340      000000
 4341 1c9e 4889C6   		movq	%rax, %rsi
 4342 1ca1 4889DF   		movq	%rbx, %rdi
 4343 1ca4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4343      00
 4344              	.LEHE103:
 4345              	.LEHB104:
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4346              		.loc 4 148 0 discriminator 14
 4347 1ca9 E8000000 		call	__cxa_end_catch@PLT
 4347      00
 4348              	.LEHE104:
 4349              		.loc 4 149 0 is_stmt 1 discriminator 14
 4350 1cae EB13     		jmp	.L236
 4351              	.L235:
 4352 1cb0 4889C3   		movq	%rax, %rbx
 148:TestUnitTest++.cpp **** 	CHECK(b);
 4353              		.loc 4 148 0
 4354 1cb3 E8000000 		call	__cxa_end_catch@PLT
 4354      00
 4355 1cb8 4889D8   		movq	%rbx, %rax
 4356 1cbb 4889C7   		movq	%rax, %rdi
 4357              	.LEHB105:
 4358 1cbe E8000000 		call	_Unwind_Resume@PLT
 4358      00
 4359              	.LEHE105:
 4360              	.L236:
 4361              		.loc 4 149 0
 4362 1cc3 90       		nop
 4363 1cc4 488B45E8 		movq	-24(%rbp), %rax
 4364 1cc8 64483304 		xorq	%fs:40, %rax
 4364      25280000 
 4364      00
 4365 1cd1 7405     		je	.L233
 4366 1cd3 E8000000 		call	__stack_chk_fail@PLT
 4366      00
 4367              	.L233:
 4368 1cd8 4883C448 		addq	$72, %rsp
 4369 1cdc 5B       		popq	%rbx
 4370 1cdd 5D       		popq	%rbp
 4371              		.cfi_def_cfa 7, 8
 4372 1cde C3       		ret
 4373              		.cfi_endproc
 4374              	.LFE1445:
 4375              		.section	.gcc_except_table
 4376              		.align 4
 4377              	.LLSDA1445:
 4378 02fc FF       		.byte	0xff
 4379 02fd 9B       		.byte	0x9b
 4380 02fe 1D       		.uleb128 .LLSDATT1445-.LLSDATTD1445
 4381              	.LLSDATTD1445:
 4382 02ff 01       		.byte	0x1
 4383 0300 13       		.uleb128 .LLSDACSE1445-.LLSDACSB1445
 4384              	.LLSDACSB1445:
 4385 0301 33       		.uleb128 .LEHB102-.LFB1445
 4386 0302 3A       		.uleb128 .LEHE102-.LEHB102
 4387 0303 6F       		.uleb128 .L234-.LFB1445
 4388 0304 01       		.uleb128 0x1
 4389 0305 77       		.uleb128 .LEHB103-.LFB1445
 4390 0306 3A       		.uleb128 .LEHE103-.LEHB103
 4391 0307 B801     		.uleb128 .L235-.LFB1445
 4392 0309 00       		.uleb128 0
 4393 030a B101     		.uleb128 .LEHB104-.LFB1445
 4394 030c 05       		.uleb128 .LEHE104-.LEHB104
 4395 030d 00       		.uleb128 0
 4396 030e 00       		.uleb128 0
 4397 030f C601     		.uleb128 .LEHB105-.LFB1445
 4398 0311 05       		.uleb128 .LEHE105-.LEHB105
 4399 0312 00       		.uleb128 0
 4400 0313 00       		.uleb128 0
 4401              	.LLSDACSE1445:
 4402 0314 01       		.byte	0x1
 4403 0315 00       		.byte	0
 4404 0316 0000     		.align 4
 4405 0318 00000000 		.long	0
 4406              	
 4407              	.LLSDATT1445:
 4408              		.text
 4410              		.section	.rodata
 4411 0584 00000000 		.align 8
 4412              	.LC52:
 4413 0588 43616E43 		.string	"CanCallCHECKOutsideOfTestFunction"
 4413      616C6C43 
 4413      4845434B 
 4413      4F757473 
 4413      6964654F 
 4414              		.text
 4415 1cdf 90       		.align 2
 4417              	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC2Ev:
 4418              	.LFB1447:
 150:TestUnitTest++.cpp **** 
 151:TestUnitTest++.cpp **** TEST(CanCallCHECKOutsideOfTestFunction)
 4419              		.loc 4 151 0
 4420              		.cfi_startproc
 4421 1ce0 55       		pushq	%rbp
 4422              		.cfi_def_cfa_offset 16
 4423              		.cfi_offset 6, -16
 4424 1ce1 4889E5   		movq	%rsp, %rbp
 4425              		.cfi_def_cfa_register 6
 4426 1ce4 53       		pushq	%rbx
 4427 1ce5 4883EC18 		subq	$24, %rsp
 4428              		.cfi_offset 3, -24
 4429 1ce9 48897DE8 		movq	%rdi, -24(%rbp)
 4430              	.LBB58:
 4431              		.loc 4 151 0
 4432 1ced 488B5DE8 		movq	-24(%rbp), %rbx
 4433 1cf1 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4433      00
 4434 1cf6 41B89700 		movl	$151, %r8d
 4434      0000
 4435 1cfc 488D0D00 		leaq	.LC1(%rip), %rcx
 4435      000000
 4436 1d03 4889C2   		movq	%rax, %rdx
 4437 1d06 488D3500 		leaq	.LC52(%rip), %rsi
 4437      000000
 4438 1d0d 4889DF   		movq	%rbx, %rdi
 4439 1d10 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 4439      00
 4440 1d15 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE(%rip), %rdx
 4440      000000
 4441 1d1c 488B45E8 		movq	-24(%rbp), %rax
 4442 1d20 488910   		movq	%rdx, (%rax)
 4443              	.LBE58:
 4444 1d23 90       		nop
 4445 1d24 4883C418 		addq	$24, %rsp
 4446 1d28 5B       		popq	%rbx
 4447 1d29 5D       		popq	%rbp
 4448              		.cfi_def_cfa 7, 8
 4449 1d2a C3       		ret
 4450              		.cfi_endproc
 4451              	.LFE1447:
 4453              		.set	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC1Ev,_ZN12_GLOBAL__N_137TestCanCallCH
 4454              		.local	_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE
 4455              		.comm	_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE,56,32
 4456              		.local	_ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE
 4457              		.comm	_ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE,1,1
 4458 1d2b 90       		.align 2
 4460              	_ZNK12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunction7RunImplEv:
 4461              	.LFB1449:
 152:TestUnitTest++.cpp **** {
 4462              		.loc 4 152 0
 4463              		.cfi_startproc
 4464 1d2c 55       		pushq	%rbp
 4465              		.cfi_def_cfa_offset 16
 4466              		.cfi_offset 6, -16
 4467 1d2d 4889E5   		movq	%rsp, %rbp
 4468              		.cfi_def_cfa_register 6
 4469 1d30 4883EC10 		subq	$16, %rsp
 4470 1d34 48897DF8 		movq	%rdi, -8(%rbp)
 153:TestUnitTest++.cpp **** 	CheckBool(true);
 4471              		.loc 4 153 0
 4472 1d38 BF010000 		movl	$1, %edi
 4472      00
 4473 1d3d E8B6FEFF 		call	_ZN12_GLOBAL__N_19CheckBoolEb
 4473      FF
 154:TestUnitTest++.cpp **** }
 4474              		.loc 4 154 0
 4475 1d42 90       		nop
 4476 1d43 C9       		leave
 4477              		.cfi_def_cfa 7, 8
 4478 1d44 C3       		ret
 4479              		.cfi_endproc
 4480              	.LFE1449:
 4482              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 4483              		.weak	_ZN8UnitTest5CheckIbEEbT_
 4485              	_ZN8UnitTest5CheckIbEEbT_:
 4486              	.LFB1478:
 4487              		.file 5 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
 4488              		.loc 5 12 0
 4489              		.cfi_startproc
 4490 0000 55       		pushq	%rbp
 4491              		.cfi_def_cfa_offset 16
 4492              		.cfi_offset 6, -16
 4493 0001 4889E5   		movq	%rsp, %rbp
 4494              		.cfi_def_cfa_register 6
 4495 0004 89F8     		movl	%edi, %eax
 4496 0006 8845FC   		movb	%al, -4(%rbp)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
 4497              		.loc 5 14 0
 4498 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** }
 4499              		.loc 5 15 0
 4500 000d 5D       		popq	%rbp
 4501              		.cfi_def_cfa 7, 8
 4502 000e C3       		ret
 4503              		.cfi_endproc
 4504              	.LFE1478:
 4506              		.section	.text._ZN8UnitTest5CheckIPvEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIPvEEbT_,comdat
 4507              		.weak	_ZN8UnitTest5CheckIPvEEbT_
 4509              	_ZN8UnitTest5CheckIPvEEbT_:
 4510              	.LFB1479:
  12:../Checks.h   **** {
 4511              		.loc 5 12 0
 4512              		.cfi_startproc
 4513 0000 55       		pushq	%rbp
 4514              		.cfi_def_cfa_offset 16
 4515              		.cfi_offset 6, -16
 4516 0001 4889E5   		movq	%rsp, %rbp
 4517              		.cfi_def_cfa_register 6
 4518 0004 48897DF8 		movq	%rdi, -8(%rbp)
  14:../Checks.h   **** }
 4519              		.loc 5 14 0
 4520 0008 48837DF8 		cmpq	$0, -8(%rbp)
 4520      00
 4521 000d 0F95C0   		setne	%al
 4522              		.loc 5 15 0
 4523 0010 5D       		popq	%rbp
 4524              		.cfi_def_cfa 7, 8
 4525 0011 C3       		ret
 4526              		.cfi_endproc
 4527              	.LFE1479:
 4529              		.section	.rodata
 4530              	.LC53:
 4531 05aa 45787065 		.string	"Expected "
 4531      63746564 
 4531      2000
 4532              	.LC54:
 4533 05b4 20627574 		.string	" but was "
 4533      20776173 
 4533      2000
 4534              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 4535              		.weak	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4537              	_ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 4538              	.LFB1480:
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 4539              		.loc 5 19 0
 4540              		.cfi_startproc
 4541              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4542              		.cfi_lsda 0x1b,.LLSDA1480
 4543 0000 55       		pushq	%rbp
 4544              		.cfi_def_cfa_offset 16
 4545              		.cfi_offset 6, -16
 4546 0001 4889E5   		movq	%rsp, %rbp
 4547              		.cfi_def_cfa_register 6
 4548 0004 53       		pushq	%rbx
 4549 0005 4881ECC8 		subq	$456, %rsp
 4549      010000
 4550              		.cfi_offset 3, -24
 4551 000c 4889BD48 		movq	%rdi, -440(%rbp)
 4551      FEFFFF
 4552 0013 4889B540 		movq	%rsi, -448(%rbp)
 4552      FEFFFF
 4553 001a 48899538 		movq	%rdx, -456(%rbp)
 4553      FEFFFF
 4554 0021 48898D30 		movq	%rcx, -464(%rbp)
 4554      FEFFFF
 4555              		.loc 5 19 0
 4556 0028 64488B04 		movq	%fs:40, %rax
 4556      25280000 
 4556      00
 4557 0031 488945E8 		movq	%rax, -24(%rbp)
 4558 0035 31C0     		xorl	%eax, %eax
 4559              	.LBB59:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 4560              		.loc 5 21 0
 4561 0037 488B8540 		movq	-448(%rbp), %rax
 4561      FEFFFF
 4562 003e 8B10     		movl	(%rax), %edx
 4563 0040 488B8538 		movq	-456(%rbp), %rax
 4563      FEFFFF
 4564 0047 8B00     		movl	(%rax), %eax
 4565 0049 39C2     		cmpl	%eax, %edx
 4566 004b 0F84B900 		je	.L248
 4566      0000
 4567              	.LBB60:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 4568              		.loc 5 23 0
 4569 0051 488D8550 		leaq	-432(%rbp), %rax
 4569      FEFFFF
 4570 0058 4889C7   		movq	%rax, %rdi
 4571              	.LEHB106:
 4572 005b E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4572      00
 4573              	.LEHE106:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4574              		.loc 5 24 0
 4575 0060 488D8550 		leaq	-432(%rbp), %rax
 4575      FEFFFF
 4576 0067 488D3500 		leaq	.LC53(%rip), %rsi
 4576      000000
 4577 006e 4889C7   		movq	%rax, %rdi
 4578              	.LEHB107:
 4579 0071 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4579      00
 4580 0076 4889C2   		movq	%rax, %rdx
 4581 0079 488B8540 		movq	-448(%rbp), %rax
 4581      FEFFFF
 4582 0080 8B00     		movl	(%rax), %eax
 4583 0082 89C6     		movl	%eax, %esi
 4584 0084 4889D7   		movq	%rdx, %rdi
 4585 0087 E8000000 		call	_ZNSolsEi@PLT
 4585      00
 4586              		.loc 5 24 0 is_stmt 0 discriminator 1
 4587 008c 488D3500 		leaq	.LC54(%rip), %rsi
 4587      000000
 4588 0093 4889C7   		movq	%rax, %rdi
 4589 0096 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4589      00
 4590              		.loc 5 24 0 discriminator 2
 4591 009b 4889C2   		movq	%rax, %rdx
 4592 009e 488B8538 		movq	-456(%rbp), %rax
 4592      FEFFFF
 4593 00a5 8B00     		movl	(%rax), %eax
 4594 00a7 89C6     		movl	%eax, %esi
 4595 00a9 4889D7   		movq	%rdx, %rdi
 4596 00ac E8000000 		call	_ZNSolsEi@PLT
 4596      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 4597              		.loc 5 26 0 is_stmt 1
 4598 00b1 488D8550 		leaq	-432(%rbp), %rax
 4598      FEFFFF
 4599 00b8 4889C7   		movq	%rax, %rdi
 4600 00bb E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 4600      00
 4601 00c0 4889C2   		movq	%rax, %rdx
 4602 00c3 488B8D30 		movq	-464(%rbp), %rcx
 4602      FEFFFF
 4603 00ca 488B8548 		movq	-440(%rbp), %rax
 4603      FEFFFF
 4604 00d1 4889CE   		movq	%rcx, %rsi
 4605 00d4 4889C7   		movq	%rax, %rdi
 4606 00d7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4606      00
 4607              	.LEHE107:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4608              		.loc 5 23 0
 4609 00dc 488D8550 		leaq	-432(%rbp), %rax
 4609      FEFFFF
 4610 00e3 4889C7   		movq	%rax, %rdi
 4611              	.LEHB108:
 4612 00e6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4612      00
 4613              	.LEHE108:
 4614              	.LBE60:
 4615              	.LBE59:
  27:../Checks.h   ****     }
  28:../Checks.h   **** }
 4616              		.loc 5 28 0
 4617 00eb EB1D     		jmp	.L248
 4618              	.L247:
 4619 00ed 4889C3   		movq	%rax, %rbx
 4620              	.LBB62:
 4621              	.LBB61:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4622              		.loc 5 23 0
 4623 00f0 488D8550 		leaq	-432(%rbp), %rax
 4623      FEFFFF
 4624 00f7 4889C7   		movq	%rax, %rdi
 4625 00fa E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4625      00
 4626 00ff 4889D8   		movq	%rbx, %rax
 4627 0102 4889C7   		movq	%rax, %rdi
 4628              	.LEHB109:
 4629 0105 E8000000 		call	_Unwind_Resume@PLT
 4629      00
 4630              	.LEHE109:
 4631              	.L248:
 4632              	.LBE61:
 4633              	.LBE62:
 4634              		.loc 5 28 0
 4635 010a 90       		nop
 4636 010b 488B45E8 		movq	-24(%rbp), %rax
 4637 010f 64483304 		xorq	%fs:40, %rax
 4637      25280000 
 4637      00
 4638 0118 7405     		je	.L246
 4639 011a E8000000 		call	__stack_chk_fail@PLT
 4639      00
 4640              	.L246:
 4641 011f 4881C4C8 		addq	$456, %rsp
 4641      010000
 4642 0126 5B       		popq	%rbx
 4643 0127 5D       		popq	%rbp
 4644              		.cfi_def_cfa 7, 8
 4645 0128 C3       		ret
 4646              		.cfi_endproc
 4647              	.LFE1480:
 4648              		.section	.gcc_except_table
 4649              	.LLSDA1480:
 4650 031c FF       		.byte	0xff
 4651 031d FF       		.byte	0xff
 4652 031e 01       		.byte	0x1
 4653 031f 13       		.uleb128 .LLSDACSE1480-.LLSDACSB1480
 4654              	.LLSDACSB1480:
 4655 0320 5B       		.uleb128 .LEHB106-.LFB1480
 4656 0321 05       		.uleb128 .LEHE106-.LEHB106
 4657 0322 00       		.uleb128 0
 4658 0323 00       		.uleb128 0
 4659 0324 71       		.uleb128 .LEHB107-.LFB1480
 4660 0325 6B       		.uleb128 .LEHE107-.LEHB107
 4661 0326 ED01     		.uleb128 .L247-.LFB1480
 4662 0328 00       		.uleb128 0
 4663 0329 E601     		.uleb128 .LEHB108-.LFB1480
 4664 032b 05       		.uleb128 .LEHE108-.LEHB108
 4665 032c 00       		.uleb128 0
 4666 032d 00       		.uleb128 0
 4667 032e 8502     		.uleb128 .LEHB109-.LFB1480
 4668 0330 05       		.uleb128 .LEHE109-.LEHB109
 4669 0331 00       		.uleb128 0
 4670 0332 00       		.uleb128 0
 4671              	.LLSDACSE1480:
 4672              		.section	.text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"axG",
 4674              		.section	.text._ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 4675              		.weak	_ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
 4677              	_ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:
 4678              	.LFB1481:
  19:../Checks.h   **** {
 4679              		.loc 5 19 0
 4680              		.cfi_startproc
 4681              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4682              		.cfi_lsda 0x1b,.LLSDA1481
 4683 0000 55       		pushq	%rbp
 4684              		.cfi_def_cfa_offset 16
 4685              		.cfi_offset 6, -16
 4686 0001 4889E5   		movq	%rsp, %rbp
 4687              		.cfi_def_cfa_register 6
 4688 0004 53       		pushq	%rbx
 4689 0005 4881ECC8 		subq	$456, %rsp
 4689      010000
 4690              		.cfi_offset 3, -24
 4691 000c 4889BD48 		movq	%rdi, -440(%rbp)
 4691      FEFFFF
 4692 0013 4889B540 		movq	%rsi, -448(%rbp)
 4692      FEFFFF
 4693 001a 48899538 		movq	%rdx, -456(%rbp)
 4693      FEFFFF
 4694 0021 48898D30 		movq	%rcx, -464(%rbp)
 4694      FEFFFF
  19:../Checks.h   **** {
 4695              		.loc 5 19 0
 4696 0028 64488B04 		movq	%fs:40, %rax
 4696      25280000 
 4696      00
 4697 0031 488945E8 		movq	%rax, -24(%rbp)
 4698 0035 31C0     		xorl	%eax, %eax
 4699              	.LBB63:
  21:../Checks.h   ****     {
 4700              		.loc 5 21 0
 4701 0037 488B8540 		movq	-448(%rbp), %rax
 4701      FEFFFF
 4702 003e 488B10   		movq	(%rax), %rdx
 4703 0041 488B8538 		movq	-456(%rbp), %rax
 4703      FEFFFF
 4704 0048 488B00   		movq	(%rax), %rax
 4705 004b 4839C2   		cmpq	%rax, %rdx
 4706 004e 0F84BD00 		je	.L254
 4706      0000
 4707              	.LBB64:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4708              		.loc 5 23 0
 4709 0054 488D8550 		leaq	-432(%rbp), %rax
 4709      FEFFFF
 4710 005b 4889C7   		movq	%rax, %rdi
 4711              	.LEHB110:
 4712 005e E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4712      00
 4713              	.LEHE110:
  24:../Checks.h   **** 
 4714              		.loc 5 24 0
 4715 0063 488D8550 		leaq	-432(%rbp), %rax
 4715      FEFFFF
 4716 006a 488D3500 		leaq	.LC53(%rip), %rsi
 4716      000000
 4717 0071 4889C7   		movq	%rax, %rdi
 4718              	.LEHB111:
 4719 0074 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4719      00
 4720 0079 4889C2   		movq	%rax, %rdx
 4721 007c 488B8540 		movq	-448(%rbp), %rax
 4721      FEFFFF
 4722 0083 488B00   		movq	(%rax), %rax
 4723 0086 4889C6   		movq	%rax, %rsi
 4724 0089 4889D7   		movq	%rdx, %rdi
 4725 008c E8000000 		call	_ZNSolsEPKv@PLT
 4725      00
  24:../Checks.h   **** 
 4726              		.loc 5 24 0 is_stmt 0 discriminator 1
 4727 0091 488D3500 		leaq	.LC54(%rip), %rsi
 4727      000000
 4728 0098 4889C7   		movq	%rax, %rdi
 4729 009b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4729      00
  24:../Checks.h   **** 
 4730              		.loc 5 24 0 discriminator 2
 4731 00a0 4889C2   		movq	%rax, %rdx
 4732 00a3 488B8538 		movq	-456(%rbp), %rax
 4732      FEFFFF
 4733 00aa 488B00   		movq	(%rax), %rax
 4734 00ad 4889C6   		movq	%rax, %rsi
 4735 00b0 4889D7   		movq	%rdx, %rdi
 4736 00b3 E8000000 		call	_ZNSolsEPKv@PLT
 4736      00
  26:../Checks.h   ****     }
 4737              		.loc 5 26 0 is_stmt 1
 4738 00b8 488D8550 		leaq	-432(%rbp), %rax
 4738      FEFFFF
 4739 00bf 4889C7   		movq	%rax, %rdi
 4740 00c2 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 4740      00
 4741 00c7 4889C2   		movq	%rax, %rdx
 4742 00ca 488B8D30 		movq	-464(%rbp), %rcx
 4742      FEFFFF
 4743 00d1 488B8548 		movq	-440(%rbp), %rax
 4743      FEFFFF
 4744 00d8 4889CE   		movq	%rcx, %rsi
 4745 00db 4889C7   		movq	%rax, %rdi
 4746 00de E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4746      00
 4747              	.LEHE111:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4748              		.loc 5 23 0
 4749 00e3 488D8550 		leaq	-432(%rbp), %rax
 4749      FEFFFF
 4750 00ea 4889C7   		movq	%rax, %rdi
 4751              	.LEHB112:
 4752 00ed E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4752      00
 4753              	.LEHE112:
 4754              	.LBE64:
 4755              	.LBE63:
 4756              		.loc 5 28 0
 4757 00f2 EB1D     		jmp	.L254
 4758              	.L253:
 4759 00f4 4889C3   		movq	%rax, %rbx
 4760              	.LBB66:
 4761              	.LBB65:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 4762              		.loc 5 23 0
 4763 00f7 488D8550 		leaq	-432(%rbp), %rax
 4763      FEFFFF
 4764 00fe 4889C7   		movq	%rax, %rdi
 4765 0101 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4765      00
 4766 0106 4889D8   		movq	%rbx, %rax
 4767 0109 4889C7   		movq	%rax, %rdi
 4768              	.LEHB113:
 4769 010c E8000000 		call	_Unwind_Resume@PLT
 4769      00
 4770              	.LEHE113:
 4771              	.L254:
 4772              	.LBE65:
 4773              	.LBE66:
 4774              		.loc 5 28 0
 4775 0111 90       		nop
 4776 0112 488B45E8 		movq	-24(%rbp), %rax
 4777 0116 64483304 		xorq	%fs:40, %rax
 4777      25280000 
 4777      00
 4778 011f 7405     		je	.L252
 4779 0121 E8000000 		call	__stack_chk_fail@PLT
 4779      00
 4780              	.L252:
 4781 0126 4881C4C8 		addq	$456, %rsp
 4781      010000
 4782 012d 5B       		popq	%rbx
 4783 012e 5D       		popq	%rbp
 4784              		.cfi_def_cfa 7, 8
 4785 012f C3       		ret
 4786              		.cfi_endproc
 4787              	.LFE1481:
 4788              		.section	.gcc_except_table
 4789              	.LLSDA1481:
 4790 0333 FF       		.byte	0xff
 4791 0334 FF       		.byte	0xff
 4792 0335 01       		.byte	0x1
 4793 0336 13       		.uleb128 .LLSDACSE1481-.LLSDACSB1481
 4794              	.LLSDACSB1481:
 4795 0337 5E       		.uleb128 .LEHB110-.LFB1481
 4796 0338 05       		.uleb128 .LEHE110-.LEHB110
 4797 0339 00       		.uleb128 0
 4798 033a 00       		.uleb128 0
 4799 033b 74       		.uleb128 .LEHB111-.LFB1481
 4800 033c 6F       		.uleb128 .LEHE111-.LEHB111
 4801 033d F401     		.uleb128 .L253-.LFB1481
 4802 033f 00       		.uleb128 0
 4803 0340 ED01     		.uleb128 .LEHB112-.LFB1481
 4804 0342 05       		.uleb128 .LEHE112-.LEHB112
 4805 0343 00       		.uleb128 0
 4806 0344 00       		.uleb128 0
 4807 0345 8C02     		.uleb128 .LEHB113-.LFB1481
 4808 0347 05       		.uleb128 .LEHE113-.LEHB113
 4809 0348 00       		.uleb128 0
 4810 0349 00       		.uleb128 0
 4811              	.LLSDACSE1481:
 4812              		.section	.text._ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE,"ax
 4814              		.section	.rodata
 4815              	.LC55:
 4816 05be 202B2F2D 		.string	" +/- "
 4816      2000
 4817              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 4818              		.weak	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
 4820              	_ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:
 4821              	.LFB1482:
  29:../Checks.h   **** 
  30:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char const* actual, TestDetails const& 
  31:../Checks.h   **** 
  32:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char* actual, TestDetails const& details);
  33:../Checks.h   **** 
  34:../Checks.h   **** void CheckEqual(TestResults& results, char* expected, char const* actual, TestDetails const& detail
  35:../Checks.h   **** 
  36:../Checks.h   **** void CheckEqual(TestResults& results, char const* expected, char* actual, TestDetails const& detail
  37:../Checks.h   **** 
  38:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  39:../Checks.h   **** bool AreClose(Expected const& expected, Actual const& actual, Tolerance const& tolerance)
  40:../Checks.h   **** {
  41:../Checks.h   ****     return (actual >= (expected - tolerance)) && (actual <= (expected + tolerance));
  42:../Checks.h   **** }
  43:../Checks.h   **** 
  44:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  45:../Checks.h   **** void CheckClose(TestResults& results, Expected const& expected, Actual const& actual, Tolerance con
 4822              		.loc 5 45 0
 4823              		.cfi_startproc
 4824              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4825              		.cfi_lsda 0x1b,.LLSDA1482
 4826 0000 55       		pushq	%rbp
 4827              		.cfi_def_cfa_offset 16
 4828              		.cfi_offset 6, -16
 4829 0001 4889E5   		movq	%rsp, %rbp
 4830              		.cfi_def_cfa_register 6
 4831 0004 53       		pushq	%rbx
 4832 0005 4881ECD8 		subq	$472, %rsp
 4832      010000
 4833              		.cfi_offset 3, -24
 4834 000c 4889BD48 		movq	%rdi, -440(%rbp)
 4834      FEFFFF
 4835 0013 4889B540 		movq	%rsi, -448(%rbp)
 4835      FEFFFF
 4836 001a 48899538 		movq	%rdx, -456(%rbp)
 4836      FEFFFF
 4837 0021 48898D30 		movq	%rcx, -464(%rbp)
 4837      FEFFFF
 4838 0028 4C898528 		movq	%r8, -472(%rbp)
 4838      FEFFFF
 4839              		.loc 5 45 0
 4840 002f 64488B04 		movq	%fs:40, %rax
 4840      25280000 
 4840      00
 4841 0038 488945E8 		movq	%rax, -24(%rbp)
 4842 003c 31C0     		xorl	%eax, %eax
 4843              	.LBB67:
  46:../Checks.h   ****                 TestDetails const& details)
  47:../Checks.h   **** {
  48:../Checks.h   ****     if (!AreClose(expected, actual, tolerance))
 4844              		.loc 5 48 0
 4845 003e 488B9530 		movq	-464(%rbp), %rdx
 4845      FEFFFF
 4846 0045 488B8D38 		movq	-456(%rbp), %rcx
 4846      FEFFFF
 4847 004c 488B8540 		movq	-448(%rbp), %rax
 4847      FEFFFF
 4848 0053 4889CE   		movq	%rcx, %rsi
 4849 0056 4889C7   		movq	%rax, %rdi
 4850 0059 E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 4850      00
 4851 005e 83F001   		xorl	$1, %eax
 4852 0061 84C0     		testb	%al, %al
 4853 0063 0F840201 		je	.L260
 4853      0000
 4854              	.LBB68:
  49:../Checks.h   ****     { 
  50:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 4855              		.loc 5 50 0
 4856 0069 488D8550 		leaq	-432(%rbp), %rax
 4856      FEFFFF
 4857 0070 4889C7   		movq	%rax, %rdi
 4858              	.LEHB114:
 4859 0073 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4859      00
 4860              	.LEHE114:
  51:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 4861              		.loc 5 51 0
 4862 0078 488D8550 		leaq	-432(%rbp), %rax
 4862      FEFFFF
 4863 007f 488D3500 		leaq	.LC53(%rip), %rsi
 4863      000000
 4864 0086 4889C7   		movq	%rax, %rdi
 4865              	.LEHB115:
 4866 0089 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4866      00
 4867 008e 4889C2   		movq	%rax, %rdx
 4868 0091 488B8540 		movq	-448(%rbp), %rax
 4868      FEFFFF
 4869 0098 8B00     		movl	(%rax), %eax
 4870 009a 898524FE 		movl	%eax, -476(%rbp)
 4870      FFFF
 4871 00a0 F30F1085 		movss	-476(%rbp), %xmm0
 4871      24FEFFFF 
 4872 00a8 4889D7   		movq	%rdx, %rdi
 4873 00ab E8000000 		call	_ZNSolsEf@PLT
 4873      00
 4874              		.loc 5 51 0 is_stmt 0 discriminator 1
 4875 00b0 488D3500 		leaq	.LC55(%rip), %rsi
 4875      000000
 4876 00b7 4889C7   		movq	%rax, %rdi
 4877 00ba E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4877      00
 4878              		.loc 5 51 0 discriminator 2
 4879 00bf 4889C2   		movq	%rax, %rdx
 4880 00c2 488B8530 		movq	-464(%rbp), %rax
 4880      FEFFFF
 4881 00c9 8B00     		movl	(%rax), %eax
 4882 00cb 898524FE 		movl	%eax, -476(%rbp)
 4882      FFFF
 4883 00d1 F30F1085 		movss	-476(%rbp), %xmm0
 4883      24FEFFFF 
 4884 00d9 4889D7   		movq	%rdx, %rdi
 4885 00dc E8000000 		call	_ZNSolsEf@PLT
 4885      00
 4886              		.loc 5 51 0 discriminator 3
 4887 00e1 488D3500 		leaq	.LC54(%rip), %rsi
 4887      000000
 4888 00e8 4889C7   		movq	%rax, %rdi
 4889 00eb E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4889      00
 4890              		.loc 5 51 0 discriminator 4
 4891 00f0 4889C2   		movq	%rax, %rdx
 4892 00f3 488B8538 		movq	-456(%rbp), %rax
 4892      FEFFFF
 4893 00fa 8B00     		movl	(%rax), %eax
 4894 00fc 898524FE 		movl	%eax, -476(%rbp)
 4894      FFFF
 4895 0102 F30F1085 		movss	-476(%rbp), %xmm0
 4895      24FEFFFF 
 4896 010a 4889D7   		movq	%rdx, %rdi
 4897 010d E8000000 		call	_ZNSolsEf@PLT
 4897      00
  52:../Checks.h   **** 
  53:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 4898              		.loc 5 53 0 is_stmt 1
 4899 0112 488D8550 		leaq	-432(%rbp), %rax
 4899      FEFFFF
 4900 0119 4889C7   		movq	%rax, %rdi
 4901 011c E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 4901      00
 4902 0121 4889C2   		movq	%rax, %rdx
 4903 0124 488B8D28 		movq	-472(%rbp), %rcx
 4903      FEFFFF
 4904 012b 488B8548 		movq	-440(%rbp), %rax
 4904      FEFFFF
 4905 0132 4889CE   		movq	%rcx, %rsi
 4906 0135 4889C7   		movq	%rax, %rdi
 4907 0138 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4907      00
 4908              	.LEHE115:
  50:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 4909              		.loc 5 50 0
 4910 013d 488D8550 		leaq	-432(%rbp), %rax
 4910      FEFFFF
 4911 0144 4889C7   		movq	%rax, %rdi
 4912              	.LEHB116:
 4913 0147 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4913      00
 4914              	.LEHE116:
 4915              	.LBE68:
 4916              	.LBE67:
  54:../Checks.h   ****     }
  55:../Checks.h   **** }
 4917              		.loc 5 55 0
 4918 014c EB1D     		jmp	.L260
 4919              	.L259:
 4920 014e 4889C3   		movq	%rax, %rbx
 4921              	.LBB70:
 4922              	.LBB69:
  50:../Checks.h   ****         stream << "Expected " << expected << " +/- " << tolerance << " but was " << actual;
 4923              		.loc 5 50 0
 4924 0151 488D8550 		leaq	-432(%rbp), %rax
 4924      FEFFFF
 4925 0158 4889C7   		movq	%rax, %rdi
 4926 015b E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4926      00
 4927 0160 4889D8   		movq	%rbx, %rax
 4928 0163 4889C7   		movq	%rax, %rdi
 4929              	.LEHB117:
 4930 0166 E8000000 		call	_Unwind_Resume@PLT
 4930      00
 4931              	.LEHE117:
 4932              	.L260:
 4933              	.LBE69:
 4934              	.LBE70:
 4935              		.loc 5 55 0
 4936 016b 90       		nop
 4937 016c 488B45E8 		movq	-24(%rbp), %rax
 4938 0170 64483304 		xorq	%fs:40, %rax
 4938      25280000 
 4938      00
 4939 0179 7405     		je	.L258
 4940 017b E8000000 		call	__stack_chk_fail@PLT
 4940      00
 4941              	.L258:
 4942 0180 4881C4D8 		addq	$472, %rsp
 4942      010000
 4943 0187 5B       		popq	%rbx
 4944 0188 5D       		popq	%rbp
 4945              		.cfi_def_cfa 7, 8
 4946 0189 C3       		ret
 4947              		.cfi_endproc
 4948              	.LFE1482:
 4949              		.section	.gcc_except_table
 4950              	.LLSDA1482:
 4951 034a FF       		.byte	0xff
 4952 034b FF       		.byte	0xff
 4953 034c 01       		.byte	0x1
 4954 034d 15       		.uleb128 .LLSDACSE1482-.LLSDACSB1482
 4955              	.LLSDACSB1482:
 4956 034e 73       		.uleb128 .LEHB114-.LFB1482
 4957 034f 05       		.uleb128 .LEHE114-.LEHB114
 4958 0350 00       		.uleb128 0
 4959 0351 00       		.uleb128 0
 4960 0352 8901     		.uleb128 .LEHB115-.LFB1482
 4961 0354 B401     		.uleb128 .LEHE115-.LEHB115
 4962 0356 CE02     		.uleb128 .L259-.LFB1482
 4963 0358 00       		.uleb128 0
 4964 0359 C702     		.uleb128 .LEHB116-.LFB1482
 4965 035b 05       		.uleb128 .LEHE116-.LEHB116
 4966 035c 00       		.uleb128 0
 4967 035d 00       		.uleb128 0
 4968 035e E602     		.uleb128 .LEHB117-.LFB1482
 4969 0360 05       		.uleb128 .LEHE117-.LEHB117
 4970 0361 00       		.uleb128 0
 4971 0362 00       		.uleb128 0
 4972              	.LLSDACSE1482:
 4973              		.section	.text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE,
 4975              		.section	.rodata
 4976              	.LC56:
 4977 05c4 45787065 		.string	"Expected [ "
 4977      63746564 
 4977      205B2000 
 4978              	.LC57:
 4979 05d0 2000     		.string	" "
 4980              	.LC58:
 4981 05d2 5D202B2F 		.string	"] +/- "
 4981      2D2000
 4982              	.LC59:
 4983 05d9 20627574 		.string	" but was [ "
 4983      20776173 
 4983      205B2000 
 4984              	.LC60:
 4985 05e5 5D00     		.string	"]"
 4986              		.section	.text._ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11Te
 4987              		.weak	_ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetails
 4989              	_ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE:
 4990              	.LFB1483:
  56:../Checks.h   **** 
  57:../Checks.h   **** 
  58:../Checks.h   **** template< typename Expected, typename Actual >
  59:../Checks.h   **** void CheckArrayEqual(TestResults& results, Expected const& expected, Actual const& actual,
  60:../Checks.h   ****                 int const count, TestDetails const& details)
  61:../Checks.h   **** {
  62:../Checks.h   ****     bool equal = true;
  63:../Checks.h   ****     for (int i = 0; i < count; ++i)
  64:../Checks.h   ****         equal &= (expected[i] == actual[i]);
  65:../Checks.h   **** 
  66:../Checks.h   ****     if (!equal)
  67:../Checks.h   ****     {
  68:../Checks.h   ****         UnitTest::MemoryOutStream stream;
  69:../Checks.h   **** 
  70:../Checks.h   **** 		stream << "Expected [ ";
  71:../Checks.h   **** 
  72:../Checks.h   **** 		for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
  73:../Checks.h   ****             stream << expected[expectedIndex] << " ";
  74:../Checks.h   **** 
  75:../Checks.h   **** 		stream << "] but was [ ";
  76:../Checks.h   **** 
  77:../Checks.h   **** 		for (int actualIndex = 0; actualIndex < count; ++actualIndex)
  78:../Checks.h   ****             stream << actual[actualIndex] << " ";
  79:../Checks.h   **** 
  80:../Checks.h   **** 		stream << "]";
  81:../Checks.h   **** 
  82:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
  83:../Checks.h   ****     }
  84:../Checks.h   **** }
  85:../Checks.h   **** 
  86:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  87:../Checks.h   **** bool ArrayAreClose(Expected const& expected, Actual const& actual, int const count, Tolerance const
  88:../Checks.h   **** {
  89:../Checks.h   ****     bool equal = true;
  90:../Checks.h   ****     for (int i = 0; i < count; ++i)
  91:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
  92:../Checks.h   ****     return equal;
  93:../Checks.h   **** }
  94:../Checks.h   **** 
  95:../Checks.h   **** template< typename Expected, typename Actual, typename Tolerance >
  96:../Checks.h   **** void CheckArrayClose(TestResults& results, Expected const& expected, Actual const& actual,
 4991              		.loc 5 96 0
 4992              		.cfi_startproc
 4993              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4994              		.cfi_lsda 0x1b,.LLSDA1483
 4995 0000 55       		pushq	%rbp
 4996              		.cfi_def_cfa_offset 16
 4997              		.cfi_offset 6, -16
 4998 0001 4889E5   		movq	%rsp, %rbp
 4999              		.cfi_def_cfa_register 6
 5000 0004 53       		pushq	%rbx
 5001 0005 4881ECE8 		subq	$488, %rsp
 5001      010000
 5002              		.cfi_offset 3, -24
 5003 000c 4889BD38 		movq	%rdi, -456(%rbp)
 5003      FEFFFF
 5004 0013 4889B530 		movq	%rsi, -464(%rbp)
 5004      FEFFFF
 5005 001a 48899528 		movq	%rdx, -472(%rbp)
 5005      FEFFFF
 5006 0021 898D24FE 		movl	%ecx, -476(%rbp)
 5006      FFFF
 5007 0027 4C898518 		movq	%r8, -488(%rbp)
 5007      FEFFFF
 5008 002e 4C898D10 		movq	%r9, -496(%rbp)
 5008      FEFFFF
 5009              		.loc 5 96 0
 5010 0035 64488B04 		movq	%fs:40, %rax
 5010      25280000 
 5010      00
 5011 003e 488945E8 		movq	%rax, -24(%rbp)
 5012 0042 31C0     		xorl	%eax, %eax
  97:../Checks.h   ****                    int const count, Tolerance const& tolerance, TestDetails const& details)
  98:../Checks.h   **** {
  99:../Checks.h   ****     bool equal = ArrayAreClose(expected, actual, count, tolerance);
 5013              		.loc 5 99 0
 5014 0044 488B8D18 		movq	-488(%rbp), %rcx
 5014      FEFFFF
 5015 004b 8B9524FE 		movl	-476(%rbp), %edx
 5015      FFFF
 5016 0051 488BB528 		movq	-472(%rbp), %rsi
 5016      FEFFFF
 5017 0058 488B8530 		movq	-464(%rbp), %rax
 5017      FEFFFF
 5018 005f 4889C7   		movq	%rax, %rdi
 5019 0062 E8000000 		call	_ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_
 5019      00
 5020 0067 888547FE 		movb	%al, -441(%rbp)
 5020      FFFF
 5021              	.LBB71:
 100:../Checks.h   **** 
 101:../Checks.h   ****     if (!equal)
 5022              		.loc 5 101 0
 5023 006d 0FB68547 		movzbl	-441(%rbp), %eax
 5023      FEFFFF
 5024 0074 83F001   		xorl	$1, %eax
 5025 0077 84C0     		testb	%al, %al
 5026 0079 0F849B01 		je	.L270
 5026      0000
 5027              	.LBB72:
 102:../Checks.h   ****     {
 103:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 5028              		.loc 5 103 0
 5029 007f 488D8550 		leaq	-432(%rbp), %rax
 5029      FEFFFF
 5030 0086 4889C7   		movq	%rax, %rdi
 5031              	.LEHB118:
 5032 0089 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5032      00
 5033              	.LEHE118:
 104:../Checks.h   **** 
 105:../Checks.h   ****         stream << "Expected [ ";
 5034              		.loc 5 105 0
 5035 008e 488D8550 		leaq	-432(%rbp), %rax
 5035      FEFFFF
 5036 0095 488D3500 		leaq	.LC56(%rip), %rsi
 5036      000000
 5037 009c 4889C7   		movq	%rax, %rdi
 5038              	.LEHB119:
 5039 009f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5039      00
 5040              	.LBB73:
 106:../Checks.h   ****         for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 5041              		.loc 5 106 0
 5042 00a4 C78548FE 		movl	$0, -440(%rbp)
 5042      FFFF0000 
 5042      0000
 5043              	.L264:
 5044              		.loc 5 106 0 is_stmt 0 discriminator 1
 5045 00ae 8B8548FE 		movl	-440(%rbp), %eax
 5045      FFFF
 5046 00b4 3B8524FE 		cmpl	-476(%rbp), %eax
 5046      FFFF
 5047 00ba 7D48     		jge	.L263
 107:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 5048              		.loc 5 107 0 is_stmt 1
 5049 00bc 488B8530 		movq	-464(%rbp), %rax
 5049      FEFFFF
 5050 00c3 8B9548FE 		movl	-440(%rbp), %edx
 5050      FFFF
 5051 00c9 4863D2   		movslq	%edx, %rdx
 5052 00cc 8B1490   		movl	(%rax,%rdx,4), %edx
 5053 00cf 488D8550 		leaq	-432(%rbp), %rax
 5053      FEFFFF
 5054 00d6 899520FE 		movl	%edx, -480(%rbp)
 5054      FFFF
 5055 00dc F30F1085 		movss	-480(%rbp), %xmm0
 5055      20FEFFFF 
 5056 00e4 4889C7   		movq	%rax, %rdi
 5057 00e7 E8000000 		call	_ZNSolsEf@PLT
 5057      00
 5058 00ec 488D3500 		leaq	.LC57(%rip), %rsi
 5058      000000
 5059 00f3 4889C7   		movq	%rax, %rdi
 5060 00f6 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5060      00
 106:../Checks.h   ****         for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 5061              		.loc 5 106 0 discriminator 2
 5062 00fb 838548FE 		addl	$1, -440(%rbp)
 5062      FFFF01
 5063 0102 EBAA     		jmp	.L264
 5064              	.L263:
 5065              	.LBE73:
 108:../Checks.h   ****         stream << "] +/- " << tolerance << " but was [ ";
 5066              		.loc 5 108 0
 5067 0104 488D8550 		leaq	-432(%rbp), %rax
 5067      FEFFFF
 5068 010b 488D3500 		leaq	.LC58(%rip), %rsi
 5068      000000
 5069 0112 4889C7   		movq	%rax, %rdi
 5070 0115 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5070      00
 5071 011a 4889C2   		movq	%rax, %rdx
 5072 011d 488B8518 		movq	-488(%rbp), %rax
 5072      FEFFFF
 5073 0124 8B00     		movl	(%rax), %eax
 5074 0126 898520FE 		movl	%eax, -480(%rbp)
 5074      FFFF
 5075 012c F30F1085 		movss	-480(%rbp), %xmm0
 5075      20FEFFFF 
 5076 0134 4889D7   		movq	%rdx, %rdi
 5077 0137 E8000000 		call	_ZNSolsEf@PLT
 5077      00
 5078              		.loc 5 108 0 is_stmt 0 discriminator 1
 5079 013c 488D3500 		leaq	.LC59(%rip), %rsi
 5079      000000
 5080 0143 4889C7   		movq	%rax, %rdi
 5081 0146 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5081      00
 5082              	.LBB74:
 109:../Checks.h   **** 
 110:../Checks.h   **** 		for (int actualIndex = 0; actualIndex < count; ++actualIndex)
 5083              		.loc 5 110 0 is_stmt 1
 5084 014b C7854CFE 		movl	$0, -436(%rbp)
 5084      FFFF0000 
 5084      0000
 5085              	.L266:
 5086              		.loc 5 110 0 is_stmt 0 discriminator 1
 5087 0155 8B854CFE 		movl	-436(%rbp), %eax
 5087      FFFF
 5088 015b 3B8524FE 		cmpl	-476(%rbp), %eax
 5088      FFFF
 5089 0161 7D48     		jge	.L265
 111:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5090              		.loc 5 111 0 is_stmt 1
 5091 0163 488B8528 		movq	-472(%rbp), %rax
 5091      FEFFFF
 5092 016a 8B954CFE 		movl	-436(%rbp), %edx
 5092      FFFF
 5093 0170 4863D2   		movslq	%edx, %rdx
 5094 0173 8B1490   		movl	(%rax,%rdx,4), %edx
 5095 0176 488D8550 		leaq	-432(%rbp), %rax
 5095      FEFFFF
 5096 017d 899520FE 		movl	%edx, -480(%rbp)
 5096      FFFF
 5097 0183 F30F1085 		movss	-480(%rbp), %xmm0
 5097      20FEFFFF 
 5098 018b 4889C7   		movq	%rax, %rdi
 5099 018e E8000000 		call	_ZNSolsEf@PLT
 5099      00
 5100 0193 488D3500 		leaq	.LC57(%rip), %rsi
 5100      000000
 5101 019a 4889C7   		movq	%rax, %rdi
 5102 019d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5102      00
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5103              		.loc 5 110 0 discriminator 2
 5104 01a2 83854CFE 		addl	$1, -436(%rbp)
 5104      FFFF01
 5105 01a9 EBAA     		jmp	.L266
 5106              	.L265:
 5107              	.LBE74:
 112:../Checks.h   ****         stream << "]";
 5108              		.loc 5 112 0
 5109 01ab 488D8550 		leaq	-432(%rbp), %rax
 5109      FEFFFF
 5110 01b2 488D3500 		leaq	.LC60(%rip), %rsi
 5110      000000
 5111 01b9 4889C7   		movq	%rax, %rdi
 5112 01bc E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5112      00
 113:../Checks.h   **** 
 114:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 5113              		.loc 5 114 0
 5114 01c1 488D8550 		leaq	-432(%rbp), %rax
 5114      FEFFFF
 5115 01c8 4889C7   		movq	%rax, %rdi
 5116 01cb E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5116      00
 5117 01d0 4889C2   		movq	%rax, %rdx
 5118 01d3 488B8D10 		movq	-496(%rbp), %rcx
 5118      FEFFFF
 5119 01da 488B8538 		movq	-456(%rbp), %rax
 5119      FEFFFF
 5120 01e1 4889CE   		movq	%rcx, %rsi
 5121 01e4 4889C7   		movq	%rax, %rdi
 5122 01e7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5122      00
 5123              	.LEHE119:
 103:../Checks.h   **** 
 5124              		.loc 5 103 0
 5125 01ec 488D8550 		leaq	-432(%rbp), %rax
 5125      FEFFFF
 5126 01f3 4889C7   		movq	%rax, %rdi
 5127              	.LEHB120:
 5128 01f6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5128      00
 5129              	.LEHE120:
 5130              	.LBE72:
 5131              	.LBE71:
 115:../Checks.h   ****     }
 116:../Checks.h   **** }
 5132              		.loc 5 116 0
 5133 01fb EB1D     		jmp	.L270
 5134              	.L269:
 5135 01fd 4889C3   		movq	%rax, %rbx
 5136              	.LBB76:
 5137              	.LBB75:
 103:../Checks.h   **** 
 5138              		.loc 5 103 0
 5139 0200 488D8550 		leaq	-432(%rbp), %rax
 5139      FEFFFF
 5140 0207 4889C7   		movq	%rax, %rdi
 5141 020a E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5141      00
 5142 020f 4889D8   		movq	%rbx, %rax
 5143 0212 4889C7   		movq	%rax, %rdi
 5144              	.LEHB121:
 5145 0215 E8000000 		call	_Unwind_Resume@PLT
 5145      00
 5146              	.LEHE121:
 5147              	.L270:
 5148              	.LBE75:
 5149              	.LBE76:
 5150              		.loc 5 116 0
 5151 021a 90       		nop
 5152 021b 488B45E8 		movq	-24(%rbp), %rax
 5153 021f 64483304 		xorq	%fs:40, %rax
 5153      25280000 
 5153      00
 5154 0228 7405     		je	.L268
 5155 022a E8000000 		call	__stack_chk_fail@PLT
 5155      00
 5156              	.L268:
 5157 022f 4881C4E8 		addq	$488, %rsp
 5157      010000
 5158 0236 5B       		popq	%rbx
 5159 0237 5D       		popq	%rbp
 5160              		.cfi_def_cfa 7, 8
 5161 0238 C3       		ret
 5162              		.cfi_endproc
 5163              	.LFE1483:
 5164              		.section	.gcc_except_table
 5165              	.LLSDA1483:
 5166 0363 FF       		.byte	0xff
 5167 0364 FF       		.byte	0xff
 5168 0365 01       		.byte	0x1
 5169 0366 16       		.uleb128 .LLSDACSE1483-.LLSDACSB1483
 5170              	.LLSDACSB1483:
 5171 0367 8901     		.uleb128 .LEHB118-.LFB1483
 5172 0369 05       		.uleb128 .LEHE118-.LEHB118
 5173 036a 00       		.uleb128 0
 5174 036b 00       		.uleb128 0
 5175 036c 9F01     		.uleb128 .LEHB119-.LFB1483
 5176 036e CD02     		.uleb128 .LEHE119-.LEHB119
 5177 0370 FD03     		.uleb128 .L269-.LFB1483
 5178 0372 00       		.uleb128 0
 5179 0373 F603     		.uleb128 .LEHB120-.LFB1483
 5180 0375 05       		.uleb128 .LEHE120-.LEHB120
 5181 0376 00       		.uleb128 0
 5182 0377 00       		.uleb128 0
 5183 0378 9504     		.uleb128 .LEHB121-.LFB1483
 5184 037a 05       		.uleb128 .LEHE121-.LEHB121
 5185 037b 00       		.uleb128 0
 5186 037c 00       		.uleb128 0
 5187              	.LLSDACSE1483:
 5188              		.section	.text._ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11Te
 5190              		.section	.text._ZNSaIfEC2Ev,"axG",@progbits,_ZNSaIfEC5Ev,comdat
 5191              		.align 2
 5192              		.weak	_ZNSaIfEC2Ev
 5194              	_ZNSaIfEC2Ev:
 5195              	.LFB1485:
 5196              		.file 6 "/usr/include/c++/7/bits/allocator.h"
   1:/usr/include/c++/7/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/7/bits/allocator.h **** 
   3:/usr/include/c++/7/bits/allocator.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/allocator.h **** //
   5:/usr/include/c++/7/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/allocator.h **** // any later version.
  10:/usr/include/c++/7/bits/allocator.h **** 
  11:/usr/include/c++/7/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/allocator.h **** 
  16:/usr/include/c++/7/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/allocator.h **** 
  20:/usr/include/c++/7/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/allocator.h **** 
  25:/usr/include/c++/7/bits/allocator.h **** /*
  26:/usr/include/c++/7/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/7/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/7/bits/allocator.h ****  *
  29:/usr/include/c++/7/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/7/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/7/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/7/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/7/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/7/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/7/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/7/bits/allocator.h ****  */
  37:/usr/include/c++/7/bits/allocator.h **** 
  38:/usr/include/c++/7/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/7/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/7/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/7/bits/allocator.h ****  */
  42:/usr/include/c++/7/bits/allocator.h **** 
  43:/usr/include/c++/7/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/7/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/7/bits/allocator.h **** 
  46:/usr/include/c++/7/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/7/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/7/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/7/bits/allocator.h **** #endif
  51:/usr/include/c++/7/bits/allocator.h **** 
  52:/usr/include/c++/7/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/usr/include/c++/7/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/usr/include/c++/7/bits/allocator.h **** #endif
  56:/usr/include/c++/7/bits/allocator.h **** 
  57:/usr/include/c++/7/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/c++/7/bits/allocator.h **** {
  59:/usr/include/c++/7/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/c++/7/bits/allocator.h **** 
  61:/usr/include/c++/7/bits/allocator.h ****   /**
  62:/usr/include/c++/7/bits/allocator.h ****    *  @addtogroup allocators
  63:/usr/include/c++/7/bits/allocator.h ****    *  @{
  64:/usr/include/c++/7/bits/allocator.h ****    */
  65:/usr/include/c++/7/bits/allocator.h **** 
  66:/usr/include/c++/7/bits/allocator.h ****   /// allocator<void> specialization.
  67:/usr/include/c++/7/bits/allocator.h ****   template<>
  68:/usr/include/c++/7/bits/allocator.h ****     class allocator<void>
  69:/usr/include/c++/7/bits/allocator.h ****     {
  70:/usr/include/c++/7/bits/allocator.h ****     public:
  71:/usr/include/c++/7/bits/allocator.h ****       typedef size_t      size_type;
  72:/usr/include/c++/7/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/usr/include/c++/7/bits/allocator.h ****       typedef void*       pointer;
  74:/usr/include/c++/7/bits/allocator.h ****       typedef const void* const_pointer;
  75:/usr/include/c++/7/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/7/bits/allocator.h **** 
  77:/usr/include/c++/7/bits/allocator.h ****       template<typename _Tp1>
  78:/usr/include/c++/7/bits/allocator.h **** 	struct rebind
  79:/usr/include/c++/7/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:/usr/include/c++/7/bits/allocator.h **** 
  81:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/usr/include/c++/7/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/usr/include/c++/7/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/usr/include/c++/7/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/usr/include/c++/7/bits/allocator.h **** 
  86:/usr/include/c++/7/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/usr/include/c++/7/bits/allocator.h **** 
  88:/usr/include/c++/7/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/usr/include/c++/7/bits/allocator.h **** 	void
  90:/usr/include/c++/7/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/usr/include/c++/7/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  92:/usr/include/c++/7/bits/allocator.h **** 
  93:/usr/include/c++/7/bits/allocator.h ****       template<typename _Up>
  94:/usr/include/c++/7/bits/allocator.h **** 	void
  95:/usr/include/c++/7/bits/allocator.h **** 	destroy(_Up* __p) { __p->~_Up(); }
  96:/usr/include/c++/7/bits/allocator.h **** #endif
  97:/usr/include/c++/7/bits/allocator.h ****     };
  98:/usr/include/c++/7/bits/allocator.h **** 
  99:/usr/include/c++/7/bits/allocator.h ****   /**
 100:/usr/include/c++/7/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 101:/usr/include/c++/7/bits/allocator.h ****    *
 102:/usr/include/c++/7/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 103:/usr/include/c++/7/bits/allocator.h ****    *  for further details.
 104:/usr/include/c++/7/bits/allocator.h ****    *
 105:/usr/include/c++/7/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 106:/usr/include/c++/7/bits/allocator.h ****    */
 107:/usr/include/c++/7/bits/allocator.h ****   template<typename _Tp>
 108:/usr/include/c++/7/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
 109:/usr/include/c++/7/bits/allocator.h ****     {
 110:/usr/include/c++/7/bits/allocator.h ****    public:
 111:/usr/include/c++/7/bits/allocator.h ****       typedef size_t     size_type;
 112:/usr/include/c++/7/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 113:/usr/include/c++/7/bits/allocator.h ****       typedef _Tp*       pointer;
 114:/usr/include/c++/7/bits/allocator.h ****       typedef const _Tp* const_pointer;
 115:/usr/include/c++/7/bits/allocator.h ****       typedef _Tp&       reference;
 116:/usr/include/c++/7/bits/allocator.h ****       typedef const _Tp& const_reference;
 117:/usr/include/c++/7/bits/allocator.h ****       typedef _Tp        value_type;
 118:/usr/include/c++/7/bits/allocator.h **** 
 119:/usr/include/c++/7/bits/allocator.h ****       template<typename _Tp1>
 120:/usr/include/c++/7/bits/allocator.h **** 	struct rebind
 121:/usr/include/c++/7/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 122:/usr/include/c++/7/bits/allocator.h **** 
 123:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
 124:/usr/include/c++/7/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 125:/usr/include/c++/7/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 126:/usr/include/c++/7/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 127:/usr/include/c++/7/bits/allocator.h **** 
 128:/usr/include/c++/7/bits/allocator.h ****       typedef true_type is_always_equal;
 129:/usr/include/c++/7/bits/allocator.h **** #endif
 130:/usr/include/c++/7/bits/allocator.h **** 
 131:/usr/include/c++/7/bits/allocator.h ****       allocator() throw() { }
 5197              		.loc 6 131 0
 5198              		.cfi_startproc
 5199 0000 55       		pushq	%rbp
 5200              		.cfi_def_cfa_offset 16
 5201              		.cfi_offset 6, -16
 5202 0001 4889E5   		movq	%rsp, %rbp
 5203              		.cfi_def_cfa_register 6
 5204 0004 4883EC10 		subq	$16, %rsp
 5205 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5206              	.LBB77:
 5207              		.loc 6 131 0
 5208 000c 488B45F8 		movq	-8(%rbp), %rax
 5209 0010 4889C7   		movq	%rax, %rdi
 5210 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfEC2Ev
 5210      00
 5211              	.LBE77:
 5212 0018 90       		nop
 5213 0019 C9       		leave
 5214              		.cfi_def_cfa 7, 8
 5215 001a C3       		ret
 5216              		.cfi_endproc
 5217              	.LFE1485:
 5219              		.weak	_ZNSaIfEC1Ev
 5220              		.set	_ZNSaIfEC1Ev,_ZNSaIfEC2Ev
 5221              		.section	.text._ZNSaIfED2Ev,"axG",@progbits,_ZNSaIfED5Ev,comdat
 5222              		.align 2
 5223              		.weak	_ZNSaIfED2Ev
 5225              	_ZNSaIfED2Ev:
 5226              	.LFB1488:
 132:/usr/include/c++/7/bits/allocator.h **** 
 133:/usr/include/c++/7/bits/allocator.h ****       allocator(const allocator& __a) throw()
 134:/usr/include/c++/7/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 135:/usr/include/c++/7/bits/allocator.h **** 
 136:/usr/include/c++/7/bits/allocator.h ****       template<typename _Tp1>
 137:/usr/include/c++/7/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) throw() { }
 138:/usr/include/c++/7/bits/allocator.h **** 
 139:/usr/include/c++/7/bits/allocator.h ****       ~allocator() throw() { }
 5227              		.loc 6 139 0
 5228              		.cfi_startproc
 5229 0000 55       		pushq	%rbp
 5230              		.cfi_def_cfa_offset 16
 5231              		.cfi_offset 6, -16
 5232 0001 4889E5   		movq	%rsp, %rbp
 5233              		.cfi_def_cfa_register 6
 5234 0004 4883EC10 		subq	$16, %rsp
 5235 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5236              	.LBB78:
 5237              		.loc 6 139 0
 5238 000c 488B45F8 		movq	-8(%rbp), %rax
 5239 0010 4889C7   		movq	%rax, %rdi
 5240 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfED2Ev
 5240      00
 5241              	.LBE78:
 5242 0018 90       		nop
 5243 0019 C9       		leave
 5244              		.cfi_def_cfa 7, 8
 5245 001a C3       		ret
 5246              		.cfi_endproc
 5247              	.LFE1488:
 5249              		.weak	_ZNSaIfED1Ev
 5250              		.set	_ZNSaIfED1Ev,_ZNSaIfED2Ev
 5251              		.section	.text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_,"axG",@progbits,_ZNSt6vectorIfSaIfEEC5EmRKfRKS0_,c
 5252              		.align 2
 5253              		.weak	_ZNSt6vectorIfSaIfEEC2EmRKfRKS0_
 5255              	_ZNSt6vectorIfSaIfEEC2EmRKfRKS0_:
 5256              	.LFB1491:
 5257              		.file 7 "/usr/include/c++/7/bits/stl_vector.h"
   1:/usr/include/c++/7/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/7/bits/stl_vector.h **** 
   3:/usr/include/c++/7/bits/stl_vector.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/stl_vector.h **** //
   5:/usr/include/c++/7/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/7/bits/stl_vector.h **** 
  11:/usr/include/c++/7/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/stl_vector.h **** 
  16:/usr/include/c++/7/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/stl_vector.h **** 
  20:/usr/include/c++/7/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/stl_vector.h **** 
  25:/usr/include/c++/7/bits/stl_vector.h **** /*
  26:/usr/include/c++/7/bits/stl_vector.h ****  *
  27:/usr/include/c++/7/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/7/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/7/bits/stl_vector.h ****  *
  30:/usr/include/c++/7/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/7/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/7/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/7/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/7/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/7/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/7/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/7/bits/stl_vector.h ****  *
  38:/usr/include/c++/7/bits/stl_vector.h ****  *
  39:/usr/include/c++/7/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/7/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/7/bits/stl_vector.h ****  *
  42:/usr/include/c++/7/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/7/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/7/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/7/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/7/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/7/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/7/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/7/bits/stl_vector.h ****  */
  50:/usr/include/c++/7/bits/stl_vector.h **** 
  51:/usr/include/c++/7/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/7/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/7/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/7/bits/stl_vector.h ****  */
  55:/usr/include/c++/7/bits/stl_vector.h **** 
  56:/usr/include/c++/7/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/7/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/7/bits/stl_vector.h **** 
  59:/usr/include/c++/7/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/7/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/7/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/7/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/7/bits/stl_vector.h **** #endif
  65:/usr/include/c++/7/bits/stl_vector.h **** 
  66:/usr/include/c++/7/bits/stl_vector.h **** #include <debug/assertions.h>
  67:/usr/include/c++/7/bits/stl_vector.h **** 
  68:/usr/include/c++/7/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  69:/usr/include/c++/7/bits/stl_vector.h **** {
  70:/usr/include/c++/7/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  71:/usr/include/c++/7/bits/stl_vector.h **** 
  72:/usr/include/c++/7/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  73:/usr/include/c++/7/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  74:/usr/include/c++/7/bits/stl_vector.h ****     struct _Vector_base
  75:/usr/include/c++/7/bits/stl_vector.h ****     {
  76:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  77:/usr/include/c++/7/bits/stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  78:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  79:/usr/include/c++/7/bits/stl_vector.h ****        	pointer;
  80:/usr/include/c++/7/bits/stl_vector.h **** 
  81:/usr/include/c++/7/bits/stl_vector.h ****       struct _Vector_impl
  82:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
  83:/usr/include/c++/7/bits/stl_vector.h ****       {
  84:/usr/include/c++/7/bits/stl_vector.h **** 	pointer _M_start;
  85:/usr/include/c++/7/bits/stl_vector.h **** 	pointer _M_finish;
  86:/usr/include/c++/7/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  87:/usr/include/c++/7/bits/stl_vector.h **** 
  88:/usr/include/c++/7/bits/stl_vector.h **** 	_Vector_impl()
  89:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
  90:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
  91:/usr/include/c++/7/bits/stl_vector.h **** 
  92:/usr/include/c++/7/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  93:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
  94:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
  95:/usr/include/c++/7/bits/stl_vector.h **** 
  96:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
  97:/usr/include/c++/7/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  98:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  99:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_start(), _M_finish(), _M_end_of_storage()
 100:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
 101:/usr/include/c++/7/bits/stl_vector.h **** #endif
 102:/usr/include/c++/7/bits/stl_vector.h **** 
 103:/usr/include/c++/7/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 104:/usr/include/c++/7/bits/stl_vector.h **** 	{
 105:/usr/include/c++/7/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 106:/usr/include/c++/7/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 107:/usr/include/c++/7/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 108:/usr/include/c++/7/bits/stl_vector.h **** 	}
 109:/usr/include/c++/7/bits/stl_vector.h ****       };
 110:/usr/include/c++/7/bits/stl_vector.h **** 
 111:/usr/include/c++/7/bits/stl_vector.h ****     public:
 112:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 113:/usr/include/c++/7/bits/stl_vector.h **** 
 114:/usr/include/c++/7/bits/stl_vector.h ****       _Tp_alloc_type&
 115:/usr/include/c++/7/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 116:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 117:/usr/include/c++/7/bits/stl_vector.h **** 
 118:/usr/include/c++/7/bits/stl_vector.h ****       const _Tp_alloc_type&
 119:/usr/include/c++/7/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 120:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 121:/usr/include/c++/7/bits/stl_vector.h **** 
 122:/usr/include/c++/7/bits/stl_vector.h ****       allocator_type
 123:/usr/include/c++/7/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 124:/usr/include/c++/7/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 125:/usr/include/c++/7/bits/stl_vector.h **** 
 126:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base()
 127:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl() { }
 128:/usr/include/c++/7/bits/stl_vector.h **** 
 129:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 130:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(__a) { }
 131:/usr/include/c++/7/bits/stl_vector.h **** 
 132:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(size_t __n)
 133:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl()
 134:/usr/include/c++/7/bits/stl_vector.h ****       { _M_create_storage(__n); }
 135:/usr/include/c++/7/bits/stl_vector.h **** 
 136:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 137:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(__a)
 138:/usr/include/c++/7/bits/stl_vector.h ****       { _M_create_storage(__n); }
 139:/usr/include/c++/7/bits/stl_vector.h **** 
 140:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 142:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 143:/usr/include/c++/7/bits/stl_vector.h **** 
 144:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 145:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 146:/usr/include/c++/7/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 147:/usr/include/c++/7/bits/stl_vector.h **** 
 148:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 149:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(__a)
 150:/usr/include/c++/7/bits/stl_vector.h ****       {
 151:/usr/include/c++/7/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 152:/usr/include/c++/7/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 153:/usr/include/c++/7/bits/stl_vector.h **** 	else
 154:/usr/include/c++/7/bits/stl_vector.h **** 	  {
 155:/usr/include/c++/7/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 156:/usr/include/c++/7/bits/stl_vector.h **** 	    _M_create_storage(__n);
 157:/usr/include/c++/7/bits/stl_vector.h **** 	  }
 158:/usr/include/c++/7/bits/stl_vector.h ****       }
 159:/usr/include/c++/7/bits/stl_vector.h **** #endif
 160:/usr/include/c++/7/bits/stl_vector.h **** 
 161:/usr/include/c++/7/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 162:/usr/include/c++/7/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 163:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 164:/usr/include/c++/7/bits/stl_vector.h **** 
 165:/usr/include/c++/7/bits/stl_vector.h ****     public:
 166:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_impl _M_impl;
 167:/usr/include/c++/7/bits/stl_vector.h **** 
 168:/usr/include/c++/7/bits/stl_vector.h ****       pointer
 169:/usr/include/c++/7/bits/stl_vector.h ****       _M_allocate(size_t __n)
 170:/usr/include/c++/7/bits/stl_vector.h ****       {
 171:/usr/include/c++/7/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 172:/usr/include/c++/7/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 173:/usr/include/c++/7/bits/stl_vector.h ****       }
 174:/usr/include/c++/7/bits/stl_vector.h **** 
 175:/usr/include/c++/7/bits/stl_vector.h ****       void
 176:/usr/include/c++/7/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 177:/usr/include/c++/7/bits/stl_vector.h ****       {
 178:/usr/include/c++/7/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 179:/usr/include/c++/7/bits/stl_vector.h **** 	if (__p)
 180:/usr/include/c++/7/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 181:/usr/include/c++/7/bits/stl_vector.h ****       }
 182:/usr/include/c++/7/bits/stl_vector.h **** 
 183:/usr/include/c++/7/bits/stl_vector.h ****     private:
 184:/usr/include/c++/7/bits/stl_vector.h ****       void
 185:/usr/include/c++/7/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 186:/usr/include/c++/7/bits/stl_vector.h ****       {
 187:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 188:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 189:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 190:/usr/include/c++/7/bits/stl_vector.h ****       }
 191:/usr/include/c++/7/bits/stl_vector.h ****     };
 192:/usr/include/c++/7/bits/stl_vector.h **** 
 193:/usr/include/c++/7/bits/stl_vector.h **** 
 194:/usr/include/c++/7/bits/stl_vector.h ****   /**
 195:/usr/include/c++/7/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 196:/usr/include/c++/7/bits/stl_vector.h ****    *  individual elements in any order.
 197:/usr/include/c++/7/bits/stl_vector.h ****    *
 198:/usr/include/c++/7/bits/stl_vector.h ****    *  @ingroup sequences
 199:/usr/include/c++/7/bits/stl_vector.h ****    *
 200:/usr/include/c++/7/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 201:/usr/include/c++/7/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 202:/usr/include/c++/7/bits/stl_vector.h ****    *
 203:/usr/include/c++/7/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 204:/usr/include/c++/7/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 205:/usr/include/c++/7/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 206:/usr/include/c++/7/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 207:/usr/include/c++/7/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 208:/usr/include/c++/7/bits/stl_vector.h ****    *
 209:/usr/include/c++/7/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 210:/usr/include/c++/7/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 211:/usr/include/c++/7/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 212:/usr/include/c++/7/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 213:/usr/include/c++/7/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 214:/usr/include/c++/7/bits/stl_vector.h ****   */
 215:/usr/include/c++/7/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 216:/usr/include/c++/7/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 217:/usr/include/c++/7/bits/stl_vector.h ****     {
 218:/usr/include/c++/7/bits/stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 219:/usr/include/c++/7/bits/stl_vector.h ****       // Concept requirements.
 220:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 221:/usr/include/c++/7/bits/stl_vector.h **** # if __cplusplus < 201103L
 222:/usr/include/c++/7/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 223:/usr/include/c++/7/bits/stl_vector.h **** # endif
 224:/usr/include/c++/7/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 225:/usr/include/c++/7/bits/stl_vector.h **** #endif
 226:/usr/include/c++/7/bits/stl_vector.h **** 
 227:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 228:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 229:/usr/include/c++/7/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 230:/usr/include/c++/7/bits/stl_vector.h **** 
 231:/usr/include/c++/7/bits/stl_vector.h ****     public:
 232:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Tp					value_type;
 233:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Base::pointer			pointer;
 234:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 235:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 236:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 237:/usr/include/c++/7/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 238:/usr/include/c++/7/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 239:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator;
 240:/usr/include/c++/7/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 241:/usr/include/c++/7/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 242:/usr/include/c++/7/bits/stl_vector.h ****       typedef size_t					size_type;
 243:/usr/include/c++/7/bits/stl_vector.h ****       typedef ptrdiff_t					difference_type;
 244:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Alloc					allocator_type;
 245:/usr/include/c++/7/bits/stl_vector.h **** 
 246:/usr/include/c++/7/bits/stl_vector.h ****     protected:
 247:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_allocate;
 248:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_deallocate;
 249:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_impl;
 250:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 251:/usr/include/c++/7/bits/stl_vector.h **** 
 252:/usr/include/c++/7/bits/stl_vector.h ****     public:
 253:/usr/include/c++/7/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 254:/usr/include/c++/7/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 255:/usr/include/c++/7/bits/stl_vector.h **** 
 256:/usr/include/c++/7/bits/stl_vector.h ****       /**
 257:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 258:/usr/include/c++/7/bits/stl_vector.h ****        */
 259:/usr/include/c++/7/bits/stl_vector.h ****       vector()
 260:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 261:/usr/include/c++/7/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 262:/usr/include/c++/7/bits/stl_vector.h **** #endif
 263:/usr/include/c++/7/bits/stl_vector.h ****       : _Base() { }
 264:/usr/include/c++/7/bits/stl_vector.h **** 
 265:/usr/include/c++/7/bits/stl_vector.h ****       /**
 266:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 267:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 268:/usr/include/c++/7/bits/stl_vector.h ****        */
 269:/usr/include/c++/7/bits/stl_vector.h ****       explicit
 270:/usr/include/c++/7/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 271:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__a) { }
 272:/usr/include/c++/7/bits/stl_vector.h **** 
 273:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 274:/usr/include/c++/7/bits/stl_vector.h ****       /**
 275:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 276:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 277:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 278:/usr/include/c++/7/bits/stl_vector.h ****        *
 279:/usr/include/c++/7/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 280:/usr/include/c++/7/bits/stl_vector.h ****        *  constructed elements.
 281:/usr/include/c++/7/bits/stl_vector.h ****        */
 282:/usr/include/c++/7/bits/stl_vector.h ****       explicit
 283:/usr/include/c++/7/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 284:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__n, __a)
 285:/usr/include/c++/7/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 286:/usr/include/c++/7/bits/stl_vector.h **** 
 287:/usr/include/c++/7/bits/stl_vector.h ****       /**
 288:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 289:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 290:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 291:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 292:/usr/include/c++/7/bits/stl_vector.h ****        *
 293:/usr/include/c++/7/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 294:/usr/include/c++/7/bits/stl_vector.h ****        */
 295:/usr/include/c++/7/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 296:/usr/include/c++/7/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 297:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__n, __a)
 298:/usr/include/c++/7/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 299:/usr/include/c++/7/bits/stl_vector.h **** #else
 300:/usr/include/c++/7/bits/stl_vector.h ****       /**
 301:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 302:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 303:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 304:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 305:/usr/include/c++/7/bits/stl_vector.h ****        *
 306:/usr/include/c++/7/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 307:/usr/include/c++/7/bits/stl_vector.h ****        */
 308:/usr/include/c++/7/bits/stl_vector.h ****       explicit
 309:/usr/include/c++/7/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 5258              		.loc 7 309 0
 5259              		.cfi_startproc
 5260              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5261              		.cfi_lsda 0x1b,.LLSDA1491
 5262 0000 55       		pushq	%rbp
 5263              		.cfi_def_cfa_offset 16
 5264              		.cfi_offset 6, -16
 5265 0001 4889E5   		movq	%rsp, %rbp
 5266              		.cfi_def_cfa_register 6
 5267 0004 53       		pushq	%rbx
 5268 0005 4883EC28 		subq	$40, %rsp
 5269              		.cfi_offset 3, -24
 5270 0009 48897DE8 		movq	%rdi, -24(%rbp)
 5271 000d 488975E0 		movq	%rsi, -32(%rbp)
 5272 0011 488955D8 		movq	%rdx, -40(%rbp)
 5273 0015 48894DD0 		movq	%rcx, -48(%rbp)
 5274              	.LBB79:
 310:/usr/include/c++/7/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 311:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__n, __a)
 5275              		.loc 7 311 0
 5276 0019 488B45E8 		movq	-24(%rbp), %rax
 5277 001d 488B55D0 		movq	-48(%rbp), %rdx
 5278 0021 488B4DE0 		movq	-32(%rbp), %rcx
 5279 0025 4889CE   		movq	%rcx, %rsi
 5280 0028 4889C7   		movq	%rax, %rdi
 5281              	.LEHB122:
 5282 002b E8000000 		call	_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
 5282      00
 5283              	.LEHE122:
 312:/usr/include/c++/7/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 5284              		.loc 7 312 0
 5285 0030 488B55D8 		movq	-40(%rbp), %rdx
 5286 0034 488B4DE0 		movq	-32(%rbp), %rcx
 5287 0038 488B45E8 		movq	-24(%rbp), %rax
 5288 003c 4889CE   		movq	%rcx, %rsi
 5289 003f 4889C7   		movq	%rax, %rdi
 5290              	.LEHB123:
 5291 0042 E8000000 		call	_ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf
 5291      00
 5292              	.LEHE123:
 5293              	.LBE79:
 5294 0047 EB1A     		jmp	.L276
 5295              	.L275:
 5296 0049 4889C3   		movq	%rax, %rbx
 5297              	.LBB80:
 311:/usr/include/c++/7/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 5298              		.loc 7 311 0
 5299 004c 488B45E8 		movq	-24(%rbp), %rax
 5300 0050 4889C7   		movq	%rax, %rdi
 5301 0053 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEED2Ev
 5301      00
 5302 0058 4889D8   		movq	%rbx, %rax
 5303 005b 4889C7   		movq	%rax, %rdi
 5304              	.LEHB124:
 5305 005e E8000000 		call	_Unwind_Resume@PLT
 5305      00
 5306              	.LEHE124:
 5307              	.L276:
 5308              	.LBE80:
 5309              		.loc 7 312 0
 5310 0063 4883C428 		addq	$40, %rsp
 5311 0067 5B       		popq	%rbx
 5312 0068 5D       		popq	%rbp
 5313              		.cfi_def_cfa 7, 8
 5314 0069 C3       		ret
 5315              		.cfi_endproc
 5316              	.LFE1491:
 5317              		.section	.gcc_except_table
 5318              	.LLSDA1491:
 5319 037d FF       		.byte	0xff
 5320 037e FF       		.byte	0xff
 5321 037f 01       		.byte	0x1
 5322 0380 0C       		.uleb128 .LLSDACSE1491-.LLSDACSB1491
 5323              	.LLSDACSB1491:
 5324 0381 2B       		.uleb128 .LEHB122-.LFB1491
 5325 0382 05       		.uleb128 .LEHE122-.LEHB122
 5326 0383 00       		.uleb128 0
 5327 0384 00       		.uleb128 0
 5328 0385 42       		.uleb128 .LEHB123-.LFB1491
 5329 0386 05       		.uleb128 .LEHE123-.LEHB123
 5330 0387 49       		.uleb128 .L275-.LFB1491
 5331 0388 00       		.uleb128 0
 5332 0389 5E       		.uleb128 .LEHB124-.LFB1491
 5333 038a 05       		.uleb128 .LEHE124-.LEHB124
 5334 038b 00       		.uleb128 0
 5335 038c 00       		.uleb128 0
 5336              	.LLSDACSE1491:
 5337              		.section	.text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_,"axG",@progbits,_ZNSt6vectorIfSaIfEEC5EmRKfRKS0_,c
 5339              		.weak	_ZNSt6vectorIfSaIfEEC1EmRKfRKS0_
 5340              		.set	_ZNSt6vectorIfSaIfEEC1EmRKfRKS0_,_ZNSt6vectorIfSaIfEEC2EmRKfRKS0_
 5341              		.section	.text._ZNSt6vectorIfSaIfEED2Ev,"axG",@progbits,_ZNSt6vectorIfSaIfEED5Ev,comdat
 5342              		.align 2
 5343              		.weak	_ZNSt6vectorIfSaIfEED2Ev
 5345              	_ZNSt6vectorIfSaIfEED2Ev:
 5346              	.LFB1494:
 313:/usr/include/c++/7/bits/stl_vector.h **** #endif
 314:/usr/include/c++/7/bits/stl_vector.h **** 
 315:/usr/include/c++/7/bits/stl_vector.h ****       /**
 316:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 317:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 318:/usr/include/c++/7/bits/stl_vector.h ****        *
 319:/usr/include/c++/7/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 320:/usr/include/c++/7/bits/stl_vector.h ****        *  @a __x  will not be copied
 321:/usr/include/c++/7/bits/stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 322:/usr/include/c++/7/bits/stl_vector.h ****        *
 323:/usr/include/c++/7/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 324:/usr/include/c++/7/bits/stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 325:/usr/include/c++/7/bits/stl_vector.h ****        */
 326:/usr/include/c++/7/bits/stl_vector.h ****       vector(const vector& __x)
 327:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__x.size(),
 328:/usr/include/c++/7/bits/stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 329:/usr/include/c++/7/bits/stl_vector.h ****       {
 330:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 331:/usr/include/c++/7/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 332:/usr/include/c++/7/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 333:/usr/include/c++/7/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 334:/usr/include/c++/7/bits/stl_vector.h ****       }
 335:/usr/include/c++/7/bits/stl_vector.h **** 
 336:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 337:/usr/include/c++/7/bits/stl_vector.h ****       /**
 338:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 339:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 340:/usr/include/c++/7/bits/stl_vector.h ****        *
 341:/usr/include/c++/7/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 342:/usr/include/c++/7/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 343:/usr/include/c++/7/bits/stl_vector.h ****        */
 344:/usr/include/c++/7/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 345:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 346:/usr/include/c++/7/bits/stl_vector.h **** 
 347:/usr/include/c++/7/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 348:/usr/include/c++/7/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 349:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 350:/usr/include/c++/7/bits/stl_vector.h ****       {
 351:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 352:/usr/include/c++/7/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 353:/usr/include/c++/7/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 354:/usr/include/c++/7/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 355:/usr/include/c++/7/bits/stl_vector.h ****       }
 356:/usr/include/c++/7/bits/stl_vector.h **** 
 357:/usr/include/c++/7/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 358:/usr/include/c++/7/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 359:/usr/include/c++/7/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 360:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 361:/usr/include/c++/7/bits/stl_vector.h ****       {
 362:/usr/include/c++/7/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 363:/usr/include/c++/7/bits/stl_vector.h **** 	  {
 364:/usr/include/c++/7/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 365:/usr/include/c++/7/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 366:/usr/include/c++/7/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 367:/usr/include/c++/7/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 368:/usr/include/c++/7/bits/stl_vector.h **** 	    __rv.clear();
 369:/usr/include/c++/7/bits/stl_vector.h **** 	  }
 370:/usr/include/c++/7/bits/stl_vector.h ****       }
 371:/usr/include/c++/7/bits/stl_vector.h **** 
 372:/usr/include/c++/7/bits/stl_vector.h ****       /**
 373:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 374:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 375:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 376:/usr/include/c++/7/bits/stl_vector.h ****        *
 377:/usr/include/c++/7/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 378:/usr/include/c++/7/bits/stl_vector.h ****        *  initializer_list @a __l.
 379:/usr/include/c++/7/bits/stl_vector.h ****        *
 380:/usr/include/c++/7/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 381:/usr/include/c++/7/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 382:/usr/include/c++/7/bits/stl_vector.h ****        */
 383:/usr/include/c++/7/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 384:/usr/include/c++/7/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 385:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__a)
 386:/usr/include/c++/7/bits/stl_vector.h ****       {
 387:/usr/include/c++/7/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 388:/usr/include/c++/7/bits/stl_vector.h **** 			    random_access_iterator_tag());
 389:/usr/include/c++/7/bits/stl_vector.h ****       }
 390:/usr/include/c++/7/bits/stl_vector.h **** #endif
 391:/usr/include/c++/7/bits/stl_vector.h **** 
 392:/usr/include/c++/7/bits/stl_vector.h ****       /**
 393:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 394:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 395:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 396:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 397:/usr/include/c++/7/bits/stl_vector.h ****        *
 398:/usr/include/c++/7/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 399:/usr/include/c++/7/bits/stl_vector.h ****        *  [first,last).
 400:/usr/include/c++/7/bits/stl_vector.h ****        *
 401:/usr/include/c++/7/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 402:/usr/include/c++/7/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 403:/usr/include/c++/7/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 404:/usr/include/c++/7/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 405:/usr/include/c++/7/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 406:/usr/include/c++/7/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 407:/usr/include/c++/7/bits/stl_vector.h ****        */
 408:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 409:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator,
 410:/usr/include/c++/7/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 411:/usr/include/c++/7/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 412:/usr/include/c++/7/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 413:/usr/include/c++/7/bits/stl_vector.h **** 	: _Base(__a)
 414:/usr/include/c++/7/bits/stl_vector.h **** 	{ _M_initialize_dispatch(__first, __last, __false_type()); }
 415:/usr/include/c++/7/bits/stl_vector.h **** #else
 416:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator>
 417:/usr/include/c++/7/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 418:/usr/include/c++/7/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 419:/usr/include/c++/7/bits/stl_vector.h **** 	: _Base(__a)
 420:/usr/include/c++/7/bits/stl_vector.h **** 	{
 421:/usr/include/c++/7/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 422:/usr/include/c++/7/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 423:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 424:/usr/include/c++/7/bits/stl_vector.h **** 	}
 425:/usr/include/c++/7/bits/stl_vector.h **** #endif
 426:/usr/include/c++/7/bits/stl_vector.h **** 
 427:/usr/include/c++/7/bits/stl_vector.h ****       /**
 428:/usr/include/c++/7/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 429:/usr/include/c++/7/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 430:/usr/include/c++/7/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 431:/usr/include/c++/7/bits/stl_vector.h ****        *  responsibility.
 432:/usr/include/c++/7/bits/stl_vector.h ****        */
 433:/usr/include/c++/7/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 5347              		.loc 7 433 0
 5348              		.cfi_startproc
 5349              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5350              		.cfi_lsda 0x1b,.LLSDA1494
 5351 0000 55       		pushq	%rbp
 5352              		.cfi_def_cfa_offset 16
 5353              		.cfi_offset 6, -16
 5354 0001 4889E5   		movq	%rsp, %rbp
 5355              		.cfi_def_cfa_register 6
 5356 0004 53       		pushq	%rbx
 5357 0005 4883EC18 		subq	$24, %rsp
 5358              		.cfi_offset 3, -24
 5359 0009 48897DE8 		movq	%rdi, -24(%rbp)
 5360              	.LBB81:
 434:/usr/include/c++/7/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 435:/usr/include/c++/7/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 5361              		.loc 7 435 0
 5362 000d 488B45E8 		movq	-24(%rbp), %rax
 5363 0011 4889C7   		movq	%rax, %rdi
 5364 0014 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
 5364      00
 5365 0019 4889C2   		movq	%rax, %rdx
 434:/usr/include/c++/7/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 5366              		.loc 7 434 0
 5367 001c 488B45E8 		movq	-24(%rbp), %rax
 5368 0020 488B4808 		movq	8(%rax), %rcx
 5369 0024 488B45E8 		movq	-24(%rbp), %rax
 5370 0028 488B00   		movq	(%rax), %rax
 5371 002b 4889CE   		movq	%rcx, %rsi
 5372 002e 4889C7   		movq	%rax, %rdi
 5373              	.LEHB125:
 5374 0031 E8000000 		call	_ZSt8_DestroyIPffEvT_S1_RSaIT0_E
 5374      00
 5375              	.LEHE125:
 5376              		.loc 7 435 0
 5377 0036 488B45E8 		movq	-24(%rbp), %rax
 5378 003a 4889C7   		movq	%rax, %rdi
 5379              	.LEHB126:
 5380 003d E8000000 		call	_ZNSt12_Vector_baseIfSaIfEED2Ev
 5380      00
 5381              	.LEHE126:
 5382              	.LBE81:
 5383 0042 EB1A     		jmp	.L280
 5384              	.L279:
 5385 0044 4889C3   		movq	%rax, %rbx
 5386              	.LBB82:
 5387 0047 488B45E8 		movq	-24(%rbp), %rax
 5388 004b 4889C7   		movq	%rax, %rdi
 5389 004e E8000000 		call	_ZNSt12_Vector_baseIfSaIfEED2Ev
 5389      00
 5390 0053 4889D8   		movq	%rbx, %rax
 5391 0056 4889C7   		movq	%rax, %rdi
 5392              	.LEHB127:
 5393 0059 E8000000 		call	_Unwind_Resume@PLT
 5393      00
 5394              	.LEHE127:
 5395              	.L280:
 5396              	.LBE82:
 5397 005e 4883C418 		addq	$24, %rsp
 5398 0062 5B       		popq	%rbx
 5399 0063 5D       		popq	%rbp
 5400              		.cfi_def_cfa 7, 8
 5401 0064 C3       		ret
 5402              		.cfi_endproc
 5403              	.LFE1494:
 5404              		.section	.gcc_except_table
 5405              	.LLSDA1494:
 5406 038d FF       		.byte	0xff
 5407 038e FF       		.byte	0xff
 5408 038f 01       		.byte	0x1
 5409 0390 0C       		.uleb128 .LLSDACSE1494-.LLSDACSB1494
 5410              	.LLSDACSB1494:
 5411 0391 31       		.uleb128 .LEHB125-.LFB1494
 5412 0392 05       		.uleb128 .LEHE125-.LEHB125
 5413 0393 44       		.uleb128 .L279-.LFB1494
 5414 0394 00       		.uleb128 0
 5415 0395 3D       		.uleb128 .LEHB126-.LFB1494
 5416 0396 05       		.uleb128 .LEHE126-.LEHB126
 5417 0397 00       		.uleb128 0
 5418 0398 00       		.uleb128 0
 5419 0399 59       		.uleb128 .LEHB127-.LFB1494
 5420 039a 05       		.uleb128 .LEHE127-.LEHB127
 5421 039b 00       		.uleb128 0
 5422 039c 00       		.uleb128 0
 5423              	.LLSDACSE1494:
 5424              		.section	.text._ZNSt6vectorIfSaIfEED2Ev,"axG",@progbits,_ZNSt6vectorIfSaIfEED5Ev,comdat
 5426              		.weak	_ZNSt6vectorIfSaIfEED1Ev
 5427              		.set	_ZNSt6vectorIfSaIfEED1Ev,_ZNSt6vectorIfSaIfEED2Ev
 5428              		.section	.text._ZNSt6vectorIfSaIfEEixEm,"axG",@progbits,_ZNSt6vectorIfSaIfEEixEm,comdat
 5429              		.align 2
 5430              		.weak	_ZNSt6vectorIfSaIfEEixEm
 5432              	_ZNSt6vectorIfSaIfEEixEm:
 5433              	.LFB1496:
 436:/usr/include/c++/7/bits/stl_vector.h **** 
 437:/usr/include/c++/7/bits/stl_vector.h ****       /**
 438:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 439:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 440:/usr/include/c++/7/bits/stl_vector.h ****        *
 441:/usr/include/c++/7/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 442:/usr/include/c++/7/bits/stl_vector.h ****        *  @a __x will not be copied.
 443:/usr/include/c++/7/bits/stl_vector.h ****        *
 444:/usr/include/c++/7/bits/stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 445:/usr/include/c++/7/bits/stl_vector.h ****        */
 446:/usr/include/c++/7/bits/stl_vector.h ****       vector&
 447:/usr/include/c++/7/bits/stl_vector.h ****       operator=(const vector& __x);
 448:/usr/include/c++/7/bits/stl_vector.h **** 
 449:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 450:/usr/include/c++/7/bits/stl_vector.h ****       /**
 451:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 452:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 453:/usr/include/c++/7/bits/stl_vector.h ****        *
 454:/usr/include/c++/7/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 455:/usr/include/c++/7/bits/stl_vector.h ****        *  if the allocators permit it).
 456:/usr/include/c++/7/bits/stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 457:/usr/include/c++/7/bits/stl_vector.h ****        *
 458:/usr/include/c++/7/bits/stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 459:/usr/include/c++/7/bits/stl_vector.h ****        */
 460:/usr/include/c++/7/bits/stl_vector.h ****       vector&
 461:/usr/include/c++/7/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 462:/usr/include/c++/7/bits/stl_vector.h ****       {
 463:/usr/include/c++/7/bits/stl_vector.h **** 	constexpr bool __move_storage =
 464:/usr/include/c++/7/bits/stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 465:/usr/include/c++/7/bits/stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 466:/usr/include/c++/7/bits/stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 467:/usr/include/c++/7/bits/stl_vector.h **** 	return *this;
 468:/usr/include/c++/7/bits/stl_vector.h ****       }
 469:/usr/include/c++/7/bits/stl_vector.h **** 
 470:/usr/include/c++/7/bits/stl_vector.h ****       /**
 471:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 472:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 473:/usr/include/c++/7/bits/stl_vector.h ****        *
 474:/usr/include/c++/7/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 475:/usr/include/c++/7/bits/stl_vector.h ****        *  initializer list @a __l.
 476:/usr/include/c++/7/bits/stl_vector.h ****        *
 477:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 478:/usr/include/c++/7/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 479:/usr/include/c++/7/bits/stl_vector.h ****        *  of elements assigned.
 480:/usr/include/c++/7/bits/stl_vector.h ****        */
 481:/usr/include/c++/7/bits/stl_vector.h ****       vector&
 482:/usr/include/c++/7/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 483:/usr/include/c++/7/bits/stl_vector.h ****       {
 484:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 485:/usr/include/c++/7/bits/stl_vector.h **** 			    random_access_iterator_tag());
 486:/usr/include/c++/7/bits/stl_vector.h **** 	return *this;
 487:/usr/include/c++/7/bits/stl_vector.h ****       }
 488:/usr/include/c++/7/bits/stl_vector.h **** #endif
 489:/usr/include/c++/7/bits/stl_vector.h **** 
 490:/usr/include/c++/7/bits/stl_vector.h ****       /**
 491:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 492:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 493:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 494:/usr/include/c++/7/bits/stl_vector.h ****        *
 495:/usr/include/c++/7/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 496:/usr/include/c++/7/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 497:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 498:/usr/include/c++/7/bits/stl_vector.h ****        *  the number of elements assigned.
 499:/usr/include/c++/7/bits/stl_vector.h ****        */
 500:/usr/include/c++/7/bits/stl_vector.h ****       void
 501:/usr/include/c++/7/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 502:/usr/include/c++/7/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 503:/usr/include/c++/7/bits/stl_vector.h **** 
 504:/usr/include/c++/7/bits/stl_vector.h ****       /**
 505:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 506:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 507:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 508:/usr/include/c++/7/bits/stl_vector.h ****        *
 509:/usr/include/c++/7/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 510:/usr/include/c++/7/bits/stl_vector.h ****        *  range [__first,__last).
 511:/usr/include/c++/7/bits/stl_vector.h ****        *
 512:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 513:/usr/include/c++/7/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 514:/usr/include/c++/7/bits/stl_vector.h ****        *  of elements assigned.
 515:/usr/include/c++/7/bits/stl_vector.h ****        */
 516:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 517:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator,
 518:/usr/include/c++/7/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 519:/usr/include/c++/7/bits/stl_vector.h **** 	void
 520:/usr/include/c++/7/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 521:/usr/include/c++/7/bits/stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 522:/usr/include/c++/7/bits/stl_vector.h **** #else
 523:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator>
 524:/usr/include/c++/7/bits/stl_vector.h **** 	void
 525:/usr/include/c++/7/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 526:/usr/include/c++/7/bits/stl_vector.h **** 	{
 527:/usr/include/c++/7/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 528:/usr/include/c++/7/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 529:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 530:/usr/include/c++/7/bits/stl_vector.h **** 	}
 531:/usr/include/c++/7/bits/stl_vector.h **** #endif
 532:/usr/include/c++/7/bits/stl_vector.h **** 
 533:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 534:/usr/include/c++/7/bits/stl_vector.h ****       /**
 535:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 536:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 537:/usr/include/c++/7/bits/stl_vector.h ****        *
 538:/usr/include/c++/7/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 539:/usr/include/c++/7/bits/stl_vector.h ****        *  initializer list @a __l.
 540:/usr/include/c++/7/bits/stl_vector.h ****        *
 541:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 542:/usr/include/c++/7/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 543:/usr/include/c++/7/bits/stl_vector.h ****        *  of elements assigned.
 544:/usr/include/c++/7/bits/stl_vector.h ****        */
 545:/usr/include/c++/7/bits/stl_vector.h ****       void
 546:/usr/include/c++/7/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 547:/usr/include/c++/7/bits/stl_vector.h ****       {
 548:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 549:/usr/include/c++/7/bits/stl_vector.h **** 			    random_access_iterator_tag());
 550:/usr/include/c++/7/bits/stl_vector.h ****       }
 551:/usr/include/c++/7/bits/stl_vector.h **** #endif
 552:/usr/include/c++/7/bits/stl_vector.h **** 
 553:/usr/include/c++/7/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 554:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::get_allocator;
 555:/usr/include/c++/7/bits/stl_vector.h **** 
 556:/usr/include/c++/7/bits/stl_vector.h ****       // iterators
 557:/usr/include/c++/7/bits/stl_vector.h ****       /**
 558:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 559:/usr/include/c++/7/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 560:/usr/include/c++/7/bits/stl_vector.h ****        *  element order.
 561:/usr/include/c++/7/bits/stl_vector.h ****        */
 562:/usr/include/c++/7/bits/stl_vector.h ****       iterator
 563:/usr/include/c++/7/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 564:/usr/include/c++/7/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 565:/usr/include/c++/7/bits/stl_vector.h **** 
 566:/usr/include/c++/7/bits/stl_vector.h ****       /**
 567:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 568:/usr/include/c++/7/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 569:/usr/include/c++/7/bits/stl_vector.h ****        *  element order.
 570:/usr/include/c++/7/bits/stl_vector.h ****        */
 571:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator
 572:/usr/include/c++/7/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 573:/usr/include/c++/7/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 574:/usr/include/c++/7/bits/stl_vector.h **** 
 575:/usr/include/c++/7/bits/stl_vector.h ****       /**
 576:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 577:/usr/include/c++/7/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 578:/usr/include/c++/7/bits/stl_vector.h ****        *  element order.
 579:/usr/include/c++/7/bits/stl_vector.h ****        */
 580:/usr/include/c++/7/bits/stl_vector.h ****       iterator
 581:/usr/include/c++/7/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 582:/usr/include/c++/7/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 583:/usr/include/c++/7/bits/stl_vector.h **** 
 584:/usr/include/c++/7/bits/stl_vector.h ****       /**
 585:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 586:/usr/include/c++/7/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 587:/usr/include/c++/7/bits/stl_vector.h ****        *  ordinary element order.
 588:/usr/include/c++/7/bits/stl_vector.h ****        */
 589:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator
 590:/usr/include/c++/7/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 591:/usr/include/c++/7/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 592:/usr/include/c++/7/bits/stl_vector.h **** 
 593:/usr/include/c++/7/bits/stl_vector.h ****       /**
 594:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 595:/usr/include/c++/7/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 596:/usr/include/c++/7/bits/stl_vector.h ****        *  element order.
 597:/usr/include/c++/7/bits/stl_vector.h ****        */
 598:/usr/include/c++/7/bits/stl_vector.h ****       reverse_iterator
 599:/usr/include/c++/7/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 600:/usr/include/c++/7/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 601:/usr/include/c++/7/bits/stl_vector.h **** 
 602:/usr/include/c++/7/bits/stl_vector.h ****       /**
 603:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 604:/usr/include/c++/7/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 605:/usr/include/c++/7/bits/stl_vector.h ****        *  reverse element order.
 606:/usr/include/c++/7/bits/stl_vector.h ****        */
 607:/usr/include/c++/7/bits/stl_vector.h ****       const_reverse_iterator
 608:/usr/include/c++/7/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 609:/usr/include/c++/7/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 610:/usr/include/c++/7/bits/stl_vector.h **** 
 611:/usr/include/c++/7/bits/stl_vector.h ****       /**
 612:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 613:/usr/include/c++/7/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 614:/usr/include/c++/7/bits/stl_vector.h ****        *  in reverse element order.
 615:/usr/include/c++/7/bits/stl_vector.h ****        */
 616:/usr/include/c++/7/bits/stl_vector.h ****       reverse_iterator
 617:/usr/include/c++/7/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 618:/usr/include/c++/7/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 619:/usr/include/c++/7/bits/stl_vector.h **** 
 620:/usr/include/c++/7/bits/stl_vector.h ****       /**
 621:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 622:/usr/include/c++/7/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 623:/usr/include/c++/7/bits/stl_vector.h ****        *  is done in reverse element order.
 624:/usr/include/c++/7/bits/stl_vector.h ****        */
 625:/usr/include/c++/7/bits/stl_vector.h ****       const_reverse_iterator
 626:/usr/include/c++/7/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 627:/usr/include/c++/7/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 628:/usr/include/c++/7/bits/stl_vector.h **** 
 629:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 630:/usr/include/c++/7/bits/stl_vector.h ****       /**
 631:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 632:/usr/include/c++/7/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 633:/usr/include/c++/7/bits/stl_vector.h ****        *  element order.
 634:/usr/include/c++/7/bits/stl_vector.h ****        */
 635:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator
 636:/usr/include/c++/7/bits/stl_vector.h ****       cbegin() const noexcept
 637:/usr/include/c++/7/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 638:/usr/include/c++/7/bits/stl_vector.h **** 
 639:/usr/include/c++/7/bits/stl_vector.h ****       /**
 640:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 641:/usr/include/c++/7/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 642:/usr/include/c++/7/bits/stl_vector.h ****        *  ordinary element order.
 643:/usr/include/c++/7/bits/stl_vector.h ****        */
 644:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator
 645:/usr/include/c++/7/bits/stl_vector.h ****       cend() const noexcept
 646:/usr/include/c++/7/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 647:/usr/include/c++/7/bits/stl_vector.h **** 
 648:/usr/include/c++/7/bits/stl_vector.h ****       /**
 649:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 650:/usr/include/c++/7/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 651:/usr/include/c++/7/bits/stl_vector.h ****        *  reverse element order.
 652:/usr/include/c++/7/bits/stl_vector.h ****        */
 653:/usr/include/c++/7/bits/stl_vector.h ****       const_reverse_iterator
 654:/usr/include/c++/7/bits/stl_vector.h ****       crbegin() const noexcept
 655:/usr/include/c++/7/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 656:/usr/include/c++/7/bits/stl_vector.h **** 
 657:/usr/include/c++/7/bits/stl_vector.h ****       /**
 658:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 659:/usr/include/c++/7/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 660:/usr/include/c++/7/bits/stl_vector.h ****        *  is done in reverse element order.
 661:/usr/include/c++/7/bits/stl_vector.h ****        */
 662:/usr/include/c++/7/bits/stl_vector.h ****       const_reverse_iterator
 663:/usr/include/c++/7/bits/stl_vector.h ****       crend() const noexcept
 664:/usr/include/c++/7/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 665:/usr/include/c++/7/bits/stl_vector.h **** #endif
 666:/usr/include/c++/7/bits/stl_vector.h **** 
 667:/usr/include/c++/7/bits/stl_vector.h ****       // [23.2.4.2] capacity
 668:/usr/include/c++/7/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 669:/usr/include/c++/7/bits/stl_vector.h ****       size_type
 670:/usr/include/c++/7/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 671:/usr/include/c++/7/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 672:/usr/include/c++/7/bits/stl_vector.h **** 
 673:/usr/include/c++/7/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 674:/usr/include/c++/7/bits/stl_vector.h ****       size_type
 675:/usr/include/c++/7/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 676:/usr/include/c++/7/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 677:/usr/include/c++/7/bits/stl_vector.h **** 
 678:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 679:/usr/include/c++/7/bits/stl_vector.h ****       /**
 680:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 681:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 682:/usr/include/c++/7/bits/stl_vector.h ****        *
 683:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 684:/usr/include/c++/7/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 685:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 686:/usr/include/c++/7/bits/stl_vector.h ****        *  default constructed elements are appended.
 687:/usr/include/c++/7/bits/stl_vector.h ****        */
 688:/usr/include/c++/7/bits/stl_vector.h ****       void
 689:/usr/include/c++/7/bits/stl_vector.h ****       resize(size_type __new_size)
 690:/usr/include/c++/7/bits/stl_vector.h ****       {
 691:/usr/include/c++/7/bits/stl_vector.h **** 	if (__new_size > size())
 692:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 693:/usr/include/c++/7/bits/stl_vector.h **** 	else if (__new_size < size())
 694:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 695:/usr/include/c++/7/bits/stl_vector.h ****       }
 696:/usr/include/c++/7/bits/stl_vector.h **** 
 697:/usr/include/c++/7/bits/stl_vector.h ****       /**
 698:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 699:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 700:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 701:/usr/include/c++/7/bits/stl_vector.h ****        *
 702:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 703:/usr/include/c++/7/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 704:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 705:/usr/include/c++/7/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 706:/usr/include/c++/7/bits/stl_vector.h ****        *  given data.
 707:/usr/include/c++/7/bits/stl_vector.h ****        */
 708:/usr/include/c++/7/bits/stl_vector.h ****       void
 709:/usr/include/c++/7/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 710:/usr/include/c++/7/bits/stl_vector.h ****       {
 711:/usr/include/c++/7/bits/stl_vector.h **** 	if (__new_size > size())
 712:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 713:/usr/include/c++/7/bits/stl_vector.h **** 	else if (__new_size < size())
 714:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 715:/usr/include/c++/7/bits/stl_vector.h ****       }
 716:/usr/include/c++/7/bits/stl_vector.h **** #else
 717:/usr/include/c++/7/bits/stl_vector.h ****       /**
 718:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 719:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 720:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 721:/usr/include/c++/7/bits/stl_vector.h ****        *
 722:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 723:/usr/include/c++/7/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 724:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 725:/usr/include/c++/7/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 726:/usr/include/c++/7/bits/stl_vector.h ****        *  given data.
 727:/usr/include/c++/7/bits/stl_vector.h ****        */
 728:/usr/include/c++/7/bits/stl_vector.h ****       void
 729:/usr/include/c++/7/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 730:/usr/include/c++/7/bits/stl_vector.h ****       {
 731:/usr/include/c++/7/bits/stl_vector.h **** 	if (__new_size > size())
 732:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 733:/usr/include/c++/7/bits/stl_vector.h **** 	else if (__new_size < size())
 734:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 735:/usr/include/c++/7/bits/stl_vector.h ****       }
 736:/usr/include/c++/7/bits/stl_vector.h **** #endif
 737:/usr/include/c++/7/bits/stl_vector.h **** 
 738:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 739:/usr/include/c++/7/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 740:/usr/include/c++/7/bits/stl_vector.h ****       void
 741:/usr/include/c++/7/bits/stl_vector.h ****       shrink_to_fit()
 742:/usr/include/c++/7/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 743:/usr/include/c++/7/bits/stl_vector.h **** #endif
 744:/usr/include/c++/7/bits/stl_vector.h **** 
 745:/usr/include/c++/7/bits/stl_vector.h ****       /**
 746:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 747:/usr/include/c++/7/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 748:/usr/include/c++/7/bits/stl_vector.h ****        */
 749:/usr/include/c++/7/bits/stl_vector.h ****       size_type
 750:/usr/include/c++/7/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 751:/usr/include/c++/7/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 752:/usr/include/c++/7/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 753:/usr/include/c++/7/bits/stl_vector.h **** 
 754:/usr/include/c++/7/bits/stl_vector.h ****       /**
 755:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 756:/usr/include/c++/7/bits/stl_vector.h ****        *  equal end().)
 757:/usr/include/c++/7/bits/stl_vector.h ****        */
 758:/usr/include/c++/7/bits/stl_vector.h ****       bool
 759:/usr/include/c++/7/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 760:/usr/include/c++/7/bits/stl_vector.h ****       { return begin() == end(); }
 761:/usr/include/c++/7/bits/stl_vector.h **** 
 762:/usr/include/c++/7/bits/stl_vector.h ****       /**
 763:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 764:/usr/include/c++/7/bits/stl_vector.h ****        *          elements.
 765:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 766:/usr/include/c++/7/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 767:/usr/include/c++/7/bits/stl_vector.h ****        *
 768:/usr/include/c++/7/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 769:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 770:/usr/include/c++/7/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 771:/usr/include/c++/7/bits/stl_vector.h ****        *  thrown.
 772:/usr/include/c++/7/bits/stl_vector.h ****        *
 773:/usr/include/c++/7/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 774:/usr/include/c++/7/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 775:/usr/include/c++/7/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 776:/usr/include/c++/7/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 777:/usr/include/c++/7/bits/stl_vector.h ****        *  and copying of %vector data.
 778:/usr/include/c++/7/bits/stl_vector.h ****        */
 779:/usr/include/c++/7/bits/stl_vector.h ****       void
 780:/usr/include/c++/7/bits/stl_vector.h ****       reserve(size_type __n);
 781:/usr/include/c++/7/bits/stl_vector.h **** 
 782:/usr/include/c++/7/bits/stl_vector.h ****       // element access
 783:/usr/include/c++/7/bits/stl_vector.h ****       /**
 784:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 785:/usr/include/c++/7/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 786:/usr/include/c++/7/bits/stl_vector.h ****        *  accessed.
 787:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 788:/usr/include/c++/7/bits/stl_vector.h ****        *
 789:/usr/include/c++/7/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 790:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 791:/usr/include/c++/7/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 792:/usr/include/c++/7/bits/stl_vector.h ****        *  see at().)
 793:/usr/include/c++/7/bits/stl_vector.h ****        */
 794:/usr/include/c++/7/bits/stl_vector.h ****       reference
 795:/usr/include/c++/7/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 5434              		.loc 7 795 0
 5435              		.cfi_startproc
 5436 0000 55       		pushq	%rbp
 5437              		.cfi_def_cfa_offset 16
 5438              		.cfi_offset 6, -16
 5439 0001 4889E5   		movq	%rsp, %rbp
 5440              		.cfi_def_cfa_register 6
 5441 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5442 0008 488975F0 		movq	%rsi, -16(%rbp)
 796:/usr/include/c++/7/bits/stl_vector.h ****       {
 797:/usr/include/c++/7/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
 798:/usr/include/c++/7/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
 5443              		.loc 7 798 0
 5444 000c 488B45F8 		movq	-8(%rbp), %rax
 5445 0010 488B00   		movq	(%rax), %rax
 5446 0013 488B55F0 		movq	-16(%rbp), %rdx
 5447 0017 48C1E202 		salq	$2, %rdx
 5448 001b 4801D0   		addq	%rdx, %rax
 799:/usr/include/c++/7/bits/stl_vector.h ****       }
 5449              		.loc 7 799 0
 5450 001e 5D       		popq	%rbp
 5451              		.cfi_def_cfa 7, 8
 5452 001f C3       		ret
 5453              		.cfi_endproc
 5454              	.LFE1496:
 5456              		.section	.text._ZNKSt6vectorIfSaIfEE4sizeEv,"axG",@progbits,_ZNKSt6vectorIfSaIfEE4sizeEv,comdat
 5457              		.align 2
 5458              		.weak	_ZNKSt6vectorIfSaIfEE4sizeEv
 5460              	_ZNKSt6vectorIfSaIfEE4sizeEv:
 5461              	.LFB1497:
 670:/usr/include/c++/7/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5462              		.loc 7 670 0
 5463              		.cfi_startproc
 5464 0000 55       		pushq	%rbp
 5465              		.cfi_def_cfa_offset 16
 5466              		.cfi_offset 6, -16
 5467 0001 4889E5   		movq	%rsp, %rbp
 5468              		.cfi_def_cfa_register 6
 5469 0004 48897DF8 		movq	%rdi, -8(%rbp)
 671:/usr/include/c++/7/bits/stl_vector.h **** 
 5470              		.loc 7 671 0
 5471 0008 488B45F8 		movq	-8(%rbp), %rax
 5472 000c 488B4008 		movq	8(%rax), %rax
 5473 0010 4889C2   		movq	%rax, %rdx
 5474 0013 488B45F8 		movq	-8(%rbp), %rax
 5475 0017 488B00   		movq	(%rax), %rax
 5476 001a 4829C2   		subq	%rax, %rdx
 5477 001d 4889D0   		movq	%rdx, %rax
 5478 0020 48C1F802 		sarq	$2, %rax
 5479 0024 5D       		popq	%rbp
 5480              		.cfi_def_cfa 7, 8
 5481 0025 C3       		ret
 5482              		.cfi_endproc
 5483              	.LFE1497:
 5485              		.section	.text._ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iR
 5486              		.weak	_ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_
 5488              	_ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestD
 5489              	.LFB1498:
  96:../Checks.h   ****                    int const count, Tolerance const& tolerance, TestDetails const& details)
 5490              		.loc 5 96 0
 5491              		.cfi_startproc
 5492              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5493              		.cfi_lsda 0x1b,.LLSDA1498
 5494 0000 55       		pushq	%rbp
 5495              		.cfi_def_cfa_offset 16
 5496              		.cfi_offset 6, -16
 5497 0001 4889E5   		movq	%rsp, %rbp
 5498              		.cfi_def_cfa_register 6
 5499 0004 53       		pushq	%rbx
 5500 0005 4881ECE8 		subq	$488, %rsp
 5500      010000
 5501              		.cfi_offset 3, -24
 5502 000c 4889BD38 		movq	%rdi, -456(%rbp)
 5502      FEFFFF
 5503 0013 4889B530 		movq	%rsi, -464(%rbp)
 5503      FEFFFF
 5504 001a 48899528 		movq	%rdx, -472(%rbp)
 5504      FEFFFF
 5505 0021 898D24FE 		movl	%ecx, -476(%rbp)
 5505      FFFF
 5506 0027 4C898518 		movq	%r8, -488(%rbp)
 5506      FEFFFF
 5507 002e 4C898D10 		movq	%r9, -496(%rbp)
 5507      FEFFFF
  96:../Checks.h   ****                    int const count, Tolerance const& tolerance, TestDetails const& details)
 5508              		.loc 5 96 0
 5509 0035 64488B04 		movq	%fs:40, %rax
 5509      25280000 
 5509      00
 5510 003e 488945E8 		movq	%rax, -24(%rbp)
 5511 0042 31C0     		xorl	%eax, %eax
  99:../Checks.h   **** 
 5512              		.loc 5 99 0
 5513 0044 488B8D18 		movq	-488(%rbp), %rcx
 5513      FEFFFF
 5514 004b 8B9524FE 		movl	-476(%rbp), %edx
 5514      FFFF
 5515 0051 488BB528 		movq	-472(%rbp), %rsi
 5515      FEFFFF
 5516 0058 488B8530 		movq	-464(%rbp), %rax
 5516      FEFFFF
 5517 005f 4889C7   		movq	%rax, %rdi
 5518              	.LEHB128:
 5519 0062 E8000000 		call	_ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_
 5519      00
 5520 0067 888547FE 		movb	%al, -441(%rbp)
 5520      FFFF
 5521              	.LBB83:
 101:../Checks.h   ****     {
 5522              		.loc 5 101 0
 5523 006d 0FB68547 		movzbl	-441(%rbp), %eax
 5523      FEFFFF
 5524 0074 83F001   		xorl	$1, %eax
 5525 0077 84C0     		testb	%al, %al
 5526 0079 0F84AF01 		je	.L294
 5526      0000
 5527              	.LBB84:
 103:../Checks.h   **** 
 5528              		.loc 5 103 0
 5529 007f 488D8550 		leaq	-432(%rbp), %rax
 5529      FEFFFF
 5530 0086 4889C7   		movq	%rax, %rdi
 5531 0089 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5531      00
 5532              	.LEHE128:
 105:../Checks.h   ****         for (int expectedIndex = 0; expectedIndex < count; ++expectedIndex)
 5533              		.loc 5 105 0
 5534 008e 488D8550 		leaq	-432(%rbp), %rax
 5534      FEFFFF
 5535 0095 488D3500 		leaq	.LC56(%rip), %rsi
 5535      000000
 5536 009c 4889C7   		movq	%rax, %rdi
 5537              	.LEHB129:
 5538 009f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5538      00
 5539              	.LBB85:
 106:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 5540              		.loc 5 106 0
 5541 00a4 C78548FE 		movl	$0, -440(%rbp)
 5541      FFFF0000 
 5541      0000
 5542              	.L288:
 106:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 5543              		.loc 5 106 0 is_stmt 0 discriminator 1
 5544 00ae 8B8548FE 		movl	-440(%rbp), %eax
 5544      FFFF
 5545 00b4 3B8524FE 		cmpl	-476(%rbp), %eax
 5545      FFFF
 5546 00ba 7D52     		jge	.L287
 107:../Checks.h   ****         stream << "] +/- " << tolerance << " but was [ ";
 5547              		.loc 5 107 0 is_stmt 1
 5548 00bc 8B8548FE 		movl	-440(%rbp), %eax
 5548      FFFF
 5549 00c2 4863D0   		movslq	%eax, %rdx
 5550 00c5 488B8530 		movq	-464(%rbp), %rax
 5550      FEFFFF
 5551 00cc 4889D6   		movq	%rdx, %rsi
 5552 00cf 4889C7   		movq	%rax, %rdi
 5553 00d2 E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 5553      00
 5554 00d7 8B10     		movl	(%rax), %edx
 5555 00d9 488D8550 		leaq	-432(%rbp), %rax
 5555      FEFFFF
 5556 00e0 899520FE 		movl	%edx, -480(%rbp)
 5556      FFFF
 5557 00e6 F30F1085 		movss	-480(%rbp), %xmm0
 5557      20FEFFFF 
 5558 00ee 4889C7   		movq	%rax, %rdi
 5559 00f1 E8000000 		call	_ZNSolsEf@PLT
 5559      00
 5560 00f6 488D3500 		leaq	.LC57(%rip), %rsi
 5560      000000
 5561 00fd 4889C7   		movq	%rax, %rdi
 5562 0100 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5562      00
 106:../Checks.h   ****             stream << expected[expectedIndex] << " ";
 5563              		.loc 5 106 0 discriminator 2
 5564 0105 838548FE 		addl	$1, -440(%rbp)
 5564      FFFF01
 5565 010c EBA0     		jmp	.L288
 5566              	.L287:
 5567              	.LBE85:
 108:../Checks.h   **** 
 5568              		.loc 5 108 0
 5569 010e 488D8550 		leaq	-432(%rbp), %rax
 5569      FEFFFF
 5570 0115 488D3500 		leaq	.LC58(%rip), %rsi
 5570      000000
 5571 011c 4889C7   		movq	%rax, %rdi
 5572 011f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5572      00
 5573 0124 4889C2   		movq	%rax, %rdx
 5574 0127 488B8518 		movq	-488(%rbp), %rax
 5574      FEFFFF
 5575 012e 8B00     		movl	(%rax), %eax
 5576 0130 898520FE 		movl	%eax, -480(%rbp)
 5576      FFFF
 5577 0136 F30F1085 		movss	-480(%rbp), %xmm0
 5577      20FEFFFF 
 5578 013e 4889D7   		movq	%rdx, %rdi
 5579 0141 E8000000 		call	_ZNSolsEf@PLT
 5579      00
 108:../Checks.h   **** 
 5580              		.loc 5 108 0 is_stmt 0 discriminator 1
 5581 0146 488D3500 		leaq	.LC59(%rip), %rsi
 5581      000000
 5582 014d 4889C7   		movq	%rax, %rdi
 5583 0150 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5583      00
 5584              	.LBB86:
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5585              		.loc 5 110 0 is_stmt 1
 5586 0155 C7854CFE 		movl	$0, -436(%rbp)
 5586      FFFF0000 
 5586      0000
 5587              	.L290:
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5588              		.loc 5 110 0 is_stmt 0 discriminator 1
 5589 015f 8B854CFE 		movl	-436(%rbp), %eax
 5589      FFFF
 5590 0165 3B8524FE 		cmpl	-476(%rbp), %eax
 5590      FFFF
 5591 016b 7D52     		jge	.L289
 111:../Checks.h   ****         stream << "]";
 5592              		.loc 5 111 0 is_stmt 1
 5593 016d 8B854CFE 		movl	-436(%rbp), %eax
 5593      FFFF
 5594 0173 4863D0   		movslq	%eax, %rdx
 5595 0176 488B8528 		movq	-472(%rbp), %rax
 5595      FEFFFF
 5596 017d 4889D6   		movq	%rdx, %rsi
 5597 0180 4889C7   		movq	%rax, %rdi
 5598 0183 E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 5598      00
 5599 0188 8B10     		movl	(%rax), %edx
 5600 018a 488D8550 		leaq	-432(%rbp), %rax
 5600      FEFFFF
 5601 0191 899520FE 		movl	%edx, -480(%rbp)
 5601      FFFF
 5602 0197 F30F1085 		movss	-480(%rbp), %xmm0
 5602      20FEFFFF 
 5603 019f 4889C7   		movq	%rax, %rdi
 5604 01a2 E8000000 		call	_ZNSolsEf@PLT
 5604      00
 5605 01a7 488D3500 		leaq	.LC57(%rip), %rsi
 5605      000000
 5606 01ae 4889C7   		movq	%rax, %rdi
 5607 01b1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5607      00
 110:../Checks.h   ****             stream << actual[actualIndex] << " ";
 5608              		.loc 5 110 0 discriminator 2
 5609 01b6 83854CFE 		addl	$1, -436(%rbp)
 5609      FFFF01
 5610 01bd EBA0     		jmp	.L290
 5611              	.L289:
 5612              	.LBE86:
 112:../Checks.h   **** 
 5613              		.loc 5 112 0
 5614 01bf 488D8550 		leaq	-432(%rbp), %rax
 5614      FEFFFF
 5615 01c6 488D3500 		leaq	.LC60(%rip), %rsi
 5615      000000
 5616 01cd 4889C7   		movq	%rax, %rdi
 5617 01d0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5617      00
 114:../Checks.h   ****     }
 5618              		.loc 5 114 0
 5619 01d5 488D8550 		leaq	-432(%rbp), %rax
 5619      FEFFFF
 5620 01dc 4889C7   		movq	%rax, %rdi
 5621 01df E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5621      00
 5622 01e4 4889C2   		movq	%rax, %rdx
 5623 01e7 488B8D10 		movq	-496(%rbp), %rcx
 5623      FEFFFF
 5624 01ee 488B8538 		movq	-456(%rbp), %rax
 5624      FEFFFF
 5625 01f5 4889CE   		movq	%rcx, %rsi
 5626 01f8 4889C7   		movq	%rax, %rdi
 5627 01fb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5627      00
 5628              	.LEHE129:
 103:../Checks.h   **** 
 5629              		.loc 5 103 0
 5630 0200 488D8550 		leaq	-432(%rbp), %rax
 5630      FEFFFF
 5631 0207 4889C7   		movq	%rax, %rdi
 5632              	.LEHB130:
 5633 020a E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5633      00
 5634              	.LEHE130:
 5635              	.LBE84:
 5636              	.LBE83:
 5637              		.loc 5 116 0
 5638 020f EB1D     		jmp	.L294
 5639              	.L293:
 5640 0211 4889C3   		movq	%rax, %rbx
 5641              	.LBB88:
 5642              	.LBB87:
 103:../Checks.h   **** 
 5643              		.loc 5 103 0
 5644 0214 488D8550 		leaq	-432(%rbp), %rax
 5644      FEFFFF
 5645 021b 4889C7   		movq	%rax, %rdi
 5646 021e E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5646      00
 5647 0223 4889D8   		movq	%rbx, %rax
 5648 0226 4889C7   		movq	%rax, %rdi
 5649              	.LEHB131:
 5650 0229 E8000000 		call	_Unwind_Resume@PLT
 5650      00
 5651              	.LEHE131:
 5652              	.L294:
 5653              	.LBE87:
 5654              	.LBE88:
 5655              		.loc 5 116 0
 5656 022e 90       		nop
 5657 022f 488B45E8 		movq	-24(%rbp), %rax
 5658 0233 64483304 		xorq	%fs:40, %rax
 5658      25280000 
 5658      00
 5659 023c 7405     		je	.L292
 5660 023e E8000000 		call	__stack_chk_fail@PLT
 5660      00
 5661              	.L292:
 5662 0243 4881C4E8 		addq	$488, %rsp
 5662      010000
 5663 024a 5B       		popq	%rbx
 5664 024b 5D       		popq	%rbp
 5665              		.cfi_def_cfa 7, 8
 5666 024c C3       		ret
 5667              		.cfi_endproc
 5668              	.LFE1498:
 5669              		.section	.gcc_except_table
 5670              	.LLSDA1498:
 5671 039d FF       		.byte	0xff
 5672 039e FF       		.byte	0xff
 5673 039f 01       		.byte	0x1
 5674 03a0 15       		.uleb128 .LLSDACSE1498-.LLSDACSB1498
 5675              	.LLSDACSB1498:
 5676 03a1 62       		.uleb128 .LEHB128-.LFB1498
 5677 03a2 2C       		.uleb128 .LEHE128-.LEHB128
 5678 03a3 00       		.uleb128 0
 5679 03a4 00       		.uleb128 0
 5680 03a5 9F01     		.uleb128 .LEHB129-.LFB1498
 5681 03a7 E102     		.uleb128 .LEHE129-.LEHB129
 5682 03a9 9104     		.uleb128 .L293-.LFB1498
 5683 03ab 00       		.uleb128 0
 5684 03ac 8A04     		.uleb128 .LEHB130-.LFB1498
 5685 03ae 05       		.uleb128 .LEHE130-.LEHB130
 5686 03af 00       		.uleb128 0
 5687 03b0 00       		.uleb128 0
 5688 03b1 A904     		.uleb128 .LEHB131-.LFB1498
 5689 03b3 05       		.uleb128 .LEHE131-.LEHB131
 5690 03b4 00       		.uleb128 0
 5691 03b5 00       		.uleb128 0
 5692              	.LLSDACSE1498:
 5693              		.section	.text._ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iR
 5695              		.section	.rodata
 5696              	.LC61:
 5697 05e7 556E6861 		.string	"Unhandled system exception"
 5697      6E646C65 
 5697      64207379 
 5697      7374656D 
 5697      20657863 
 5698              	.LC62:
 5699 0602 556E6861 		.string	"Unhandled exception: Crash!"
 5699      6E646C65 
 5699      64206578 
 5699      63657074 
 5699      696F6E3A 
 5700              		.text
 5702              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperEEEvRT_RKNS
 5703              	.LFB1499:
 5704              		.file 8 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 5705              		.loc 8 16 0
 5706              		.cfi_startproc
 5707              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5708              		.cfi_lsda 0x1b,.LLSDA1499
 5709 1d45 55       		pushq	%rbp
 5710              		.cfi_def_cfa_offset 16
 5711              		.cfi_offset 6, -16
 5712 1d46 4889E5   		movq	%rsp, %rbp
 5713              		.cfi_def_cfa_register 6
 5714 1d49 4155     		pushq	%r13
 5715 1d4b 4154     		pushq	%r12
 5716 1d4d 53       		pushq	%rbx
 5717 1d4e 4881EC58 		subq	$1624, %rsp
 5717      060000
 5718              		.cfi_offset 13, -24
 5719              		.cfi_offset 12, -32
 5720              		.cfi_offset 3, -40
 5721 1d55 4889BD98 		movq	%rdi, -1640(%rbp)
 5721      F9FFFF
 5722 1d5c 4889B590 		movq	%rsi, -1648(%rbp)
 5722      F9FFFF
 5723              		.loc 8 16 0
 5724 1d63 64488B04 		movq	%fs:40, %rax
 5724      25280000 
 5724      00
 5725 1d6c 488945D8 		movq	%rax, -40(%rbp)
 5726 1d70 31C0     		xorl	%eax, %eax
 5727              	.LEHB132:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 5728              		.loc 8 18 0
 5729 1d72 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5729      00
 5730              	.LEHE132:
 5731 1d77 4889C2   		movq	%rax, %rdx
 5732 1d7a 488B8590 		movq	-1648(%rbp), %rax
 5732      F9FFFF
 5733 1d81 488902   		movq	%rax, (%rdx)
 5734              	.LBB89:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 5735              		.loc 8 23 0
 5736 1d84 488D8570 		leaq	-1168(%rbp), %rax
 5736      FBFFFF
 5737 1d8b 4889C7   		movq	%rax, %rdi
 5738              	.LEHB133:
 5739 1d8e E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 5739      00
 5740              	.LEHE133:
 5741              		.loc 8 23 0 is_stmt 0 discriminator 1
 5742 1d93 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5742      000000
 5743 1d9a BE010000 		movl	$1, %esi
 5743      00
 5744 1d9f 4889C7   		movq	%rax, %rdi
 5745 1da2 E8000000 		call	__sigsetjmp@PLT
 5745      00
 5746 1da7 85C0     		testl	%eax, %eax
 5747 1da9 0F95C0   		setne	%al
 5748 1dac 84C0     		testb	%al, %al
 5749 1dae 7428     		je	.L297
 5750              		.loc 8 23 0 discriminator 4
 5751 1db0 BF080000 		movl	$8, %edi
 5751      00
 5752 1db5 E8000000 		call	__cxa_allocate_exception@PLT
 5752      00
 5753 1dba 488D1500 		leaq	.LC61(%rip), %rdx
 5753      000000
 5754 1dc1 488910   		movq	%rdx, (%rax)
 5755 1dc4 BA000000 		movl	$0, %edx
 5755      00
 5756 1dc9 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 5756      000000
 5757 1dd0 4889C7   		movq	%rax, %rdi
 5758              	.LEHB134:
 5759 1dd3 E8000000 		call	__cxa_throw@PLT
 5759      00
 5760              	.L297:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 5761              		.loc 8 25 0 is_stmt 1
 5762 1dd8 488B8598 		movq	-1640(%rbp), %rax
 5762      F9FFFF
 5763 1ddf 4889C7   		movq	%rax, %rdi
 5764 1de2 E8A7F8FF 		call	_ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelper7RunImplEv
 5764      FF
 5765              	.LEHE134:
  23:../ExecuteTest.h **** #endif
 5766              		.loc 8 23 0
 5767 1de7 488D8570 		leaq	-1168(%rbp), %rax
 5767      FBFFFF
 5768 1dee 4889C7   		movq	%rax, %rdi
 5769              	.LEHB135:
 5770 1df1 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5770      00
 5771              	.LEHE135:
 5772              	.LBE89:
  26:../ExecuteTest.h **** 	}
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 5773              		.loc 8 42 0
 5774 1df6 E9F10100 		jmp	.L295
 5774      00
 5775              	.L310:
 5776 1dfb 4989C4   		movq	%rax, %r12
 5777 1dfe 4889D3   		movq	%rdx, %rbx
 5778              	.LBB90:
  23:../ExecuteTest.h **** #endif
 5779              		.loc 8 23 0
 5780 1e01 488D8570 		leaq	-1168(%rbp), %rax
 5780      FBFFFF
 5781 1e08 4889C7   		movq	%rax, %rdi
 5782 1e0b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5782      00
 5783 1e10 4C89E0   		movq	%r12, %rax
 5784 1e13 4889DA   		movq	%rbx, %rdx
 5785 1e16 EB00     		jmp	.L299
 5786              	.L309:
 5787              	.L299:
 5788 1e18 4883FA01 		cmpq	$1, %rdx
 5789 1e1c 740F     		je	.L301
 5790 1e1e 4883FA02 		cmpq	$2, %rdx
 5791 1e22 0F84A600 		je	.L302
 5791      0000
 5792 1e28 E9420100 		jmp	.L315
 5792      00
 5793              	.L301:
 5794              	.LBE90:
 5795              	.LBB91:
  27:../ExecuteTest.h **** 	{
 5796              		.loc 8 27 0
 5797 1e2d 4889C7   		movq	%rax, %rdi
 5798 1e30 E8000000 		call	__cxa_begin_catch@PLT
 5798      00
 5799 1e35 488985A8 		movq	%rax, -1624(%rbp)
 5799      F9FFFF
 5800              	.LEHB136:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5801              		.loc 8 29 0
 5802 1e3c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5802      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5803              		.loc 8 29 0 is_stmt 0 discriminator 1
 5804 1e41 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 5805              		.loc 8 30 0 is_stmt 1 discriminator 1
 5806 1e44 488B85A8 		movq	-1624(%rbp), %rax
 5806      F9FFFF
 5807 1e4b 488B00   		movq	(%rax), %rax
 5808 1e4e 4883C010 		addq	$16, %rax
 5809 1e52 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5810              		.loc 8 29 0 discriminator 1
 5811 1e55 488B95A8 		movq	-1624(%rbp), %rdx
 5811      F9FFFF
 5812 1e5c 4889D7   		movq	%rdx, %rdi
 5813 1e5f FFD0     		call	*%rax
 5814              	.LVL4:
 5815 1e61 4989C4   		movq	%rax, %r12
 5816 1e64 488B85A8 		movq	-1624(%rbp), %rax
 5816      F9FFFF
 5817 1e6b 4889C7   		movq	%rax, %rdi
 5818 1e6e E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 5818      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5819              		.loc 8 29 0 is_stmt 0 discriminator 2
 5820 1e73 4189C5   		movl	%eax, %r13d
 5821 1e76 488B85A8 		movq	-1624(%rbp), %rax
 5821      F9FFFF
 5822 1e7d 4889C7   		movq	%rax, %rdi
 5823 1e80 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 5823      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5824              		.loc 8 29 0 discriminator 3
 5825 1e85 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 5826              		.loc 8 30 0 is_stmt 1 discriminator 3
 5827 1e88 488B8590 		movq	-1648(%rbp), %rax
 5827      F9FFFF
 5828 1e8f 488B10   		movq	(%rax), %rdx
 5829 1e92 488B8590 		movq	-1648(%rbp), %rax
 5829      F9FFFF
 5830 1e99 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5831              		.loc 8 29 0 discriminator 3
 5832 1e9d 488D85B0 		leaq	-1616(%rbp), %rax
 5832      F9FFFF
 5833 1ea4 4589E8   		movl	%r13d, %r8d
 5834 1ea7 4889C7   		movq	%rax, %rdi
 5835 1eaa E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5835      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5836              		.loc 8 29 0 is_stmt 0 discriminator 5
 5837 1eaf 488D85B0 		leaq	-1616(%rbp), %rax
 5837      F9FFFF
 5838 1eb6 4C89E2   		movq	%r12, %rdx
 5839 1eb9 4889C6   		movq	%rax, %rsi
 5840 1ebc 4889DF   		movq	%rbx, %rdi
 5841 1ebf E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5841      00
 5842              	.LEHE136:
  27:../ExecuteTest.h **** 	{
 5843              		.loc 8 27 0 is_stmt 1 discriminator 7
 5844 1ec4 E8000000 		call	__cxa_end_catch@PLT
 5844      00
 5845              	.LBE91:
 5846              		.loc 8 42 0 discriminator 7
 5847 1ec9 E91E0100 		jmp	.L295
 5847      00
 5848              	.L302:
 5849              	.LBB92:
  32:../ExecuteTest.h **** 	{
 5850              		.loc 8 32 0
 5851 1ece 4889C7   		movq	%rax, %rdi
 5852 1ed1 E8000000 		call	__cxa_begin_catch@PLT
 5852      00
 5853 1ed6 488985A0 		movq	%rax, -1632(%rbp)
 5853      F9FFFF
 5854              	.LBB93:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5855              		.loc 8 34 0
 5856 1edd 488D85D0 		leaq	-1584(%rbp), %rax
 5856      F9FFFF
 5857 1ee4 4889C7   		movq	%rax, %rdi
 5858              	.LEHB137:
 5859 1ee7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5859      00
 5860              	.LEHE137:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5861              		.loc 8 35 0
 5862 1eec 488D85D0 		leaq	-1584(%rbp), %rax
 5862      F9FFFF
 5863 1ef3 488D3500 		leaq	.LC45(%rip), %rsi
 5863      000000
 5864 1efa 4889C7   		movq	%rax, %rdi
 5865              	.LEHB138:
 5866 1efd E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5866      00
 5867 1f02 4889C3   		movq	%rax, %rbx
 5868 1f05 488B85A0 		movq	-1632(%rbp), %rax
 5868      F9FFFF
 5869 1f0c 488B00   		movq	(%rax), %rax
 5870 1f0f 4883C010 		addq	$16, %rax
 5871 1f13 488B00   		movq	(%rax), %rax
 5872 1f16 488B95A0 		movq	-1632(%rbp), %rdx
 5872      F9FFFF
 5873 1f1d 4889D7   		movq	%rdx, %rdi
 5874 1f20 FFD0     		call	*%rax
 5875              	.LVL5:
 5876 1f22 4889C6   		movq	%rax, %rsi
 5877 1f25 4889DF   		movq	%rbx, %rdi
 5878 1f28 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5878      00
  36:../ExecuteTest.h **** 	}
 5879              		.loc 8 36 0
 5880 1f2d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5880      00
 5881 1f32 488B18   		movq	(%rax), %rbx
 5882 1f35 488D85D0 		leaq	-1584(%rbp), %rax
 5882      F9FFFF
 5883 1f3c 4889C7   		movq	%rax, %rdi
 5884 1f3f E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5884      00
  36:../ExecuteTest.h **** 	}
 5885              		.loc 8 36 0 is_stmt 0 discriminator 1
 5886 1f44 4889C2   		movq	%rax, %rdx
 5887 1f47 488B8590 		movq	-1648(%rbp), %rax
 5887      F9FFFF
 5888 1f4e 4889C6   		movq	%rax, %rsi
 5889 1f51 4889DF   		movq	%rbx, %rdi
 5890 1f54 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5890      00
 5891              	.LEHE138:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5892              		.loc 8 34 0 is_stmt 1
 5893 1f59 488D85D0 		leaq	-1584(%rbp), %rax
 5893      F9FFFF
 5894 1f60 4889C7   		movq	%rax, %rdi
 5895              	.LEHB139:
 5896 1f63 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5896      00
 5897              	.LEHE139:
 5898              	.LBE93:
  32:../ExecuteTest.h **** 	{
 5899              		.loc 8 32 0
 5900 1f68 E8000000 		call	__cxa_end_catch@PLT
 5900      00
 5901              	.LBE92:
 5902              		.loc 8 42 0
 5903 1f6d EB7D     		jmp	.L295
 5904              	.L315:
  38:../ExecuteTest.h **** 	{
 5905              		.loc 8 38 0
 5906 1f6f 4889C7   		movq	%rax, %rdi
 5907 1f72 E8000000 		call	__cxa_begin_catch@PLT
 5907      00
 5908              	.LEHB140:
  40:../ExecuteTest.h **** 	}
 5909              		.loc 8 40 0
 5910 1f77 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5910      00
 5911 1f7c 488B00   		movq	(%rax), %rax
 5912 1f7f 488B8D90 		movq	-1648(%rbp), %rcx
 5912      F9FFFF
 5913 1f86 488D1500 		leaq	.LC62(%rip), %rdx
 5913      000000
 5914 1f8d 4889CE   		movq	%rcx, %rsi
 5915 1f90 4889C7   		movq	%rax, %rdi
 5916 1f93 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5916      00
 5917              	.LEHE140:
 5918              	.LEHB141:
  38:../ExecuteTest.h **** 	{
 5919              		.loc 8 38 0
 5920 1f98 E8000000 		call	__cxa_end_catch@PLT
 5920      00
 5921              		.loc 8 42 0
 5922 1f9d EB4D     		jmp	.L295
 5923              	.L311:
 5924 1f9f 4889C3   		movq	%rax, %rbx
 5925              	.LBB95:
  27:../ExecuteTest.h **** 	{
 5926              		.loc 8 27 0
 5927 1fa2 E8000000 		call	__cxa_end_catch@PLT
 5927      00
 5928 1fa7 4889D8   		movq	%rbx, %rax
 5929 1faa 4889C7   		movq	%rax, %rdi
 5930 1fad E8000000 		call	_Unwind_Resume@PLT
 5930      00
 5931              	.LEHE141:
 5932              	.L313:
 5933 1fb2 4889C3   		movq	%rax, %rbx
 5934              	.LBE95:
 5935              	.LBB96:
 5936              	.LBB94:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5937              		.loc 8 34 0
 5938 1fb5 488D85D0 		leaq	-1584(%rbp), %rax
 5938      F9FFFF
 5939 1fbc 4889C7   		movq	%rax, %rdi
 5940 1fbf E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5940      00
 5941 1fc4 EB03     		jmp	.L306
 5942              	.L312:
 5943 1fc6 4889C3   		movq	%rax, %rbx
 5944              	.L306:
 5945              	.LBE94:
  32:../ExecuteTest.h **** 	{
 5946              		.loc 8 32 0
 5947 1fc9 E8000000 		call	__cxa_end_catch@PLT
 5947      00
 5948 1fce 4889D8   		movq	%rbx, %rax
 5949 1fd1 4889C7   		movq	%rax, %rdi
 5950              	.LEHB142:
 5951 1fd4 E8000000 		call	_Unwind_Resume@PLT
 5951      00
 5952              	.LEHE142:
 5953              	.L314:
 5954 1fd9 4889C3   		movq	%rax, %rbx
 5955              	.LBE96:
  38:../ExecuteTest.h **** 	{
 5956              		.loc 8 38 0
 5957 1fdc E8000000 		call	__cxa_end_catch@PLT
 5957      00
 5958 1fe1 4889D8   		movq	%rbx, %rax
 5959 1fe4 4889C7   		movq	%rax, %rdi
 5960              	.LEHB143:
 5961 1fe7 E8000000 		call	_Unwind_Resume@PLT
 5961      00
 5962              	.LEHE143:
 5963              	.L295:
 5964              		.loc 8 42 0
 5965 1fec 488B45D8 		movq	-40(%rbp), %rax
 5966 1ff0 64483304 		xorq	%fs:40, %rax
 5966      25280000 
 5966      00
 5967 1ff9 7405     		je	.L308
 5968 1ffb E8000000 		call	__stack_chk_fail@PLT
 5968      00
 5969              	.L308:
 5970 2000 4881C458 		addq	$1624, %rsp
 5970      060000
 5971 2007 5B       		popq	%rbx
 5972 2008 415C     		popq	%r12
 5973 200a 415D     		popq	%r13
 5974 200c 5D       		popq	%rbp
 5975              		.cfi_def_cfa 7, 8
 5976 200d C3       		ret
 5977              		.cfi_endproc
 5978              	.LFE1499:
 5979              		.section	.gcc_except_table
 5980 03b6 0000     		.align 4
 5981              	.LLSDA1499:
 5982 03b8 FF       		.byte	0xff
 5983 03b9 9B       		.byte	0x9b
 5984 03ba 59       		.uleb128 .LLSDATT1499-.LLSDATTD1499
 5985              	.LLSDATTD1499:
 5986 03bb 01       		.byte	0x1
 5987 03bc 43       		.uleb128 .LLSDACSE1499-.LLSDACSB1499
 5988              	.LLSDACSB1499:
 5989 03bd 2D       		.uleb128 .LEHB132-.LFB1499
 5990 03be 05       		.uleb128 .LEHE132-.LEHB132
 5991 03bf 00       		.uleb128 0
 5992 03c0 00       		.uleb128 0
 5993 03c1 49       		.uleb128 .LEHB133-.LFB1499
 5994 03c2 05       		.uleb128 .LEHE133-.LEHB133
 5995 03c3 D301     		.uleb128 .L309-.LFB1499
 5996 03c5 05       		.uleb128 0x5
 5997 03c6 8E01     		.uleb128 .LEHB134-.LFB1499
 5998 03c8 14       		.uleb128 .LEHE134-.LEHB134
 5999 03c9 B601     		.uleb128 .L310-.LFB1499
 6000 03cb 07       		.uleb128 0x7
 6001 03cc AC01     		.uleb128 .LEHB135-.LFB1499
 6002 03ce 05       		.uleb128 .LEHE135-.LEHB135
 6003 03cf D301     		.uleb128 .L309-.LFB1499
 6004 03d1 05       		.uleb128 0x5
 6005 03d2 F701     		.uleb128 .LEHB136-.LFB1499
 6006 03d4 8801     		.uleb128 .LEHE136-.LEHB136
 6007 03d6 DA04     		.uleb128 .L311-.LFB1499
 6008 03d8 00       		.uleb128 0
 6009 03d9 A203     		.uleb128 .LEHB137-.LFB1499
 6010 03db 05       		.uleb128 .LEHE137-.LEHB137
 6011 03dc 8105     		.uleb128 .L312-.LFB1499
 6012 03de 00       		.uleb128 0
 6013 03df B803     		.uleb128 .LEHB138-.LFB1499
 6014 03e1 5C       		.uleb128 .LEHE138-.LEHB138
 6015 03e2 ED04     		.uleb128 .L313-.LFB1499
 6016 03e4 00       		.uleb128 0
 6017 03e5 9E04     		.uleb128 .LEHB139-.LFB1499
 6018 03e7 05       		.uleb128 .LEHE139-.LEHB139
 6019 03e8 8105     		.uleb128 .L312-.LFB1499
 6020 03ea 00       		.uleb128 0
 6021 03eb B204     		.uleb128 .LEHB140-.LFB1499
 6022 03ed 21       		.uleb128 .LEHE140-.LEHB140
 6023 03ee 9405     		.uleb128 .L314-.LFB1499
 6024 03f0 00       		.uleb128 0
 6025 03f1 D304     		.uleb128 .LEHB141-.LFB1499
 6026 03f3 1A       		.uleb128 .LEHE141-.LEHB141
 6027 03f4 00       		.uleb128 0
 6028 03f5 00       		.uleb128 0
 6029 03f6 8F05     		.uleb128 .LEHB142-.LFB1499
 6030 03f8 05       		.uleb128 .LEHE142-.LEHB142
 6031 03f9 00       		.uleb128 0
 6032 03fa 00       		.uleb128 0
 6033 03fb A205     		.uleb128 .LEHB143-.LFB1499
 6034 03fd 05       		.uleb128 .LEHE143-.LEHB143
 6035 03fe 00       		.uleb128 0
 6036 03ff 00       		.uleb128 0
 6037              	.LLSDACSE1499:
 6038 0400 03       		.byte	0x3
 6039 0401 00       		.byte	0
 6040 0402 02       		.byte	0x2
 6041 0403 7D       		.byte	0x7d
 6042 0404 01       		.byte	0x1
 6043 0405 7D       		.byte	0x7d
 6044 0406 00       		.byte	0
 6045 0407 7D       		.byte	0x7d
 6046              		.align 4
 6047 0408 00000000 		.long	0
 6048              	
 6049 040c 00000000 		.long	DW.ref._ZTISt9exception-.
 6050 0410 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6051              	.LLSDATT1499:
 6052              		.text
 6055              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperEEEvRT_RKNS
 6056              	.LFB1501:
  16:../ExecuteTest.h **** {
 6057              		.loc 8 16 0
 6058              		.cfi_startproc
 6059              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6060              		.cfi_lsda 0x1b,.LLSDA1501
 6061 200e 55       		pushq	%rbp
 6062              		.cfi_def_cfa_offset 16
 6063              		.cfi_offset 6, -16
 6064 200f 4889E5   		movq	%rsp, %rbp
 6065              		.cfi_def_cfa_register 6
 6066 2012 4155     		pushq	%r13
 6067 2014 4154     		pushq	%r12
 6068 2016 53       		pushq	%rbx
 6069 2017 4881EC58 		subq	$1624, %rsp
 6069      060000
 6070              		.cfi_offset 13, -24
 6071              		.cfi_offset 12, -32
 6072              		.cfi_offset 3, -40
 6073 201e 4889BD98 		movq	%rdi, -1640(%rbp)
 6073      F9FFFF
 6074 2025 4889B590 		movq	%rsi, -1648(%rbp)
 6074      F9FFFF
  16:../ExecuteTest.h **** {
 6075              		.loc 8 16 0
 6076 202c 64488B04 		movq	%fs:40, %rax
 6076      25280000 
 6076      00
 6077 2035 488945D8 		movq	%rax, -40(%rbp)
 6078 2039 31C0     		xorl	%eax, %eax
 6079              	.LEHB144:
  18:../ExecuteTest.h **** 
 6080              		.loc 8 18 0
 6081 203b E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 6081      00
 6082              	.LEHE144:
 6083 2040 4889C2   		movq	%rax, %rdx
 6084 2043 488B8590 		movq	-1648(%rbp), %rax
 6084      F9FFFF
 6085 204a 488902   		movq	%rax, (%rdx)
 6086              	.LBB97:
  23:../ExecuteTest.h **** #endif
 6087              		.loc 8 23 0
 6088 204d 488D8570 		leaq	-1168(%rbp), %rax
 6088      FBFFFF
 6089 2054 4889C7   		movq	%rax, %rdi
 6090              	.LEHB145:
 6091 2057 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 6091      00
 6092              	.LEHE145:
  23:../ExecuteTest.h **** #endif
 6093              		.loc 8 23 0 is_stmt 0 discriminator 1
 6094 205c 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6094      000000
 6095 2063 BE010000 		movl	$1, %esi
 6095      00
 6096 2068 4889C7   		movq	%rax, %rdi
 6097 206b E8000000 		call	__sigsetjmp@PLT
 6097      00
 6098 2070 85C0     		testl	%eax, %eax
 6099 2072 0F95C0   		setne	%al
 6100 2075 84C0     		testb	%al, %al
 6101 2077 7428     		je	.L318
  23:../ExecuteTest.h **** #endif
 6102              		.loc 8 23 0 discriminator 4
 6103 2079 BF080000 		movl	$8, %edi
 6103      00
 6104 207e E8000000 		call	__cxa_allocate_exception@PLT
 6104      00
 6105 2083 488D1500 		leaq	.LC61(%rip), %rdx
 6105      000000
 6106 208a 488910   		movq	%rdx, (%rax)
 6107 208d BA000000 		movl	$0, %edx
 6107      00
 6108 2092 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 6108      000000
 6109 2099 4889C7   		movq	%rax, %rdi
 6110              	.LEHB146:
 6111 209c E8000000 		call	__cxa_throw@PLT
 6111      00
 6112              	.L318:
  25:../ExecuteTest.h **** 	}
 6113              		.loc 8 25 0 is_stmt 1
 6114 20a1 488B8598 		movq	-1640(%rbp), %rax
 6114      F9FFFF
 6115 20a8 4889C7   		movq	%rax, %rdi
 6116 20ab E86CFAFF 		call	_ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelper7RunImplEv
 6116      FF
 6117              	.LEHE146:
  23:../ExecuteTest.h **** #endif
 6118              		.loc 8 23 0
 6119 20b0 488D8570 		leaq	-1168(%rbp), %rax
 6119      FBFFFF
 6120 20b7 4889C7   		movq	%rax, %rdi
 6121              	.LEHB147:
 6122 20ba E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6122      00
 6123              	.LEHE147:
 6124              	.LBE97:
 6125              		.loc 8 42 0
 6126 20bf E9F10100 		jmp	.L316
 6126      00
 6127              	.L331:
 6128 20c4 4989C4   		movq	%rax, %r12
 6129 20c7 4889D3   		movq	%rdx, %rbx
 6130              	.LBB98:
  23:../ExecuteTest.h **** #endif
 6131              		.loc 8 23 0
 6132 20ca 488D8570 		leaq	-1168(%rbp), %rax
 6132      FBFFFF
 6133 20d1 4889C7   		movq	%rax, %rdi
 6134 20d4 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6134      00
 6135 20d9 4C89E0   		movq	%r12, %rax
 6136 20dc 4889DA   		movq	%rbx, %rdx
 6137 20df EB00     		jmp	.L320
 6138              	.L330:
 6139              	.L320:
 6140 20e1 4883FA01 		cmpq	$1, %rdx
 6141 20e5 740F     		je	.L322
 6142 20e7 4883FA02 		cmpq	$2, %rdx
 6143 20eb 0F84A600 		je	.L323
 6143      0000
 6144 20f1 E9420100 		jmp	.L336
 6144      00
 6145              	.L322:
 6146              	.LBE98:
 6147              	.LBB99:
  27:../ExecuteTest.h **** 	{
 6148              		.loc 8 27 0
 6149 20f6 4889C7   		movq	%rax, %rdi
 6150 20f9 E8000000 		call	__cxa_begin_catch@PLT
 6150      00
 6151 20fe 488985A8 		movq	%rax, -1624(%rbp)
 6151      F9FFFF
 6152              	.LEHB148:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6153              		.loc 8 29 0
 6154 2105 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6154      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6155              		.loc 8 29 0 is_stmt 0 discriminator 1
 6156 210a 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 6157              		.loc 8 30 0 is_stmt 1 discriminator 1
 6158 210d 488B85A8 		movq	-1624(%rbp), %rax
 6158      F9FFFF
 6159 2114 488B00   		movq	(%rax), %rax
 6160 2117 4883C010 		addq	$16, %rax
 6161 211b 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6162              		.loc 8 29 0 discriminator 1
 6163 211e 488B95A8 		movq	-1624(%rbp), %rdx
 6163      F9FFFF
 6164 2125 4889D7   		movq	%rdx, %rdi
 6165 2128 FFD0     		call	*%rax
 6166              	.LVL6:
 6167 212a 4989C4   		movq	%rax, %r12
 6168 212d 488B85A8 		movq	-1624(%rbp), %rax
 6168      F9FFFF
 6169 2134 4889C7   		movq	%rax, %rdi
 6170 2137 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 6170      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6171              		.loc 8 29 0 is_stmt 0 discriminator 2
 6172 213c 4189C5   		movl	%eax, %r13d
 6173 213f 488B85A8 		movq	-1624(%rbp), %rax
 6173      F9FFFF
 6174 2146 4889C7   		movq	%rax, %rdi
 6175 2149 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 6175      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6176              		.loc 8 29 0 discriminator 3
 6177 214e 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 6178              		.loc 8 30 0 is_stmt 1 discriminator 3
 6179 2151 488B8590 		movq	-1648(%rbp), %rax
 6179      F9FFFF
 6180 2158 488B10   		movq	(%rax), %rdx
 6181 215b 488B8590 		movq	-1648(%rbp), %rax
 6181      F9FFFF
 6182 2162 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6183              		.loc 8 29 0 discriminator 3
 6184 2166 488D85B0 		leaq	-1616(%rbp), %rax
 6184      F9FFFF
 6185 216d 4589E8   		movl	%r13d, %r8d
 6186 2170 4889C7   		movq	%rax, %rdi
 6187 2173 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 6187      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6188              		.loc 8 29 0 is_stmt 0 discriminator 5
 6189 2178 488D85B0 		leaq	-1616(%rbp), %rax
 6189      F9FFFF
 6190 217f 4C89E2   		movq	%r12, %rdx
 6191 2182 4889C6   		movq	%rax, %rsi
 6192 2185 4889DF   		movq	%rbx, %rdi
 6193 2188 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6193      00
 6194              	.LEHE148:
  27:../ExecuteTest.h **** 	{
 6195              		.loc 8 27 0 is_stmt 1 discriminator 7
 6196 218d E8000000 		call	__cxa_end_catch@PLT
 6196      00
 6197              	.LBE99:
 6198              		.loc 8 42 0 discriminator 7
 6199 2192 E91E0100 		jmp	.L316
 6199      00
 6200              	.L323:
 6201              	.LBB100:
  32:../ExecuteTest.h **** 	{
 6202              		.loc 8 32 0
 6203 2197 4889C7   		movq	%rax, %rdi
 6204 219a E8000000 		call	__cxa_begin_catch@PLT
 6204      00
 6205 219f 488985A0 		movq	%rax, -1632(%rbp)
 6205      F9FFFF
 6206              	.LBB101:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6207              		.loc 8 34 0
 6208 21a6 488D85D0 		leaq	-1584(%rbp), %rax
 6208      F9FFFF
 6209 21ad 4889C7   		movq	%rax, %rdi
 6210              	.LEHB149:
 6211 21b0 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6211      00
 6212              	.LEHE149:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6213              		.loc 8 35 0
 6214 21b5 488D85D0 		leaq	-1584(%rbp), %rax
 6214      F9FFFF
 6215 21bc 488D3500 		leaq	.LC45(%rip), %rsi
 6215      000000
 6216 21c3 4889C7   		movq	%rax, %rdi
 6217              	.LEHB150:
 6218 21c6 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6218      00
 6219 21cb 4889C3   		movq	%rax, %rbx
 6220 21ce 488B85A0 		movq	-1632(%rbp), %rax
 6220      F9FFFF
 6221 21d5 488B00   		movq	(%rax), %rax
 6222 21d8 4883C010 		addq	$16, %rax
 6223 21dc 488B00   		movq	(%rax), %rax
 6224 21df 488B95A0 		movq	-1632(%rbp), %rdx
 6224      F9FFFF
 6225 21e6 4889D7   		movq	%rdx, %rdi
 6226 21e9 FFD0     		call	*%rax
 6227              	.LVL7:
 6228 21eb 4889C6   		movq	%rax, %rsi
 6229 21ee 4889DF   		movq	%rbx, %rdi
 6230 21f1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6230      00
  36:../ExecuteTest.h **** 	}
 6231              		.loc 8 36 0
 6232 21f6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6232      00
 6233 21fb 488B18   		movq	(%rax), %rbx
 6234 21fe 488D85D0 		leaq	-1584(%rbp), %rax
 6234      F9FFFF
 6235 2205 4889C7   		movq	%rax, %rdi
 6236 2208 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6236      00
  36:../ExecuteTest.h **** 	}
 6237              		.loc 8 36 0 is_stmt 0 discriminator 1
 6238 220d 4889C2   		movq	%rax, %rdx
 6239 2210 488B8590 		movq	-1648(%rbp), %rax
 6239      F9FFFF
 6240 2217 4889C6   		movq	%rax, %rsi
 6241 221a 4889DF   		movq	%rbx, %rdi
 6242 221d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6242      00
 6243              	.LEHE150:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6244              		.loc 8 34 0 is_stmt 1
 6245 2222 488D85D0 		leaq	-1584(%rbp), %rax
 6245      F9FFFF
 6246 2229 4889C7   		movq	%rax, %rdi
 6247              	.LEHB151:
 6248 222c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6248      00
 6249              	.LEHE151:
 6250              	.LBE101:
  32:../ExecuteTest.h **** 	{
 6251              		.loc 8 32 0
 6252 2231 E8000000 		call	__cxa_end_catch@PLT
 6252      00
 6253              	.LBE100:
 6254              		.loc 8 42 0
 6255 2236 EB7D     		jmp	.L316
 6256              	.L336:
  38:../ExecuteTest.h **** 	{
 6257              		.loc 8 38 0
 6258 2238 4889C7   		movq	%rax, %rdi
 6259 223b E8000000 		call	__cxa_begin_catch@PLT
 6259      00
 6260              	.LEHB152:
  40:../ExecuteTest.h **** 	}
 6261              		.loc 8 40 0
 6262 2240 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6262      00
 6263 2245 488B00   		movq	(%rax), %rax
 6264 2248 488B8D90 		movq	-1648(%rbp), %rcx
 6264      F9FFFF
 6265 224f 488D1500 		leaq	.LC62(%rip), %rdx
 6265      000000
 6266 2256 4889CE   		movq	%rcx, %rsi
 6267 2259 4889C7   		movq	%rax, %rdi
 6268 225c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6268      00
 6269              	.LEHE152:
 6270              	.LEHB153:
  38:../ExecuteTest.h **** 	{
 6271              		.loc 8 38 0
 6272 2261 E8000000 		call	__cxa_end_catch@PLT
 6272      00
 6273              		.loc 8 42 0
 6274 2266 EB4D     		jmp	.L316
 6275              	.L332:
 6276 2268 4889C3   		movq	%rax, %rbx
 6277              	.LBB103:
  27:../ExecuteTest.h **** 	{
 6278              		.loc 8 27 0
 6279 226b E8000000 		call	__cxa_end_catch@PLT
 6279      00
 6280 2270 4889D8   		movq	%rbx, %rax
 6281 2273 4889C7   		movq	%rax, %rdi
 6282 2276 E8000000 		call	_Unwind_Resume@PLT
 6282      00
 6283              	.LEHE153:
 6284              	.L334:
 6285 227b 4889C3   		movq	%rax, %rbx
 6286              	.LBE103:
 6287              	.LBB104:
 6288              	.LBB102:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6289              		.loc 8 34 0
 6290 227e 488D85D0 		leaq	-1584(%rbp), %rax
 6290      F9FFFF
 6291 2285 4889C7   		movq	%rax, %rdi
 6292 2288 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6292      00
 6293 228d EB03     		jmp	.L327
 6294              	.L333:
 6295 228f 4889C3   		movq	%rax, %rbx
 6296              	.L327:
 6297              	.LBE102:
  32:../ExecuteTest.h **** 	{
 6298              		.loc 8 32 0
 6299 2292 E8000000 		call	__cxa_end_catch@PLT
 6299      00
 6300 2297 4889D8   		movq	%rbx, %rax
 6301 229a 4889C7   		movq	%rax, %rdi
 6302              	.LEHB154:
 6303 229d E8000000 		call	_Unwind_Resume@PLT
 6303      00
 6304              	.LEHE154:
 6305              	.L335:
 6306 22a2 4889C3   		movq	%rax, %rbx
 6307              	.LBE104:
  38:../ExecuteTest.h **** 	{
 6308              		.loc 8 38 0
 6309 22a5 E8000000 		call	__cxa_end_catch@PLT
 6309      00
 6310 22aa 4889D8   		movq	%rbx, %rax
 6311 22ad 4889C7   		movq	%rax, %rdi
 6312              	.LEHB155:
 6313 22b0 E8000000 		call	_Unwind_Resume@PLT
 6313      00
 6314              	.LEHE155:
 6315              	.L316:
 6316              		.loc 8 42 0
 6317 22b5 488B45D8 		movq	-40(%rbp), %rax
 6318 22b9 64483304 		xorq	%fs:40, %rax
 6318      25280000 
 6318      00
 6319 22c2 7405     		je	.L329
 6320 22c4 E8000000 		call	__stack_chk_fail@PLT
 6320      00
 6321              	.L329:
 6322 22c9 4881C458 		addq	$1624, %rsp
 6322      060000
 6323 22d0 5B       		popq	%rbx
 6324 22d1 415C     		popq	%r12
 6325 22d3 415D     		popq	%r13
 6326 22d5 5D       		popq	%rbp
 6327              		.cfi_def_cfa 7, 8
 6328 22d6 C3       		ret
 6329              		.cfi_endproc
 6330              	.LFE1501:
 6331              		.section	.gcc_except_table
 6332              		.align 4
 6333              	.LLSDA1501:
 6334 0414 FF       		.byte	0xff
 6335 0415 9B       		.byte	0x9b
 6336 0416 59       		.uleb128 .LLSDATT1501-.LLSDATTD1501
 6337              	.LLSDATTD1501:
 6338 0417 01       		.byte	0x1
 6339 0418 43       		.uleb128 .LLSDACSE1501-.LLSDACSB1501
 6340              	.LLSDACSB1501:
 6341 0419 2D       		.uleb128 .LEHB144-.LFB1501
 6342 041a 05       		.uleb128 .LEHE144-.LEHB144
 6343 041b 00       		.uleb128 0
 6344 041c 00       		.uleb128 0
 6345 041d 49       		.uleb128 .LEHB145-.LFB1501
 6346 041e 05       		.uleb128 .LEHE145-.LEHB145
 6347 041f D301     		.uleb128 .L330-.LFB1501
 6348 0421 05       		.uleb128 0x5
 6349 0422 8E01     		.uleb128 .LEHB146-.LFB1501
 6350 0424 14       		.uleb128 .LEHE146-.LEHB146
 6351 0425 B601     		.uleb128 .L331-.LFB1501
 6352 0427 07       		.uleb128 0x7
 6353 0428 AC01     		.uleb128 .LEHB147-.LFB1501
 6354 042a 05       		.uleb128 .LEHE147-.LEHB147
 6355 042b D301     		.uleb128 .L330-.LFB1501
 6356 042d 05       		.uleb128 0x5
 6357 042e F701     		.uleb128 .LEHB148-.LFB1501
 6358 0430 8801     		.uleb128 .LEHE148-.LEHB148
 6359 0432 DA04     		.uleb128 .L332-.LFB1501
 6360 0434 00       		.uleb128 0
 6361 0435 A203     		.uleb128 .LEHB149-.LFB1501
 6362 0437 05       		.uleb128 .LEHE149-.LEHB149
 6363 0438 8105     		.uleb128 .L333-.LFB1501
 6364 043a 00       		.uleb128 0
 6365 043b B803     		.uleb128 .LEHB150-.LFB1501
 6366 043d 5C       		.uleb128 .LEHE150-.LEHB150
 6367 043e ED04     		.uleb128 .L334-.LFB1501
 6368 0440 00       		.uleb128 0
 6369 0441 9E04     		.uleb128 .LEHB151-.LFB1501
 6370 0443 05       		.uleb128 .LEHE151-.LEHB151
 6371 0444 8105     		.uleb128 .L333-.LFB1501
 6372 0446 00       		.uleb128 0
 6373 0447 B204     		.uleb128 .LEHB152-.LFB1501
 6374 0449 21       		.uleb128 .LEHE152-.LEHB152
 6375 044a 9405     		.uleb128 .L335-.LFB1501
 6376 044c 00       		.uleb128 0
 6377 044d D304     		.uleb128 .LEHB153-.LFB1501
 6378 044f 1A       		.uleb128 .LEHE153-.LEHB153
 6379 0450 00       		.uleb128 0
 6380 0451 00       		.uleb128 0
 6381 0452 8F05     		.uleb128 .LEHB154-.LFB1501
 6382 0454 05       		.uleb128 .LEHE154-.LEHB154
 6383 0455 00       		.uleb128 0
 6384 0456 00       		.uleb128 0
 6385 0457 A205     		.uleb128 .LEHB155-.LFB1501
 6386 0459 05       		.uleb128 .LEHE155-.LEHB155
 6387 045a 00       		.uleb128 0
 6388 045b 00       		.uleb128 0
 6389              	.LLSDACSE1501:
 6390 045c 03       		.byte	0x3
 6391 045d 00       		.byte	0
 6392 045e 02       		.byte	0x2
 6393 045f 7D       		.byte	0x7d
 6394 0460 01       		.byte	0x1
 6395 0461 7D       		.byte	0x7d
 6396 0462 00       		.byte	0
 6397 0463 7D       		.byte	0x7d
 6398              		.align 4
 6399 0464 00000000 		.long	0
 6400              	
 6401 0468 00000000 		.long	DW.ref._ZTISt9exception-.
 6402 046c 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6403              	.LLSDATT1501:
 6404              		.text
 6406              		.section	.text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_,"axG",@progbits,_ZN8UnitTest8AreCloseIff
 6407              		.weak	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6409              	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:
 6410              	.LFB1531:
  39:../Checks.h   **** {
 6411              		.loc 5 39 0
 6412              		.cfi_startproc
 6413 0000 55       		pushq	%rbp
 6414              		.cfi_def_cfa_offset 16
 6415              		.cfi_offset 6, -16
 6416 0001 4889E5   		movq	%rsp, %rbp
 6417              		.cfi_def_cfa_register 6
 6418 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6419 0008 488975F0 		movq	%rsi, -16(%rbp)
 6420 000c 488955E8 		movq	%rdx, -24(%rbp)
  41:../Checks.h   **** }
 6421              		.loc 5 41 0
 6422 0010 488B45F0 		movq	-16(%rbp), %rax
 6423 0014 F30F1008 		movss	(%rax), %xmm1
 6424 0018 488B45F8 		movq	-8(%rbp), %rax
 6425 001c F30F1000 		movss	(%rax), %xmm0
 6426 0020 488B45E8 		movq	-24(%rbp), %rax
 6427 0024 F30F1010 		movss	(%rax), %xmm2
 6428 0028 F30F5CC2 		subss	%xmm2, %xmm0
 6429 002c 0F2EC8   		ucomiss	%xmm0, %xmm1
 6430 002f 7228     		jb	.L338
  41:../Checks.h   **** }
 6431              		.loc 5 41 0 is_stmt 0 discriminator 1
 6432 0031 488B45F0 		movq	-16(%rbp), %rax
 6433 0035 F30F1008 		movss	(%rax), %xmm1
 6434 0039 488B45F8 		movq	-8(%rbp), %rax
 6435 003d F30F1010 		movss	(%rax), %xmm2
 6436 0041 488B45E8 		movq	-24(%rbp), %rax
 6437 0045 F30F1000 		movss	(%rax), %xmm0
 6438 0049 F30F58C2 		addss	%xmm2, %xmm0
 6439 004d 0F2EC1   		ucomiss	%xmm1, %xmm0
 6440 0050 7207     		jb	.L338
  41:../Checks.h   **** }
 6441              		.loc 5 41 0 discriminator 3
 6442 0052 B8010000 		movl	$1, %eax
 6442      00
 6443 0057 EB05     		jmp	.L341
 6444              	.L338:
  41:../Checks.h   **** }
 6445              		.loc 5 41 0 discriminator 4
 6446 0059 B8000000 		movl	$0, %eax
 6446      00
 6447              	.L341:
  42:../Checks.h   **** 
 6448              		.loc 5 42 0 is_stmt 1 discriminator 6
 6449 005e 5D       		popq	%rbp
 6450              		.cfi_def_cfa 7, 8
 6451 005f C3       		ret
 6452              		.cfi_endproc
 6453              	.LFE1531:
 6455              		.section	.text._ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_,"axG",@progbits,_ZN8UnitTest
 6456              		.weak	_ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_
 6458              	_ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_:
 6459              	.LFB1533:
  87:../Checks.h   **** {
 6460              		.loc 5 87 0
 6461              		.cfi_startproc
 6462 0000 55       		pushq	%rbp
 6463              		.cfi_def_cfa_offset 16
 6464              		.cfi_offset 6, -16
 6465 0001 4889E5   		movq	%rsp, %rbp
 6466              		.cfi_def_cfa_register 6
 6467 0004 4883EC30 		subq	$48, %rsp
 6468 0008 48897DE8 		movq	%rdi, -24(%rbp)
 6469 000c 488975E0 		movq	%rsi, -32(%rbp)
 6470 0010 8955DC   		movl	%edx, -36(%rbp)
 6471 0013 48894DD0 		movq	%rcx, -48(%rbp)
  89:../Checks.h   ****     for (int i = 0; i < count; ++i)
 6472              		.loc 5 89 0
 6473 0017 C645FB01 		movb	$1, -5(%rbp)
 6474              	.LBB105:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6475              		.loc 5 90 0
 6476 001b C745FC00 		movl	$0, -4(%rbp)
 6476      000000
 6477              	.L347:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6478              		.loc 5 90 0 is_stmt 0 discriminator 3
 6479 0022 8B45FC   		movl	-4(%rbp), %eax
 6480 0025 3B45DC   		cmpl	-36(%rbp), %eax
 6481 0028 7D50     		jge	.L346
  91:../Checks.h   ****     return equal;
 6482              		.loc 5 91 0 is_stmt 1 discriminator 2
 6483 002a 8B45FC   		movl	-4(%rbp), %eax
 6484 002d 4898     		cltq
 6485 002f 488D1485 		leaq	0(,%rax,4), %rdx
 6485      00000000 
 6486 0037 488B45E0 		movq	-32(%rbp), %rax
 6487 003b 488D3402 		leaq	(%rdx,%rax), %rsi
 6488 003f 8B45FC   		movl	-4(%rbp), %eax
 6489 0042 4898     		cltq
 6490 0044 488D1485 		leaq	0(,%rax,4), %rdx
 6490      00000000 
 6491 004c 488B45E8 		movq	-24(%rbp), %rax
 6492 0050 488D0C02 		leaq	(%rdx,%rax), %rcx
 6493 0054 488B45D0 		movq	-48(%rbp), %rax
 6494 0058 4889C2   		movq	%rax, %rdx
 6495 005b 4889CF   		movq	%rcx, %rdi
 6496 005e E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6496      00
 6497 0063 0FB655FB 		movzbl	-5(%rbp), %edx
 6498 0067 0FB6C0   		movzbl	%al, %eax
 6499 006a 21D0     		andl	%edx, %eax
 6500 006c 85C0     		testl	%eax, %eax
 6501 006e 0F95C0   		setne	%al
 6502 0071 8845FB   		movb	%al, -5(%rbp)
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6503              		.loc 5 90 0 discriminator 2
 6504 0074 8345FC01 		addl	$1, -4(%rbp)
 6505 0078 EBA8     		jmp	.L347
 6506              	.L346:
 6507              	.LBE105:
  92:../Checks.h   **** }
 6508              		.loc 5 92 0
 6509 007a 0FB645FB 		movzbl	-5(%rbp), %eax
  93:../Checks.h   **** 
 6510              		.loc 5 93 0
 6511 007e C9       		leave
 6512              		.cfi_def_cfa 7, 8
 6513 007f C3       		ret
 6514              		.cfi_endproc
 6515              	.LFE1533:
 6517              		.section	.text._ZN9__gnu_cxx13new_allocatorIfEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIfE
 6518              		.align 2
 6519              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC2Ev
 6521              	_ZN9__gnu_cxx13new_allocatorIfEC2Ev:
 6522              	.LFB1535:
 6523              		.file 9 "/usr/include/c++/7/ext/new_allocator.h"
   1:/usr/include/c++/7/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/7/ext/new_allocator.h **** 
   3:/usr/include/c++/7/ext/new_allocator.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/ext/new_allocator.h **** //
   5:/usr/include/c++/7/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/7/ext/new_allocator.h **** 
  11:/usr/include/c++/7/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/ext/new_allocator.h **** 
  16:/usr/include/c++/7/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/ext/new_allocator.h **** 
  20:/usr/include/c++/7/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/ext/new_allocator.h **** 
  25:/usr/include/c++/7/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/7/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/7/ext/new_allocator.h ****  */
  28:/usr/include/c++/7/ext/new_allocator.h **** 
  29:/usr/include/c++/7/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/7/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/7/ext/new_allocator.h **** 
  32:/usr/include/c++/7/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/7/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/7/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/7/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/7/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/7/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/7/ext/new_allocator.h **** #endif
  39:/usr/include/c++/7/ext/new_allocator.h **** 
  40:/usr/include/c++/7/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/7/ext/new_allocator.h **** {
  42:/usr/include/c++/7/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/7/ext/new_allocator.h **** 
  44:/usr/include/c++/7/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/7/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/7/ext/new_allocator.h **** 
  47:/usr/include/c++/7/ext/new_allocator.h ****   /**
  48:/usr/include/c++/7/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/7/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/7/ext/new_allocator.h ****    *
  51:/usr/include/c++/7/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:/usr/include/c++/7/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/7/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/7/ext/new_allocator.h ****    *
  55:/usr/include/c++/7/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/7/ext/new_allocator.h ****    */
  57:/usr/include/c++/7/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/7/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/7/ext/new_allocator.h ****     {
  60:/usr/include/c++/7/ext/new_allocator.h ****     public:
  61:/usr/include/c++/7/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/7/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/7/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/7/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/7/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/7/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/7/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/7/ext/new_allocator.h **** 
  69:/usr/include/c++/7/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/7/ext/new_allocator.h **** 	struct rebind
  71:/usr/include/c++/7/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/7/ext/new_allocator.h **** 
  73:/usr/include/c++/7/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/7/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/7/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/7/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/7/ext/new_allocator.h **** #endif
  78:/usr/include/c++/7/ext/new_allocator.h **** 
  79:/usr/include/c++/7/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 6524              		.loc 9 79 0
 6525              		.cfi_startproc
 6526 0000 55       		pushq	%rbp
 6527              		.cfi_def_cfa_offset 16
 6528              		.cfi_offset 6, -16
 6529 0001 4889E5   		movq	%rsp, %rbp
 6530              		.cfi_def_cfa_register 6
 6531 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6532              		.loc 9 79 0
 6533 0008 90       		nop
 6534 0009 5D       		popq	%rbp
 6535              		.cfi_def_cfa 7, 8
 6536 000a C3       		ret
 6537              		.cfi_endproc
 6538              	.LFE1535:
 6540              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC1Ev
 6541              		.set	_ZN9__gnu_cxx13new_allocatorIfEC1Ev,_ZN9__gnu_cxx13new_allocatorIfEC2Ev
 6542              		.section	.text._ZN9__gnu_cxx13new_allocatorIfED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIfE
 6543              		.align 2
 6544              		.weak	_ZN9__gnu_cxx13new_allocatorIfED2Ev
 6546              	_ZN9__gnu_cxx13new_allocatorIfED2Ev:
 6547              	.LFB1538:
  80:/usr/include/c++/7/ext/new_allocator.h **** 
  81:/usr/include/c++/7/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/7/ext/new_allocator.h **** 
  83:/usr/include/c++/7/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/7/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/7/ext/new_allocator.h **** 
  86:/usr/include/c++/7/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 6548              		.loc 9 86 0
 6549              		.cfi_startproc
 6550 0000 55       		pushq	%rbp
 6551              		.cfi_def_cfa_offset 16
 6552              		.cfi_offset 6, -16
 6553 0001 4889E5   		movq	%rsp, %rbp
 6554              		.cfi_def_cfa_register 6
 6555 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6556              		.loc 9 86 0
 6557 0008 90       		nop
 6558 0009 5D       		popq	%rbp
 6559              		.cfi_def_cfa 7, 8
 6560 000a C3       		ret
 6561              		.cfi_endproc
 6562              	.LFE1538:
 6564              		.weak	_ZN9__gnu_cxx13new_allocatorIfED1Ev
 6565              		.set	_ZN9__gnu_cxx13new_allocatorIfED1Ev,_ZN9__gnu_cxx13new_allocatorIfED2Ev
 6566              		.section	.text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIf
 6567              		.align 2
 6568              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev
 6570              	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev:
 6571              	.LFB1542:
  81:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
 6572              		.loc 7 81 0
 6573              		.cfi_startproc
 6574 0000 55       		pushq	%rbp
 6575              		.cfi_def_cfa_offset 16
 6576              		.cfi_offset 6, -16
 6577 0001 4889E5   		movq	%rsp, %rbp
 6578              		.cfi_def_cfa_register 6
 6579 0004 4883EC10 		subq	$16, %rsp
 6580 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6581              	.LBB106:
  81:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
 6582              		.loc 7 81 0
 6583 000c 488B45F8 		movq	-8(%rbp), %rax
 6584 0010 4889C7   		movq	%rax, %rdi
 6585 0013 E8000000 		call	_ZNSaIfED2Ev
 6585      00
 6586              	.LBE106:
 6587 0018 90       		nop
 6588 0019 C9       		leave
 6589              		.cfi_def_cfa 7, 8
 6590 001a C3       		ret
 6591              		.cfi_endproc
 6592              	.LFE1542:
 6594              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6595              		.set	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev,_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev
 6596              		.section	.text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEEC5E
 6597              		.align 2
 6598              		.weak	_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
 6600              	_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_:
 6601              	.LFB1544:
 136:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(__a)
 6602              		.loc 7 136 0
 6603              		.cfi_startproc
 6604              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6605              		.cfi_lsda 0x1b,.LLSDA1544
 6606 0000 55       		pushq	%rbp
 6607              		.cfi_def_cfa_offset 16
 6608              		.cfi_offset 6, -16
 6609 0001 4889E5   		movq	%rsp, %rbp
 6610              		.cfi_def_cfa_register 6
 6611 0004 53       		pushq	%rbx
 6612 0005 4883EC28 		subq	$40, %rsp
 6613              		.cfi_offset 3, -24
 6614 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6615 000d 488975E0 		movq	%rsi, -32(%rbp)
 6616 0011 488955D8 		movq	%rdx, -40(%rbp)
 6617              	.LBB107:
 137:/usr/include/c++/7/bits/stl_vector.h ****       { _M_create_storage(__n); }
 6618              		.loc 7 137 0
 6619 0015 488B45E8 		movq	-24(%rbp), %rax
 6620 0019 488B55D8 		movq	-40(%rbp), %rdx
 6621 001d 4889D6   		movq	%rdx, %rsi
 6622 0020 4889C7   		movq	%rax, %rdi
 6623 0023 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_
 6623      00
 138:/usr/include/c++/7/bits/stl_vector.h **** 
 6624              		.loc 7 138 0
 6625 0028 488B55E0 		movq	-32(%rbp), %rdx
 6626 002c 488B45E8 		movq	-24(%rbp), %rax
 6627 0030 4889D6   		movq	%rdx, %rsi
 6628 0033 4889C7   		movq	%rax, %rdi
 6629              	.LEHB156:
 6630 0036 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm
 6630      00
 6631              	.LEHE156:
 6632              	.LBE107:
 6633 003b EB1A     		jmp	.L355
 6634              	.L354:
 6635 003d 4889C3   		movq	%rax, %rbx
 6636              	.LBB108:
 137:/usr/include/c++/7/bits/stl_vector.h ****       { _M_create_storage(__n); }
 6637              		.loc 7 137 0
 6638 0040 488B45E8 		movq	-24(%rbp), %rax
 6639 0044 4889C7   		movq	%rax, %rdi
 6640 0047 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6640      00
 6641 004c 4889D8   		movq	%rbx, %rax
 6642 004f 4889C7   		movq	%rax, %rdi
 6643              	.LEHB157:
 6644 0052 E8000000 		call	_Unwind_Resume@PLT
 6644      00
 6645              	.LEHE157:
 6646              	.L355:
 6647              	.LBE108:
 138:/usr/include/c++/7/bits/stl_vector.h **** 
 6648              		.loc 7 138 0
 6649 0057 4883C428 		addq	$40, %rsp
 6650 005b 5B       		popq	%rbx
 6651 005c 5D       		popq	%rbp
 6652              		.cfi_def_cfa 7, 8
 6653 005d C3       		ret
 6654              		.cfi_endproc
 6655              	.LFE1544:
 6656              		.section	.gcc_except_table
 6657              	.LLSDA1544:
 6658 0470 FF       		.byte	0xff
 6659 0471 FF       		.byte	0xff
 6660 0472 01       		.byte	0x1
 6661 0473 08       		.uleb128 .LLSDACSE1544-.LLSDACSB1544
 6662              	.LLSDACSB1544:
 6663 0474 36       		.uleb128 .LEHB156-.LFB1544
 6664 0475 05       		.uleb128 .LEHE156-.LEHB156
 6665 0476 3D       		.uleb128 .L354-.LFB1544
 6666 0477 00       		.uleb128 0
 6667 0478 52       		.uleb128 .LEHB157-.LFB1544
 6668 0479 05       		.uleb128 .LEHE157-.LEHB157
 6669 047a 00       		.uleb128 0
 6670 047b 00       		.uleb128 0
 6671              	.LLSDACSE1544:
 6672              		.section	.text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEEC5E
 6674              		.weak	_ZNSt12_Vector_baseIfSaIfEEC1EmRKS0_
 6675              		.set	_ZNSt12_Vector_baseIfSaIfEEC1EmRKS0_,_ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
 6676              		.section	.text._ZNSt12_Vector_baseIfSaIfEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEED5Ev,com
 6677              		.align 2
 6678              		.weak	_ZNSt12_Vector_baseIfSaIfEED2Ev
 6680              	_ZNSt12_Vector_baseIfSaIfEED2Ev:
 6681              	.LFB1547:
 161:/usr/include/c++/7/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 6682              		.loc 7 161 0
 6683              		.cfi_startproc
 6684              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6685              		.cfi_lsda 0x1b,.LLSDA1547
 6686 0000 55       		pushq	%rbp
 6687              		.cfi_def_cfa_offset 16
 6688              		.cfi_offset 6, -16
 6689 0001 4889E5   		movq	%rsp, %rbp
 6690              		.cfi_def_cfa_register 6
 6691 0004 53       		pushq	%rbx
 6692 0005 4883EC18 		subq	$24, %rsp
 6693              		.cfi_offset 3, -24
 6694 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6695              	.LBB109:
 162:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 6696              		.loc 7 162 0
 6697 000d 488B45E8 		movq	-24(%rbp), %rax
 6698 0011 488B4010 		movq	16(%rax), %rax
 163:/usr/include/c++/7/bits/stl_vector.h **** 
 6699              		.loc 7 163 0
 6700 0015 4889C2   		movq	%rax, %rdx
 6701 0018 488B45E8 		movq	-24(%rbp), %rax
 6702 001c 488B00   		movq	(%rax), %rax
 6703 001f 4829C2   		subq	%rax, %rdx
 6704 0022 4889D0   		movq	%rdx, %rax
 6705 0025 48C1F802 		sarq	$2, %rax
 162:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 6706              		.loc 7 162 0
 6707 0029 4889C2   		movq	%rax, %rdx
 6708 002c 488B45E8 		movq	-24(%rbp), %rax
 6709 0030 488B08   		movq	(%rax), %rcx
 6710 0033 488B45E8 		movq	-24(%rbp), %rax
 6711 0037 4889CE   		movq	%rcx, %rsi
 6712 003a 4889C7   		movq	%rax, %rdi
 6713              	.LEHB158:
 6714 003d E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm
 6714      00
 6715              	.LEHE158:
 163:/usr/include/c++/7/bits/stl_vector.h **** 
 6716              		.loc 7 163 0
 6717 0042 488B45E8 		movq	-24(%rbp), %rax
 6718 0046 4889C7   		movq	%rax, %rdi
 6719 0049 E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6719      00
 6720              	.LBE109:
 6721 004e EB1A     		jmp	.L359
 6722              	.L358:
 6723 0050 4889C3   		movq	%rax, %rbx
 6724              	.LBB110:
 6725 0053 488B45E8 		movq	-24(%rbp), %rax
 6726 0057 4889C7   		movq	%rax, %rdi
 6727 005a E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
 6727      00
 6728 005f 4889D8   		movq	%rbx, %rax
 6729 0062 4889C7   		movq	%rax, %rdi
 6730              	.LEHB159:
 6731 0065 E8000000 		call	_Unwind_Resume@PLT
 6731      00
 6732              	.LEHE159:
 6733              	.L359:
 6734              	.LBE110:
 6735 006a 4883C418 		addq	$24, %rsp
 6736 006e 5B       		popq	%rbx
 6737 006f 5D       		popq	%rbp
 6738              		.cfi_def_cfa 7, 8
 6739 0070 C3       		ret
 6740              		.cfi_endproc
 6741              	.LFE1547:
 6742              		.section	.gcc_except_table
 6743              	.LLSDA1547:
 6744 047c FF       		.byte	0xff
 6745 047d FF       		.byte	0xff
 6746 047e 01       		.byte	0x1
 6747 047f 08       		.uleb128 .LLSDACSE1547-.LLSDACSB1547
 6748              	.LLSDACSB1547:
 6749 0480 3D       		.uleb128 .LEHB158-.LFB1547
 6750 0481 05       		.uleb128 .LEHE158-.LEHB158
 6751 0482 50       		.uleb128 .L358-.LFB1547
 6752 0483 00       		.uleb128 0
 6753 0484 65       		.uleb128 .LEHB159-.LFB1547
 6754 0485 05       		.uleb128 .LEHE159-.LEHB159
 6755 0486 00       		.uleb128 0
 6756 0487 00       		.uleb128 0
 6757              	.LLSDACSE1547:
 6758              		.section	.text._ZNSt12_Vector_baseIfSaIfEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIfSaIfEED5Ev,com
 6760              		.weak	_ZNSt12_Vector_baseIfSaIfEED1Ev
 6761              		.set	_ZNSt12_Vector_baseIfSaIfEED1Ev,_ZNSt12_Vector_baseIfSaIfEED2Ev
 6762              		.section	.text._ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf,"axG",@progbits,_ZNSt6vectorIfSaIfEE1
 6763              		.align 2
 6764              		.weak	_ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf
 6766              	_ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf:
 6767              	.LFB1549:
 800:/usr/include/c++/7/bits/stl_vector.h **** 
 801:/usr/include/c++/7/bits/stl_vector.h ****       /**
 802:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 803:/usr/include/c++/7/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 804:/usr/include/c++/7/bits/stl_vector.h ****        *  accessed.
 805:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 806:/usr/include/c++/7/bits/stl_vector.h ****        *
 807:/usr/include/c++/7/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 808:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 809:/usr/include/c++/7/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 810:/usr/include/c++/7/bits/stl_vector.h ****        *  see at().)
 811:/usr/include/c++/7/bits/stl_vector.h ****        */
 812:/usr/include/c++/7/bits/stl_vector.h ****       const_reference
 813:/usr/include/c++/7/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 814:/usr/include/c++/7/bits/stl_vector.h ****       {
 815:/usr/include/c++/7/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
 816:/usr/include/c++/7/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
 817:/usr/include/c++/7/bits/stl_vector.h ****       }
 818:/usr/include/c++/7/bits/stl_vector.h **** 
 819:/usr/include/c++/7/bits/stl_vector.h ****     protected:
 820:/usr/include/c++/7/bits/stl_vector.h ****       /// Safety check used only from at().
 821:/usr/include/c++/7/bits/stl_vector.h ****       void
 822:/usr/include/c++/7/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 823:/usr/include/c++/7/bits/stl_vector.h ****       {
 824:/usr/include/c++/7/bits/stl_vector.h **** 	if (__n >= this->size())
 825:/usr/include/c++/7/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 826:/usr/include/c++/7/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 827:/usr/include/c++/7/bits/stl_vector.h **** 				       "(which is %zu)"),
 828:/usr/include/c++/7/bits/stl_vector.h **** 				   __n, this->size());
 829:/usr/include/c++/7/bits/stl_vector.h ****       }
 830:/usr/include/c++/7/bits/stl_vector.h **** 
 831:/usr/include/c++/7/bits/stl_vector.h ****     public:
 832:/usr/include/c++/7/bits/stl_vector.h ****       /**
 833:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 834:/usr/include/c++/7/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 835:/usr/include/c++/7/bits/stl_vector.h ****        *  accessed.
 836:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 837:/usr/include/c++/7/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 838:/usr/include/c++/7/bits/stl_vector.h ****        *
 839:/usr/include/c++/7/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 840:/usr/include/c++/7/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 841:/usr/include/c++/7/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 842:/usr/include/c++/7/bits/stl_vector.h ****        */
 843:/usr/include/c++/7/bits/stl_vector.h ****       reference
 844:/usr/include/c++/7/bits/stl_vector.h ****       at(size_type __n)
 845:/usr/include/c++/7/bits/stl_vector.h ****       {
 846:/usr/include/c++/7/bits/stl_vector.h **** 	_M_range_check(__n);
 847:/usr/include/c++/7/bits/stl_vector.h **** 	return (*this)[__n];
 848:/usr/include/c++/7/bits/stl_vector.h ****       }
 849:/usr/include/c++/7/bits/stl_vector.h **** 
 850:/usr/include/c++/7/bits/stl_vector.h ****       /**
 851:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 852:/usr/include/c++/7/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 853:/usr/include/c++/7/bits/stl_vector.h ****        *  accessed.
 854:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 855:/usr/include/c++/7/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 856:/usr/include/c++/7/bits/stl_vector.h ****        *
 857:/usr/include/c++/7/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 858:/usr/include/c++/7/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 859:/usr/include/c++/7/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 860:/usr/include/c++/7/bits/stl_vector.h ****        */
 861:/usr/include/c++/7/bits/stl_vector.h ****       const_reference
 862:/usr/include/c++/7/bits/stl_vector.h ****       at(size_type __n) const
 863:/usr/include/c++/7/bits/stl_vector.h ****       {
 864:/usr/include/c++/7/bits/stl_vector.h **** 	_M_range_check(__n);
 865:/usr/include/c++/7/bits/stl_vector.h **** 	return (*this)[__n];
 866:/usr/include/c++/7/bits/stl_vector.h ****       }
 867:/usr/include/c++/7/bits/stl_vector.h **** 
 868:/usr/include/c++/7/bits/stl_vector.h ****       /**
 869:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
 870:/usr/include/c++/7/bits/stl_vector.h ****        *  element of the %vector.
 871:/usr/include/c++/7/bits/stl_vector.h ****        */
 872:/usr/include/c++/7/bits/stl_vector.h ****       reference
 873:/usr/include/c++/7/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 874:/usr/include/c++/7/bits/stl_vector.h ****       {
 875:/usr/include/c++/7/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
 876:/usr/include/c++/7/bits/stl_vector.h **** 	return *begin();
 877:/usr/include/c++/7/bits/stl_vector.h ****       }
 878:/usr/include/c++/7/bits/stl_vector.h **** 
 879:/usr/include/c++/7/bits/stl_vector.h ****       /**
 880:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
 881:/usr/include/c++/7/bits/stl_vector.h ****        *  element of the %vector.
 882:/usr/include/c++/7/bits/stl_vector.h ****        */
 883:/usr/include/c++/7/bits/stl_vector.h ****       const_reference
 884:/usr/include/c++/7/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 885:/usr/include/c++/7/bits/stl_vector.h ****       {
 886:/usr/include/c++/7/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
 887:/usr/include/c++/7/bits/stl_vector.h **** 	return *begin();
 888:/usr/include/c++/7/bits/stl_vector.h ****       }
 889:/usr/include/c++/7/bits/stl_vector.h **** 
 890:/usr/include/c++/7/bits/stl_vector.h ****       /**
 891:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
 892:/usr/include/c++/7/bits/stl_vector.h ****        *  element of the %vector.
 893:/usr/include/c++/7/bits/stl_vector.h ****        */
 894:/usr/include/c++/7/bits/stl_vector.h ****       reference
 895:/usr/include/c++/7/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 896:/usr/include/c++/7/bits/stl_vector.h ****       {
 897:/usr/include/c++/7/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
 898:/usr/include/c++/7/bits/stl_vector.h **** 	return *(end() - 1);
 899:/usr/include/c++/7/bits/stl_vector.h ****       }
 900:/usr/include/c++/7/bits/stl_vector.h **** 
 901:/usr/include/c++/7/bits/stl_vector.h ****       /**
 902:/usr/include/c++/7/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 903:/usr/include/c++/7/bits/stl_vector.h ****        *  last element of the %vector.
 904:/usr/include/c++/7/bits/stl_vector.h ****        */
 905:/usr/include/c++/7/bits/stl_vector.h ****       const_reference
 906:/usr/include/c++/7/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 907:/usr/include/c++/7/bits/stl_vector.h ****       {
 908:/usr/include/c++/7/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
 909:/usr/include/c++/7/bits/stl_vector.h **** 	return *(end() - 1);
 910:/usr/include/c++/7/bits/stl_vector.h ****       }
 911:/usr/include/c++/7/bits/stl_vector.h **** 
 912:/usr/include/c++/7/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 913:/usr/include/c++/7/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 914:/usr/include/c++/7/bits/stl_vector.h ****       // data access
 915:/usr/include/c++/7/bits/stl_vector.h ****       /**
 916:/usr/include/c++/7/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 917:/usr/include/c++/7/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 918:/usr/include/c++/7/bits/stl_vector.h ****        */
 919:/usr/include/c++/7/bits/stl_vector.h ****       _Tp*
 920:/usr/include/c++/7/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 921:/usr/include/c++/7/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 922:/usr/include/c++/7/bits/stl_vector.h **** 
 923:/usr/include/c++/7/bits/stl_vector.h ****       const _Tp*
 924:/usr/include/c++/7/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 925:/usr/include/c++/7/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 926:/usr/include/c++/7/bits/stl_vector.h **** 
 927:/usr/include/c++/7/bits/stl_vector.h ****       // [23.2.4.3] modifiers
 928:/usr/include/c++/7/bits/stl_vector.h ****       /**
 929:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 930:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  Data to be added.
 931:/usr/include/c++/7/bits/stl_vector.h ****        *
 932:/usr/include/c++/7/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 933:/usr/include/c++/7/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 934:/usr/include/c++/7/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 935:/usr/include/c++/7/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
 936:/usr/include/c++/7/bits/stl_vector.h ****        *  available.
 937:/usr/include/c++/7/bits/stl_vector.h ****        */
 938:/usr/include/c++/7/bits/stl_vector.h ****       void
 939:/usr/include/c++/7/bits/stl_vector.h ****       push_back(const value_type& __x)
 940:/usr/include/c++/7/bits/stl_vector.h ****       {
 941:/usr/include/c++/7/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 942:/usr/include/c++/7/bits/stl_vector.h **** 	  {
 943:/usr/include/c++/7/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 944:/usr/include/c++/7/bits/stl_vector.h **** 				     __x);
 945:/usr/include/c++/7/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
 946:/usr/include/c++/7/bits/stl_vector.h **** 	  }
 947:/usr/include/c++/7/bits/stl_vector.h **** 	else
 948:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_realloc_insert(end(), __x);
 949:/usr/include/c++/7/bits/stl_vector.h ****       }
 950:/usr/include/c++/7/bits/stl_vector.h **** 
 951:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 952:/usr/include/c++/7/bits/stl_vector.h ****       void
 953:/usr/include/c++/7/bits/stl_vector.h ****       push_back(value_type&& __x)
 954:/usr/include/c++/7/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
 955:/usr/include/c++/7/bits/stl_vector.h **** 
 956:/usr/include/c++/7/bits/stl_vector.h ****       template<typename... _Args>
 957:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus > 201402L
 958:/usr/include/c++/7/bits/stl_vector.h **** 	reference
 959:/usr/include/c++/7/bits/stl_vector.h **** #else
 960:/usr/include/c++/7/bits/stl_vector.h **** 	void
 961:/usr/include/c++/7/bits/stl_vector.h **** #endif
 962:/usr/include/c++/7/bits/stl_vector.h **** 	emplace_back(_Args&&... __args);
 963:/usr/include/c++/7/bits/stl_vector.h **** #endif
 964:/usr/include/c++/7/bits/stl_vector.h **** 
 965:/usr/include/c++/7/bits/stl_vector.h ****       /**
 966:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Removes last element.
 967:/usr/include/c++/7/bits/stl_vector.h ****        *
 968:/usr/include/c++/7/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 969:/usr/include/c++/7/bits/stl_vector.h ****        *
 970:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
 971:/usr/include/c++/7/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 972:/usr/include/c++/7/bits/stl_vector.h ****        *  called.
 973:/usr/include/c++/7/bits/stl_vector.h ****        */
 974:/usr/include/c++/7/bits/stl_vector.h ****       void
 975:/usr/include/c++/7/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 976:/usr/include/c++/7/bits/stl_vector.h ****       {
 977:/usr/include/c++/7/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
 978:/usr/include/c++/7/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
 979:/usr/include/c++/7/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 980:/usr/include/c++/7/bits/stl_vector.h ****       }
 981:/usr/include/c++/7/bits/stl_vector.h **** 
 982:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 983:/usr/include/c++/7/bits/stl_vector.h ****       /**
 984:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 985:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 986:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __args  Arguments.
 987:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 988:/usr/include/c++/7/bits/stl_vector.h ****        *
 989:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
 990:/usr/include/c++/7/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 991:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 992:/usr/include/c++/7/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
 993:/usr/include/c++/7/bits/stl_vector.h ****        *  std::list.
 994:/usr/include/c++/7/bits/stl_vector.h ****        */
 995:/usr/include/c++/7/bits/stl_vector.h ****       template<typename... _Args>
 996:/usr/include/c++/7/bits/stl_vector.h **** 	iterator
 997:/usr/include/c++/7/bits/stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
 998:/usr/include/c++/7/bits/stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
 999:/usr/include/c++/7/bits/stl_vector.h **** 
1000:/usr/include/c++/7/bits/stl_vector.h ****       /**
1001:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1002:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1003:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1004:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1005:/usr/include/c++/7/bits/stl_vector.h ****        *
1006:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
1007:/usr/include/c++/7/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1008:/usr/include/c++/7/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1009:/usr/include/c++/7/bits/stl_vector.h ****        *  used the user should consider using std::list.
1010:/usr/include/c++/7/bits/stl_vector.h ****        */
1011:/usr/include/c++/7/bits/stl_vector.h ****       iterator
1012:/usr/include/c++/7/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1013:/usr/include/c++/7/bits/stl_vector.h **** #else
1014:/usr/include/c++/7/bits/stl_vector.h ****       /**
1015:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1016:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1017:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1018:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1019:/usr/include/c++/7/bits/stl_vector.h ****        *
1020:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
1021:/usr/include/c++/7/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1022:/usr/include/c++/7/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1023:/usr/include/c++/7/bits/stl_vector.h ****        *  used the user should consider using std::list.
1024:/usr/include/c++/7/bits/stl_vector.h ****        */
1025:/usr/include/c++/7/bits/stl_vector.h ****       iterator
1026:/usr/include/c++/7/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
1027:/usr/include/c++/7/bits/stl_vector.h **** #endif
1028:/usr/include/c++/7/bits/stl_vector.h **** 
1029:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
1030:/usr/include/c++/7/bits/stl_vector.h ****       /**
1031:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1032:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1033:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1034:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1035:/usr/include/c++/7/bits/stl_vector.h ****        *
1036:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1037:/usr/include/c++/7/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1038:/usr/include/c++/7/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1039:/usr/include/c++/7/bits/stl_vector.h ****        *  used the user should consider using std::list.
1040:/usr/include/c++/7/bits/stl_vector.h ****        */
1041:/usr/include/c++/7/bits/stl_vector.h ****       iterator
1042:/usr/include/c++/7/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1043:/usr/include/c++/7/bits/stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1044:/usr/include/c++/7/bits/stl_vector.h **** 
1045:/usr/include/c++/7/bits/stl_vector.h ****       /**
1046:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1047:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1048:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1049:/usr/include/c++/7/bits/stl_vector.h ****        *
1050:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will insert copies of the data in the
1051:/usr/include/c++/7/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1052:/usr/include/c++/7/bits/stl_vector.h ****        *  specified by @a position.
1053:/usr/include/c++/7/bits/stl_vector.h ****        *
1054:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1055:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1056:/usr/include/c++/7/bits/stl_vector.h ****        *  consider using std::list.
1057:/usr/include/c++/7/bits/stl_vector.h ****        */
1058:/usr/include/c++/7/bits/stl_vector.h ****       iterator
1059:/usr/include/c++/7/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1060:/usr/include/c++/7/bits/stl_vector.h ****       {
1061:/usr/include/c++/7/bits/stl_vector.h **** 	auto __offset = __position - cbegin();
1062:/usr/include/c++/7/bits/stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1063:/usr/include/c++/7/bits/stl_vector.h **** 			std::random_access_iterator_tag());
1064:/usr/include/c++/7/bits/stl_vector.h **** 	return begin() + __offset;
1065:/usr/include/c++/7/bits/stl_vector.h ****       }
1066:/usr/include/c++/7/bits/stl_vector.h **** #endif
1067:/usr/include/c++/7/bits/stl_vector.h **** 
1068:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
1069:/usr/include/c++/7/bits/stl_vector.h ****       /**
1070:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1071:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1072:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1073:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1074:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1075:/usr/include/c++/7/bits/stl_vector.h ****        *
1076:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1077:/usr/include/c++/7/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1078:/usr/include/c++/7/bits/stl_vector.h ****        *
1079:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1080:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1081:/usr/include/c++/7/bits/stl_vector.h ****        *  consider using std::list.
1082:/usr/include/c++/7/bits/stl_vector.h ****        */
1083:/usr/include/c++/7/bits/stl_vector.h ****       iterator
1084:/usr/include/c++/7/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1085:/usr/include/c++/7/bits/stl_vector.h ****       {
1086:/usr/include/c++/7/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1087:/usr/include/c++/7/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1088:/usr/include/c++/7/bits/stl_vector.h **** 	return begin() + __offset;
1089:/usr/include/c++/7/bits/stl_vector.h ****       }
1090:/usr/include/c++/7/bits/stl_vector.h **** #else
1091:/usr/include/c++/7/bits/stl_vector.h ****       /**
1092:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1093:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1094:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1095:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1096:/usr/include/c++/7/bits/stl_vector.h ****        *
1097:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1098:/usr/include/c++/7/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1099:/usr/include/c++/7/bits/stl_vector.h ****        *
1100:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1101:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1102:/usr/include/c++/7/bits/stl_vector.h ****        *  consider using std::list.
1103:/usr/include/c++/7/bits/stl_vector.h ****        */
1104:/usr/include/c++/7/bits/stl_vector.h ****       void
1105:/usr/include/c++/7/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1106:/usr/include/c++/7/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1107:/usr/include/c++/7/bits/stl_vector.h **** #endif
1108:/usr/include/c++/7/bits/stl_vector.h **** 
1109:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
1110:/usr/include/c++/7/bits/stl_vector.h ****       /**
1111:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1112:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1113:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1114:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1115:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1116:/usr/include/c++/7/bits/stl_vector.h ****        *
1117:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1118:/usr/include/c++/7/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1119:/usr/include/c++/7/bits/stl_vector.h ****        *  by @a pos.
1120:/usr/include/c++/7/bits/stl_vector.h ****        *
1121:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1122:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1123:/usr/include/c++/7/bits/stl_vector.h ****        *  consider using std::list.
1124:/usr/include/c++/7/bits/stl_vector.h ****        */
1125:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator,
1126:/usr/include/c++/7/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1127:/usr/include/c++/7/bits/stl_vector.h **** 	iterator
1128:/usr/include/c++/7/bits/stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1129:/usr/include/c++/7/bits/stl_vector.h **** 	       _InputIterator __last)
1130:/usr/include/c++/7/bits/stl_vector.h **** 	{
1131:/usr/include/c++/7/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1132:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1133:/usr/include/c++/7/bits/stl_vector.h **** 			     __first, __last, __false_type());
1134:/usr/include/c++/7/bits/stl_vector.h **** 	  return begin() + __offset;
1135:/usr/include/c++/7/bits/stl_vector.h **** 	}
1136:/usr/include/c++/7/bits/stl_vector.h **** #else
1137:/usr/include/c++/7/bits/stl_vector.h ****       /**
1138:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1139:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1140:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1141:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1142:/usr/include/c++/7/bits/stl_vector.h ****        *
1143:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1144:/usr/include/c++/7/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1145:/usr/include/c++/7/bits/stl_vector.h ****        *  by @a pos.
1146:/usr/include/c++/7/bits/stl_vector.h ****        *
1147:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1148:/usr/include/c++/7/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1149:/usr/include/c++/7/bits/stl_vector.h ****        *  consider using std::list.
1150:/usr/include/c++/7/bits/stl_vector.h ****        */
1151:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator>
1152:/usr/include/c++/7/bits/stl_vector.h **** 	void
1153:/usr/include/c++/7/bits/stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1154:/usr/include/c++/7/bits/stl_vector.h **** 	       _InputIterator __last)
1155:/usr/include/c++/7/bits/stl_vector.h **** 	{
1156:/usr/include/c++/7/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1157:/usr/include/c++/7/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1158:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1159:/usr/include/c++/7/bits/stl_vector.h **** 	}
1160:/usr/include/c++/7/bits/stl_vector.h **** #endif
1161:/usr/include/c++/7/bits/stl_vector.h **** 
1162:/usr/include/c++/7/bits/stl_vector.h ****       /**
1163:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1164:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1165:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1166:/usr/include/c++/7/bits/stl_vector.h ****        *
1167:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1168:/usr/include/c++/7/bits/stl_vector.h ****        *  shorten the %vector by one.
1169:/usr/include/c++/7/bits/stl_vector.h ****        *
1170:/usr/include/c++/7/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1171:/usr/include/c++/7/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1172:/usr/include/c++/7/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1173:/usr/include/c++/7/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1174:/usr/include/c++/7/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1175:/usr/include/c++/7/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1176:/usr/include/c++/7/bits/stl_vector.h ****        */
1177:/usr/include/c++/7/bits/stl_vector.h ****       iterator
1178:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
1179:/usr/include/c++/7/bits/stl_vector.h ****       erase(const_iterator __position)
1180:/usr/include/c++/7/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1181:/usr/include/c++/7/bits/stl_vector.h **** #else
1182:/usr/include/c++/7/bits/stl_vector.h ****       erase(iterator __position)
1183:/usr/include/c++/7/bits/stl_vector.h ****       { return _M_erase(__position); }
1184:/usr/include/c++/7/bits/stl_vector.h **** #endif
1185:/usr/include/c++/7/bits/stl_vector.h **** 
1186:/usr/include/c++/7/bits/stl_vector.h ****       /**
1187:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Remove a range of elements.
1188:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1189:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1190:/usr/include/c++/7/bits/stl_vector.h ****        *                  erased.
1191:/usr/include/c++/7/bits/stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1192:/usr/include/c++/7/bits/stl_vector.h ****        *           prior to erasing (or end()).
1193:/usr/include/c++/7/bits/stl_vector.h ****        *
1194:/usr/include/c++/7/bits/stl_vector.h ****        *  This function will erase the elements in the range
1195:/usr/include/c++/7/bits/stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1196:/usr/include/c++/7/bits/stl_vector.h ****        *
1197:/usr/include/c++/7/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1198:/usr/include/c++/7/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1199:/usr/include/c++/7/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1200:/usr/include/c++/7/bits/stl_vector.h ****        *  the elements, and that if the elements themselves are
1201:/usr/include/c++/7/bits/stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1202:/usr/include/c++/7/bits/stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1203:/usr/include/c++/7/bits/stl_vector.h ****        */
1204:/usr/include/c++/7/bits/stl_vector.h ****       iterator
1205:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
1206:/usr/include/c++/7/bits/stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1207:/usr/include/c++/7/bits/stl_vector.h ****       {
1208:/usr/include/c++/7/bits/stl_vector.h **** 	const auto __beg = begin();
1209:/usr/include/c++/7/bits/stl_vector.h **** 	const auto __cbeg = cbegin();
1210:/usr/include/c++/7/bits/stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1211:/usr/include/c++/7/bits/stl_vector.h ****       }
1212:/usr/include/c++/7/bits/stl_vector.h **** #else
1213:/usr/include/c++/7/bits/stl_vector.h ****       erase(iterator __first, iterator __last)
1214:/usr/include/c++/7/bits/stl_vector.h ****       { return _M_erase(__first, __last); }
1215:/usr/include/c++/7/bits/stl_vector.h **** #endif
1216:/usr/include/c++/7/bits/stl_vector.h **** 
1217:/usr/include/c++/7/bits/stl_vector.h ****       /**
1218:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Swaps data with another %vector.
1219:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1220:/usr/include/c++/7/bits/stl_vector.h ****        *
1221:/usr/include/c++/7/bits/stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1222:/usr/include/c++/7/bits/stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1223:/usr/include/c++/7/bits/stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1224:/usr/include/c++/7/bits/stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1225:/usr/include/c++/7/bits/stl_vector.h ****        *
1226:/usr/include/c++/7/bits/stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1227:/usr/include/c++/7/bits/stl_vector.h ****        */
1228:/usr/include/c++/7/bits/stl_vector.h ****       void
1229:/usr/include/c++/7/bits/stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1230:/usr/include/c++/7/bits/stl_vector.h ****       {
1231:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
1232:/usr/include/c++/7/bits/stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1233:/usr/include/c++/7/bits/stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1234:/usr/include/c++/7/bits/stl_vector.h **** #endif
1235:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1236:/usr/include/c++/7/bits/stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1237:/usr/include/c++/7/bits/stl_vector.h **** 				  __x._M_get_Tp_allocator());
1238:/usr/include/c++/7/bits/stl_vector.h ****       }
1239:/usr/include/c++/7/bits/stl_vector.h **** 
1240:/usr/include/c++/7/bits/stl_vector.h ****       /**
1241:/usr/include/c++/7/bits/stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1242:/usr/include/c++/7/bits/stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1243:/usr/include/c++/7/bits/stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1244:/usr/include/c++/7/bits/stl_vector.h ****        *  the user's responsibility.
1245:/usr/include/c++/7/bits/stl_vector.h ****        */
1246:/usr/include/c++/7/bits/stl_vector.h ****       void
1247:/usr/include/c++/7/bits/stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1248:/usr/include/c++/7/bits/stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1249:/usr/include/c++/7/bits/stl_vector.h **** 
1250:/usr/include/c++/7/bits/stl_vector.h ****     protected:
1251:/usr/include/c++/7/bits/stl_vector.h ****       /**
1252:/usr/include/c++/7/bits/stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1253:/usr/include/c++/7/bits/stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1254:/usr/include/c++/7/bits/stl_vector.h ****        */
1255:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _ForwardIterator>
1256:/usr/include/c++/7/bits/stl_vector.h **** 	pointer
1257:/usr/include/c++/7/bits/stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1258:/usr/include/c++/7/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1259:/usr/include/c++/7/bits/stl_vector.h **** 	{
1260:/usr/include/c++/7/bits/stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1261:/usr/include/c++/7/bits/stl_vector.h **** 	  __try
1262:/usr/include/c++/7/bits/stl_vector.h **** 	    {
1263:/usr/include/c++/7/bits/stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1264:/usr/include/c++/7/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
1265:/usr/include/c++/7/bits/stl_vector.h **** 	      return __result;
1266:/usr/include/c++/7/bits/stl_vector.h **** 	    }
1267:/usr/include/c++/7/bits/stl_vector.h **** 	  __catch(...)
1268:/usr/include/c++/7/bits/stl_vector.h **** 	    {
1269:/usr/include/c++/7/bits/stl_vector.h **** 	      _M_deallocate(__result, __n);
1270:/usr/include/c++/7/bits/stl_vector.h **** 	      __throw_exception_again;
1271:/usr/include/c++/7/bits/stl_vector.h **** 	    }
1272:/usr/include/c++/7/bits/stl_vector.h **** 	}
1273:/usr/include/c++/7/bits/stl_vector.h **** 
1274:/usr/include/c++/7/bits/stl_vector.h **** 
1275:/usr/include/c++/7/bits/stl_vector.h ****       // Internal constructor functions follow.
1276:/usr/include/c++/7/bits/stl_vector.h **** 
1277:/usr/include/c++/7/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1278:/usr/include/c++/7/bits/stl_vector.h **** 
1279:/usr/include/c++/7/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1280:/usr/include/c++/7/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1281:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _Integer>
1282:/usr/include/c++/7/bits/stl_vector.h **** 	void
1283:/usr/include/c++/7/bits/stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1284:/usr/include/c++/7/bits/stl_vector.h **** 	{
1285:/usr/include/c++/7/bits/stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));
1286:/usr/include/c++/7/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1287:/usr/include/c++/7/bits/stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1288:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1289:/usr/include/c++/7/bits/stl_vector.h **** 	}
1290:/usr/include/c++/7/bits/stl_vector.h **** 
1291:/usr/include/c++/7/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1292:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator>
1293:/usr/include/c++/7/bits/stl_vector.h **** 	void
1294:/usr/include/c++/7/bits/stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1295:/usr/include/c++/7/bits/stl_vector.h **** 			       __false_type)
1296:/usr/include/c++/7/bits/stl_vector.h **** 	{
1297:/usr/include/c++/7/bits/stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1298:/usr/include/c++/7/bits/stl_vector.h **** 	    iterator_category _IterCategory;
1299:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1300:/usr/include/c++/7/bits/stl_vector.h **** 	}
1301:/usr/include/c++/7/bits/stl_vector.h **** 
1302:/usr/include/c++/7/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1303:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator>
1304:/usr/include/c++/7/bits/stl_vector.h **** 	void
1305:/usr/include/c++/7/bits/stl_vector.h **** 	_M_range_initialize(_InputIterator __first,
1306:/usr/include/c++/7/bits/stl_vector.h **** 			    _InputIterator __last, std::input_iterator_tag)
1307:/usr/include/c++/7/bits/stl_vector.h **** 	{
1308:/usr/include/c++/7/bits/stl_vector.h **** 	  for (; __first != __last; ++__first)
1309:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
1310:/usr/include/c++/7/bits/stl_vector.h **** 	    emplace_back(*__first);
1311:/usr/include/c++/7/bits/stl_vector.h **** #else
1312:/usr/include/c++/7/bits/stl_vector.h **** 	    push_back(*__first);
1313:/usr/include/c++/7/bits/stl_vector.h **** #endif
1314:/usr/include/c++/7/bits/stl_vector.h **** 	}
1315:/usr/include/c++/7/bits/stl_vector.h **** 
1316:/usr/include/c++/7/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1317:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _ForwardIterator>
1318:/usr/include/c++/7/bits/stl_vector.h **** 	void
1319:/usr/include/c++/7/bits/stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first,
1320:/usr/include/c++/7/bits/stl_vector.h **** 			    _ForwardIterator __last, std::forward_iterator_tag)
1321:/usr/include/c++/7/bits/stl_vector.h **** 	{
1322:/usr/include/c++/7/bits/stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1323:/usr/include/c++/7/bits/stl_vector.h **** 	  this->_M_impl._M_start = this->_M_allocate(__n);
1324:/usr/include/c++/7/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1325:/usr/include/c++/7/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
1326:/usr/include/c++/7/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1327:/usr/include/c++/7/bits/stl_vector.h **** 					this->_M_impl._M_start,
1328:/usr/include/c++/7/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1329:/usr/include/c++/7/bits/stl_vector.h **** 	}
1330:/usr/include/c++/7/bits/stl_vector.h **** 
1331:/usr/include/c++/7/bits/stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1332:/usr/include/c++/7/bits/stl_vector.h ****       // vector(n,value,a) constructor.
1333:/usr/include/c++/7/bits/stl_vector.h ****       void
1334:/usr/include/c++/7/bits/stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
 6768              		.loc 7 1334 0
 6769              		.cfi_startproc
 6770 0000 55       		pushq	%rbp
 6771              		.cfi_def_cfa_offset 16
 6772              		.cfi_offset 6, -16
 6773 0001 4889E5   		movq	%rsp, %rbp
 6774              		.cfi_def_cfa_register 6
 6775 0004 4883EC20 		subq	$32, %rsp
 6776 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6777 000c 488975F0 		movq	%rsi, -16(%rbp)
 6778 0010 488955E8 		movq	%rdx, -24(%rbp)
1335:/usr/include/c++/7/bits/stl_vector.h ****       {
1336:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish =
1337:/usr/include/c++/7/bits/stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1338:/usr/include/c++/7/bits/stl_vector.h **** 					_M_get_Tp_allocator());
 6779              		.loc 7 1338 0
 6780 0014 488B45F8 		movq	-8(%rbp), %rax
 6781 0018 4889C7   		movq	%rax, %rdi
 6782 001b E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
 6782      00
 6783 0020 4889C1   		movq	%rax, %rcx
1337:/usr/include/c++/7/bits/stl_vector.h **** 					_M_get_Tp_allocator());
 6784              		.loc 7 1337 0
 6785 0023 488B45F8 		movq	-8(%rbp), %rax
 6786 0027 488B00   		movq	(%rax), %rax
 6787 002a 488B55E8 		movq	-24(%rbp), %rdx
 6788 002e 488B75F0 		movq	-16(%rbp), %rsi
 6789 0032 4889C7   		movq	%rax, %rdi
 6790 0035 E8000000 		call	_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E
 6790      00
 6791 003a 4889C2   		movq	%rax, %rdx
1336:/usr/include/c++/7/bits/stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
 6792              		.loc 7 1336 0
 6793 003d 488B45F8 		movq	-8(%rbp), %rax
 6794 0041 48895008 		movq	%rdx, 8(%rax)
1339:/usr/include/c++/7/bits/stl_vector.h ****       }
 6795              		.loc 7 1339 0
 6796 0045 90       		nop
 6797 0046 C9       		leave
 6798              		.cfi_def_cfa 7, 8
 6799 0047 C3       		ret
 6800              		.cfi_endproc
 6801              	.LFE1549:
 6803              		.section	.text._ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_b
 6804              		.align 2
 6805              		.weak	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
 6807              	_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv:
 6808              	.LFB1550:
 115:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 6809              		.loc 7 115 0
 6810              		.cfi_startproc
 6811 0000 55       		pushq	%rbp
 6812              		.cfi_def_cfa_offset 16
 6813              		.cfi_offset 6, -16
 6814 0001 4889E5   		movq	%rsp, %rbp
 6815              		.cfi_def_cfa_register 6
 6816 0004 48897DF8 		movq	%rdi, -8(%rbp)
 116:/usr/include/c++/7/bits/stl_vector.h **** 
 6817              		.loc 7 116 0
 6818 0008 488B45F8 		movq	-8(%rbp), %rax
 6819 000c 5D       		popq	%rbp
 6820              		.cfi_def_cfa 7, 8
 6821 000d C3       		ret
 6822              		.cfi_endproc
 6823              	.LFE1550:
 6825              		.section	.text._ZSt8_DestroyIPffEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPffEvT_S1_RSaIT0_E,c
 6826              		.weak	_ZSt8_DestroyIPffEvT_S1_RSaIT0_E
 6828              	_ZSt8_DestroyIPffEvT_S1_RSaIT0_E:
 6829              	.LFB1551:
 6830              		.file 10 "/usr/include/c++/7/bits/stl_construct.h"
   1:/usr/include/c++/7/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/7/bits/stl_construct.h **** 
   3:/usr/include/c++/7/bits/stl_construct.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/stl_construct.h **** //
   5:/usr/include/c++/7/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/7/bits/stl_construct.h **** 
  11:/usr/include/c++/7/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/stl_construct.h **** 
  16:/usr/include/c++/7/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/stl_construct.h **** 
  20:/usr/include/c++/7/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/stl_construct.h **** 
  25:/usr/include/c++/7/bits/stl_construct.h **** /*
  26:/usr/include/c++/7/bits/stl_construct.h ****  *
  27:/usr/include/c++/7/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/7/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/7/bits/stl_construct.h ****  *
  30:/usr/include/c++/7/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/7/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/7/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/7/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/7/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/7/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/7/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/7/bits/stl_construct.h ****  *
  38:/usr/include/c++/7/bits/stl_construct.h ****  *
  39:/usr/include/c++/7/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/7/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/7/bits/stl_construct.h ****  *
  42:/usr/include/c++/7/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/7/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/7/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/7/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/7/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/7/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/7/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/7/bits/stl_construct.h ****  */
  50:/usr/include/c++/7/bits/stl_construct.h **** 
  51:/usr/include/c++/7/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/7/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/7/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/7/bits/stl_construct.h ****  */
  55:/usr/include/c++/7/bits/stl_construct.h **** 
  56:/usr/include/c++/7/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/7/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/7/bits/stl_construct.h **** 
  59:/usr/include/c++/7/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/7/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/7/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/7/bits/stl_construct.h **** 
  63:/usr/include/c++/7/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/7/bits/stl_construct.h **** {
  65:/usr/include/c++/7/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/7/bits/stl_construct.h **** 
  67:/usr/include/c++/7/bits/stl_construct.h ****   /**
  68:/usr/include/c++/7/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/7/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/7/bits/stl_construct.h ****    */
  71:/usr/include/c++/7/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/7/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/7/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/7/bits/stl_construct.h **** #else
  77:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/7/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/7/bits/stl_construct.h ****     {
  81:/usr/include/c++/7/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/7/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/7/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/7/bits/stl_construct.h ****     }
  85:/usr/include/c++/7/bits/stl_construct.h **** #endif
  86:/usr/include/c++/7/bits/stl_construct.h **** 
  87:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _T1>
  88:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  89:/usr/include/c++/7/bits/stl_construct.h ****     _Construct_novalue(_T1* __p)
  90:/usr/include/c++/7/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
  91:/usr/include/c++/7/bits/stl_construct.h **** 
  92:/usr/include/c++/7/bits/stl_construct.h ****   /**
  93:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  94:/usr/include/c++/7/bits/stl_construct.h ****    */
  95:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _Tp>
  96:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  97:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  98:/usr/include/c++/7/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  99:/usr/include/c++/7/bits/stl_construct.h **** 
 100:/usr/include/c++/7/bits/stl_construct.h ****   template<bool>
 101:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_aux
 102:/usr/include/c++/7/bits/stl_construct.h ****     {
 103:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator>
 104:/usr/include/c++/7/bits/stl_construct.h ****         static void
 105:/usr/include/c++/7/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 106:/usr/include/c++/7/bits/stl_construct.h **** 	{
 107:/usr/include/c++/7/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 108:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 109:/usr/include/c++/7/bits/stl_construct.h **** 	}
 110:/usr/include/c++/7/bits/stl_construct.h ****     };
 111:/usr/include/c++/7/bits/stl_construct.h **** 
 112:/usr/include/c++/7/bits/stl_construct.h ****   template<>
 113:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_aux<true>
 114:/usr/include/c++/7/bits/stl_construct.h ****     {
 115:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator>
 116:/usr/include/c++/7/bits/stl_construct.h ****         static void
 117:/usr/include/c++/7/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 118:/usr/include/c++/7/bits/stl_construct.h ****     };
 119:/usr/include/c++/7/bits/stl_construct.h **** 
 120:/usr/include/c++/7/bits/stl_construct.h ****   /**
 121:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 122:/usr/include/c++/7/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 123:/usr/include/c++/7/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 124:/usr/include/c++/7/bits/stl_construct.h ****    */
 125:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator>
 126:/usr/include/c++/7/bits/stl_construct.h ****     inline void
 127:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 128:/usr/include/c++/7/bits/stl_construct.h ****     {
 129:/usr/include/c++/7/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 130:/usr/include/c++/7/bits/stl_construct.h ****                        _Value_type;
 131:/usr/include/c++/7/bits/stl_construct.h **** #if __cplusplus >= 201103L
 132:/usr/include/c++/7/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 133:/usr/include/c++/7/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 134:/usr/include/c++/7/bits/stl_construct.h **** 		    "value type is destructible");
 135:/usr/include/c++/7/bits/stl_construct.h **** #endif
 136:/usr/include/c++/7/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 137:/usr/include/c++/7/bits/stl_construct.h **** 	__destroy(__first, __last);
 138:/usr/include/c++/7/bits/stl_construct.h ****     }
 139:/usr/include/c++/7/bits/stl_construct.h **** 
 140:/usr/include/c++/7/bits/stl_construct.h ****   template<bool>
 141:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_n_aux
 142:/usr/include/c++/7/bits/stl_construct.h ****     {
 143:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 144:/usr/include/c++/7/bits/stl_construct.h ****         static _ForwardIterator
 145:/usr/include/c++/7/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 146:/usr/include/c++/7/bits/stl_construct.h **** 	{
 147:/usr/include/c++/7/bits/stl_construct.h **** 	  for (; __count > 0; (void)++__first, --__count)
 148:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 149:/usr/include/c++/7/bits/stl_construct.h **** 	  return __first;
 150:/usr/include/c++/7/bits/stl_construct.h **** 	}
 151:/usr/include/c++/7/bits/stl_construct.h ****     };
 152:/usr/include/c++/7/bits/stl_construct.h **** 
 153:/usr/include/c++/7/bits/stl_construct.h ****   template<>
 154:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_n_aux<true>
 155:/usr/include/c++/7/bits/stl_construct.h ****     {
 156:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 157:/usr/include/c++/7/bits/stl_construct.h ****         static _ForwardIterator
 158:/usr/include/c++/7/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 159:/usr/include/c++/7/bits/stl_construct.h **** 	{
 160:/usr/include/c++/7/bits/stl_construct.h **** 	  std::advance(__first, __count);
 161:/usr/include/c++/7/bits/stl_construct.h **** 	  return __first;
 162:/usr/include/c++/7/bits/stl_construct.h **** 	}
 163:/usr/include/c++/7/bits/stl_construct.h ****     };
 164:/usr/include/c++/7/bits/stl_construct.h **** 
 165:/usr/include/c++/7/bits/stl_construct.h ****   /**
 166:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 167:/usr/include/c++/7/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 168:/usr/include/c++/7/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 169:/usr/include/c++/7/bits/stl_construct.h ****    */
 170:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Size>
 171:/usr/include/c++/7/bits/stl_construct.h ****     inline _ForwardIterator
 172:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy_n(_ForwardIterator __first, _Size __count)
 173:/usr/include/c++/7/bits/stl_construct.h ****     {
 174:/usr/include/c++/7/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 175:/usr/include/c++/7/bits/stl_construct.h ****                        _Value_type;
 176:/usr/include/c++/7/bits/stl_construct.h **** #if __cplusplus >= 201103L
 177:/usr/include/c++/7/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 178:/usr/include/c++/7/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 179:/usr/include/c++/7/bits/stl_construct.h **** 		    "value type is destructible");
 180:/usr/include/c++/7/bits/stl_construct.h **** #endif
 181:/usr/include/c++/7/bits/stl_construct.h ****       return std::_Destroy_n_aux<__has_trivial_destructor(_Value_type)>::
 182:/usr/include/c++/7/bits/stl_construct.h **** 	__destroy_n(__first, __count);
 183:/usr/include/c++/7/bits/stl_construct.h ****     }
 184:/usr/include/c++/7/bits/stl_construct.h **** 
 185:/usr/include/c++/7/bits/stl_construct.h ****   /**
 186:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 187:/usr/include/c++/7/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 188:/usr/include/c++/7/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 189:/usr/include/c++/7/bits/stl_construct.h ****    */
 190:/usr/include/c++/7/bits/stl_construct.h **** 
 191:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 192:/usr/include/c++/7/bits/stl_construct.h ****     void
 193:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 194:/usr/include/c++/7/bits/stl_construct.h **** 	     _Allocator& __alloc)
 195:/usr/include/c++/7/bits/stl_construct.h ****     {
 196:/usr/include/c++/7/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 197:/usr/include/c++/7/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 198:/usr/include/c++/7/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 199:/usr/include/c++/7/bits/stl_construct.h ****     }
 200:/usr/include/c++/7/bits/stl_construct.h **** 
 201:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 202:/usr/include/c++/7/bits/stl_construct.h ****     inline void
 203:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 6831              		.loc 10 203 0
 6832              		.cfi_startproc
 6833 0000 55       		pushq	%rbp
 6834              		.cfi_def_cfa_offset 16
 6835              		.cfi_offset 6, -16
 6836 0001 4889E5   		movq	%rsp, %rbp
 6837              		.cfi_def_cfa_register 6
 6838 0004 4883EC20 		subq	$32, %rsp
 6839 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6840 000c 488975F0 		movq	%rsi, -16(%rbp)
 6841 0010 488955E8 		movq	%rdx, -24(%rbp)
 204:/usr/include/c++/7/bits/stl_construct.h **** 	     allocator<_Tp>&)
 205:/usr/include/c++/7/bits/stl_construct.h ****     {
 206:/usr/include/c++/7/bits/stl_construct.h ****       _Destroy(__first, __last);
 6842              		.loc 10 206 0
 6843 0014 488B55F0 		movq	-16(%rbp), %rdx
 6844 0018 488B45F8 		movq	-8(%rbp), %rax
 6845 001c 4889D6   		movq	%rdx, %rsi
 6846 001f 4889C7   		movq	%rax, %rdi
 6847 0022 E8000000 		call	_ZSt8_DestroyIPfEvT_S1_
 6847      00
 207:/usr/include/c++/7/bits/stl_construct.h ****     }
 6848              		.loc 10 207 0
 6849 0027 90       		nop
 6850 0028 C9       		leave
 6851              		.cfi_def_cfa 7, 8
 6852 0029 C3       		ret
 6853              		.cfi_endproc
 6854              	.LFE1551:
 6856              		.section	.text._ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_,"axG",@progbits
 6857              		.weak	_ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_
 6859              	_ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_:
 6860              	.LFB1552:
  87:../Checks.h   **** {
 6861              		.loc 5 87 0
 6862              		.cfi_startproc
 6863 0000 55       		pushq	%rbp
 6864              		.cfi_def_cfa_offset 16
 6865              		.cfi_offset 6, -16
 6866 0001 4889E5   		movq	%rsp, %rbp
 6867              		.cfi_def_cfa_register 6
 6868 0004 53       		pushq	%rbx
 6869 0005 4883EC38 		subq	$56, %rsp
 6870              		.cfi_offset 3, -24
 6871 0009 48897DD8 		movq	%rdi, -40(%rbp)
 6872 000d 488975D0 		movq	%rsi, -48(%rbp)
 6873 0011 8955CC   		movl	%edx, -52(%rbp)
 6874 0014 48894DC0 		movq	%rcx, -64(%rbp)
  89:../Checks.h   ****     for (int i = 0; i < count; ++i)
 6875              		.loc 5 89 0
 6876 0018 C645EB01 		movb	$1, -21(%rbp)
 6877              	.LBB111:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6878              		.loc 5 90 0
 6879 001c C745EC00 		movl	$0, -20(%rbp)
 6879      000000
 6880              	.L366:
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6881              		.loc 5 90 0 is_stmt 0 discriminator 3
 6882 0023 8B45EC   		movl	-20(%rbp), %eax
 6883 0026 3B45CC   		cmpl	-52(%rbp), %eax
 6884 0029 7D59     		jge	.L365
  91:../Checks.h   ****     return equal;
 6885              		.loc 5 91 0 is_stmt 1 discriminator 2
 6886 002b 8B45EC   		movl	-20(%rbp), %eax
 6887 002e 4863D0   		movslq	%eax, %rdx
 6888 0031 488B45D0 		movq	-48(%rbp), %rax
 6889 0035 4889D6   		movq	%rdx, %rsi
 6890 0038 4889C7   		movq	%rax, %rdi
 6891 003b E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 6891      00
 6892 0040 4889C3   		movq	%rax, %rbx
 6893 0043 8B45EC   		movl	-20(%rbp), %eax
 6894 0046 4863D0   		movslq	%eax, %rdx
 6895 0049 488B45D8 		movq	-40(%rbp), %rax
 6896 004d 4889D6   		movq	%rdx, %rsi
 6897 0050 4889C7   		movq	%rax, %rdi
 6898 0053 E8000000 		call	_ZNKSt6vectorIfSaIfEEixEm
 6898      00
 6899 0058 4889C1   		movq	%rax, %rcx
 6900 005b 488B45C0 		movq	-64(%rbp), %rax
 6901 005f 4889C2   		movq	%rax, %rdx
 6902 0062 4889DE   		movq	%rbx, %rsi
 6903 0065 4889CF   		movq	%rcx, %rdi
 6904 0068 E8000000 		call	_ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
 6904      00
 6905 006d 0FB655EB 		movzbl	-21(%rbp), %edx
 6906 0071 0FB6C0   		movzbl	%al, %eax
 6907 0074 21D0     		andl	%edx, %eax
 6908 0076 85C0     		testl	%eax, %eax
 6909 0078 0F95C0   		setne	%al
 6910 007b 8845EB   		movb	%al, -21(%rbp)
  90:../Checks.h   ****         equal &= AreClose(expected[i], actual[i], tolerance);
 6911              		.loc 5 90 0 discriminator 2
 6912 007e 8345EC01 		addl	$1, -20(%rbp)
 6913 0082 EB9F     		jmp	.L366
 6914              	.L365:
 6915              	.LBE111:
  92:../Checks.h   **** }
 6916              		.loc 5 92 0
 6917 0084 0FB645EB 		movzbl	-21(%rbp), %eax
  93:../Checks.h   **** 
 6918              		.loc 5 93 0
 6919 0088 4883C438 		addq	$56, %rsp
 6920 008c 5B       		popq	%rbx
 6921 008d 5D       		popq	%rbp
 6922              		.cfi_def_cfa 7, 8
 6923 008e C3       		ret
 6924              		.cfi_endproc
 6925              	.LFE1552:
 6927              		.section	.text._ZNKSt6vectorIfSaIfEEixEm,"axG",@progbits,_ZNKSt6vectorIfSaIfEEixEm,comdat
 6928              		.align 2
 6929              		.weak	_ZNKSt6vectorIfSaIfEEixEm
 6931              	_ZNKSt6vectorIfSaIfEEixEm:
 6932              	.LFB1553:
 813:/usr/include/c++/7/bits/stl_vector.h ****       {
 6933              		.loc 7 813 0
 6934              		.cfi_startproc
 6935 0000 55       		pushq	%rbp
 6936              		.cfi_def_cfa_offset 16
 6937              		.cfi_offset 6, -16
 6938 0001 4889E5   		movq	%rsp, %rbp
 6939              		.cfi_def_cfa_register 6
 6940 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6941 0008 488975F0 		movq	%rsi, -16(%rbp)
 816:/usr/include/c++/7/bits/stl_vector.h ****       }
 6942              		.loc 7 816 0
 6943 000c 488B45F8 		movq	-8(%rbp), %rax
 6944 0010 488B00   		movq	(%rax), %rax
 6945 0013 488B55F0 		movq	-16(%rbp), %rdx
 6946 0017 48C1E202 		salq	$2, %rdx
 6947 001b 4801D0   		addq	%rdx, %rax
 817:/usr/include/c++/7/bits/stl_vector.h **** 
 6948              		.loc 7 817 0
 6949 001e 5D       		popq	%rbp
 6950              		.cfi_def_cfa 7, 8
 6951 001f C3       		ret
 6952              		.cfi_endproc
 6953              	.LFE1553:
 6955              		.section	.text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_,"axG",@progbits,_ZNSt12_Vector_ba
 6956              		.align 2
 6957              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_
 6959              	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_:
 6960              	.LFB1572:
  92:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
 6961              		.loc 7 92 0
 6962              		.cfi_startproc
 6963 0000 55       		pushq	%rbp
 6964              		.cfi_def_cfa_offset 16
 6965              		.cfi_offset 6, -16
 6966 0001 4889E5   		movq	%rsp, %rbp
 6967              		.cfi_def_cfa_register 6
 6968 0004 4883EC10 		subq	$16, %rsp
 6969 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6970 000c 488975F0 		movq	%rsi, -16(%rbp)
 6971              	.LBB112:
  93:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
 6972              		.loc 7 93 0
 6973 0010 488B55F0 		movq	-16(%rbp), %rdx
 6974 0014 488B45F8 		movq	-8(%rbp), %rax
 6975 0018 4889D6   		movq	%rdx, %rsi
 6976 001b 4889C7   		movq	%rax, %rdi
 6977 001e E8000000 		call	_ZNSaIfEC2ERKS_
 6977      00
 6978 0023 488B45F8 		movq	-8(%rbp), %rax
 6979 0027 48C70000 		movq	$0, (%rax)
 6979      000000
 6980 002e 488B45F8 		movq	-8(%rbp), %rax
 6981 0032 48C74008 		movq	$0, 8(%rax)
 6981      00000000 
 6982 003a 488B45F8 		movq	-8(%rbp), %rax
 6983 003e 48C74010 		movq	$0, 16(%rax)
 6983      00000000 
 6984              	.LBE112:
  94:/usr/include/c++/7/bits/stl_vector.h **** 
 6985              		.loc 7 94 0
 6986 0046 90       		nop
 6987 0047 C9       		leave
 6988              		.cfi_def_cfa 7, 8
 6989 0048 C3       		ret
 6990              		.cfi_endproc
 6991              	.LFE1572:
 6993              		.weak	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_
 6994              		.set	_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_,_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2
 6995              		.section	.text._ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm,"axG",@progbits,_ZNSt12_Vector_bas
 6996              		.align 2
 6997              		.weak	_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm
 6999              	_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm:
 7000              	.LFB1574:
 185:/usr/include/c++/7/bits/stl_vector.h ****       {
 7001              		.loc 7 185 0
 7002              		.cfi_startproc
 7003 0000 55       		pushq	%rbp
 7004              		.cfi_def_cfa_offset 16
 7005              		.cfi_offset 6, -16
 7006 0001 4889E5   		movq	%rsp, %rbp
 7007              		.cfi_def_cfa_register 6
 7008 0004 4883EC10 		subq	$16, %rsp
 7009 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7010 000c 488975F0 		movq	%rsi, -16(%rbp)
 187:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 7011              		.loc 7 187 0
 7012 0010 488B55F0 		movq	-16(%rbp), %rdx
 7013 0014 488B45F8 		movq	-8(%rbp), %rax
 7014 0018 4889D6   		movq	%rdx, %rsi
 7015 001b 4889C7   		movq	%rax, %rdi
 7016 001e E8000000 		call	_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm
 7016      00
 7017 0023 4889C2   		movq	%rax, %rdx
 7018 0026 488B45F8 		movq	-8(%rbp), %rax
 7019 002a 488910   		movq	%rdx, (%rax)
 188:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 7020              		.loc 7 188 0
 7021 002d 488B45F8 		movq	-8(%rbp), %rax
 7022 0031 488B10   		movq	(%rax), %rdx
 7023 0034 488B45F8 		movq	-8(%rbp), %rax
 7024 0038 48895008 		movq	%rdx, 8(%rax)
 189:/usr/include/c++/7/bits/stl_vector.h ****       }
 7025              		.loc 7 189 0
 7026 003c 488B45F8 		movq	-8(%rbp), %rax
 7027 0040 488B00   		movq	(%rax), %rax
 7028 0043 488B55F0 		movq	-16(%rbp), %rdx
 7029 0047 48C1E202 		salq	$2, %rdx
 7030 004b 4801C2   		addq	%rax, %rdx
 7031 004e 488B45F8 		movq	-8(%rbp), %rax
 7032 0052 48895010 		movq	%rdx, 16(%rax)
 190:/usr/include/c++/7/bits/stl_vector.h ****     };
 7033              		.loc 7 190 0
 7034 0056 90       		nop
 7035 0057 C9       		leave
 7036              		.cfi_def_cfa 7, 8
 7037 0058 C3       		ret
 7038              		.cfi_endproc
 7039              	.LFE1574:
 7041              		.section	.text._ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm,"axG",@progbits,_ZNSt12_Vector_baseI
 7042              		.align 2
 7043              		.weak	_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm
 7045              	_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm:
 7046              	.LFB1575:
 176:/usr/include/c++/7/bits/stl_vector.h ****       {
 7047              		.loc 7 176 0
 7048              		.cfi_startproc
 7049 0000 55       		pushq	%rbp
 7050              		.cfi_def_cfa_offset 16
 7051              		.cfi_offset 6, -16
 7052 0001 4889E5   		movq	%rsp, %rbp
 7053              		.cfi_def_cfa_register 6
 7054 0004 4883EC20 		subq	$32, %rsp
 7055 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7056 000c 488975F0 		movq	%rsi, -16(%rbp)
 7057 0010 488955E8 		movq	%rdx, -24(%rbp)
 179:/usr/include/c++/7/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 7058              		.loc 7 179 0
 7059 0014 48837DF0 		cmpq	$0, -16(%rbp)
 7059      00
 7060 0019 7417     		je	.L374
 180:/usr/include/c++/7/bits/stl_vector.h ****       }
 7061              		.loc 7 180 0
 7062 001b 488B45F8 		movq	-8(%rbp), %rax
 7063 001f 488B55E8 		movq	-24(%rbp), %rdx
 7064 0023 488B4DF0 		movq	-16(%rbp), %rcx
 7065 0027 4889CE   		movq	%rcx, %rsi
 7066 002a 4889C7   		movq	%rax, %rdi
 7067 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm
 7067      00
 7068              	.L374:
 181:/usr/include/c++/7/bits/stl_vector.h **** 
 7069              		.loc 7 181 0
 7070 0032 90       		nop
 7071 0033 C9       		leave
 7072              		.cfi_def_cfa 7, 8
 7073 0034 C3       		ret
 7074              		.cfi_endproc
 7075              	.LFE1575:
 7077              		.section	.text._ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E,"axG",@progbits,_ZSt24__
 7078              		.weak	_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E
 7080              	_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E:
 7081              	.LFB1576:
 7082              		.file 11 "/usr/include/c++/7/bits/stl_uninitialized.h"
   1:/usr/include/c++/7/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:/usr/include/c++/7/bits/stl_uninitialized.h **** 
   3:/usr/include/c++/7/bits/stl_uninitialized.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/stl_uninitialized.h **** //
   5:/usr/include/c++/7/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/stl_uninitialized.h **** // any later version.
  10:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  11:/usr/include/c++/7/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  16:/usr/include/c++/7/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  20:/usr/include/c++/7/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  25:/usr/include/c++/7/bits/stl_uninitialized.h **** /*
  26:/usr/include/c++/7/bits/stl_uninitialized.h ****  *
  27:/usr/include/c++/7/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  28:/usr/include/c++/7/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/7/bits/stl_uninitialized.h ****  *
  30:/usr/include/c++/7/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/7/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/7/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/7/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/7/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/7/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/7/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/7/bits/stl_uninitialized.h ****  *
  38:/usr/include/c++/7/bits/stl_uninitialized.h ****  *
  39:/usr/include/c++/7/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/7/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/7/bits/stl_uninitialized.h ****  *
  42:/usr/include/c++/7/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/7/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/7/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/7/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/7/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/7/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/7/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/7/bits/stl_uninitialized.h ****  */
  50:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  51:/usr/include/c++/7/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:/usr/include/c++/7/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/7/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/7/bits/stl_uninitialized.h ****  */
  55:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  56:/usr/include/c++/7/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:/usr/include/c++/7/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  59:/usr/include/c++/7/bits/stl_uninitialized.h **** #if __cplusplus > 201402L
  60:/usr/include/c++/7/bits/stl_uninitialized.h **** #include <utility>
  61:/usr/include/c++/7/bits/stl_uninitialized.h **** #endif
  62:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  63:/usr/include/c++/7/bits/stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:/usr/include/c++/7/bits/stl_uninitialized.h **** #include <type_traits>
  65:/usr/include/c++/7/bits/stl_uninitialized.h **** #endif
  66:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  67:/usr/include/c++/7/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/usr/include/c++/7/bits/stl_uninitialized.h **** {
  69:/usr/include/c++/7/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  71:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  72:/usr/include/c++/7/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  73:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
  74:/usr/include/c++/7/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  75:/usr/include/c++/7/bits/stl_uninitialized.h ****         static _ForwardIterator
  76:/usr/include/c++/7/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  77:/usr/include/c++/7/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  78:/usr/include/c++/7/bits/stl_uninitialized.h ****         {
  79:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  80:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  __try
  81:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    {
  82:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  83:/usr/include/c++/7/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  84:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      return __cur;
  85:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    }
  86:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  __catch(...)
  87:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    {
  88:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  89:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  90:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    }
  91:/usr/include/c++/7/bits/stl_uninitialized.h **** 	}
  92:/usr/include/c++/7/bits/stl_uninitialized.h ****     };
  93:/usr/include/c++/7/bits/stl_uninitialized.h **** 
  94:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<>
  95:/usr/include/c++/7/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  96:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
  97:/usr/include/c++/7/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  98:/usr/include/c++/7/bits/stl_uninitialized.h ****         static _ForwardIterator
  99:/usr/include/c++/7/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 100:/usr/include/c++/7/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 101:/usr/include/c++/7/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 102:/usr/include/c++/7/bits/stl_uninitialized.h ****     };
 103:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 104:/usr/include/c++/7/bits/stl_uninitialized.h ****   /**
 105:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 106:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 107:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 108:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 109:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 110:/usr/include/c++/7/bits/stl_uninitialized.h ****    *
 111:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 112:/usr/include/c++/7/bits/stl_uninitialized.h ****   */
 113:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 114:/usr/include/c++/7/bits/stl_uninitialized.h ****     inline _ForwardIterator
 115:/usr/include/c++/7/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 116:/usr/include/c++/7/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 117:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 118:/usr/include/c++/7/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 119:/usr/include/c++/7/bits/stl_uninitialized.h **** 	_ValueType1;
 120:/usr/include/c++/7/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 121:/usr/include/c++/7/bits/stl_uninitialized.h **** 	_ValueType2;
 122:/usr/include/c++/7/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 123:/usr/include/c++/7/bits/stl_uninitialized.h ****       const bool __assignable = true;
 124:/usr/include/c++/7/bits/stl_uninitialized.h **** #else
 125:/usr/include/c++/7/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 126:/usr/include/c++/7/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 127:/usr/include/c++/7/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 128:/usr/include/c++/7/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 129:/usr/include/c++/7/bits/stl_uninitialized.h **** #endif
 130:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 131:/usr/include/c++/7/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 132:/usr/include/c++/7/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 133:/usr/include/c++/7/bits/stl_uninitialized.h **** 				       && __assignable>::
 134:/usr/include/c++/7/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 135:/usr/include/c++/7/bits/stl_uninitialized.h ****     }
 136:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 137:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 138:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 139:/usr/include/c++/7/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 140:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 141:/usr/include/c++/7/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 142:/usr/include/c++/7/bits/stl_uninitialized.h ****         static void
 143:/usr/include/c++/7/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 144:/usr/include/c++/7/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 145:/usr/include/c++/7/bits/stl_uninitialized.h ****         {
 146:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 147:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  __try
 148:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    {
 149:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 150:/usr/include/c++/7/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 151:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    }
 152:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  __catch(...)
 153:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    {
 154:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 155:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 156:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    }
 157:/usr/include/c++/7/bits/stl_uninitialized.h **** 	}
 158:/usr/include/c++/7/bits/stl_uninitialized.h ****     };
 159:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 160:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<>
 161:/usr/include/c++/7/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 162:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 163:/usr/include/c++/7/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 164:/usr/include/c++/7/bits/stl_uninitialized.h ****         static void
 165:/usr/include/c++/7/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 166:/usr/include/c++/7/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 167:/usr/include/c++/7/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 168:/usr/include/c++/7/bits/stl_uninitialized.h ****     };
 169:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 170:/usr/include/c++/7/bits/stl_uninitialized.h ****   /**
 171:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 172:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 173:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 174:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 175:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @return   Nothing.
 176:/usr/include/c++/7/bits/stl_uninitialized.h ****    *
 177:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 178:/usr/include/c++/7/bits/stl_uninitialized.h ****   */
 179:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 180:/usr/include/c++/7/bits/stl_uninitialized.h ****     inline void
 181:/usr/include/c++/7/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 182:/usr/include/c++/7/bits/stl_uninitialized.h **** 		       const _Tp& __x)
 183:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 184:/usr/include/c++/7/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 185:/usr/include/c++/7/bits/stl_uninitialized.h **** 	_ValueType;
 186:/usr/include/c++/7/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 187:/usr/include/c++/7/bits/stl_uninitialized.h ****       const bool __assignable = true;
 188:/usr/include/c++/7/bits/stl_uninitialized.h **** #else
 189:/usr/include/c++/7/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 190:/usr/include/c++/7/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 191:/usr/include/c++/7/bits/stl_uninitialized.h **** #endif
 192:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 193:/usr/include/c++/7/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 194:/usr/include/c++/7/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 195:/usr/include/c++/7/bits/stl_uninitialized.h ****     }
 196:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 197:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 198:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 199:/usr/include/c++/7/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 200:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 201:/usr/include/c++/7/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 202:/usr/include/c++/7/bits/stl_uninitialized.h ****         static _ForwardIterator
 203:/usr/include/c++/7/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 204:/usr/include/c++/7/bits/stl_uninitialized.h **** 			const _Tp& __x)
 205:/usr/include/c++/7/bits/stl_uninitialized.h ****         {
 206:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 207:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  __try
 208:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    {
 209:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, ++__cur)
 210:/usr/include/c++/7/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 211:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      return __cur;
 212:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    }
 213:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  __catch(...)
 214:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    {
 215:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 216:/usr/include/c++/7/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 217:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    }
 218:/usr/include/c++/7/bits/stl_uninitialized.h **** 	}
 219:/usr/include/c++/7/bits/stl_uninitialized.h ****     };
 220:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 221:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<>
 222:/usr/include/c++/7/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 223:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 224:/usr/include/c++/7/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 225:/usr/include/c++/7/bits/stl_uninitialized.h ****         static _ForwardIterator
 226:/usr/include/c++/7/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 227:/usr/include/c++/7/bits/stl_uninitialized.h **** 			const _Tp& __x)
 228:/usr/include/c++/7/bits/stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 229:/usr/include/c++/7/bits/stl_uninitialized.h ****     };
 230:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 231:/usr/include/c++/7/bits/stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 232:/usr/include/c++/7/bits/stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 233:/usr/include/c++/7/bits/stl_uninitialized.h ****   /**
 234:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 235:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 236:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 237:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 238:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  @return   Nothing.
 239:/usr/include/c++/7/bits/stl_uninitialized.h ****    *
 240:/usr/include/c++/7/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 241:/usr/include/c++/7/bits/stl_uninitialized.h ****   */
 242:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 243:/usr/include/c++/7/bits/stl_uninitialized.h ****     inline _ForwardIterator
 244:/usr/include/c++/7/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 245:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 246:/usr/include/c++/7/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 247:/usr/include/c++/7/bits/stl_uninitialized.h **** 	_ValueType;
 248:/usr/include/c++/7/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 249:/usr/include/c++/7/bits/stl_uninitialized.h ****       const bool __assignable = true;
 250:/usr/include/c++/7/bits/stl_uninitialized.h **** #else
 251:/usr/include/c++/7/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 252:/usr/include/c++/7/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 253:/usr/include/c++/7/bits/stl_uninitialized.h **** #endif
 254:/usr/include/c++/7/bits/stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 255:/usr/include/c++/7/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 256:/usr/include/c++/7/bits/stl_uninitialized.h ****     }
 257:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 258:/usr/include/c++/7/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 259:/usr/include/c++/7/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 260:/usr/include/c++/7/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 261:/usr/include/c++/7/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 262:/usr/include/c++/7/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 263:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 264:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 265:/usr/include/c++/7/bits/stl_uninitialized.h **** 	   typename _Allocator>
 266:/usr/include/c++/7/bits/stl_uninitialized.h ****     _ForwardIterator
 267:/usr/include/c++/7/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 268:/usr/include/c++/7/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 269:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 270:/usr/include/c++/7/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 271:/usr/include/c++/7/bits/stl_uninitialized.h ****       __try
 272:/usr/include/c++/7/bits/stl_uninitialized.h **** 	{
 273:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 274:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 275:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 276:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  return __cur;
 277:/usr/include/c++/7/bits/stl_uninitialized.h **** 	}
 278:/usr/include/c++/7/bits/stl_uninitialized.h ****       __catch(...)
 279:/usr/include/c++/7/bits/stl_uninitialized.h **** 	{
 280:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 281:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 282:/usr/include/c++/7/bits/stl_uninitialized.h **** 	}
 283:/usr/include/c++/7/bits/stl_uninitialized.h ****     }
 284:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 285:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 286:/usr/include/c++/7/bits/stl_uninitialized.h ****     inline _ForwardIterator
 287:/usr/include/c++/7/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 288:/usr/include/c++/7/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 289:/usr/include/c++/7/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 290:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 291:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 292:/usr/include/c++/7/bits/stl_uninitialized.h **** 	   typename _Allocator>
 293:/usr/include/c++/7/bits/stl_uninitialized.h ****     inline _ForwardIterator
 294:/usr/include/c++/7/bits/stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 295:/usr/include/c++/7/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 296:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 297:/usr/include/c++/7/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 298:/usr/include/c++/7/bits/stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 299:/usr/include/c++/7/bits/stl_uninitialized.h **** 					 __result, __alloc);
 300:/usr/include/c++/7/bits/stl_uninitialized.h ****     }
 301:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 302:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 303:/usr/include/c++/7/bits/stl_uninitialized.h **** 	   typename _Allocator>
 304:/usr/include/c++/7/bits/stl_uninitialized.h ****     inline _ForwardIterator
 305:/usr/include/c++/7/bits/stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 306:/usr/include/c++/7/bits/stl_uninitialized.h **** 				       _InputIterator __last,
 307:/usr/include/c++/7/bits/stl_uninitialized.h **** 				       _ForwardIterator __result,
 308:/usr/include/c++/7/bits/stl_uninitialized.h **** 				       _Allocator& __alloc)
 309:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 310:/usr/include/c++/7/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a
 311:/usr/include/c++/7/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 312:/usr/include/c++/7/bits/stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 313:/usr/include/c++/7/bits/stl_uninitialized.h ****     }
 314:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 315:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 316:/usr/include/c++/7/bits/stl_uninitialized.h ****     void
 317:/usr/include/c++/7/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 318:/usr/include/c++/7/bits/stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 319:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 320:/usr/include/c++/7/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 321:/usr/include/c++/7/bits/stl_uninitialized.h ****       __try
 322:/usr/include/c++/7/bits/stl_uninitialized.h **** 	{
 323:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 324:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 325:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 326:/usr/include/c++/7/bits/stl_uninitialized.h **** 	}
 327:/usr/include/c++/7/bits/stl_uninitialized.h ****       __catch(...)
 328:/usr/include/c++/7/bits/stl_uninitialized.h **** 	{
 329:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 330:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 331:/usr/include/c++/7/bits/stl_uninitialized.h **** 	}
 332:/usr/include/c++/7/bits/stl_uninitialized.h ****     }
 333:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 334:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 335:/usr/include/c++/7/bits/stl_uninitialized.h ****     inline void
 336:/usr/include/c++/7/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 337:/usr/include/c++/7/bits/stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 338:/usr/include/c++/7/bits/stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 339:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 340:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 341:/usr/include/c++/7/bits/stl_uninitialized.h **** 	   typename _Allocator>
 342:/usr/include/c++/7/bits/stl_uninitialized.h ****     _ForwardIterator
 343:/usr/include/c++/7/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 344:/usr/include/c++/7/bits/stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 345:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 346:/usr/include/c++/7/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 347:/usr/include/c++/7/bits/stl_uninitialized.h ****       __try
 348:/usr/include/c++/7/bits/stl_uninitialized.h **** 	{
 349:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 350:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, ++__cur)
 351:/usr/include/c++/7/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 352:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  return __cur;
 353:/usr/include/c++/7/bits/stl_uninitialized.h **** 	}
 354:/usr/include/c++/7/bits/stl_uninitialized.h ****       __catch(...)
 355:/usr/include/c++/7/bits/stl_uninitialized.h **** 	{
 356:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 357:/usr/include/c++/7/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 358:/usr/include/c++/7/bits/stl_uninitialized.h **** 	}
 359:/usr/include/c++/7/bits/stl_uninitialized.h ****     }
 360:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 361:/usr/include/c++/7/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 362:/usr/include/c++/7/bits/stl_uninitialized.h **** 	   typename _Tp2>
 363:/usr/include/c++/7/bits/stl_uninitialized.h ****     inline _ForwardIterator
 364:/usr/include/c++/7/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 7083              		.loc 11 364 0
 7084              		.cfi_startproc
 7085 0000 55       		pushq	%rbp
 7086              		.cfi_def_cfa_offset 16
 7087              		.cfi_offset 6, -16
 7088 0001 4889E5   		movq	%rsp, %rbp
 7089              		.cfi_def_cfa_register 6
 7090 0004 4883EC20 		subq	$32, %rsp
 7091 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7092 000c 488975F0 		movq	%rsi, -16(%rbp)
 7093 0010 488955E8 		movq	%rdx, -24(%rbp)
 7094 0014 48894DE0 		movq	%rcx, -32(%rbp)
 365:/usr/include/c++/7/bits/stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 366:/usr/include/c++/7/bits/stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 7095              		.loc 11 366 0
 7096 0018 488B55E8 		movq	-24(%rbp), %rdx
 7097 001c 488B4DF0 		movq	-16(%rbp), %rcx
 7098 0020 488B45F8 		movq	-8(%rbp), %rax
 7099 0024 4889CE   		movq	%rcx, %rsi
 7100 0027 4889C7   		movq	%rax, %rdi
 7101 002a E8000000 		call	_ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_
 7101      00
 7102 002f C9       		leave
 7103              		.cfi_def_cfa 7, 8
 7104 0030 C3       		ret
 7105              		.cfi_endproc
 7106              	.LFE1576:
 7108              		.section	.text._ZSt8_DestroyIPfEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPfEvT_S1_,comdat
 7109              		.weak	_ZSt8_DestroyIPfEvT_S1_
 7111              	_ZSt8_DestroyIPfEvT_S1_:
 7112              	.LFB1577:
 127:/usr/include/c++/7/bits/stl_construct.h ****     {
 7113              		.loc 10 127 0
 7114              		.cfi_startproc
 7115 0000 55       		pushq	%rbp
 7116              		.cfi_def_cfa_offset 16
 7117              		.cfi_offset 6, -16
 7118 0001 4889E5   		movq	%rsp, %rbp
 7119              		.cfi_def_cfa_register 6
 7120 0004 4883EC10 		subq	$16, %rsp
 7121 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7122 000c 488975F0 		movq	%rsi, -16(%rbp)
 137:/usr/include/c++/7/bits/stl_construct.h ****     }
 7123              		.loc 10 137 0
 7124 0010 488B55F0 		movq	-16(%rbp), %rdx
 7125 0014 488B45F8 		movq	-8(%rbp), %rax
 7126 0018 4889D6   		movq	%rdx, %rsi
 7127 001b 4889C7   		movq	%rax, %rdi
 7128 001e E8000000 		call	_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_
 7128      00
 138:/usr/include/c++/7/bits/stl_construct.h **** 
 7129              		.loc 10 138 0
 7130 0023 90       		nop
 7131 0024 C9       		leave
 7132              		.cfi_def_cfa 7, 8
 7133 0025 C3       		ret
 7134              		.cfi_endproc
 7135              	.LFE1577:
 7137              		.section	.text._ZNSaIfEC2ERKS_,"axG",@progbits,_ZNSaIfEC5ERKS_,comdat
 7138              		.align 2
 7139              		.weak	_ZNSaIfEC2ERKS_
 7141              	_ZNSaIfEC2ERKS_:
 7142              	.LFB1586:
 133:/usr/include/c++/7/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7143              		.loc 6 133 0
 7144              		.cfi_startproc
 7145 0000 55       		pushq	%rbp
 7146              		.cfi_def_cfa_offset 16
 7147              		.cfi_offset 6, -16
 7148 0001 4889E5   		movq	%rsp, %rbp
 7149              		.cfi_def_cfa_register 6
 7150 0004 4883EC10 		subq	$16, %rsp
 7151 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7152 000c 488975F0 		movq	%rsi, -16(%rbp)
 7153              	.LBB113:
 134:/usr/include/c++/7/bits/allocator.h **** 
 7154              		.loc 6 134 0
 7155 0010 488B55F0 		movq	-16(%rbp), %rdx
 7156 0014 488B45F8 		movq	-8(%rbp), %rax
 7157 0018 4889D6   		movq	%rdx, %rsi
 7158 001b 4889C7   		movq	%rax, %rdi
 7159 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
 7159      00
 7160              	.LBE113:
 7161 0023 90       		nop
 7162 0024 C9       		leave
 7163              		.cfi_def_cfa 7, 8
 7164 0025 C3       		ret
 7165              		.cfi_endproc
 7166              	.LFE1586:
 7168              		.weak	_ZNSaIfEC1ERKS_
 7169              		.set	_ZNSaIfEC1ERKS_,_ZNSaIfEC2ERKS_
 7170              		.section	.text._ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIfSaI
 7171              		.align 2
 7172              		.weak	_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm
 7174              	_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm:
 7175              	.LFB1588:
 169:/usr/include/c++/7/bits/stl_vector.h ****       {
 7176              		.loc 7 169 0
 7177              		.cfi_startproc
 7178 0000 55       		pushq	%rbp
 7179              		.cfi_def_cfa_offset 16
 7180              		.cfi_offset 6, -16
 7181 0001 4889E5   		movq	%rsp, %rbp
 7182              		.cfi_def_cfa_register 6
 7183 0004 4883EC10 		subq	$16, %rsp
 7184 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7185 000c 488975F0 		movq	%rsi, -16(%rbp)
 172:/usr/include/c++/7/bits/stl_vector.h ****       }
 7186              		.loc 7 172 0
 7187 0010 48837DF0 		cmpq	$0, -16(%rbp)
 7187      00
 7188 0015 7415     		je	.L380
 172:/usr/include/c++/7/bits/stl_vector.h ****       }
 7189              		.loc 7 172 0 is_stmt 0 discriminator 1
 7190 0017 488B45F8 		movq	-8(%rbp), %rax
 7191 001b 488B55F0 		movq	-16(%rbp), %rdx
 7192 001f 4889D6   		movq	%rdx, %rsi
 7193 0022 4889C7   		movq	%rax, %rdi
 7194 0025 E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m
 7194      00
 7195 002a EB05     		jmp	.L382
 7196              	.L380:
 172:/usr/include/c++/7/bits/stl_vector.h ****       }
 7197              		.loc 7 172 0 discriminator 2
 7198 002c B8000000 		movl	$0, %eax
 7198      00
 7199              	.L382:
 173:/usr/include/c++/7/bits/stl_vector.h **** 
 7200              		.loc 7 173 0 is_stmt 1 discriminator 5
 7201 0031 C9       		leave
 7202              		.cfi_def_cfa 7, 8
 7203 0032 C3       		ret
 7204              		.cfi_endproc
 7205              	.LFE1588:
 7207              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm,"axG",@progbits,_ZN9__gnu_
 7208              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm
 7210              	_ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm:
 7211              	.LFB1589:
 7212              		.file 12 "/usr/include/c++/7/ext/alloc_traits.h"
   1:/usr/include/c++/7/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/7/ext/alloc_traits.h **** 
   3:/usr/include/c++/7/ext/alloc_traits.h **** // Copyright (C) 2011-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/ext/alloc_traits.h **** //
   5:/usr/include/c++/7/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/7/ext/alloc_traits.h **** 
  11:/usr/include/c++/7/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/ext/alloc_traits.h **** 
  16:/usr/include/c++/7/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/ext/alloc_traits.h **** 
  20:/usr/include/c++/7/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/ext/alloc_traits.h **** 
  25:/usr/include/c++/7/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/7/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/7/ext/alloc_traits.h ****  */
  28:/usr/include/c++/7/ext/alloc_traits.h **** 
  29:/usr/include/c++/7/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/7/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/7/ext/alloc_traits.h **** 
  32:/usr/include/c++/7/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/7/ext/alloc_traits.h **** 
  34:/usr/include/c++/7/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/7/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/7/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/7/ext/alloc_traits.h **** #else
  38:/usr/include/c++/7/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/7/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/7/ext/alloc_traits.h **** 
  41:/usr/include/c++/7/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/7/ext/alloc_traits.h **** {
  43:/usr/include/c++/7/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/7/ext/alloc_traits.h **** 
  45:/usr/include/c++/7/ext/alloc_traits.h **** /**
  46:/usr/include/c++/7/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  47:/usr/include/c++/7/ext/alloc_traits.h ****  * @ingroup allocators
  48:/usr/include/c++/7/ext/alloc_traits.h **** */
  49:/usr/include/c++/7/ext/alloc_traits.h **** template<typename _Alloc>
  50:/usr/include/c++/7/ext/alloc_traits.h ****   struct __alloc_traits
  51:/usr/include/c++/7/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  52:/usr/include/c++/7/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  53:/usr/include/c++/7/ext/alloc_traits.h **** #endif
  54:/usr/include/c++/7/ext/alloc_traits.h ****   {
  55:/usr/include/c++/7/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
  56:/usr/include/c++/7/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  57:/usr/include/c++/7/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  58:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  59:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  60:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  61:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  62:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  63:/usr/include/c++/7/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  64:/usr/include/c++/7/ext/alloc_traits.h ****     typedef value_type&                             reference;
  65:/usr/include/c++/7/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
  66:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::allocate;
  67:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::deallocate;
  68:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::construct;
  69:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::destroy;
  70:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::max_size;
  71:/usr/include/c++/7/ext/alloc_traits.h **** 
  72:/usr/include/c++/7/ext/alloc_traits.h ****   private:
  73:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Ptr>
  74:/usr/include/c++/7/ext/alloc_traits.h ****       using __is_custom_pointer
  75:/usr/include/c++/7/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  76:/usr/include/c++/7/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  77:/usr/include/c++/7/ext/alloc_traits.h **** 
  78:/usr/include/c++/7/ext/alloc_traits.h ****   public:
  79:/usr/include/c++/7/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
  80:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  81:/usr/include/c++/7/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  82:/usr/include/c++/7/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  83:/usr/include/c++/7/ext/alloc_traits.h ****       {
  84:/usr/include/c++/7/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
  85:/usr/include/c++/7/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  86:/usr/include/c++/7/ext/alloc_traits.h ****       }
  87:/usr/include/c++/7/ext/alloc_traits.h **** 
  88:/usr/include/c++/7/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
  89:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Ptr>
  90:/usr/include/c++/7/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  91:/usr/include/c++/7/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  92:/usr/include/c++/7/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
  93:/usr/include/c++/7/ext/alloc_traits.h **** 
  94:/usr/include/c++/7/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
  95:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
  96:/usr/include/c++/7/ext/alloc_traits.h **** 
  97:/usr/include/c++/7/ext/alloc_traits.h ****     static void _S_on_swap(_Alloc& __a, _Alloc& __b)
  98:/usr/include/c++/7/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
  99:/usr/include/c++/7/ext/alloc_traits.h **** 
 100:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 101:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 102:/usr/include/c++/7/ext/alloc_traits.h **** 
 103:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 104:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 105:/usr/include/c++/7/ext/alloc_traits.h **** 
 106:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 107:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 108:/usr/include/c++/7/ext/alloc_traits.h **** 
 109:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 110:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::is_always_equal::value; }
 111:/usr/include/c++/7/ext/alloc_traits.h **** 
 112:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 113:/usr/include/c++/7/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 114:/usr/include/c++/7/ext/alloc_traits.h **** 
 115:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Tp>
 116:/usr/include/c++/7/ext/alloc_traits.h ****       struct rebind
 117:/usr/include/c++/7/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 118:/usr/include/c++/7/ext/alloc_traits.h **** #else
 119:/usr/include/c++/7/ext/alloc_traits.h **** 
 120:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 121:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 122:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 123:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 124:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 125:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 126:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 127:/usr/include/c++/7/ext/alloc_traits.h **** 
 128:/usr/include/c++/7/ext/alloc_traits.h ****     static pointer
 129:/usr/include/c++/7/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 130:/usr/include/c++/7/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 131:/usr/include/c++/7/ext/alloc_traits.h **** 
 132:/usr/include/c++/7/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 7213              		.loc 12 132 0
 7214              		.cfi_startproc
 7215 0000 55       		pushq	%rbp
 7216              		.cfi_def_cfa_offset 16
 7217              		.cfi_offset 6, -16
 7218 0001 4889E5   		movq	%rsp, %rbp
 7219              		.cfi_def_cfa_register 6
 7220 0004 4883EC20 		subq	$32, %rsp
 7221 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7222 000c 488975F0 		movq	%rsi, -16(%rbp)
 7223 0010 488955E8 		movq	%rdx, -24(%rbp)
 133:/usr/include/c++/7/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 7224              		.loc 12 133 0
 7225 0014 488B55E8 		movq	-24(%rbp), %rdx
 7226 0018 488B4DF0 		movq	-16(%rbp), %rcx
 7227 001c 488B45F8 		movq	-8(%rbp), %rax
 7228 0020 4889CE   		movq	%rcx, %rsi
 7229 0023 4889C7   		movq	%rax, %rdi
 7230 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm
 7230      00
 7231 002b 90       		nop
 7232 002c C9       		leave
 7233              		.cfi_def_cfa 7, 8
 7234 002d C3       		ret
 7235              		.cfi_endproc
 7236              	.LFE1589:
 7238              		.section	.text._ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_,"axG",@progbits,_ZSt20uninitialized_f
 7239              		.weak	_ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_
 7241              	_ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_:
 7242              	.LFB1590:
 244:/usr/include/c++/7/bits/stl_uninitialized.h ****     {
 7243              		.loc 11 244 0
 7244              		.cfi_startproc
 7245 0000 55       		pushq	%rbp
 7246              		.cfi_def_cfa_offset 16
 7247              		.cfi_offset 6, -16
 7248 0001 4889E5   		movq	%rsp, %rbp
 7249              		.cfi_def_cfa_register 6
 7250 0004 4883EC30 		subq	$48, %rsp
 7251 0008 48897DE8 		movq	%rdi, -24(%rbp)
 7252 000c 488975E0 		movq	%rsi, -32(%rbp)
 7253 0010 488955D8 		movq	%rdx, -40(%rbp)
 249:/usr/include/c++/7/bits/stl_uninitialized.h **** #else
 7254              		.loc 11 249 0
 7255 0014 C645FF01 		movb	$1, -1(%rbp)
 255:/usr/include/c++/7/bits/stl_uninitialized.h ****     }
 7256              		.loc 11 255 0
 7257 0018 488B55D8 		movq	-40(%rbp), %rdx
 7258 001c 488B4DE0 		movq	-32(%rbp), %rcx
 7259 0020 488B45E8 		movq	-24(%rbp), %rax
 7260 0024 4889CE   		movq	%rcx, %rsi
 7261 0027 4889C7   		movq	%rax, %rdi
 7262 002a E8000000 		call	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_
 7262      00
 256:/usr/include/c++/7/bits/stl_uninitialized.h **** 
 7263              		.loc 11 256 0
 7264 002f C9       		leave
 7265              		.cfi_def_cfa 7, 8
 7266 0030 C3       		ret
 7267              		.cfi_endproc
 7268              	.LFE1590:
 7270              		.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxI
 7271              		.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_
 7273              	_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_:
 7274              	.LFB1591:
 117:/usr/include/c++/7/bits/stl_construct.h ****     };
 7275              		.loc 10 117 0
 7276              		.cfi_startproc
 7277 0000 55       		pushq	%rbp
 7278              		.cfi_def_cfa_offset 16
 7279              		.cfi_offset 6, -16
 7280 0001 4889E5   		movq	%rsp, %rbp
 7281              		.cfi_def_cfa_register 6
 7282 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7283 0008 488975F0 		movq	%rsi, -16(%rbp)
 117:/usr/include/c++/7/bits/stl_construct.h ****     };
 7284              		.loc 10 117 0
 7285 000c 90       		nop
 7286 000d 5D       		popq	%rbp
 7287              		.cfi_def_cfa 7, 8
 7288 000e C3       		ret
 7289              		.cfi_endproc
 7290              	.LFE1591:
 7292              		.section	.text._ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx13new_allocato
 7293              		.align 2
 7294              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
 7296              	_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_:
 7297              	.LFB1594:
  81:/usr/include/c++/7/ext/new_allocator.h **** 
 7298              		.loc 9 81 0
 7299              		.cfi_startproc
 7300 0000 55       		pushq	%rbp
 7301              		.cfi_def_cfa_offset 16
 7302              		.cfi_offset 6, -16
 7303 0001 4889E5   		movq	%rsp, %rbp
 7304              		.cfi_def_cfa_register 6
 7305 0004 48897DF8 		movq	%rdi, -8(%rbp)
 7306 0008 488975F0 		movq	%rsi, -16(%rbp)
  81:/usr/include/c++/7/ext/new_allocator.h **** 
 7307              		.loc 9 81 0
 7308 000c 90       		nop
 7309 000d 5D       		popq	%rbp
 7310              		.cfi_def_cfa 7, 8
 7311 000e C3       		ret
 7312              		.cfi_endproc
 7313              	.LFE1594:
 7315              		.weak	_ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_
 7316              		.set	_ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_,_ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
 7317              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m,"axG",@progbits,_ZN9__gnu_cxx14
 7318              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m
 7320              	_ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m:
 7321              	.LFB1596:
 129:/usr/include/c++/7/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 7322              		.loc 12 129 0
 7323              		.cfi_startproc
 7324 0000 55       		pushq	%rbp
 7325              		.cfi_def_cfa_offset 16
 7326              		.cfi_offset 6, -16
 7327 0001 4889E5   		movq	%rsp, %rbp
 7328              		.cfi_def_cfa_register 6
 7329 0004 4883EC10 		subq	$16, %rsp
 7330 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7331 000c 488975F0 		movq	%rsi, -16(%rbp)
 130:/usr/include/c++/7/ext/alloc_traits.h **** 
 7332              		.loc 12 130 0
 7333 0010 488B4DF0 		movq	-16(%rbp), %rcx
 7334 0014 488B45F8 		movq	-8(%rbp), %rax
 7335 0018 BA000000 		movl	$0, %edx
 7335      00
 7336 001d 4889CE   		movq	%rcx, %rsi
 7337 0020 4889C7   		movq	%rax, %rdi
 7338 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv
 7338      00
 7339 0028 C9       		leave
 7340              		.cfi_def_cfa 7, 8
 7341 0029 C3       		ret
 7342              		.cfi_endproc
 7343              	.LFE1596:
 7345              		.section	.text._ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm,"axG",@progbits,_ZN9__gnu_cxx13new_
 7346              		.align 2
 7347              		.weak	_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm
 7349              	_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm:
 7350              	.LFB1597:
  87:/usr/include/c++/7/ext/new_allocator.h **** 
  88:/usr/include/c++/7/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/7/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/7/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/7/ext/new_allocator.h **** 
  92:/usr/include/c++/7/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/7/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/7/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/7/ext/new_allocator.h **** 
  96:/usr/include/c++/7/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/7/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/7/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/7/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 100:/usr/include/c++/7/ext/new_allocator.h ****       {
 101:/usr/include/c++/7/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/7/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/7/ext/new_allocator.h **** 
 104:/usr/include/c++/7/ext/new_allocator.h **** #if __cpp_aligned_new
 105:/usr/include/c++/7/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 106:/usr/include/c++/7/ext/new_allocator.h **** 	  {
 107:/usr/include/c++/7/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 108:/usr/include/c++/7/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 109:/usr/include/c++/7/ext/new_allocator.h **** 	  }
 110:/usr/include/c++/7/ext/new_allocator.h **** #endif
 111:/usr/include/c++/7/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 112:/usr/include/c++/7/ext/new_allocator.h ****       }
 113:/usr/include/c++/7/ext/new_allocator.h **** 
 114:/usr/include/c++/7/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 115:/usr/include/c++/7/ext/new_allocator.h ****       void
 116:/usr/include/c++/7/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 7351              		.loc 9 116 0
 7352              		.cfi_startproc
 7353 0000 55       		pushq	%rbp
 7354              		.cfi_def_cfa_offset 16
 7355              		.cfi_offset 6, -16
 7356 0001 4889E5   		movq	%rsp, %rbp
 7357              		.cfi_def_cfa_register 6
 7358 0004 4883EC20 		subq	$32, %rsp
 7359 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7360 000c 488975F0 		movq	%rsi, -16(%rbp)
 7361 0010 488955E8 		movq	%rdx, -24(%rbp)
 117:/usr/include/c++/7/ext/new_allocator.h ****       {
 118:/usr/include/c++/7/ext/new_allocator.h **** #if __cpp_aligned_new
 119:/usr/include/c++/7/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 120:/usr/include/c++/7/ext/new_allocator.h **** 	  {
 121:/usr/include/c++/7/ext/new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 122:/usr/include/c++/7/ext/new_allocator.h **** 	    return;
 123:/usr/include/c++/7/ext/new_allocator.h **** 	  }
 124:/usr/include/c++/7/ext/new_allocator.h **** #endif
 125:/usr/include/c++/7/ext/new_allocator.h **** 	::operator delete(__p);
 7362              		.loc 9 125 0
 7363 0014 488B45F0 		movq	-16(%rbp), %rax
 7364 0018 4889C7   		movq	%rax, %rdi
 7365 001b E8000000 		call	_ZdlPv@PLT
 7365      00
 126:/usr/include/c++/7/ext/new_allocator.h ****       }
 7366              		.loc 9 126 0
 7367 0020 90       		nop
 7368 0021 C9       		leave
 7369              		.cfi_def_cfa 7, 8
 7370 0022 C3       		ret
 7371              		.cfi_endproc
 7372              	.LFE1597:
 7374              		.section	.text._ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_,"axG",@pro
 7375              		.weak	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_
 7377              	_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_:
 7378              	.LFB1598:
 226:/usr/include/c++/7/bits/stl_uninitialized.h **** 			const _Tp& __x)
 7379              		.loc 11 226 0
 7380              		.cfi_startproc
 7381 0000 55       		pushq	%rbp
 7382              		.cfi_def_cfa_offset 16
 7383              		.cfi_offset 6, -16
 7384 0001 4889E5   		movq	%rsp, %rbp
 7385              		.cfi_def_cfa_register 6
 7386 0004 4883EC20 		subq	$32, %rsp
 7387 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7388 000c 488975F0 		movq	%rsi, -16(%rbp)
 7389 0010 488955E8 		movq	%rdx, -24(%rbp)
 228:/usr/include/c++/7/bits/stl_uninitialized.h ****     };
 7390              		.loc 11 228 0
 7391 0014 488B55E8 		movq	-24(%rbp), %rdx
 7392 0018 488B4DF0 		movq	-16(%rbp), %rcx
 7393 001c 488B45F8 		movq	-8(%rbp), %rax
 7394 0020 4889CE   		movq	%rcx, %rsi
 7395 0023 4889C7   		movq	%rax, %rdi
 7396 0026 E8000000 		call	_ZSt6fill_nIPfmfET_S1_T0_RKT1_
 7396      00
 7397 002b C9       		leave
 7398              		.cfi_def_cfa 7, 8
 7399 002c C3       		ret
 7400              		.cfi_endproc
 7401              	.LFE1598:
 7403              		.section	.text._ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_al
 7404              		.align 2
 7405              		.weak	_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv
 7407              	_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv:
 7408              	.LFB1599:
  99:/usr/include/c++/7/ext/new_allocator.h ****       {
 7409              		.loc 9 99 0
 7410              		.cfi_startproc
 7411 0000 55       		pushq	%rbp
 7412              		.cfi_def_cfa_offset 16
 7413              		.cfi_offset 6, -16
 7414 0001 4889E5   		movq	%rsp, %rbp
 7415              		.cfi_def_cfa_register 6
 7416 0004 4883EC20 		subq	$32, %rsp
 7417 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7418 000c 488975F0 		movq	%rsi, -16(%rbp)
 7419 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/7/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 7420              		.loc 9 101 0
 7421 0014 488B45F8 		movq	-8(%rbp), %rax
 7422 0018 4889C7   		movq	%rax, %rdi
 7423 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv
 7423      00
 7424 0020 483945F0 		cmpq	%rax, -16(%rbp)
 7425 0024 0F97C0   		seta	%al
 7426 0027 84C0     		testb	%al, %al
 7427 0029 7405     		je	.L394
 102:/usr/include/c++/7/ext/new_allocator.h **** 
 7428              		.loc 9 102 0
 7429 002b E8000000 		call	_ZSt17__throw_bad_allocv@PLT
 7429      00
 7430              	.L394:
 111:/usr/include/c++/7/ext/new_allocator.h ****       }
 7431              		.loc 9 111 0
 7432 0030 488B45F0 		movq	-16(%rbp), %rax
 7433 0034 48C1E002 		salq	$2, %rax
 7434 0038 4889C7   		movq	%rax, %rdi
 7435 003b E8000000 		call	_Znwm@PLT
 7435      00
 112:/usr/include/c++/7/ext/new_allocator.h **** 
 7436              		.loc 9 112 0
 7437 0040 C9       		leave
 7438              		.cfi_def_cfa 7, 8
 7439 0041 C3       		ret
 7440              		.cfi_endproc
 7441              	.LFE1599:
 7443              		.section	.text._ZSt6fill_nIPfmfET_S1_T0_RKT1_,"axG",@progbits,_ZSt6fill_nIPfmfET_S1_T0_RKT1_,comda
 7444              		.weak	_ZSt6fill_nIPfmfET_S1_T0_RKT1_
 7446              	_ZSt6fill_nIPfmfET_S1_T0_RKT1_:
 7447              	.LFB1600:
 7448              		.file 13 "/usr/include/c++/7/bits/stl_algobase.h"
   1:/usr/include/c++/7/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/c++/7/bits/stl_algobase.h **** 
   3:/usr/include/c++/7/bits/stl_algobase.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/stl_algobase.h **** //
   5:/usr/include/c++/7/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/stl_algobase.h **** // any later version.
  10:/usr/include/c++/7/bits/stl_algobase.h **** 
  11:/usr/include/c++/7/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/stl_algobase.h **** 
  16:/usr/include/c++/7/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/stl_algobase.h **** 
  20:/usr/include/c++/7/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/stl_algobase.h **** 
  25:/usr/include/c++/7/bits/stl_algobase.h **** /*
  26:/usr/include/c++/7/bits/stl_algobase.h ****  *
  27:/usr/include/c++/7/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/c++/7/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/7/bits/stl_algobase.h ****  *
  30:/usr/include/c++/7/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/7/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/7/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/7/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/7/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/7/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/7/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/7/bits/stl_algobase.h ****  *
  38:/usr/include/c++/7/bits/stl_algobase.h ****  *
  39:/usr/include/c++/7/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/7/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/7/bits/stl_algobase.h ****  *
  42:/usr/include/c++/7/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/7/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/7/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/7/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/7/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/7/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/7/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/7/bits/stl_algobase.h ****  */
  50:/usr/include/c++/7/bits/stl_algobase.h **** 
  51:/usr/include/c++/7/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/c++/7/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/7/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/c++/7/bits/stl_algobase.h ****  */
  55:/usr/include/c++/7/bits/stl_algobase.h **** 
  56:/usr/include/c++/7/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/c++/7/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/c++/7/bits/stl_algobase.h **** 
  59:/usr/include/c++/7/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/c++/7/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/7/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/c++/7/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/c++/7/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/c++/7/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/c++/7/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/c++/7/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/c++/7/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/c++/7/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/c++/7/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/c++/7/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/usr/include/c++/7/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/c++/7/bits/stl_algobase.h **** 
  73:/usr/include/c++/7/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/7/bits/stl_algobase.h **** {
  75:/usr/include/c++/7/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/7/bits/stl_algobase.h **** 
  77:/usr/include/c++/7/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/usr/include/c++/7/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/usr/include/c++/7/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/usr/include/c++/7/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/usr/include/c++/7/bits/stl_algobase.h ****     struct __iter_swap
  83:/usr/include/c++/7/bits/stl_algobase.h ****     {
  84:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:/usr/include/c++/7/bits/stl_algobase.h ****         static void
  86:/usr/include/c++/7/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/usr/include/c++/7/bits/stl_algobase.h ****         {
  88:/usr/include/c++/7/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/usr/include/c++/7/bits/stl_algobase.h ****             _ValueType1;
  90:/usr/include/c++/7/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/usr/include/c++/7/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/usr/include/c++/7/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/usr/include/c++/7/bits/stl_algobase.h **** 	}
  94:/usr/include/c++/7/bits/stl_algobase.h ****     };
  95:/usr/include/c++/7/bits/stl_algobase.h **** 
  96:/usr/include/c++/7/bits/stl_algobase.h ****   template<>
  97:/usr/include/c++/7/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/usr/include/c++/7/bits/stl_algobase.h ****     {
  99:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/usr/include/c++/7/bits/stl_algobase.h ****         static void 
 101:/usr/include/c++/7/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/usr/include/c++/7/bits/stl_algobase.h ****         {
 103:/usr/include/c++/7/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/usr/include/c++/7/bits/stl_algobase.h ****         }
 105:/usr/include/c++/7/bits/stl_algobase.h ****     };
 106:/usr/include/c++/7/bits/stl_algobase.h **** #endif
 107:/usr/include/c++/7/bits/stl_algobase.h **** 
 108:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 109:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/usr/include/c++/7/bits/stl_algobase.h ****    *
 115:/usr/include/c++/7/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/usr/include/c++/7/bits/stl_algobase.h ****    *  iterators themselves.
 117:/usr/include/c++/7/bits/stl_algobase.h ****   */
 118:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/usr/include/c++/7/bits/stl_algobase.h ****     inline void
 120:/usr/include/c++/7/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/usr/include/c++/7/bits/stl_algobase.h ****     {
 122:/usr/include/c++/7/bits/stl_algobase.h ****       // concept requirements
 123:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:/usr/include/c++/7/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/usr/include/c++/7/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 127:/usr/include/c++/7/bits/stl_algobase.h **** 
 128:/usr/include/c++/7/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/usr/include/c++/7/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/usr/include/c++/7/bits/stl_algobase.h **** 	_ValueType1;
 131:/usr/include/c++/7/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/usr/include/c++/7/bits/stl_algobase.h **** 	_ValueType2;
 133:/usr/include/c++/7/bits/stl_algobase.h **** 
 134:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/usr/include/c++/7/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/usr/include/c++/7/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/usr/include/c++/7/bits/stl_algobase.h **** 
 139:/usr/include/c++/7/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/usr/include/c++/7/bits/stl_algobase.h **** 	_ReferenceType1;
 141:/usr/include/c++/7/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:/usr/include/c++/7/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/usr/include/c++/7/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/usr/include/c++/7/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/usr/include/c++/7/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/usr/include/c++/7/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/usr/include/c++/7/bits/stl_algobase.h **** #else
 148:/usr/include/c++/7/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/usr/include/c++/7/bits/stl_algobase.h **** #endif
 150:/usr/include/c++/7/bits/stl_algobase.h ****     }
 151:/usr/include/c++/7/bits/stl_algobase.h **** 
 152:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 153:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/usr/include/c++/7/bits/stl_algobase.h ****    *
 160:/usr/include/c++/7/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/usr/include/c++/7/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/usr/include/c++/7/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/usr/include/c++/7/bits/stl_algobase.h ****   */
 164:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:/usr/include/c++/7/bits/stl_algobase.h ****     _ForwardIterator2
 166:/usr/include/c++/7/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/usr/include/c++/7/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/usr/include/c++/7/bits/stl_algobase.h ****     {
 169:/usr/include/c++/7/bits/stl_algobase.h ****       // concept requirements
 170:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/usr/include/c++/7/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/usr/include/c++/7/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/usr/include/c++/7/bits/stl_algobase.h **** 
 176:/usr/include/c++/7/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:/usr/include/c++/7/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/usr/include/c++/7/bits/stl_algobase.h ****       return __first2;
 179:/usr/include/c++/7/bits/stl_algobase.h ****     }
 180:/usr/include/c++/7/bits/stl_algobase.h **** 
 181:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 182:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 183:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/usr/include/c++/7/bits/stl_algobase.h ****    *
 188:/usr/include/c++/7/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/usr/include/c++/7/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/usr/include/c++/7/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/usr/include/c++/7/bits/stl_algobase.h ****   */
 192:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _Tp>
 193:/usr/include/c++/7/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:/usr/include/c++/7/bits/stl_algobase.h ****     inline const _Tp&
 195:/usr/include/c++/7/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:/usr/include/c++/7/bits/stl_algobase.h ****     {
 197:/usr/include/c++/7/bits/stl_algobase.h ****       // concept requirements
 198:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:/usr/include/c++/7/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:/usr/include/c++/7/bits/stl_algobase.h ****       if (__b < __a)
 201:/usr/include/c++/7/bits/stl_algobase.h **** 	return __b;
 202:/usr/include/c++/7/bits/stl_algobase.h ****       return __a;
 203:/usr/include/c++/7/bits/stl_algobase.h ****     }
 204:/usr/include/c++/7/bits/stl_algobase.h **** 
 205:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 206:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 207:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 211:/usr/include/c++/7/bits/stl_algobase.h ****    *
 212:/usr/include/c++/7/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:/usr/include/c++/7/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:/usr/include/c++/7/bits/stl_algobase.h ****    *  preprocessor macro.
 215:/usr/include/c++/7/bits/stl_algobase.h ****   */
 216:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _Tp>
 217:/usr/include/c++/7/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:/usr/include/c++/7/bits/stl_algobase.h ****     inline const _Tp&
 219:/usr/include/c++/7/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:/usr/include/c++/7/bits/stl_algobase.h ****     {
 221:/usr/include/c++/7/bits/stl_algobase.h ****       // concept requirements
 222:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:/usr/include/c++/7/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:/usr/include/c++/7/bits/stl_algobase.h ****       if (__a < __b)
 225:/usr/include/c++/7/bits/stl_algobase.h **** 	return __b;
 226:/usr/include/c++/7/bits/stl_algobase.h ****       return __a;
 227:/usr/include/c++/7/bits/stl_algobase.h ****     }
 228:/usr/include/c++/7/bits/stl_algobase.h **** 
 229:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 230:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 231:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:/usr/include/c++/7/bits/stl_algobase.h ****    *
 237:/usr/include/c++/7/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 238:/usr/include/c++/7/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:/usr/include/c++/7/bits/stl_algobase.h ****   */
 240:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:/usr/include/c++/7/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:/usr/include/c++/7/bits/stl_algobase.h ****     inline const _Tp&
 243:/usr/include/c++/7/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:/usr/include/c++/7/bits/stl_algobase.h ****     {
 245:/usr/include/c++/7/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:/usr/include/c++/7/bits/stl_algobase.h ****       if (__comp(__b, __a))
 247:/usr/include/c++/7/bits/stl_algobase.h **** 	return __b;
 248:/usr/include/c++/7/bits/stl_algobase.h ****       return __a;
 249:/usr/include/c++/7/bits/stl_algobase.h ****     }
 250:/usr/include/c++/7/bits/stl_algobase.h **** 
 251:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 252:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 253:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 255:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 256:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 258:/usr/include/c++/7/bits/stl_algobase.h ****    *
 259:/usr/include/c++/7/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:/usr/include/c++/7/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:/usr/include/c++/7/bits/stl_algobase.h ****   */
 262:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:/usr/include/c++/7/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:/usr/include/c++/7/bits/stl_algobase.h ****     inline const _Tp&
 265:/usr/include/c++/7/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:/usr/include/c++/7/bits/stl_algobase.h ****     {
 267:/usr/include/c++/7/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:/usr/include/c++/7/bits/stl_algobase.h ****       if (__comp(__a, __b))
 269:/usr/include/c++/7/bits/stl_algobase.h **** 	return __b;
 270:/usr/include/c++/7/bits/stl_algobase.h ****       return __a;
 271:/usr/include/c++/7/bits/stl_algobase.h ****     }
 272:/usr/include/c++/7/bits/stl_algobase.h **** 
 273:/usr/include/c++/7/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 274:/usr/include/c++/7/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 275:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/usr/include/c++/7/bits/stl_algobase.h ****     inline _Iterator
 277:/usr/include/c++/7/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 278:/usr/include/c++/7/bits/stl_algobase.h ****     { return __it; }
 279:/usr/include/c++/7/bits/stl_algobase.h **** 
 280:/usr/include/c++/7/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 281:/usr/include/c++/7/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 282:/usr/include/c++/7/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 283:/usr/include/c++/7/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 284:/usr/include/c++/7/bits/stl_algobase.h ****   // a for loop with an explicit count.
 285:/usr/include/c++/7/bits/stl_algobase.h **** 
 286:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool, bool, typename>
 287:/usr/include/c++/7/bits/stl_algobase.h ****     struct __copy_move
 288:/usr/include/c++/7/bits/stl_algobase.h ****     {
 289:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 290:/usr/include/c++/7/bits/stl_algobase.h ****         static _OI
 291:/usr/include/c++/7/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 292:/usr/include/c++/7/bits/stl_algobase.h ****         {
 293:/usr/include/c++/7/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 294:/usr/include/c++/7/bits/stl_algobase.h **** 	    *__result = *__first;
 295:/usr/include/c++/7/bits/stl_algobase.h **** 	  return __result;
 296:/usr/include/c++/7/bits/stl_algobase.h **** 	}
 297:/usr/include/c++/7/bits/stl_algobase.h ****     };
 298:/usr/include/c++/7/bits/stl_algobase.h **** 
 299:/usr/include/c++/7/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 300:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _Category>
 301:/usr/include/c++/7/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 302:/usr/include/c++/7/bits/stl_algobase.h ****     {
 303:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 304:/usr/include/c++/7/bits/stl_algobase.h ****         static _OI
 305:/usr/include/c++/7/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 306:/usr/include/c++/7/bits/stl_algobase.h ****         {
 307:/usr/include/c++/7/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 308:/usr/include/c++/7/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 309:/usr/include/c++/7/bits/stl_algobase.h **** 	  return __result;
 310:/usr/include/c++/7/bits/stl_algobase.h **** 	}
 311:/usr/include/c++/7/bits/stl_algobase.h ****     };
 312:/usr/include/c++/7/bits/stl_algobase.h **** #endif
 313:/usr/include/c++/7/bits/stl_algobase.h **** 
 314:/usr/include/c++/7/bits/stl_algobase.h ****   template<>
 315:/usr/include/c++/7/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 316:/usr/include/c++/7/bits/stl_algobase.h ****     {
 317:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 318:/usr/include/c++/7/bits/stl_algobase.h ****         static _OI
 319:/usr/include/c++/7/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 320:/usr/include/c++/7/bits/stl_algobase.h ****         { 
 321:/usr/include/c++/7/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 322:/usr/include/c++/7/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 323:/usr/include/c++/7/bits/stl_algobase.h **** 	    {
 324:/usr/include/c++/7/bits/stl_algobase.h **** 	      *__result = *__first;
 325:/usr/include/c++/7/bits/stl_algobase.h **** 	      ++__first;
 326:/usr/include/c++/7/bits/stl_algobase.h **** 	      ++__result;
 327:/usr/include/c++/7/bits/stl_algobase.h **** 	    }
 328:/usr/include/c++/7/bits/stl_algobase.h **** 	  return __result;
 329:/usr/include/c++/7/bits/stl_algobase.h **** 	}
 330:/usr/include/c++/7/bits/stl_algobase.h ****     };
 331:/usr/include/c++/7/bits/stl_algobase.h **** 
 332:/usr/include/c++/7/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 333:/usr/include/c++/7/bits/stl_algobase.h ****   template<>
 334:/usr/include/c++/7/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 335:/usr/include/c++/7/bits/stl_algobase.h ****     {
 336:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 337:/usr/include/c++/7/bits/stl_algobase.h ****         static _OI
 338:/usr/include/c++/7/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 339:/usr/include/c++/7/bits/stl_algobase.h ****         { 
 340:/usr/include/c++/7/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 341:/usr/include/c++/7/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 342:/usr/include/c++/7/bits/stl_algobase.h **** 	    {
 343:/usr/include/c++/7/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 344:/usr/include/c++/7/bits/stl_algobase.h **** 	      ++__first;
 345:/usr/include/c++/7/bits/stl_algobase.h **** 	      ++__result;
 346:/usr/include/c++/7/bits/stl_algobase.h **** 	    }
 347:/usr/include/c++/7/bits/stl_algobase.h **** 	  return __result;
 348:/usr/include/c++/7/bits/stl_algobase.h **** 	}
 349:/usr/include/c++/7/bits/stl_algobase.h ****     };
 350:/usr/include/c++/7/bits/stl_algobase.h **** #endif
 351:/usr/include/c++/7/bits/stl_algobase.h **** 
 352:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool _IsMove>
 353:/usr/include/c++/7/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 354:/usr/include/c++/7/bits/stl_algobase.h ****     {
 355:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _Tp>
 356:/usr/include/c++/7/bits/stl_algobase.h ****         static _Tp*
 357:/usr/include/c++/7/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 358:/usr/include/c++/7/bits/stl_algobase.h ****         {
 359:/usr/include/c++/7/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 360:/usr/include/c++/7/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 361:/usr/include/c++/7/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 362:/usr/include/c++/7/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 363:/usr/include/c++/7/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 364:/usr/include/c++/7/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 365:/usr/include/c++/7/bits/stl_algobase.h **** #endif
 366:/usr/include/c++/7/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 367:/usr/include/c++/7/bits/stl_algobase.h **** 	  if (_Num)
 368:/usr/include/c++/7/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 369:/usr/include/c++/7/bits/stl_algobase.h **** 	  return __result + _Num;
 370:/usr/include/c++/7/bits/stl_algobase.h **** 	}
 371:/usr/include/c++/7/bits/stl_algobase.h ****     };
 372:/usr/include/c++/7/bits/stl_algobase.h **** 
 373:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 374:/usr/include/c++/7/bits/stl_algobase.h ****     inline _OI
 375:/usr/include/c++/7/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 376:/usr/include/c++/7/bits/stl_algobase.h ****     {
 377:/usr/include/c++/7/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 378:/usr/include/c++/7/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 379:/usr/include/c++/7/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 380:/usr/include/c++/7/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 381:/usr/include/c++/7/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 382:/usr/include/c++/7/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 383:/usr/include/c++/7/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 384:/usr/include/c++/7/bits/stl_algobase.h **** 
 385:/usr/include/c++/7/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 386:/usr/include/c++/7/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 387:/usr/include/c++/7/bits/stl_algobase.h ****     }
 388:/usr/include/c++/7/bits/stl_algobase.h **** 
 389:/usr/include/c++/7/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 390:/usr/include/c++/7/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 391:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _CharT>
 392:/usr/include/c++/7/bits/stl_algobase.h ****     struct char_traits;
 393:/usr/include/c++/7/bits/stl_algobase.h **** 
 394:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 395:/usr/include/c++/7/bits/stl_algobase.h ****     class istreambuf_iterator;
 396:/usr/include/c++/7/bits/stl_algobase.h **** 
 397:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 398:/usr/include/c++/7/bits/stl_algobase.h ****     class ostreambuf_iterator;
 399:/usr/include/c++/7/bits/stl_algobase.h **** 
 400:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 401:/usr/include/c++/7/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 402:/usr/include/c++/7/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 403:/usr/include/c++/7/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 404:/usr/include/c++/7/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 405:/usr/include/c++/7/bits/stl_algobase.h **** 
 406:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 407:/usr/include/c++/7/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 408:/usr/include/c++/7/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 409:/usr/include/c++/7/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 410:/usr/include/c++/7/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 411:/usr/include/c++/7/bits/stl_algobase.h **** 
 412:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 413:/usr/include/c++/7/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 414:/usr/include/c++/7/bits/stl_algobase.h **** 				    _CharT*>::__type
 415:/usr/include/c++/7/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 416:/usr/include/c++/7/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 417:/usr/include/c++/7/bits/stl_algobase.h **** 
 418:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 419:/usr/include/c++/7/bits/stl_algobase.h ****     inline _OI
 420:/usr/include/c++/7/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 421:/usr/include/c++/7/bits/stl_algobase.h ****     {
 422:/usr/include/c++/7/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 423:/usr/include/c++/7/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 424:/usr/include/c++/7/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 425:/usr/include/c++/7/bits/stl_algobase.h ****     }
 426:/usr/include/c++/7/bits/stl_algobase.h **** 
 427:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 428:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 429:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 430:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 431:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 432:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 433:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   result + (first - last)
 434:/usr/include/c++/7/bits/stl_algobase.h ****    *
 435:/usr/include/c++/7/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 436:/usr/include/c++/7/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 437:/usr/include/c++/7/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 438:/usr/include/c++/7/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 439:/usr/include/c++/7/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 440:/usr/include/c++/7/bits/stl_algobase.h ****    *
 441:/usr/include/c++/7/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 442:/usr/include/c++/7/bits/stl_algobase.h ****    *  within [first,last).
 443:/usr/include/c++/7/bits/stl_algobase.h ****   */
 444:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 445:/usr/include/c++/7/bits/stl_algobase.h ****     inline _OI
 446:/usr/include/c++/7/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 447:/usr/include/c++/7/bits/stl_algobase.h ****     {
 448:/usr/include/c++/7/bits/stl_algobase.h ****       // concept requirements
 449:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 450:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 451:/usr/include/c++/7/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 452:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 453:/usr/include/c++/7/bits/stl_algobase.h **** 
 454:/usr/include/c++/7/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 455:/usr/include/c++/7/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 456:/usr/include/c++/7/bits/stl_algobase.h **** 	       __result));
 457:/usr/include/c++/7/bits/stl_algobase.h ****     }
 458:/usr/include/c++/7/bits/stl_algobase.h **** 
 459:/usr/include/c++/7/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 460:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 461:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 462:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 463:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 464:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 465:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 466:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   result + (first - last)
 467:/usr/include/c++/7/bits/stl_algobase.h ****    *
 468:/usr/include/c++/7/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 469:/usr/include/c++/7/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 470:/usr/include/c++/7/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 471:/usr/include/c++/7/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 472:/usr/include/c++/7/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 473:/usr/include/c++/7/bits/stl_algobase.h ****    *
 474:/usr/include/c++/7/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 475:/usr/include/c++/7/bits/stl_algobase.h ****    *  within [first,last).
 476:/usr/include/c++/7/bits/stl_algobase.h ****   */
 477:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 478:/usr/include/c++/7/bits/stl_algobase.h ****     inline _OI
 479:/usr/include/c++/7/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 480:/usr/include/c++/7/bits/stl_algobase.h ****     {
 481:/usr/include/c++/7/bits/stl_algobase.h ****       // concept requirements
 482:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 483:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 484:/usr/include/c++/7/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 485:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 486:/usr/include/c++/7/bits/stl_algobase.h **** 
 487:/usr/include/c++/7/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 488:/usr/include/c++/7/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 489:/usr/include/c++/7/bits/stl_algobase.h ****     }
 490:/usr/include/c++/7/bits/stl_algobase.h **** 
 491:/usr/include/c++/7/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 492:/usr/include/c++/7/bits/stl_algobase.h **** #else
 493:/usr/include/c++/7/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 494:/usr/include/c++/7/bits/stl_algobase.h **** #endif
 495:/usr/include/c++/7/bits/stl_algobase.h **** 
 496:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool, bool, typename>
 497:/usr/include/c++/7/bits/stl_algobase.h ****     struct __copy_move_backward
 498:/usr/include/c++/7/bits/stl_algobase.h ****     {
 499:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 500:/usr/include/c++/7/bits/stl_algobase.h ****         static _BI2
 501:/usr/include/c++/7/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 502:/usr/include/c++/7/bits/stl_algobase.h ****         {
 503:/usr/include/c++/7/bits/stl_algobase.h **** 	  while (__first != __last)
 504:/usr/include/c++/7/bits/stl_algobase.h **** 	    *--__result = *--__last;
 505:/usr/include/c++/7/bits/stl_algobase.h **** 	  return __result;
 506:/usr/include/c++/7/bits/stl_algobase.h **** 	}
 507:/usr/include/c++/7/bits/stl_algobase.h ****     };
 508:/usr/include/c++/7/bits/stl_algobase.h **** 
 509:/usr/include/c++/7/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 510:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _Category>
 511:/usr/include/c++/7/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 512:/usr/include/c++/7/bits/stl_algobase.h ****     {
 513:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 514:/usr/include/c++/7/bits/stl_algobase.h ****         static _BI2
 515:/usr/include/c++/7/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 516:/usr/include/c++/7/bits/stl_algobase.h ****         {
 517:/usr/include/c++/7/bits/stl_algobase.h **** 	  while (__first != __last)
 518:/usr/include/c++/7/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 519:/usr/include/c++/7/bits/stl_algobase.h **** 	  return __result;
 520:/usr/include/c++/7/bits/stl_algobase.h **** 	}
 521:/usr/include/c++/7/bits/stl_algobase.h ****     };
 522:/usr/include/c++/7/bits/stl_algobase.h **** #endif
 523:/usr/include/c++/7/bits/stl_algobase.h **** 
 524:/usr/include/c++/7/bits/stl_algobase.h ****   template<>
 525:/usr/include/c++/7/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 526:/usr/include/c++/7/bits/stl_algobase.h ****     {
 527:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 528:/usr/include/c++/7/bits/stl_algobase.h ****         static _BI2
 529:/usr/include/c++/7/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 530:/usr/include/c++/7/bits/stl_algobase.h ****         {
 531:/usr/include/c++/7/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 532:/usr/include/c++/7/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 533:/usr/include/c++/7/bits/stl_algobase.h **** 	    *--__result = *--__last;
 534:/usr/include/c++/7/bits/stl_algobase.h **** 	  return __result;
 535:/usr/include/c++/7/bits/stl_algobase.h **** 	}
 536:/usr/include/c++/7/bits/stl_algobase.h ****     };
 537:/usr/include/c++/7/bits/stl_algobase.h **** 
 538:/usr/include/c++/7/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 539:/usr/include/c++/7/bits/stl_algobase.h ****   template<>
 540:/usr/include/c++/7/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 541:/usr/include/c++/7/bits/stl_algobase.h ****     {
 542:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 543:/usr/include/c++/7/bits/stl_algobase.h ****         static _BI2
 544:/usr/include/c++/7/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 545:/usr/include/c++/7/bits/stl_algobase.h ****         {
 546:/usr/include/c++/7/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 547:/usr/include/c++/7/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 548:/usr/include/c++/7/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 549:/usr/include/c++/7/bits/stl_algobase.h **** 	  return __result;
 550:/usr/include/c++/7/bits/stl_algobase.h **** 	}
 551:/usr/include/c++/7/bits/stl_algobase.h ****     };
 552:/usr/include/c++/7/bits/stl_algobase.h **** #endif
 553:/usr/include/c++/7/bits/stl_algobase.h **** 
 554:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool _IsMove>
 555:/usr/include/c++/7/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 556:/usr/include/c++/7/bits/stl_algobase.h ****     {
 557:/usr/include/c++/7/bits/stl_algobase.h ****       template<typename _Tp>
 558:/usr/include/c++/7/bits/stl_algobase.h ****         static _Tp*
 559:/usr/include/c++/7/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 560:/usr/include/c++/7/bits/stl_algobase.h ****         {
 561:/usr/include/c++/7/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 562:/usr/include/c++/7/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 563:/usr/include/c++/7/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 564:/usr/include/c++/7/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 565:/usr/include/c++/7/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 566:/usr/include/c++/7/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 567:/usr/include/c++/7/bits/stl_algobase.h **** #endif
 568:/usr/include/c++/7/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 569:/usr/include/c++/7/bits/stl_algobase.h **** 	  if (_Num)
 570:/usr/include/c++/7/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 571:/usr/include/c++/7/bits/stl_algobase.h **** 	  return __result - _Num;
 572:/usr/include/c++/7/bits/stl_algobase.h **** 	}
 573:/usr/include/c++/7/bits/stl_algobase.h ****     };
 574:/usr/include/c++/7/bits/stl_algobase.h **** 
 575:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 576:/usr/include/c++/7/bits/stl_algobase.h ****     inline _BI2
 577:/usr/include/c++/7/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 578:/usr/include/c++/7/bits/stl_algobase.h ****     {
 579:/usr/include/c++/7/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 580:/usr/include/c++/7/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 581:/usr/include/c++/7/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 582:/usr/include/c++/7/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 583:/usr/include/c++/7/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 584:/usr/include/c++/7/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 585:/usr/include/c++/7/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 586:/usr/include/c++/7/bits/stl_algobase.h **** 
 587:/usr/include/c++/7/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 588:/usr/include/c++/7/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 589:/usr/include/c++/7/bits/stl_algobase.h **** 								 __last,
 590:/usr/include/c++/7/bits/stl_algobase.h **** 								 __result);
 591:/usr/include/c++/7/bits/stl_algobase.h ****     }
 592:/usr/include/c++/7/bits/stl_algobase.h **** 
 593:/usr/include/c++/7/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 594:/usr/include/c++/7/bits/stl_algobase.h ****     inline _BI2
 595:/usr/include/c++/7/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 596:/usr/include/c++/7/bits/stl_algobase.h ****     {
 597:/usr/include/c++/7/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 598:/usr/include/c++/7/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 599:/usr/include/c++/7/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 600:/usr/include/c++/7/bits/stl_algobase.h ****     }
 601:/usr/include/c++/7/bits/stl_algobase.h **** 
 602:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 603:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 604:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 605:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 606:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 607:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 608:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   result - (first - last)
 609:/usr/include/c++/7/bits/stl_algobase.h ****    *
 610:/usr/include/c++/7/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 611:/usr/include/c++/7/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 612:/usr/include/c++/7/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 613:/usr/include/c++/7/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 614:/usr/include/c++/7/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 615:/usr/include/c++/7/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 616:/usr/include/c++/7/bits/stl_algobase.h ****    *
 617:/usr/include/c++/7/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 618:/usr/include/c++/7/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 619:/usr/include/c++/7/bits/stl_algobase.h ****   */
 620:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 621:/usr/include/c++/7/bits/stl_algobase.h ****     inline _BI2
 622:/usr/include/c++/7/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 623:/usr/include/c++/7/bits/stl_algobase.h ****     {
 624:/usr/include/c++/7/bits/stl_algobase.h ****       // concept requirements
 625:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 626:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 627:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 628:/usr/include/c++/7/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 629:/usr/include/c++/7/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 630:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 631:/usr/include/c++/7/bits/stl_algobase.h **** 
 632:/usr/include/c++/7/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 633:/usr/include/c++/7/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 634:/usr/include/c++/7/bits/stl_algobase.h **** 	       __result));
 635:/usr/include/c++/7/bits/stl_algobase.h ****     }
 636:/usr/include/c++/7/bits/stl_algobase.h **** 
 637:/usr/include/c++/7/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 638:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 639:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 640:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 641:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 642:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 643:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 644:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   result - (first - last)
 645:/usr/include/c++/7/bits/stl_algobase.h ****    *
 646:/usr/include/c++/7/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 647:/usr/include/c++/7/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 648:/usr/include/c++/7/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 649:/usr/include/c++/7/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 650:/usr/include/c++/7/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 651:/usr/include/c++/7/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 652:/usr/include/c++/7/bits/stl_algobase.h ****    *
 653:/usr/include/c++/7/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 654:/usr/include/c++/7/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 655:/usr/include/c++/7/bits/stl_algobase.h ****   */
 656:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 657:/usr/include/c++/7/bits/stl_algobase.h ****     inline _BI2
 658:/usr/include/c++/7/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 659:/usr/include/c++/7/bits/stl_algobase.h ****     {
 660:/usr/include/c++/7/bits/stl_algobase.h ****       // concept requirements
 661:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 662:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 663:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 664:/usr/include/c++/7/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 665:/usr/include/c++/7/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 666:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 667:/usr/include/c++/7/bits/stl_algobase.h **** 
 668:/usr/include/c++/7/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 669:/usr/include/c++/7/bits/stl_algobase.h **** 						std::__miter_base(__last),
 670:/usr/include/c++/7/bits/stl_algobase.h **** 						__result);
 671:/usr/include/c++/7/bits/stl_algobase.h ****     }
 672:/usr/include/c++/7/bits/stl_algobase.h **** 
 673:/usr/include/c++/7/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 674:/usr/include/c++/7/bits/stl_algobase.h **** #else
 675:/usr/include/c++/7/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 676:/usr/include/c++/7/bits/stl_algobase.h **** #endif
 677:/usr/include/c++/7/bits/stl_algobase.h **** 
 678:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 679:/usr/include/c++/7/bits/stl_algobase.h ****     inline typename
 680:/usr/include/c++/7/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 681:/usr/include/c++/7/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 682:/usr/include/c++/7/bits/stl_algobase.h ****  	     const _Tp& __value)
 683:/usr/include/c++/7/bits/stl_algobase.h ****     {
 684:/usr/include/c++/7/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 685:/usr/include/c++/7/bits/stl_algobase.h **** 	*__first = __value;
 686:/usr/include/c++/7/bits/stl_algobase.h ****     }
 687:/usr/include/c++/7/bits/stl_algobase.h ****     
 688:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 689:/usr/include/c++/7/bits/stl_algobase.h ****     inline typename
 690:/usr/include/c++/7/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 691:/usr/include/c++/7/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 692:/usr/include/c++/7/bits/stl_algobase.h **** 	     const _Tp& __value)
 693:/usr/include/c++/7/bits/stl_algobase.h ****     {
 694:/usr/include/c++/7/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 695:/usr/include/c++/7/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 696:/usr/include/c++/7/bits/stl_algobase.h **** 	*__first = __tmp;
 697:/usr/include/c++/7/bits/stl_algobase.h ****     }
 698:/usr/include/c++/7/bits/stl_algobase.h **** 
 699:/usr/include/c++/7/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 700:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _Tp>
 701:/usr/include/c++/7/bits/stl_algobase.h ****     inline typename
 702:/usr/include/c++/7/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 703:/usr/include/c++/7/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 704:/usr/include/c++/7/bits/stl_algobase.h ****     {
 705:/usr/include/c++/7/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 706:/usr/include/c++/7/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 707:/usr/include/c++/7/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 708:/usr/include/c++/7/bits/stl_algobase.h ****     }
 709:/usr/include/c++/7/bits/stl_algobase.h **** 
 710:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 711:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 712:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 713:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 714:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 715:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 716:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   Nothing.
 717:/usr/include/c++/7/bits/stl_algobase.h ****    *
 718:/usr/include/c++/7/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 719:/usr/include/c++/7/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 720:/usr/include/c++/7/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 721:/usr/include/c++/7/bits/stl_algobase.h ****   */
 722:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 723:/usr/include/c++/7/bits/stl_algobase.h ****     inline void
 724:/usr/include/c++/7/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 725:/usr/include/c++/7/bits/stl_algobase.h ****     {
 726:/usr/include/c++/7/bits/stl_algobase.h ****       // concept requirements
 727:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 728:/usr/include/c++/7/bits/stl_algobase.h **** 				  _ForwardIterator>)
 729:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 730:/usr/include/c++/7/bits/stl_algobase.h **** 
 731:/usr/include/c++/7/bits/stl_algobase.h ****       std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
 732:/usr/include/c++/7/bits/stl_algobase.h **** 		    __value);
 733:/usr/include/c++/7/bits/stl_algobase.h ****     }
 734:/usr/include/c++/7/bits/stl_algobase.h **** 
 735:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 736:/usr/include/c++/7/bits/stl_algobase.h ****     inline typename
 737:/usr/include/c++/7/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
 738:/usr/include/c++/7/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 739:/usr/include/c++/7/bits/stl_algobase.h ****     {
 740:/usr/include/c++/7/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 741:/usr/include/c++/7/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 742:/usr/include/c++/7/bits/stl_algobase.h **** 	*__first = __value;
 743:/usr/include/c++/7/bits/stl_algobase.h ****       return __first;
 744:/usr/include/c++/7/bits/stl_algobase.h ****     }
 745:/usr/include/c++/7/bits/stl_algobase.h **** 
 746:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 747:/usr/include/c++/7/bits/stl_algobase.h ****     inline typename
 748:/usr/include/c++/7/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
 749:/usr/include/c++/7/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 750:/usr/include/c++/7/bits/stl_algobase.h ****     {
 751:/usr/include/c++/7/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 752:/usr/include/c++/7/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 753:/usr/include/c++/7/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 754:/usr/include/c++/7/bits/stl_algobase.h **** 	*__first = __tmp;
 755:/usr/include/c++/7/bits/stl_algobase.h ****       return __first;
 756:/usr/include/c++/7/bits/stl_algobase.h ****     }
 757:/usr/include/c++/7/bits/stl_algobase.h **** 
 758:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _Size, typename _Tp>
 759:/usr/include/c++/7/bits/stl_algobase.h ****     inline typename
 760:/usr/include/c++/7/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
 761:/usr/include/c++/7/bits/stl_algobase.h ****     __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
 762:/usr/include/c++/7/bits/stl_algobase.h ****     {
 763:/usr/include/c++/7/bits/stl_algobase.h ****       std::__fill_a(__first, __first + __n, __c);
 764:/usr/include/c++/7/bits/stl_algobase.h ****       return __first + __n;
 765:/usr/include/c++/7/bits/stl_algobase.h ****     }
 766:/usr/include/c++/7/bits/stl_algobase.h **** 
 767:/usr/include/c++/7/bits/stl_algobase.h ****   /**
 768:/usr/include/c++/7/bits/stl_algobase.h ****    *  @brief Fills the range [first,first+n) with copies of value.
 769:/usr/include/c++/7/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 770:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __first  An output iterator.
 771:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __n      The count of copies to perform.
 772:/usr/include/c++/7/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 773:/usr/include/c++/7/bits/stl_algobase.h ****    *  @return   The iterator at first+n.
 774:/usr/include/c++/7/bits/stl_algobase.h ****    *
 775:/usr/include/c++/7/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 776:/usr/include/c++/7/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 777:/usr/include/c++/7/bits/stl_algobase.h ****    *  to @c memset or @ wmemset.
 778:/usr/include/c++/7/bits/stl_algobase.h ****    *
 779:/usr/include/c++/7/bits/stl_algobase.h ****    *  _GLIBCXX_RESOLVE_LIB_DEFECTS
 780:/usr/include/c++/7/bits/stl_algobase.h ****    *  DR 865. More algorithms that throw away information
 781:/usr/include/c++/7/bits/stl_algobase.h ****   */
 782:/usr/include/c++/7/bits/stl_algobase.h ****   template<typename _OI, typename _Size, typename _Tp>
 783:/usr/include/c++/7/bits/stl_algobase.h ****     inline _OI
 784:/usr/include/c++/7/bits/stl_algobase.h ****     fill_n(_OI __first, _Size __n, const _Tp& __value)
 7449              		.loc 13 784 0
 7450              		.cfi_startproc
 7451 0000 55       		pushq	%rbp
 7452              		.cfi_def_cfa_offset 16
 7453              		.cfi_offset 6, -16
 7454 0001 4889E5   		movq	%rsp, %rbp
 7455              		.cfi_def_cfa_register 6
 7456 0004 4883EC20 		subq	$32, %rsp
 7457 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7458 000c 488975F0 		movq	%rsi, -16(%rbp)
 7459 0010 488955E8 		movq	%rdx, -24(%rbp)
 785:/usr/include/c++/7/bits/stl_algobase.h ****     {
 786:/usr/include/c++/7/bits/stl_algobase.h ****       // concept requirements
 787:/usr/include/c++/7/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)
 788:/usr/include/c++/7/bits/stl_algobase.h **** 
 789:/usr/include/c++/7/bits/stl_algobase.h ****       return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
 7460              		.loc 13 789 0
 7461 0014 488B45F8 		movq	-8(%rbp), %rax
 7462 0018 4889C7   		movq	%rax, %rdi
 7463 001b E8000000 		call	_ZSt12__niter_baseIPfET_S1_
 7463      00
 7464 0020 4889C1   		movq	%rax, %rcx
 7465 0023 488B55E8 		movq	-24(%rbp), %rdx
 7466 0027 488B45F0 		movq	-16(%rbp), %rax
 7467 002b 4889C6   		movq	%rax, %rsi
 7468 002e 4889CF   		movq	%rcx, %rdi
 7469 0031 E8000000 		call	_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_
 7469      00
 790:/usr/include/c++/7/bits/stl_algobase.h ****     }
 7470              		.loc 13 790 0
 7471 0036 C9       		leave
 7472              		.cfi_def_cfa 7, 8
 7473 0037 C3       		ret
 7474              		.cfi_endproc
 7475              	.LFE1600:
 7477              		.section	.text._ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_all
 7478              		.align 2
 7479              		.weak	_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv
 7481              	_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv:
 7482              	.LFB1601:
 127:/usr/include/c++/7/ext/new_allocator.h **** 
 128:/usr/include/c++/7/ext/new_allocator.h ****       size_type
 129:/usr/include/c++/7/ext/new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 7483              		.loc 9 129 0
 7484              		.cfi_startproc
 7485 0000 55       		pushq	%rbp
 7486              		.cfi_def_cfa_offset 16
 7487              		.cfi_offset 6, -16
 7488 0001 4889E5   		movq	%rsp, %rbp
 7489              		.cfi_def_cfa_register 6
 7490 0004 48897DF8 		movq	%rdi, -8(%rbp)
 130:/usr/include/c++/7/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 7491              		.loc 9 130 0
 7492 0008 48B8FFFF 		movabsq	$4611686018427387903, %rax
 7492      FFFFFFFF 
 7492      FF3F
 7493 0012 5D       		popq	%rbp
 7494              		.cfi_def_cfa 7, 8
 7495 0013 C3       		ret
 7496              		.cfi_endproc
 7497              	.LFE1601:
 7499              		.section	.text._ZSt12__niter_baseIPfET_S1_,"axG",@progbits,_ZSt12__niter_baseIPfET_S1_,comdat
 7500              		.weak	_ZSt12__niter_baseIPfET_S1_
 7502              	_ZSt12__niter_baseIPfET_S1_:
 7503              	.LFB1602:
 277:/usr/include/c++/7/bits/stl_algobase.h ****     { return __it; }
 7504              		.loc 13 277 0
 7505              		.cfi_startproc
 7506 0000 55       		pushq	%rbp
 7507              		.cfi_def_cfa_offset 16
 7508              		.cfi_offset 6, -16
 7509 0001 4889E5   		movq	%rsp, %rbp
 7510              		.cfi_def_cfa_register 6
 7511 0004 48897DF8 		movq	%rdi, -8(%rbp)
 278:/usr/include/c++/7/bits/stl_algobase.h **** 
 7512              		.loc 13 278 0
 7513 0008 488B45F8 		movq	-8(%rbp), %rax
 7514 000c 5D       		popq	%rbp
 7515              		.cfi_def_cfa 7, 8
 7516 000d C3       		ret
 7517              		.cfi_endproc
 7518              	.LFE1602:
 7520              		.section	.text._ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6
 7521              		.weak	_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6
 7523              	_ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS
 7524              	.LFB1603:
 749:/usr/include/c++/7/bits/stl_algobase.h ****     {
 7525              		.loc 13 749 0
 7526              		.cfi_startproc
 7527 0000 55       		pushq	%rbp
 7528              		.cfi_def_cfa_offset 16
 7529              		.cfi_offset 6, -16
 7530 0001 4889E5   		movq	%rsp, %rbp
 7531              		.cfi_def_cfa_register 6
 7532 0004 48897DE8 		movq	%rdi, -24(%rbp)
 7533 0008 488975E0 		movq	%rsi, -32(%rbp)
 7534 000c 488955D8 		movq	%rdx, -40(%rbp)
 751:/usr/include/c++/7/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 7535              		.loc 13 751 0
 7536 0010 488B45D8 		movq	-40(%rbp), %rax
 7537 0014 F30F1000 		movss	(%rax), %xmm0
 7538 0018 F30F1145 		movss	%xmm0, -12(%rbp)
 7538      F4
 7539              	.LBB114:
 752:/usr/include/c++/7/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 7540              		.loc 13 752 0
 7541 001d 488B45E0 		movq	-32(%rbp), %rax
 7542 0021 488945F8 		movq	%rax, -8(%rbp)
 7543              	.L404:
 753:/usr/include/c++/7/bits/stl_algobase.h **** 	*__first = __tmp;
 7544              		.loc 13 753 0
 7545 0025 48837DF8 		cmpq	$0, -8(%rbp)
 7545      00
 7546 002a 7419     		je	.L403
 754:/usr/include/c++/7/bits/stl_algobase.h ****       return __first;
 7547              		.loc 13 754 0
 7548 002c 488B45E8 		movq	-24(%rbp), %rax
 7549 0030 F30F1045 		movss	-12(%rbp), %xmm0
 7549      F4
 7550 0035 F30F1100 		movss	%xmm0, (%rax)
 752:/usr/include/c++/7/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 7551              		.loc 13 752 0
 7552 0039 48836DF8 		subq	$1, -8(%rbp)
 7552      01
 7553 003e 488345E8 		addq	$4, -24(%rbp)
 7553      04
 7554 0043 EBE0     		jmp	.L404
 7555              	.L403:
 7556              	.LBE114:
 755:/usr/include/c++/7/bits/stl_algobase.h ****     }
 7557              		.loc 13 755 0
 7558 0045 488B45E8 		movq	-24(%rbp), %rax
 756:/usr/include/c++/7/bits/stl_algobase.h **** 
 7559              		.loc 13 756 0
 7560 0049 5D       		popq	%rbp
 7561              		.cfi_def_cfa 7, 8
 7562 004a C3       		ret
 7563              		.cfi_endproc
 7564              	.LFE1603:
 7566              		.section	.data.rel.ro.local,"aw",@progbits
 7567              		.align 8
 7570              	_ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE:
 7571 0000 00000000 		.quad	0
 7571      00000000 
 7572 0008 00000000 		.quad	_ZTIN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
 7572      00000000 
 7573 0010 00000000 		.quad	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev
 7573      00000000 
 7574 0018 00000000 		.quad	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD0Ev
 7574      00000000 
 7575 0020 00000000 		.quad	_ZNK12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunction7RunImplEv
 7575      00000000 
 7576              		.text
 7577 22d7 90       		.align 2
 7579              	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD2Ev:
 7580              	.LFB1605:
 151:TestUnitTest++.cpp **** {
 7581              		.loc 4 151 0
 7582              		.cfi_startproc
 7583 22d8 55       		pushq	%rbp
 7584              		.cfi_def_cfa_offset 16
 7585              		.cfi_offset 6, -16
 7586 22d9 4889E5   		movq	%rsp, %rbp
 7587              		.cfi_def_cfa_register 6
 7588 22dc 4883EC10 		subq	$16, %rsp
 7589 22e0 48897DF8 		movq	%rdi, -8(%rbp)
 7590              	.LBB115:
 151:TestUnitTest++.cpp **** {
 7591              		.loc 4 151 0
 7592 22e4 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE(%rip), %rdx
 7592      000000
 7593 22eb 488B45F8 		movq	-8(%rbp), %rax
 7594 22ef 488910   		movq	%rdx, (%rax)
 7595 22f2 488B45F8 		movq	-8(%rbp), %rax
 7596 22f6 4889C7   		movq	%rax, %rdi
 7597 22f9 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 7597      00
 7598              	.LBE115:
 7599 22fe 90       		nop
 7600 22ff C9       		leave
 7601              		.cfi_def_cfa 7, 8
 7602 2300 C3       		ret
 7603              		.cfi_endproc
 7604              	.LFE1605:
 7606              		.set	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev,_ZN12_GLOBAL__N_137TestCanCallCH
 7607 2301 90       		.align 2
 7609              	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD0Ev:
 7610              	.LFB1607:
 151:TestUnitTest++.cpp **** {
 7611              		.loc 4 151 0
 7612              		.cfi_startproc
 7613              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7614              		.cfi_lsda 0x1b,.LLSDA1607
 7615 2302 55       		pushq	%rbp
 7616              		.cfi_def_cfa_offset 16
 7617              		.cfi_offset 6, -16
 7618 2303 4889E5   		movq	%rsp, %rbp
 7619              		.cfi_def_cfa_register 6
 7620 2306 53       		pushq	%rbx
 7621 2307 4883EC18 		subq	$24, %rsp
 7622              		.cfi_offset 3, -24
 7623 230b 48897DE8 		movq	%rdi, -24(%rbp)
 151:TestUnitTest++.cpp **** {
 7624              		.loc 4 151 0
 7625 230f 488B45E8 		movq	-24(%rbp), %rax
 7626 2313 4889C7   		movq	%rax, %rdi
 7627              	.LEHB160:
 7628 2316 E8BDFFFF 		call	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev
 7628      FF
 7629              	.LEHE160:
 151:TestUnitTest++.cpp **** {
 7630              		.loc 4 151 0 is_stmt 0 discriminator 2
 7631 231b 488B45E8 		movq	-24(%rbp), %rax
 7632 231f 4889C7   		movq	%rax, %rdi
 7633 2322 E8000000 		call	_ZdlPv@PLT
 7633      00
 7634 2327 EB1A     		jmp	.L410
 7635              	.L409:
 7636 2329 4889C3   		movq	%rax, %rbx
 151:TestUnitTest++.cpp **** {
 7637              		.loc 4 151 0
 7638 232c 488B45E8 		movq	-24(%rbp), %rax
 7639 2330 4889C7   		movq	%rax, %rdi
 7640 2333 E8000000 		call	_ZdlPv@PLT
 7640      00
 7641 2338 4889D8   		movq	%rbx, %rax
 7642 233b 4889C7   		movq	%rax, %rdi
 7643              	.LEHB161:
 7644 233e E8000000 		call	_Unwind_Resume@PLT
 7644      00
 7645              	.LEHE161:
 7646              	.L410:
 7647 2343 4883C418 		addq	$24, %rsp
 7648 2347 5B       		popq	%rbx
 7649 2348 5D       		popq	%rbp
 7650              		.cfi_def_cfa 7, 8
 7651 2349 C3       		ret
 7652              		.cfi_endproc
 7653              	.LFE1607:
 7654              		.section	.gcc_except_table
 7655              	.LLSDA1607:
 7656 0488 FF       		.byte	0xff
 7657 0489 FF       		.byte	0xff
 7658 048a 01       		.byte	0x1
 7659 048b 08       		.uleb128 .LLSDACSE1607-.LLSDACSB1607
 7660              	.LLSDACSB1607:
 7661 048c 14       		.uleb128 .LEHB160-.LFB1607
 7662 048d 05       		.uleb128 .LEHE160-.LEHB160
 7663 048e 27       		.uleb128 .L409-.LFB1607
 7664 048f 00       		.uleb128 0
 7665 0490 3C       		.uleb128 .LEHB161-.LFB1607
 7666 0491 05       		.uleb128 .LEHE161-.LEHB161
 7667 0492 00       		.uleb128 0
 7668 0493 00       		.uleb128 0
 7669              	.LLSDACSE1607:
 7670              		.text
 7672              		.section	.data.rel.ro.local
 7673              		.align 8
 7676              	_ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE:
 7677 0028 00000000 		.quad	0
 7677      00000000 
 7678 0030 00000000 		.quad	_ZTIN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
 7678      00000000 
 7679 0038 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev
 7679      00000000 
 7680 0040 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD0Ev
 7680      00000000 
 7681 0048 00000000 		.quad	_ZNK12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATime7RunImplEv
 7681      00000000 
 7682              		.text
 7683              		.align 2
 7685              	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD2Ev:
 7686              	.LFB1609:
 141:TestUnitTest++.cpp **** {
 7687              		.loc 4 141 0 is_stmt 1
 7688              		.cfi_startproc
 7689 234a 55       		pushq	%rbp
 7690              		.cfi_def_cfa_offset 16
 7691              		.cfi_offset 6, -16
 7692 234b 4889E5   		movq	%rsp, %rbp
 7693              		.cfi_def_cfa_register 6
 7694 234e 4883EC10 		subq	$16, %rsp
 7695 2352 48897DF8 		movq	%rdi, -8(%rbp)
 7696              	.LBB116:
 141:TestUnitTest++.cpp **** {
 7697              		.loc 4 141 0
 7698 2356 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE(%rip), %rdx
 7698      000000
 7699 235d 488B45F8 		movq	-8(%rbp), %rax
 7700 2361 488910   		movq	%rdx, (%rax)
 7701 2364 488B45F8 		movq	-8(%rbp), %rax
 7702 2368 4889C7   		movq	%rax, %rdi
 7703 236b E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 7703      00
 7704              	.LBE116:
 7705 2370 90       		nop
 7706 2371 C9       		leave
 7707              		.cfi_def_cfa 7, 8
 7708 2372 C3       		ret
 7709              		.cfi_endproc
 7710              	.LFE1609:
 7712              		.set	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev,_ZN12_GLOBAL__N_143TestSim
 7713 2373 90       		.align 2
 7715              	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD0Ev:
 7716              	.LFB1611:
 141:TestUnitTest++.cpp **** {
 7717              		.loc 4 141 0
 7718              		.cfi_startproc
 7719              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7720              		.cfi_lsda 0x1b,.LLSDA1611
 7721 2374 55       		pushq	%rbp
 7722              		.cfi_def_cfa_offset 16
 7723              		.cfi_offset 6, -16
 7724 2375 4889E5   		movq	%rsp, %rbp
 7725              		.cfi_def_cfa_register 6
 7726 2378 53       		pushq	%rbx
 7727 2379 4883EC18 		subq	$24, %rsp
 7728              		.cfi_offset 3, -24
 7729 237d 48897DE8 		movq	%rdi, -24(%rbp)
 141:TestUnitTest++.cpp **** {
 7730              		.loc 4 141 0
 7731 2381 488B45E8 		movq	-24(%rbp), %rax
 7732 2385 4889C7   		movq	%rax, %rdi
 7733              	.LEHB162:
 7734 2388 E8BDFFFF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev
 7734      FF
 7735              	.LEHE162:
 141:TestUnitTest++.cpp **** {
 7736              		.loc 4 141 0 is_stmt 0 discriminator 2
 7737 238d 488B45E8 		movq	-24(%rbp), %rax
 7738 2391 4889C7   		movq	%rax, %rdi
 7739 2394 E8000000 		call	_ZdlPv@PLT
 7739      00
 7740 2399 EB1A     		jmp	.L415
 7741              	.L414:
 7742 239b 4889C3   		movq	%rax, %rbx
 141:TestUnitTest++.cpp **** {
 7743              		.loc 4 141 0
 7744 239e 488B45E8 		movq	-24(%rbp), %rax
 7745 23a2 4889C7   		movq	%rax, %rdi
 7746 23a5 E8000000 		call	_ZdlPv@PLT
 7746      00
 7747 23aa 4889D8   		movq	%rbx, %rax
 7748 23ad 4889C7   		movq	%rax, %rdi
 7749              	.LEHB163:
 7750 23b0 E8000000 		call	_Unwind_Resume@PLT
 7750      00
 7751              	.LEHE163:
 7752              	.L415:
 7753 23b5 4883C418 		addq	$24, %rsp
 7754 23b9 5B       		popq	%rbx
 7755 23ba 5D       		popq	%rbp
 7756              		.cfi_def_cfa 7, 8
 7757 23bb C3       		ret
 7758              		.cfi_endproc
 7759              	.LFE1611:
 7760              		.section	.gcc_except_table
 7761              	.LLSDA1611:
 7762 0494 FF       		.byte	0xff
 7763 0495 FF       		.byte	0xff
 7764 0496 01       		.byte	0x1
 7765 0497 08       		.uleb128 .LLSDACSE1611-.LLSDACSB1611
 7766              	.LLSDACSB1611:
 7767 0498 14       		.uleb128 .LEHB162-.LFB1611
 7768 0499 05       		.uleb128 .LEHE162-.LEHB162
 7769 049a 27       		.uleb128 .L414-.LFB1611
 7770 049b 00       		.uleb128 0
 7771 049c 3C       		.uleb128 .LEHB163-.LFB1611
 7772 049d 05       		.uleb128 .LEHE163-.LEHB163
 7773 049e 00       		.uleb128 0
 7774 049f 00       		.uleb128 0
 7775              	.LLSDACSE1611:
 7776              		.text
 7778              		.section	.data.rel.ro.local
 7779              		.align 8
 7782              	_ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE:
 7783 0050 00000000 		.quad	0
 7783      00000000 
 7784 0058 00000000 		.quad	_ZTIN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
 7784      00000000 
 7785 0060 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev
 7785      00000000 
 7786 0068 00000000 		.quad	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD0Ev
 7786      00000000 
 7787 0070 00000000 		.quad	_ZNK12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalled7RunImplEv
 7787      00000000 
 7788              		.text
 7789              		.align 2
 7791              	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD2Ev:
 7792              	.LFB1613:
 136:TestUnitTest++.cpp **** {
 7793              		.loc 4 136 0 is_stmt 1
 7794              		.cfi_startproc
 7795 23bc 55       		pushq	%rbp
 7796              		.cfi_def_cfa_offset 16
 7797              		.cfi_offset 6, -16
 7798 23bd 4889E5   		movq	%rsp, %rbp
 7799              		.cfi_def_cfa_register 6
 7800 23c0 4883EC10 		subq	$16, %rsp
 7801 23c4 48897DF8 		movq	%rdi, -8(%rbp)
 7802              	.LBB117:
 136:TestUnitTest++.cpp **** {
 7803              		.loc 4 136 0
 7804 23c8 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE(%rip), %rdx
 7804      000000
 7805 23cf 488B45F8 		movq	-8(%rbp), %rax
 7806 23d3 488910   		movq	%rdx, (%rax)
 7807 23d6 488B45F8 		movq	-8(%rbp), %rax
 7808 23da 4889C7   		movq	%rax, %rdi
 7809 23dd E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 7809      00
 7810              	.LBE117:
 7811 23e2 90       		nop
 7812 23e3 C9       		leave
 7813              		.cfi_def_cfa 7, 8
 7814 23e4 C3       		ret
 7815              		.cfi_endproc
 7816              	.LFE1613:
 7818              		.set	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev,_ZN12_GLOBAL__N_143TestSim
 7819 23e5 90       		.align 2
 7821              	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD0Ev:
 7822              	.LFB1615:
 136:TestUnitTest++.cpp **** {
 7823              		.loc 4 136 0
 7824              		.cfi_startproc
 7825              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7826              		.cfi_lsda 0x1b,.LLSDA1615
 7827 23e6 55       		pushq	%rbp
 7828              		.cfi_def_cfa_offset 16
 7829              		.cfi_offset 6, -16
 7830 23e7 4889E5   		movq	%rsp, %rbp
 7831              		.cfi_def_cfa_register 6
 7832 23ea 53       		pushq	%rbx
 7833 23eb 4883EC18 		subq	$24, %rsp
 7834              		.cfi_offset 3, -24
 7835 23ef 48897DE8 		movq	%rdi, -24(%rbp)
 136:TestUnitTest++.cpp **** {
 7836              		.loc 4 136 0
 7837 23f3 488B45E8 		movq	-24(%rbp), %rax
 7838 23f7 4889C7   		movq	%rax, %rdi
 7839              	.LEHB164:
 7840 23fa E8BDFFFF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev
 7840      FF
 7841              	.LEHE164:
 136:TestUnitTest++.cpp **** {
 7842              		.loc 4 136 0 is_stmt 0 discriminator 2
 7843 23ff 488B45E8 		movq	-24(%rbp), %rax
 7844 2403 4889C7   		movq	%rax, %rdi
 7845 2406 E8000000 		call	_ZdlPv@PLT
 7845      00
 7846 240b EB1A     		jmp	.L420
 7847              	.L419:
 7848 240d 4889C3   		movq	%rax, %rbx
 136:TestUnitTest++.cpp **** {
 7849              		.loc 4 136 0
 7850 2410 488B45E8 		movq	-24(%rbp), %rax
 7851 2414 4889C7   		movq	%rax, %rdi
 7852 2417 E8000000 		call	_ZdlPv@PLT
 7852      00
 7853 241c 4889D8   		movq	%rbx, %rax
 7854 241f 4889C7   		movq	%rax, %rdi
 7855              	.LEHB165:
 7856 2422 E8000000 		call	_Unwind_Resume@PLT
 7856      00
 7857              	.LEHE165:
 7858              	.L420:
 7859 2427 4883C418 		addq	$24, %rsp
 7860 242b 5B       		popq	%rbx
 7861 242c 5D       		popq	%rbp
 7862              		.cfi_def_cfa 7, 8
 7863 242d C3       		ret
 7864              		.cfi_endproc
 7865              	.LFE1615:
 7866              		.section	.gcc_except_table
 7867              	.LLSDA1615:
 7868 04a0 FF       		.byte	0xff
 7869 04a1 FF       		.byte	0xff
 7870 04a2 01       		.byte	0x1
 7871 04a3 08       		.uleb128 .LLSDACSE1615-.LLSDACSB1615
 7872              	.LLSDACSB1615:
 7873 04a4 14       		.uleb128 .LEHB164-.LFB1615
 7874 04a5 05       		.uleb128 .LEHE164-.LEHB164
 7875 04a6 27       		.uleb128 .L419-.LFB1615
 7876 04a7 00       		.uleb128 0
 7877 04a8 3C       		.uleb128 .LEHB165-.LFB1615
 7878 04a9 05       		.uleb128 .LEHE165-.LEHB165
 7879 04aa 00       		.uleb128 0
 7880 04ab 00       		.uleb128 0
 7881              	.LLSDACSE1615:
 7882              		.text
 7884              		.section	.data.rel.ro.local
 7885              		.align 8
 7888              	_ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE:
 7889 0078 00000000 		.quad	0
 7889      00000000 
 7890 0080 00000000 		.quad	_ZTIN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
 7890      00000000 
 7891 0088 00000000 		.quad	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev
 7891      00000000 
 7892 0090 00000000 		.quad	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD0Ev
 7892      00000000 
 7893 0098 00000000 		.quad	_ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEv
 7893      00000000 
 7894              		.text
 7895              		.align 2
 7897              	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD2Ev:
 7898              	.LFB1617:
  97:TestUnitTest++.cpp **** {
 7899              		.loc 4 97 0 is_stmt 1
 7900              		.cfi_startproc
 7901 242e 55       		pushq	%rbp
 7902              		.cfi_def_cfa_offset 16
 7903              		.cfi_offset 6, -16
 7904 242f 4889E5   		movq	%rsp, %rbp
 7905              		.cfi_def_cfa_register 6
 7906 2432 4883EC10 		subq	$16, %rsp
 7907 2436 48897DF8 		movq	%rdi, -8(%rbp)
 7908              	.LBB118:
  97:TestUnitTest++.cpp **** {
 7909              		.loc 4 97 0
 7910 243a 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE(%rip), %rdx
 7910      000000
 7911 2441 488B45F8 		movq	-8(%rbp), %rax
 7912 2445 488910   		movq	%rdx, (%rax)
 7913 2448 488B45F8 		movq	-8(%rbp), %rax
 7914 244c 4889C7   		movq	%rax, %rdi
 7915 244f E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 7915      00
 7916              	.LBE118:
 7917 2454 90       		nop
 7918 2455 C9       		leave
 7919              		.cfi_def_cfa 7, 8
 7920 2456 C3       		ret
 7921              		.cfi_endproc
 7922              	.LFE1617:
 7924              		.set	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev,_ZN12_GLOBAL__N_140TestCheckT
 7925 2457 90       		.align 2
 7927              	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD0Ev:
 7928              	.LFB1619:
  97:TestUnitTest++.cpp **** {
 7929              		.loc 4 97 0
 7930              		.cfi_startproc
 7931              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7932              		.cfi_lsda 0x1b,.LLSDA1619
 7933 2458 55       		pushq	%rbp
 7934              		.cfi_def_cfa_offset 16
 7935              		.cfi_offset 6, -16
 7936 2459 4889E5   		movq	%rsp, %rbp
 7937              		.cfi_def_cfa_register 6
 7938 245c 53       		pushq	%rbx
 7939 245d 4883EC18 		subq	$24, %rsp
 7940              		.cfi_offset 3, -24
 7941 2461 48897DE8 		movq	%rdi, -24(%rbp)
  97:TestUnitTest++.cpp **** {
 7942              		.loc 4 97 0
 7943 2465 488B45E8 		movq	-24(%rbp), %rax
 7944 2469 4889C7   		movq	%rax, %rdi
 7945              	.LEHB166:
 7946 246c E8BDFFFF 		call	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev
 7946      FF
 7947              	.LEHE166:
  97:TestUnitTest++.cpp **** {
 7948              		.loc 4 97 0 is_stmt 0 discriminator 2
 7949 2471 488B45E8 		movq	-24(%rbp), %rax
 7950 2475 4889C7   		movq	%rax, %rdi
 7951 2478 E8000000 		call	_ZdlPv@PLT
 7951      00
 7952 247d EB1A     		jmp	.L425
 7953              	.L424:
 7954 247f 4889C3   		movq	%rax, %rbx
  97:TestUnitTest++.cpp **** {
 7955              		.loc 4 97 0
 7956 2482 488B45E8 		movq	-24(%rbp), %rax
 7957 2486 4889C7   		movq	%rax, %rdi
 7958 2489 E8000000 		call	_ZdlPv@PLT
 7958      00
 7959 248e 4889D8   		movq	%rbx, %rax
 7960 2491 4889C7   		movq	%rax, %rdi
 7961              	.LEHB167:
 7962 2494 E8000000 		call	_Unwind_Resume@PLT
 7962      00
 7963              	.LEHE167:
 7964              	.L425:
 7965 2499 4883C418 		addq	$24, %rsp
 7966 249d 5B       		popq	%rbx
 7967 249e 5D       		popq	%rbp
 7968              		.cfi_def_cfa 7, 8
 7969 249f C3       		ret
 7970              		.cfi_endproc
 7971              	.LFE1619:
 7972              		.section	.gcc_except_table
 7973              	.LLSDA1619:
 7974 04ac FF       		.byte	0xff
 7975 04ad FF       		.byte	0xff
 7976 04ae 01       		.byte	0x1
 7977 04af 08       		.uleb128 .LLSDACSE1619-.LLSDACSB1619
 7978              	.LLSDACSB1619:
 7979 04b0 14       		.uleb128 .LEHB166-.LFB1619
 7980 04b1 05       		.uleb128 .LEHE166-.LEHB166
 7981 04b2 27       		.uleb128 .L424-.LFB1619
 7982 04b3 00       		.uleb128 0
 7983 04b4 3C       		.uleb128 .LEHB167-.LFB1619
 7984 04b5 05       		.uleb128 .LEHE167-.LEHB167
 7985 04b6 00       		.uleb128 0
 7986 04b7 00       		.uleb128 0
 7987              	.LLSDACSE1619:
 7988              		.text
 7990              		.section	.data.rel.ro.local
 7991              		.align 8
 7994              	_ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest:
 7995 00a0 00000000 		.quad	0
 7995      00000000 
 7996 00a8 00000000 		.quad	_ZTIZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
 7996      00000000 
 7997 00b0 00000000 		.quad	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1E
 7997      00000000 
 7998 00b8 00000000 		.quad	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD0E
 7998      00000000 
 7999 00c0 00000000 		.quad	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvENK14WrongThrowTest7R
 7999      00000000 
 8000              		.text
 8001              		.align 2
 8003              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD2Ev:
 8004              	.LFB1621:
  99:TestUnitTest++.cpp ****     {
 8005              		.loc 4 99 0 is_stmt 1
 8006              		.cfi_startproc
 8007 24a0 55       		pushq	%rbp
 8008              		.cfi_def_cfa_offset 16
 8009              		.cfi_offset 6, -16
 8010 24a1 4889E5   		movq	%rsp, %rbp
 8011              		.cfi_def_cfa_register 6
 8012 24a4 4883EC10 		subq	$16, %rsp
 8013 24a8 48897DF8 		movq	%rdi, -8(%rbp)
 8014              	.LBB119:
  99:TestUnitTest++.cpp ****     {
 8015              		.loc 4 99 0
 8016 24ac 488D1500 		leaq	16+_ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
 8016      000000
 8017 24b3 488B45F8 		movq	-8(%rbp), %rax
 8018 24b7 488910   		movq	%rdx, (%rax)
 8019 24ba 488B45F8 		movq	-8(%rbp), %rax
 8020 24be 4889C7   		movq	%rax, %rdi
 8021 24c1 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8021      00
 8022              	.LBE119:
 8023 24c6 90       		nop
 8024 24c7 C9       		leave
 8025              		.cfi_def_cfa 7, 8
 8026 24c8 C3       		ret
 8027              		.cfi_endproc
 8028              	.LFE1621:
 8030              		.set	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
 8031 24c9 90       		.align 2
 8033              	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD0Ev:
 8034              	.LFB1623:
  99:TestUnitTest++.cpp ****     {
 8035              		.loc 4 99 0
 8036              		.cfi_startproc
 8037              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8038              		.cfi_lsda 0x1b,.LLSDA1623
 8039 24ca 55       		pushq	%rbp
 8040              		.cfi_def_cfa_offset 16
 8041              		.cfi_offset 6, -16
 8042 24cb 4889E5   		movq	%rsp, %rbp
 8043              		.cfi_def_cfa_register 6
 8044 24ce 53       		pushq	%rbx
 8045 24cf 4883EC18 		subq	$24, %rsp
 8046              		.cfi_offset 3, -24
 8047 24d3 48897DE8 		movq	%rdi, -24(%rbp)
  99:TestUnitTest++.cpp ****     {
 8048              		.loc 4 99 0
 8049 24d7 488B45E8 		movq	-24(%rbp), %rax
 8050 24db 4889C7   		movq	%rax, %rdi
 8051              	.LEHB168:
 8052 24de E8BDFFFF 		call	_ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
 8052      FF
 8053              	.LEHE168:
  99:TestUnitTest++.cpp ****     {
 8054              		.loc 4 99 0 is_stmt 0 discriminator 2
 8055 24e3 488B45E8 		movq	-24(%rbp), %rax
 8056 24e7 4889C7   		movq	%rax, %rdi
 8057 24ea E8000000 		call	_ZdlPv@PLT
 8057      00
 8058 24ef EB1A     		jmp	.L430
 8059              	.L429:
 8060 24f1 4889C3   		movq	%rax, %rbx
  99:TestUnitTest++.cpp ****     {
 8061              		.loc 4 99 0
 8062 24f4 488B45E8 		movq	-24(%rbp), %rax
 8063 24f8 4889C7   		movq	%rax, %rdi
 8064 24fb E8000000 		call	_ZdlPv@PLT
 8064      00
 8065 2500 4889D8   		movq	%rbx, %rax
 8066 2503 4889C7   		movq	%rax, %rdi
 8067              	.LEHB169:
 8068 2506 E8000000 		call	_Unwind_Resume@PLT
 8068      00
 8069              	.LEHE169:
 8070              	.L430:
 8071 250b 4883C418 		addq	$24, %rsp
 8072 250f 5B       		popq	%rbx
 8073 2510 5D       		popq	%rbp
 8074              		.cfi_def_cfa 7, 8
 8075 2511 C3       		ret
 8076              		.cfi_endproc
 8077              	.LFE1623:
 8078              		.section	.gcc_except_table
 8079              	.LLSDA1623:
 8080 04b8 FF       		.byte	0xff
 8081 04b9 FF       		.byte	0xff
 8082 04ba 01       		.byte	0x1
 8083 04bb 08       		.uleb128 .LLSDACSE1623-.LLSDACSB1623
 8084              	.LLSDACSB1623:
 8085 04bc 14       		.uleb128 .LEHB168-.LFB1623
 8086 04bd 05       		.uleb128 .LEHE168-.LEHB168
 8087 04be 27       		.uleb128 .L429-.LFB1623
 8088 04bf 00       		.uleb128 0
 8089 04c0 3C       		.uleb128 .LEHB169-.LFB1623
 8090 04c1 05       		.uleb128 .LEHE169-.LEHB169
 8091 04c2 00       		.uleb128 0
 8092 04c3 00       		.uleb128 0
 8093              	.LLSDACSE1623:
 8094              		.text
 8096              		.section	.data.rel.ro.local
 8097              		.align 8
 8100              	_ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE:
 8101 00c8 00000000 		.quad	0
 8101      00000000 
 8102 00d0 00000000 		.quad	_ZTIN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
 8102      00000000 
 8103 00d8 00000000 		.quad	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev
 8103      00000000 
 8104 00e0 00000000 		.quad	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD0Ev
 8104      00000000 
 8105 00e8 00000000 		.quad	_ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEv
 8105      00000000 
 8106              		.text
 8107              		.align 2
 8109              	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD2Ev:
 8110              	.LFB1625:
  70:TestUnitTest++.cpp **** {
 8111              		.loc 4 70 0 is_stmt 1
 8112              		.cfi_startproc
 8113 2512 55       		pushq	%rbp
 8114              		.cfi_def_cfa_offset 16
 8115              		.cfi_offset 6, -16
 8116 2513 4889E5   		movq	%rsp, %rbp
 8117              		.cfi_def_cfa_register 6
 8118 2516 4883EC10 		subq	$16, %rsp
 8119 251a 48897DF8 		movq	%rdi, -8(%rbp)
 8120              	.LBB120:
  70:TestUnitTest++.cpp **** {
 8121              		.loc 4 70 0
 8122 251e 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE(%rip), %rdx
 8122      000000
 8123 2525 488B45F8 		movq	-8(%rbp), %rax
 8124 2529 488910   		movq	%rdx, (%rax)
 8125 252c 488B45F8 		movq	-8(%rbp), %rax
 8126 2530 4889C7   		movq	%rax, %rdi
 8127 2533 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8127      00
 8128              	.LBE120:
 8129 2538 90       		nop
 8130 2539 C9       		leave
 8131              		.cfi_def_cfa 7, 8
 8132 253a C3       		ret
 8133              		.cfi_endproc
 8134              	.LFE1625:
 8136              		.set	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev,_ZN12_GLOBAL__N_142TestChec
 8137 253b 90       		.align 2
 8139              	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD0Ev:
 8140              	.LFB1627:
  70:TestUnitTest++.cpp **** {
 8141              		.loc 4 70 0
 8142              		.cfi_startproc
 8143              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8144              		.cfi_lsda 0x1b,.LLSDA1627
 8145 253c 55       		pushq	%rbp
 8146              		.cfi_def_cfa_offset 16
 8147              		.cfi_offset 6, -16
 8148 253d 4889E5   		movq	%rsp, %rbp
 8149              		.cfi_def_cfa_register 6
 8150 2540 53       		pushq	%rbx
 8151 2541 4883EC18 		subq	$24, %rsp
 8152              		.cfi_offset 3, -24
 8153 2545 48897DE8 		movq	%rdi, -24(%rbp)
  70:TestUnitTest++.cpp **** {
 8154              		.loc 4 70 0
 8155 2549 488B45E8 		movq	-24(%rbp), %rax
 8156 254d 4889C7   		movq	%rax, %rdi
 8157              	.LEHB170:
 8158 2550 E8BDFFFF 		call	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev
 8158      FF
 8159              	.LEHE170:
  70:TestUnitTest++.cpp **** {
 8160              		.loc 4 70 0 is_stmt 0 discriminator 2
 8161 2555 488B45E8 		movq	-24(%rbp), %rax
 8162 2559 4889C7   		movq	%rax, %rdi
 8163 255c E8000000 		call	_ZdlPv@PLT
 8163      00
 8164 2561 EB1A     		jmp	.L435
 8165              	.L434:
 8166 2563 4889C3   		movq	%rax, %rbx
  70:TestUnitTest++.cpp **** {
 8167              		.loc 4 70 0
 8168 2566 488B45E8 		movq	-24(%rbp), %rax
 8169 256a 4889C7   		movq	%rax, %rdi
 8170 256d E8000000 		call	_ZdlPv@PLT
 8170      00
 8171 2572 4889D8   		movq	%rbx, %rax
 8172 2575 4889C7   		movq	%rax, %rdi
 8173              	.LEHB171:
 8174 2578 E8000000 		call	_Unwind_Resume@PLT
 8174      00
 8175              	.LEHE171:
 8176              	.L435:
 8177 257d 4883C418 		addq	$24, %rsp
 8178 2581 5B       		popq	%rbx
 8179 2582 5D       		popq	%rbp
 8180              		.cfi_def_cfa 7, 8
 8181 2583 C3       		ret
 8182              		.cfi_endproc
 8183              	.LFE1627:
 8184              		.section	.gcc_except_table
 8185              	.LLSDA1627:
 8186 04c4 FF       		.byte	0xff
 8187 04c5 FF       		.byte	0xff
 8188 04c6 01       		.byte	0x1
 8189 04c7 08       		.uleb128 .LLSDACSE1627-.LLSDACSB1627
 8190              	.LLSDACSB1627:
 8191 04c8 14       		.uleb128 .LEHB170-.LFB1627
 8192 04c9 05       		.uleb128 .LEHE170-.LEHB170
 8193 04ca 27       		.uleb128 .L434-.LFB1627
 8194 04cb 00       		.uleb128 0
 8195 04cc 3C       		.uleb128 .LEHB171-.LFB1627
 8196 04cd 05       		.uleb128 .LEHE171-.LEHB171
 8197 04ce 00       		.uleb128 0
 8198 04cf 00       		.uleb128 0
 8199              	.LLSDACSE1627:
 8200              		.text
 8202              		.section	.data.rel.ro.local
 8203              		.align 8
 8206              	_ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest:
 8207 00f0 00000000 		.quad	0
 8207      00000000 
 8208 00f8 00000000 		.quad	_ZTIZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
 8208      00000000 
 8209 0100 00000000 		.quad	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
 8209      00000000 
 8210 0108 00000000 		.quad	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD0Ev
 8210      00000000 
 8211 0110 00000000 		.quad	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest7Ru
 8211      00000000 
 8212              		.text
 8213              		.align 2
 8215              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD2Ev:
 8216              	.LFB1629:
  72:TestUnitTest++.cpp ****     {
 8217              		.loc 4 72 0 is_stmt 1
 8218              		.cfi_startproc
 8219 2584 55       		pushq	%rbp
 8220              		.cfi_def_cfa_offset 16
 8221              		.cfi_offset 6, -16
 8222 2585 4889E5   		movq	%rsp, %rbp
 8223              		.cfi_def_cfa_register 6
 8224 2588 4883EC10 		subq	$16, %rsp
 8225 258c 48897DF8 		movq	%rdi, -8(%rbp)
 8226              	.LBB121:
  72:TestUnitTest++.cpp ****     {
 8227              		.loc 4 72 0
 8228 2590 488D1500 		leaq	16+_ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest(
 8228      000000
 8229 2597 488B45F8 		movq	-8(%rbp), %rax
 8230 259b 488910   		movq	%rdx, (%rax)
 8231 259e 488B45F8 		movq	-8(%rbp), %rax
 8232 25a2 4889C7   		movq	%rax, %rdi
 8233 25a5 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8233      00
 8234              	.LBE121:
 8235 25aa 90       		nop
 8236 25ab C9       		leave
 8237              		.cfi_def_cfa 7, 8
 8238 25ac C3       		ret
 8239              		.cfi_endproc
 8240              	.LFE1629:
 8242              		.set	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev,
 8243 25ad 90       		.align 2
 8245              	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD0Ev:
 8246              	.LFB1631:
  72:TestUnitTest++.cpp ****     {
 8247              		.loc 4 72 0
 8248              		.cfi_startproc
 8249              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8250              		.cfi_lsda 0x1b,.LLSDA1631
 8251 25ae 55       		pushq	%rbp
 8252              		.cfi_def_cfa_offset 16
 8253              		.cfi_offset 6, -16
 8254 25af 4889E5   		movq	%rsp, %rbp
 8255              		.cfi_def_cfa_register 6
 8256 25b2 53       		pushq	%rbx
 8257 25b3 4883EC18 		subq	$24, %rsp
 8258              		.cfi_offset 3, -24
 8259 25b7 48897DE8 		movq	%rdi, -24(%rbp)
  72:TestUnitTest++.cpp ****     {
 8260              		.loc 4 72 0
 8261 25bb 488B45E8 		movq	-24(%rbp), %rax
 8262 25bf 4889C7   		movq	%rax, %rdi
 8263              	.LEHB172:
 8264 25c2 E8BDFFFF 		call	_ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
 8264      FF
 8265              	.LEHE172:
  72:TestUnitTest++.cpp ****     {
 8266              		.loc 4 72 0 is_stmt 0 discriminator 2
 8267 25c7 488B45E8 		movq	-24(%rbp), %rax
 8268 25cb 4889C7   		movq	%rax, %rdi
 8269 25ce E8000000 		call	_ZdlPv@PLT
 8269      00
 8270 25d3 EB1A     		jmp	.L440
 8271              	.L439:
 8272 25d5 4889C3   		movq	%rax, %rbx
  72:TestUnitTest++.cpp ****     {
 8273              		.loc 4 72 0
 8274 25d8 488B45E8 		movq	-24(%rbp), %rax
 8275 25dc 4889C7   		movq	%rax, %rdi
 8276 25df E8000000 		call	_ZdlPv@PLT
 8276      00
 8277 25e4 4889D8   		movq	%rbx, %rax
 8278 25e7 4889C7   		movq	%rax, %rdi
 8279              	.LEHB173:
 8280 25ea E8000000 		call	_Unwind_Resume@PLT
 8280      00
 8281              	.LEHE173:
 8282              	.L440:
 8283 25ef 4883C418 		addq	$24, %rsp
 8284 25f3 5B       		popq	%rbx
 8285 25f4 5D       		popq	%rbp
 8286              		.cfi_def_cfa 7, 8
 8287 25f5 C3       		ret
 8288              		.cfi_endproc
 8289              	.LFE1631:
 8290              		.section	.gcc_except_table
 8291              	.LLSDA1631:
 8292 04d0 FF       		.byte	0xff
 8293 04d1 FF       		.byte	0xff
 8294 04d2 01       		.byte	0x1
 8295 04d3 08       		.uleb128 .LLSDACSE1631-.LLSDACSB1631
 8296              	.LLSDACSB1631:
 8297 04d4 14       		.uleb128 .LEHB172-.LFB1631
 8298 04d5 05       		.uleb128 .LEHE172-.LEHB172
 8299 04d6 27       		.uleb128 .L439-.LFB1631
 8300 04d7 00       		.uleb128 0
 8301 04d8 3C       		.uleb128 .LEHB173-.LFB1631
 8302 04d9 05       		.uleb128 .LEHE173-.LEHB173
 8303 04da 00       		.uleb128 0
 8304 04db 00       		.uleb128 0
 8305              	.LLSDACSE1631:
 8306              		.text
 8308              		.section	.data.rel.ro.local
 8309              		.align 8
 8312              	_ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE:
 8313 0118 00000000 		.quad	0
 8313      00000000 
 8314 0120 00000000 		.quad	_ZTIN12_GLOBAL__N_123TestCheckAssertSucceedsE
 8314      00000000 
 8315 0128 00000000 		.quad	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev
 8315      00000000 
 8316 0130 00000000 		.quad	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD0Ev
 8316      00000000 
 8317 0138 00000000 		.quad	_ZNK12_GLOBAL__N_123TestCheckAssertSucceeds7RunImplEv
 8317      00000000 
 8318              		.text
 8319              		.align 2
 8321              	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD2Ev:
 8322              	.LFB1633:
  65:TestUnitTest++.cpp **** {
 8323              		.loc 4 65 0 is_stmt 1
 8324              		.cfi_startproc
 8325 25f6 55       		pushq	%rbp
 8326              		.cfi_def_cfa_offset 16
 8327              		.cfi_offset 6, -16
 8328 25f7 4889E5   		movq	%rsp, %rbp
 8329              		.cfi_def_cfa_register 6
 8330 25fa 4883EC10 		subq	$16, %rsp
 8331 25fe 48897DF8 		movq	%rdi, -8(%rbp)
 8332              	.LBB122:
  65:TestUnitTest++.cpp **** {
 8333              		.loc 4 65 0
 8334 2602 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE(%rip), %rdx
 8334      000000
 8335 2609 488B45F8 		movq	-8(%rbp), %rax
 8336 260d 488910   		movq	%rdx, (%rax)
 8337 2610 488B45F8 		movq	-8(%rbp), %rax
 8338 2614 4889C7   		movq	%rax, %rdi
 8339 2617 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8339      00
 8340              	.LBE122:
 8341 261c 90       		nop
 8342 261d C9       		leave
 8343              		.cfi_def_cfa 7, 8
 8344 261e C3       		ret
 8345              		.cfi_endproc
 8346              	.LFE1633:
 8348              		.set	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev,_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD2Ev
 8349 261f 90       		.align 2
 8351              	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD0Ev:
 8352              	.LFB1635:
  65:TestUnitTest++.cpp **** {
 8353              		.loc 4 65 0
 8354              		.cfi_startproc
 8355              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8356              		.cfi_lsda 0x1b,.LLSDA1635
 8357 2620 55       		pushq	%rbp
 8358              		.cfi_def_cfa_offset 16
 8359              		.cfi_offset 6, -16
 8360 2621 4889E5   		movq	%rsp, %rbp
 8361              		.cfi_def_cfa_register 6
 8362 2624 53       		pushq	%rbx
 8363 2625 4883EC18 		subq	$24, %rsp
 8364              		.cfi_offset 3, -24
 8365 2629 48897DE8 		movq	%rdi, -24(%rbp)
  65:TestUnitTest++.cpp **** {
 8366              		.loc 4 65 0
 8367 262d 488B45E8 		movq	-24(%rbp), %rax
 8368 2631 4889C7   		movq	%rax, %rdi
 8369              	.LEHB174:
 8370 2634 E8BDFFFF 		call	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev
 8370      FF
 8371              	.LEHE174:
  65:TestUnitTest++.cpp **** {
 8372              		.loc 4 65 0 is_stmt 0 discriminator 2
 8373 2639 488B45E8 		movq	-24(%rbp), %rax
 8374 263d 4889C7   		movq	%rax, %rdi
 8375 2640 E8000000 		call	_ZdlPv@PLT
 8375      00
 8376 2645 EB1A     		jmp	.L445
 8377              	.L444:
 8378 2647 4889C3   		movq	%rax, %rbx
  65:TestUnitTest++.cpp **** {
 8379              		.loc 4 65 0
 8380 264a 488B45E8 		movq	-24(%rbp), %rax
 8381 264e 4889C7   		movq	%rax, %rdi
 8382 2651 E8000000 		call	_ZdlPv@PLT
 8382      00
 8383 2656 4889D8   		movq	%rbx, %rax
 8384 2659 4889C7   		movq	%rax, %rdi
 8385              	.LEHB175:
 8386 265c E8000000 		call	_Unwind_Resume@PLT
 8386      00
 8387              	.LEHE175:
 8388              	.L445:
 8389 2661 4883C418 		addq	$24, %rsp
 8390 2665 5B       		popq	%rbx
 8391 2666 5D       		popq	%rbp
 8392              		.cfi_def_cfa 7, 8
 8393 2667 C3       		ret
 8394              		.cfi_endproc
 8395              	.LFE1635:
 8396              		.section	.gcc_except_table
 8397              	.LLSDA1635:
 8398 04dc FF       		.byte	0xff
 8399 04dd FF       		.byte	0xff
 8400 04de 01       		.byte	0x1
 8401 04df 08       		.uleb128 .LLSDACSE1635-.LLSDACSB1635
 8402              	.LLSDACSB1635:
 8403 04e0 14       		.uleb128 .LEHB174-.LFB1635
 8404 04e1 05       		.uleb128 .LEHE174-.LEHB174
 8405 04e2 27       		.uleb128 .L444-.LFB1635
 8406 04e3 00       		.uleb128 0
 8407 04e4 3C       		.uleb128 .LEHB175-.LFB1635
 8408 04e5 05       		.uleb128 .LEHE175-.LEHB175
 8409 04e6 00       		.uleb128 0
 8410 04e7 00       		.uleb128 0
 8411              	.LLSDACSE1635:
 8412              		.text
 8414              		.section	.data.rel.ro.local
 8415              		.align 8
 8418              	_ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE:
 8419 0140 00000000 		.quad	0
 8419      00000000 
 8420 0148 00000000 		.quad	_ZTIN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
 8420      00000000 
 8421 0150 00000000 		.quad	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev
 8421      00000000 
 8422 0158 00000000 		.quad	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD0Ev
 8422      00000000 
 8423 0160 00000000 		.quad	_ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEv
 8423      00000000 
 8424              		.text
 8425              		.align 2
 8427              	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD2Ev:
 8428              	.LFB1637:
  59:TestUnitTest++.cpp **** {
 8429              		.loc 4 59 0 is_stmt 1
 8430              		.cfi_startproc
 8431 2668 55       		pushq	%rbp
 8432              		.cfi_def_cfa_offset 16
 8433              		.cfi_offset 6, -16
 8434 2669 4889E5   		movq	%rsp, %rbp
 8435              		.cfi_def_cfa_register 6
 8436 266c 4883EC10 		subq	$16, %rsp
 8437 2670 48897DF8 		movq	%rdi, -8(%rbp)
 8438              	.LBB123:
  59:TestUnitTest++.cpp **** {
 8439              		.loc 4 59 0
 8440 2674 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE(%rip), %rdx
 8440      000000
 8441 267b 488B45F8 		movq	-8(%rbp), %rax
 8442 267f 488910   		movq	%rdx, (%rax)
 8443 2682 488B45F8 		movq	-8(%rbp), %rax
 8444 2686 4889C7   		movq	%rax, %rdi
 8445 2689 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8445      00
 8446              	.LBE123:
 8447 268e 90       		nop
 8448 268f C9       		leave
 8449              		.cfi_def_cfa 7, 8
 8450 2690 C3       		ret
 8451              		.cfi_endproc
 8452              	.LFE1637:
 8454              		.set	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev,_ZN12_GLOBAL__N_145TestC
 8455 2691 90       		.align 2
 8457              	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD0Ev:
 8458              	.LFB1639:
  59:TestUnitTest++.cpp **** {
 8459              		.loc 4 59 0
 8460              		.cfi_startproc
 8461              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8462              		.cfi_lsda 0x1b,.LLSDA1639
 8463 2692 55       		pushq	%rbp
 8464              		.cfi_def_cfa_offset 16
 8465              		.cfi_offset 6, -16
 8466 2693 4889E5   		movq	%rsp, %rbp
 8467              		.cfi_def_cfa_register 6
 8468 2696 53       		pushq	%rbx
 8469 2697 4883EC18 		subq	$24, %rsp
 8470              		.cfi_offset 3, -24
 8471 269b 48897DE8 		movq	%rdi, -24(%rbp)
  59:TestUnitTest++.cpp **** {
 8472              		.loc 4 59 0
 8473 269f 488B45E8 		movq	-24(%rbp), %rax
 8474 26a3 4889C7   		movq	%rax, %rdi
 8475              	.LEHB176:
 8476 26a6 E8BDFFFF 		call	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev
 8476      FF
 8477              	.LEHE176:
  59:TestUnitTest++.cpp **** {
 8478              		.loc 4 59 0 is_stmt 0 discriminator 2
 8479 26ab 488B45E8 		movq	-24(%rbp), %rax
 8480 26af 4889C7   		movq	%rax, %rdi
 8481 26b2 E8000000 		call	_ZdlPv@PLT
 8481      00
 8482 26b7 EB1A     		jmp	.L450
 8483              	.L449:
 8484 26b9 4889C3   		movq	%rax, %rbx
  59:TestUnitTest++.cpp **** {
 8485              		.loc 4 59 0
 8486 26bc 488B45E8 		movq	-24(%rbp), %rax
 8487 26c0 4889C7   		movq	%rax, %rdi
 8488 26c3 E8000000 		call	_ZdlPv@PLT
 8488      00
 8489 26c8 4889D8   		movq	%rbx, %rax
 8490 26cb 4889C7   		movq	%rax, %rdi
 8491              	.LEHB177:
 8492 26ce E8000000 		call	_Unwind_Resume@PLT
 8492      00
 8493              	.LEHE177:
 8494              	.L450:
 8495 26d3 4883C418 		addq	$24, %rsp
 8496 26d7 5B       		popq	%rbx
 8497 26d8 5D       		popq	%rbp
 8498              		.cfi_def_cfa 7, 8
 8499 26d9 C3       		ret
 8500              		.cfi_endproc
 8501              	.LFE1639:
 8502              		.section	.gcc_except_table
 8503              	.LLSDA1639:
 8504 04e8 FF       		.byte	0xff
 8505 04e9 FF       		.byte	0xff
 8506 04ea 01       		.byte	0x1
 8507 04eb 08       		.uleb128 .LLSDACSE1639-.LLSDACSB1639
 8508              	.LLSDACSB1639:
 8509 04ec 14       		.uleb128 .LEHB176-.LFB1639
 8510 04ed 05       		.uleb128 .LEHE176-.LEHB176
 8511 04ee 27       		.uleb128 .L449-.LFB1639
 8512 04ef 00       		.uleb128 0
 8513 04f0 3C       		.uleb128 .LEHB177-.LFB1639
 8514 04f1 05       		.uleb128 .LEHE177-.LEHB177
 8515 04f2 00       		.uleb128 0
 8516 04f3 00       		.uleb128 0
 8517              	.LLSDACSE1639:
 8518              		.text
 8520              		.section	.data.rel.ro.local
 8521              		.align 8
 8524              	_ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE:
 8525 0168 00000000 		.quad	0
 8525      00000000 
 8526 0170 00000000 		.quad	_ZTIN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
 8526      00000000 
 8527 0178 00000000 		.quad	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev
 8527      00000000 
 8528 0180 00000000 		.quad	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD0Ev
 8528      00000000 
 8529 0188 00000000 		.quad	_ZNK12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectors7RunImplEv
 8529      00000000 
 8530              		.text
 8531              		.align 2
 8533              	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD2Ev:
 8534              	.LFB1641:
  50:TestUnitTest++.cpp **** {
 8535              		.loc 4 50 0 is_stmt 1
 8536              		.cfi_startproc
 8537 26da 55       		pushq	%rbp
 8538              		.cfi_def_cfa_offset 16
 8539              		.cfi_offset 6, -16
 8540 26db 4889E5   		movq	%rsp, %rbp
 8541              		.cfi_def_cfa_register 6
 8542 26de 4883EC10 		subq	$16, %rsp
 8543 26e2 48897DF8 		movq	%rdi, -8(%rbp)
 8544              	.LBB124:
  50:TestUnitTest++.cpp **** {
 8545              		.loc 4 50 0
 8546 26e6 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE(%rip), %rdx
 8546      000000
 8547 26ed 488B45F8 		movq	-8(%rbp), %rax
 8548 26f1 488910   		movq	%rdx, (%rax)
 8549 26f4 488B45F8 		movq	-8(%rbp), %rax
 8550 26f8 4889C7   		movq	%rax, %rdi
 8551 26fb E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8551      00
 8552              	.LBE124:
 8553 2700 90       		nop
 8554 2701 C9       		leave
 8555              		.cfi_def_cfa 7, 8
 8556 2702 C3       		ret
 8557              		.cfi_endproc
 8558              	.LFE1641:
 8560              		.set	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev,_ZN12_GLOBAL__N_135TestCheckArrayC
 8561 2703 90       		.align 2
 8563              	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD0Ev:
 8564              	.LFB1643:
  50:TestUnitTest++.cpp **** {
 8565              		.loc 4 50 0
 8566              		.cfi_startproc
 8567              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8568              		.cfi_lsda 0x1b,.LLSDA1643
 8569 2704 55       		pushq	%rbp
 8570              		.cfi_def_cfa_offset 16
 8571              		.cfi_offset 6, -16
 8572 2705 4889E5   		movq	%rsp, %rbp
 8573              		.cfi_def_cfa_register 6
 8574 2708 53       		pushq	%rbx
 8575 2709 4883EC18 		subq	$24, %rsp
 8576              		.cfi_offset 3, -24
 8577 270d 48897DE8 		movq	%rdi, -24(%rbp)
  50:TestUnitTest++.cpp **** {
 8578              		.loc 4 50 0
 8579 2711 488B45E8 		movq	-24(%rbp), %rax
 8580 2715 4889C7   		movq	%rax, %rdi
 8581              	.LEHB178:
 8582 2718 E8BDFFFF 		call	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev
 8582      FF
 8583              	.LEHE178:
  50:TestUnitTest++.cpp **** {
 8584              		.loc 4 50 0 is_stmt 0 discriminator 2
 8585 271d 488B45E8 		movq	-24(%rbp), %rax
 8586 2721 4889C7   		movq	%rax, %rdi
 8587 2724 E8000000 		call	_ZdlPv@PLT
 8587      00
 8588 2729 EB1A     		jmp	.L455
 8589              	.L454:
 8590 272b 4889C3   		movq	%rax, %rbx
  50:TestUnitTest++.cpp **** {
 8591              		.loc 4 50 0
 8592 272e 488B45E8 		movq	-24(%rbp), %rax
 8593 2732 4889C7   		movq	%rax, %rdi
 8594 2735 E8000000 		call	_ZdlPv@PLT
 8594      00
 8595 273a 4889D8   		movq	%rbx, %rax
 8596 273d 4889C7   		movq	%rax, %rdi
 8597              	.LEHB179:
 8598 2740 E8000000 		call	_Unwind_Resume@PLT
 8598      00
 8599              	.LEHE179:
 8600              	.L455:
 8601 2745 4883C418 		addq	$24, %rsp
 8602 2749 5B       		popq	%rbx
 8603 274a 5D       		popq	%rbp
 8604              		.cfi_def_cfa 7, 8
 8605 274b C3       		ret
 8606              		.cfi_endproc
 8607              	.LFE1643:
 8608              		.section	.gcc_except_table
 8609              	.LLSDA1643:
 8610 04f4 FF       		.byte	0xff
 8611 04f5 FF       		.byte	0xff
 8612 04f6 01       		.byte	0x1
 8613 04f7 08       		.uleb128 .LLSDACSE1643-.LLSDACSB1643
 8614              	.LLSDACSB1643:
 8615 04f8 14       		.uleb128 .LEHB178-.LFB1643
 8616 04f9 05       		.uleb128 .LEHE178-.LEHB178
 8617 04fa 27       		.uleb128 .L454-.LFB1643
 8618 04fb 00       		.uleb128 0
 8619 04fc 3C       		.uleb128 .LEHB179-.LFB1643
 8620 04fd 05       		.uleb128 .LEHE179-.LEHB179
 8621 04fe 00       		.uleb128 0
 8622 04ff 00       		.uleb128 0
 8623              	.LLSDACSE1643:
 8624              		.text
 8626              		.section	.data.rel.ro.local
 8627              		.align 8
 8630              	_ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE:
 8631 0190 00000000 		.quad	0
 8631      00000000 
 8632 0198 00000000 		.quad	_ZTIN12_GLOBAL__N_122TestArrayCloseSucceedsE
 8632      00000000 
 8633 01a0 00000000 		.quad	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev
 8633      00000000 
 8634 01a8 00000000 		.quad	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD0Ev
 8634      00000000 
 8635 01b0 00000000 		.quad	_ZNK12_GLOBAL__N_122TestArrayCloseSucceeds7RunImplEv
 8635      00000000 
 8636              		.text
 8637              		.align 2
 8639              	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD2Ev:
 8640              	.LFB1645:
  43:TestUnitTest++.cpp **** {
 8641              		.loc 4 43 0 is_stmt 1
 8642              		.cfi_startproc
 8643 274c 55       		pushq	%rbp
 8644              		.cfi_def_cfa_offset 16
 8645              		.cfi_offset 6, -16
 8646 274d 4889E5   		movq	%rsp, %rbp
 8647              		.cfi_def_cfa_register 6
 8648 2750 4883EC10 		subq	$16, %rsp
 8649 2754 48897DF8 		movq	%rdi, -8(%rbp)
 8650              	.LBB125:
  43:TestUnitTest++.cpp **** {
 8651              		.loc 4 43 0
 8652 2758 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE(%rip), %rdx
 8652      000000
 8653 275f 488B45F8 		movq	-8(%rbp), %rax
 8654 2763 488910   		movq	%rdx, (%rax)
 8655 2766 488B45F8 		movq	-8(%rbp), %rax
 8656 276a 4889C7   		movq	%rax, %rdi
 8657 276d E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8657      00
 8658              	.LBE125:
 8659 2772 90       		nop
 8660 2773 C9       		leave
 8661              		.cfi_def_cfa 7, 8
 8662 2774 C3       		ret
 8663              		.cfi_endproc
 8664              	.LFE1645:
 8666              		.set	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev,_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD2Ev
 8667 2775 90       		.align 2
 8669              	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD0Ev:
 8670              	.LFB1647:
  43:TestUnitTest++.cpp **** {
 8671              		.loc 4 43 0
 8672              		.cfi_startproc
 8673              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8674              		.cfi_lsda 0x1b,.LLSDA1647
 8675 2776 55       		pushq	%rbp
 8676              		.cfi_def_cfa_offset 16
 8677              		.cfi_offset 6, -16
 8678 2777 4889E5   		movq	%rsp, %rbp
 8679              		.cfi_def_cfa_register 6
 8680 277a 53       		pushq	%rbx
 8681 277b 4883EC18 		subq	$24, %rsp
 8682              		.cfi_offset 3, -24
 8683 277f 48897DE8 		movq	%rdi, -24(%rbp)
  43:TestUnitTest++.cpp **** {
 8684              		.loc 4 43 0
 8685 2783 488B45E8 		movq	-24(%rbp), %rax
 8686 2787 4889C7   		movq	%rax, %rdi
 8687              	.LEHB180:
 8688 278a E8BDFFFF 		call	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev
 8688      FF
 8689              	.LEHE180:
  43:TestUnitTest++.cpp **** {
 8690              		.loc 4 43 0 is_stmt 0 discriminator 2
 8691 278f 488B45E8 		movq	-24(%rbp), %rax
 8692 2793 4889C7   		movq	%rax, %rdi
 8693 2796 E8000000 		call	_ZdlPv@PLT
 8693      00
 8694 279b EB1A     		jmp	.L460
 8695              	.L459:
 8696 279d 4889C3   		movq	%rax, %rbx
  43:TestUnitTest++.cpp **** {
 8697              		.loc 4 43 0
 8698 27a0 488B45E8 		movq	-24(%rbp), %rax
 8699 27a4 4889C7   		movq	%rax, %rdi
 8700 27a7 E8000000 		call	_ZdlPv@PLT
 8700      00
 8701 27ac 4889D8   		movq	%rbx, %rax
 8702 27af 4889C7   		movq	%rax, %rdi
 8703              	.LEHB181:
 8704 27b2 E8000000 		call	_Unwind_Resume@PLT
 8704      00
 8705              	.LEHE181:
 8706              	.L460:
 8707 27b7 4883C418 		addq	$24, %rsp
 8708 27bb 5B       		popq	%rbx
 8709 27bc 5D       		popq	%rbp
 8710              		.cfi_def_cfa 7, 8
 8711 27bd C3       		ret
 8712              		.cfi_endproc
 8713              	.LFE1647:
 8714              		.section	.gcc_except_table
 8715              	.LLSDA1647:
 8716 0500 FF       		.byte	0xff
 8717 0501 FF       		.byte	0xff
 8718 0502 01       		.byte	0x1
 8719 0503 08       		.uleb128 .LLSDACSE1647-.LLSDACSB1647
 8720              	.LLSDACSB1647:
 8721 0504 14       		.uleb128 .LEHB180-.LFB1647
 8722 0505 05       		.uleb128 .LEHE180-.LEHB180
 8723 0506 27       		.uleb128 .L459-.LFB1647
 8724 0507 00       		.uleb128 0
 8725 0508 3C       		.uleb128 .LEHB181-.LFB1647
 8726 0509 05       		.uleb128 .LEHE181-.LEHB181
 8727 050a 00       		.uleb128 0
 8728 050b 00       		.uleb128 0
 8729              	.LLSDACSE1647:
 8730              		.text
 8732              		.section	.data.rel.ro.local
 8733              		.align 8
 8736              	_ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE:
 8737 01b8 00000000 		.quad	0
 8737      00000000 
 8738 01c0 00000000 		.quad	_ZTIN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
 8738      00000000 
 8739 01c8 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev
 8739      00000000 
 8740 01d0 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD0Ev
 8740      00000000 
 8741 01d8 00000000 		.quad	_ZNK12_GLOBAL__N_127TestValidCheckCloseSucceeds7RunImplEv
 8741      00000000 
 8742              		.text
 8743              		.align 2
 8745              	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD2Ev:
 8746              	.LFB1649:
  37:TestUnitTest++.cpp **** {
 8747              		.loc 4 37 0 is_stmt 1
 8748              		.cfi_startproc
 8749 27be 55       		pushq	%rbp
 8750              		.cfi_def_cfa_offset 16
 8751              		.cfi_offset 6, -16
 8752 27bf 4889E5   		movq	%rsp, %rbp
 8753              		.cfi_def_cfa_register 6
 8754 27c2 4883EC10 		subq	$16, %rsp
 8755 27c6 48897DF8 		movq	%rdi, -8(%rbp)
 8756              	.LBB126:
  37:TestUnitTest++.cpp **** {
 8757              		.loc 4 37 0
 8758 27ca 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE(%rip), %rdx
 8758      000000
 8759 27d1 488B45F8 		movq	-8(%rbp), %rax
 8760 27d5 488910   		movq	%rdx, (%rax)
 8761 27d8 488B45F8 		movq	-8(%rbp), %rax
 8762 27dc 4889C7   		movq	%rax, %rdi
 8763 27df E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8763      00
 8764              	.LBE126:
 8765 27e4 90       		nop
 8766 27e5 C9       		leave
 8767              		.cfi_def_cfa 7, 8
 8768 27e6 C3       		ret
 8769              		.cfi_endproc
 8770              	.LFE1649:
 8772              		.set	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev,_ZN12_GLOBAL__N_127TestValidCheckCloseSucc
 8773 27e7 90       		.align 2
 8775              	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD0Ev:
 8776              	.LFB1651:
  37:TestUnitTest++.cpp **** {
 8777              		.loc 4 37 0
 8778              		.cfi_startproc
 8779              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8780              		.cfi_lsda 0x1b,.LLSDA1651
 8781 27e8 55       		pushq	%rbp
 8782              		.cfi_def_cfa_offset 16
 8783              		.cfi_offset 6, -16
 8784 27e9 4889E5   		movq	%rsp, %rbp
 8785              		.cfi_def_cfa_register 6
 8786 27ec 53       		pushq	%rbx
 8787 27ed 4883EC18 		subq	$24, %rsp
 8788              		.cfi_offset 3, -24
 8789 27f1 48897DE8 		movq	%rdi, -24(%rbp)
  37:TestUnitTest++.cpp **** {
 8790              		.loc 4 37 0
 8791 27f5 488B45E8 		movq	-24(%rbp), %rax
 8792 27f9 4889C7   		movq	%rax, %rdi
 8793              	.LEHB182:
 8794 27fc E8BDFFFF 		call	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev
 8794      FF
 8795              	.LEHE182:
  37:TestUnitTest++.cpp **** {
 8796              		.loc 4 37 0 is_stmt 0 discriminator 2
 8797 2801 488B45E8 		movq	-24(%rbp), %rax
 8798 2805 4889C7   		movq	%rax, %rdi
 8799 2808 E8000000 		call	_ZdlPv@PLT
 8799      00
 8800 280d EB1A     		jmp	.L465
 8801              	.L464:
 8802 280f 4889C3   		movq	%rax, %rbx
  37:TestUnitTest++.cpp **** {
 8803              		.loc 4 37 0
 8804 2812 488B45E8 		movq	-24(%rbp), %rax
 8805 2816 4889C7   		movq	%rax, %rdi
 8806 2819 E8000000 		call	_ZdlPv@PLT
 8806      00
 8807 281e 4889D8   		movq	%rbx, %rax
 8808 2821 4889C7   		movq	%rax, %rdi
 8809              	.LEHB183:
 8810 2824 E8000000 		call	_Unwind_Resume@PLT
 8810      00
 8811              	.LEHE183:
 8812              	.L465:
 8813 2829 4883C418 		addq	$24, %rsp
 8814 282d 5B       		popq	%rbx
 8815 282e 5D       		popq	%rbp
 8816              		.cfi_def_cfa 7, 8
 8817 282f C3       		ret
 8818              		.cfi_endproc
 8819              	.LFE1651:
 8820              		.section	.gcc_except_table
 8821              	.LLSDA1651:
 8822 050c FF       		.byte	0xff
 8823 050d FF       		.byte	0xff
 8824 050e 01       		.byte	0x1
 8825 050f 08       		.uleb128 .LLSDACSE1651-.LLSDACSB1651
 8826              	.LLSDACSB1651:
 8827 0510 14       		.uleb128 .LEHB182-.LFB1651
 8828 0511 05       		.uleb128 .LEHE182-.LEHB182
 8829 0512 27       		.uleb128 .L464-.LFB1651
 8830 0513 00       		.uleb128 0
 8831 0514 3C       		.uleb128 .LEHB183-.LFB1651
 8832 0515 05       		.uleb128 .LEHE183-.LEHB183
 8833 0516 00       		.uleb128 0
 8834 0517 00       		.uleb128 0
 8835              	.LLSDACSE1651:
 8836              		.text
 8838              		.section	.data.rel.ro.local
 8839              		.align 8
 8842              	_ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE:
 8843 01e0 00000000 		.quad	0
 8843      00000000 
 8844 01e8 00000000 		.quad	_ZTIN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
 8844      00000000 
 8845 01f0 00000000 		.quad	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev
 8845      00000000 
 8846 01f8 00000000 		.quad	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD0Ev
 8846      00000000 
 8847 0200 00000000 		.quad	_ZNK12_GLOBAL__N_131TestCheckEqualWorksWithPointers7RunImplEv
 8847      00000000 
 8848              		.text
 8849              		.align 2
 8851              	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD2Ev:
 8852              	.LFB1653:
  31:TestUnitTest++.cpp **** {
 8853              		.loc 4 31 0 is_stmt 1
 8854              		.cfi_startproc
 8855 2830 55       		pushq	%rbp
 8856              		.cfi_def_cfa_offset 16
 8857              		.cfi_offset 6, -16
 8858 2831 4889E5   		movq	%rsp, %rbp
 8859              		.cfi_def_cfa_register 6
 8860 2834 4883EC10 		subq	$16, %rsp
 8861 2838 48897DF8 		movq	%rdi, -8(%rbp)
 8862              	.LBB127:
  31:TestUnitTest++.cpp **** {
 8863              		.loc 4 31 0
 8864 283c 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE(%rip), %rdx
 8864      000000
 8865 2843 488B45F8 		movq	-8(%rbp), %rax
 8866 2847 488910   		movq	%rdx, (%rax)
 8867 284a 488B45F8 		movq	-8(%rbp), %rax
 8868 284e 4889C7   		movq	%rax, %rdi
 8869 2851 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8869      00
 8870              	.LBE127:
 8871 2856 90       		nop
 8872 2857 C9       		leave
 8873              		.cfi_def_cfa 7, 8
 8874 2858 C3       		ret
 8875              		.cfi_endproc
 8876              	.LFE1653:
 8878              		.set	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev,_ZN12_GLOBAL__N_131TestCheckEqualWorks
 8879 2859 90       		.align 2
 8881              	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD0Ev:
 8882              	.LFB1655:
  31:TestUnitTest++.cpp **** {
 8883              		.loc 4 31 0
 8884              		.cfi_startproc
 8885              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8886              		.cfi_lsda 0x1b,.LLSDA1655
 8887 285a 55       		pushq	%rbp
 8888              		.cfi_def_cfa_offset 16
 8889              		.cfi_offset 6, -16
 8890 285b 4889E5   		movq	%rsp, %rbp
 8891              		.cfi_def_cfa_register 6
 8892 285e 53       		pushq	%rbx
 8893 285f 4883EC18 		subq	$24, %rsp
 8894              		.cfi_offset 3, -24
 8895 2863 48897DE8 		movq	%rdi, -24(%rbp)
  31:TestUnitTest++.cpp **** {
 8896              		.loc 4 31 0
 8897 2867 488B45E8 		movq	-24(%rbp), %rax
 8898 286b 4889C7   		movq	%rax, %rdi
 8899              	.LEHB184:
 8900 286e E8BDFFFF 		call	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev
 8900      FF
 8901              	.LEHE184:
  31:TestUnitTest++.cpp **** {
 8902              		.loc 4 31 0 is_stmt 0 discriminator 2
 8903 2873 488B45E8 		movq	-24(%rbp), %rax
 8904 2877 4889C7   		movq	%rax, %rdi
 8905 287a E8000000 		call	_ZdlPv@PLT
 8905      00
 8906 287f EB1A     		jmp	.L470
 8907              	.L469:
 8908 2881 4889C3   		movq	%rax, %rbx
  31:TestUnitTest++.cpp **** {
 8909              		.loc 4 31 0
 8910 2884 488B45E8 		movq	-24(%rbp), %rax
 8911 2888 4889C7   		movq	%rax, %rdi
 8912 288b E8000000 		call	_ZdlPv@PLT
 8912      00
 8913 2890 4889D8   		movq	%rbx, %rax
 8914 2893 4889C7   		movq	%rax, %rdi
 8915              	.LEHB185:
 8916 2896 E8000000 		call	_Unwind_Resume@PLT
 8916      00
 8917              	.LEHE185:
 8918              	.L470:
 8919 289b 4883C418 		addq	$24, %rsp
 8920 289f 5B       		popq	%rbx
 8921 28a0 5D       		popq	%rbp
 8922              		.cfi_def_cfa 7, 8
 8923 28a1 C3       		ret
 8924              		.cfi_endproc
 8925              	.LFE1655:
 8926              		.section	.gcc_except_table
 8927              	.LLSDA1655:
 8928 0518 FF       		.byte	0xff
 8929 0519 FF       		.byte	0xff
 8930 051a 01       		.byte	0x1
 8931 051b 08       		.uleb128 .LLSDACSE1655-.LLSDACSB1655
 8932              	.LLSDACSB1655:
 8933 051c 14       		.uleb128 .LEHB184-.LFB1655
 8934 051d 05       		.uleb128 .LEHE184-.LEHB184
 8935 051e 27       		.uleb128 .L469-.LFB1655
 8936 051f 00       		.uleb128 0
 8937 0520 3C       		.uleb128 .LEHB185-.LFB1655
 8938 0521 05       		.uleb128 .LEHE185-.LEHB185
 8939 0522 00       		.uleb128 0
 8940 0523 00       		.uleb128 0
 8941              	.LLSDACSE1655:
 8942              		.text
 8944              		.section	.data.rel.ro.local
 8945              		.align 8
 8948              	_ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE:
 8949 0208 00000000 		.quad	0
 8949      00000000 
 8950 0210 00000000 		.quad	_ZTIN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
 8950      00000000 
 8951 0218 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev
 8951      00000000 
 8952 0220 00000000 		.quad	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD0Ev
 8952      00000000 
 8953 0228 00000000 		.quad	_ZNK12_GLOBAL__N_127TestValidCheckEqualSucceeds7RunImplEv
 8953      00000000 
 8954              		.text
 8955              		.align 2
 8957              	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD2Ev:
 8958              	.LFB1657:
  24:TestUnitTest++.cpp **** {
 8959              		.loc 4 24 0 is_stmt 1
 8960              		.cfi_startproc
 8961 28a2 55       		pushq	%rbp
 8962              		.cfi_def_cfa_offset 16
 8963              		.cfi_offset 6, -16
 8964 28a3 4889E5   		movq	%rsp, %rbp
 8965              		.cfi_def_cfa_register 6
 8966 28a6 4883EC10 		subq	$16, %rsp
 8967 28aa 48897DF8 		movq	%rdi, -8(%rbp)
 8968              	.LBB128:
  24:TestUnitTest++.cpp **** {
 8969              		.loc 4 24 0
 8970 28ae 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE(%rip), %rdx
 8970      000000
 8971 28b5 488B45F8 		movq	-8(%rbp), %rax
 8972 28b9 488910   		movq	%rdx, (%rax)
 8973 28bc 488B45F8 		movq	-8(%rbp), %rax
 8974 28c0 4889C7   		movq	%rax, %rdi
 8975 28c3 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8975      00
 8976              	.LBE128:
 8977 28c8 90       		nop
 8978 28c9 C9       		leave
 8979              		.cfi_def_cfa 7, 8
 8980 28ca C3       		ret
 8981              		.cfi_endproc
 8982              	.LFE1657:
 8984              		.set	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev,_ZN12_GLOBAL__N_127TestValidCheckEqualSucc
 8985 28cb 90       		.align 2
 8987              	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD0Ev:
 8988              	.LFB1659:
  24:TestUnitTest++.cpp **** {
 8989              		.loc 4 24 0
 8990              		.cfi_startproc
 8991              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8992              		.cfi_lsda 0x1b,.LLSDA1659
 8993 28cc 55       		pushq	%rbp
 8994              		.cfi_def_cfa_offset 16
 8995              		.cfi_offset 6, -16
 8996 28cd 4889E5   		movq	%rsp, %rbp
 8997              		.cfi_def_cfa_register 6
 8998 28d0 53       		pushq	%rbx
 8999 28d1 4883EC18 		subq	$24, %rsp
 9000              		.cfi_offset 3, -24
 9001 28d5 48897DE8 		movq	%rdi, -24(%rbp)
  24:TestUnitTest++.cpp **** {
 9002              		.loc 4 24 0
 9003 28d9 488B45E8 		movq	-24(%rbp), %rax
 9004 28dd 4889C7   		movq	%rax, %rdi
 9005              	.LEHB186:
 9006 28e0 E8BDFFFF 		call	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev
 9006      FF
 9007              	.LEHE186:
  24:TestUnitTest++.cpp **** {
 9008              		.loc 4 24 0 is_stmt 0 discriminator 2
 9009 28e5 488B45E8 		movq	-24(%rbp), %rax
 9010 28e9 4889C7   		movq	%rax, %rdi
 9011 28ec E8000000 		call	_ZdlPv@PLT
 9011      00
 9012 28f1 EB1A     		jmp	.L475
 9013              	.L474:
 9014 28f3 4889C3   		movq	%rax, %rbx
  24:TestUnitTest++.cpp **** {
 9015              		.loc 4 24 0
 9016 28f6 488B45E8 		movq	-24(%rbp), %rax
 9017 28fa 4889C7   		movq	%rax, %rdi
 9018 28fd E8000000 		call	_ZdlPv@PLT
 9018      00
 9019 2902 4889D8   		movq	%rbx, %rax
 9020 2905 4889C7   		movq	%rax, %rdi
 9021              	.LEHB187:
 9022 2908 E8000000 		call	_Unwind_Resume@PLT
 9022      00
 9023              	.LEHE187:
 9024              	.L475:
 9025 290d 4883C418 		addq	$24, %rsp
 9026 2911 5B       		popq	%rbx
 9027 2912 5D       		popq	%rbp
 9028              		.cfi_def_cfa 7, 8
 9029 2913 C3       		ret
 9030              		.cfi_endproc
 9031              	.LFE1659:
 9032              		.section	.gcc_except_table
 9033              	.LLSDA1659:
 9034 0524 FF       		.byte	0xff
 9035 0525 FF       		.byte	0xff
 9036 0526 01       		.byte	0x1
 9037 0527 08       		.uleb128 .LLSDACSE1659-.LLSDACSB1659
 9038              	.LLSDACSB1659:
 9039 0528 14       		.uleb128 .LEHB186-.LFB1659
 9040 0529 05       		.uleb128 .LEHE186-.LEHB186
 9041 052a 27       		.uleb128 .L474-.LFB1659
 9042 052b 00       		.uleb128 0
 9043 052c 3C       		.uleb128 .LEHB187-.LFB1659
 9044 052d 05       		.uleb128 .LEHE187-.LEHB187
 9045 052e 00       		.uleb128 0
 9046 052f 00       		.uleb128 0
 9047              	.LLSDACSE1659:
 9048              		.text
 9050              		.section	.data.rel.ro.local
 9051              		.align 8
 9054              	_ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE:
 9055 0230 00000000 		.quad	0
 9055      00000000 
 9056 0238 00000000 		.quad	_ZTIN12_GLOBAL__N_126TestCheckWorksWithPointersE
 9056      00000000 
 9057 0240 00000000 		.quad	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev
 9057      00000000 
 9058 0248 00000000 		.quad	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD0Ev
 9058      00000000 
 9059 0250 00000000 		.quad	_ZNK12_GLOBAL__N_126TestCheckWorksWithPointers7RunImplEv
 9059      00000000 
 9060              		.text
 9061              		.align 2
 9063              	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD2Ev:
 9064              	.LFB1661:
  17:TestUnitTest++.cpp **** {
 9065              		.loc 4 17 0 is_stmt 1
 9066              		.cfi_startproc
 9067 2914 55       		pushq	%rbp
 9068              		.cfi_def_cfa_offset 16
 9069              		.cfi_offset 6, -16
 9070 2915 4889E5   		movq	%rsp, %rbp
 9071              		.cfi_def_cfa_register 6
 9072 2918 4883EC10 		subq	$16, %rsp
 9073 291c 48897DF8 		movq	%rdi, -8(%rbp)
 9074              	.LBB129:
  17:TestUnitTest++.cpp **** {
 9075              		.loc 4 17 0
 9076 2920 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE(%rip), %rdx
 9076      000000
 9077 2927 488B45F8 		movq	-8(%rbp), %rax
 9078 292b 488910   		movq	%rdx, (%rax)
 9079 292e 488B45F8 		movq	-8(%rbp), %rax
 9080 2932 4889C7   		movq	%rax, %rdi
 9081 2935 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9081      00
 9082              	.LBE129:
 9083 293a 90       		nop
 9084 293b C9       		leave
 9085              		.cfi_def_cfa 7, 8
 9086 293c C3       		ret
 9087              		.cfi_endproc
 9088              	.LFE1661:
 9090              		.set	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev,_ZN12_GLOBAL__N_126TestCheckWorksWithPointe
 9091 293d 90       		.align 2
 9093              	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD0Ev:
 9094              	.LFB1663:
  17:TestUnitTest++.cpp **** {
 9095              		.loc 4 17 0
 9096              		.cfi_startproc
 9097              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9098              		.cfi_lsda 0x1b,.LLSDA1663
 9099 293e 55       		pushq	%rbp
 9100              		.cfi_def_cfa_offset 16
 9101              		.cfi_offset 6, -16
 9102 293f 4889E5   		movq	%rsp, %rbp
 9103              		.cfi_def_cfa_register 6
 9104 2942 53       		pushq	%rbx
 9105 2943 4883EC18 		subq	$24, %rsp
 9106              		.cfi_offset 3, -24
 9107 2947 48897DE8 		movq	%rdi, -24(%rbp)
  17:TestUnitTest++.cpp **** {
 9108              		.loc 4 17 0
 9109 294b 488B45E8 		movq	-24(%rbp), %rax
 9110 294f 4889C7   		movq	%rax, %rdi
 9111              	.LEHB188:
 9112 2952 E8BDFFFF 		call	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev
 9112      FF
 9113              	.LEHE188:
  17:TestUnitTest++.cpp **** {
 9114              		.loc 4 17 0 is_stmt 0 discriminator 2
 9115 2957 488B45E8 		movq	-24(%rbp), %rax
 9116 295b 4889C7   		movq	%rax, %rdi
 9117 295e E8000000 		call	_ZdlPv@PLT
 9117      00
 9118 2963 EB1A     		jmp	.L480
 9119              	.L479:
 9120 2965 4889C3   		movq	%rax, %rbx
  17:TestUnitTest++.cpp **** {
 9121              		.loc 4 17 0
 9122 2968 488B45E8 		movq	-24(%rbp), %rax
 9123 296c 4889C7   		movq	%rax, %rdi
 9124 296f E8000000 		call	_ZdlPv@PLT
 9124      00
 9125 2974 4889D8   		movq	%rbx, %rax
 9126 2977 4889C7   		movq	%rax, %rdi
 9127              	.LEHB189:
 9128 297a E8000000 		call	_Unwind_Resume@PLT
 9128      00
 9129              	.LEHE189:
 9130              	.L480:
 9131 297f 4883C418 		addq	$24, %rsp
 9132 2983 5B       		popq	%rbx
 9133 2984 5D       		popq	%rbp
 9134              		.cfi_def_cfa 7, 8
 9135 2985 C3       		ret
 9136              		.cfi_endproc
 9137              	.LFE1663:
 9138              		.section	.gcc_except_table
 9139              	.LLSDA1663:
 9140 0530 FF       		.byte	0xff
 9141 0531 FF       		.byte	0xff
 9142 0532 01       		.byte	0x1
 9143 0533 08       		.uleb128 .LLSDACSE1663-.LLSDACSB1663
 9144              	.LLSDACSB1663:
 9145 0534 14       		.uleb128 .LEHB188-.LFB1663
 9146 0535 05       		.uleb128 .LEHE188-.LEHB188
 9147 0536 27       		.uleb128 .L479-.LFB1663
 9148 0537 00       		.uleb128 0
 9149 0538 3C       		.uleb128 .LEHB189-.LFB1663
 9150 0539 05       		.uleb128 .LEHE189-.LEHB189
 9151 053a 00       		.uleb128 0
 9152 053b 00       		.uleb128 0
 9153              	.LLSDACSE1663:
 9154              		.text
 9156              		.section	.data.rel.ro.local
 9157              		.align 8
 9160              	_ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE:
 9161 0258 00000000 		.quad	0
 9161      00000000 
 9162 0260 00000000 		.quad	_ZTIN12_GLOBAL__N_122TestValidCheckSucceedsE
 9162      00000000 
 9163 0268 00000000 		.quad	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev
 9163      00000000 
 9164 0270 00000000 		.quad	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD0Ev
 9164      00000000 
 9165 0278 00000000 		.quad	_ZNK12_GLOBAL__N_122TestValidCheckSucceeds7RunImplEv
 9165      00000000 
 9166              		.text
 9167              		.align 2
 9169              	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD2Ev:
 9170              	.LFB1665:
  11:TestUnitTest++.cpp **** {
 9171              		.loc 4 11 0 is_stmt 1
 9172              		.cfi_startproc
 9173 2986 55       		pushq	%rbp
 9174              		.cfi_def_cfa_offset 16
 9175              		.cfi_offset 6, -16
 9176 2987 4889E5   		movq	%rsp, %rbp
 9177              		.cfi_def_cfa_register 6
 9178 298a 4883EC10 		subq	$16, %rsp
 9179 298e 48897DF8 		movq	%rdi, -8(%rbp)
 9180              	.LBB130:
  11:TestUnitTest++.cpp **** {
 9181              		.loc 4 11 0
 9182 2992 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE(%rip), %rdx
 9182      000000
 9183 2999 488B45F8 		movq	-8(%rbp), %rax
 9184 299d 488910   		movq	%rdx, (%rax)
 9185 29a0 488B45F8 		movq	-8(%rbp), %rax
 9186 29a4 4889C7   		movq	%rax, %rdi
 9187 29a7 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9187      00
 9188              	.LBE130:
 9189 29ac 90       		nop
 9190 29ad C9       		leave
 9191              		.cfi_def_cfa 7, 8
 9192 29ae C3       		ret
 9193              		.cfi_endproc
 9194              	.LFE1665:
 9196              		.set	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev,_ZN12_GLOBAL__N_122TestValidCheckSucceedsD2Ev
 9197 29af 90       		.align 2
 9199              	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD0Ev:
 9200              	.LFB1667:
  11:TestUnitTest++.cpp **** {
 9201              		.loc 4 11 0
 9202              		.cfi_startproc
 9203              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9204              		.cfi_lsda 0x1b,.LLSDA1667
 9205 29b0 55       		pushq	%rbp
 9206              		.cfi_def_cfa_offset 16
 9207              		.cfi_offset 6, -16
 9208 29b1 4889E5   		movq	%rsp, %rbp
 9209              		.cfi_def_cfa_register 6
 9210 29b4 53       		pushq	%rbx
 9211 29b5 4883EC18 		subq	$24, %rsp
 9212              		.cfi_offset 3, -24
 9213 29b9 48897DE8 		movq	%rdi, -24(%rbp)
  11:TestUnitTest++.cpp **** {
 9214              		.loc 4 11 0
 9215 29bd 488B45E8 		movq	-24(%rbp), %rax
 9216 29c1 4889C7   		movq	%rax, %rdi
 9217              	.LEHB190:
 9218 29c4 E8BDFFFF 		call	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev
 9218      FF
 9219              	.LEHE190:
  11:TestUnitTest++.cpp **** {
 9220              		.loc 4 11 0 is_stmt 0 discriminator 2
 9221 29c9 488B45E8 		movq	-24(%rbp), %rax
 9222 29cd 4889C7   		movq	%rax, %rdi
 9223 29d0 E8000000 		call	_ZdlPv@PLT
 9223      00
 9224 29d5 EB1A     		jmp	.L485
 9225              	.L484:
 9226 29d7 4889C3   		movq	%rax, %rbx
  11:TestUnitTest++.cpp **** {
 9227              		.loc 4 11 0
 9228 29da 488B45E8 		movq	-24(%rbp), %rax
 9229 29de 4889C7   		movq	%rax, %rdi
 9230 29e1 E8000000 		call	_ZdlPv@PLT
 9230      00
 9231 29e6 4889D8   		movq	%rbx, %rax
 9232 29e9 4889C7   		movq	%rax, %rdi
 9233              	.LEHB191:
 9234 29ec E8000000 		call	_Unwind_Resume@PLT
 9234      00
 9235              	.LEHE191:
 9236              	.L485:
 9237 29f1 4883C418 		addq	$24, %rsp
 9238 29f5 5B       		popq	%rbx
 9239 29f6 5D       		popq	%rbp
 9240              		.cfi_def_cfa 7, 8
 9241 29f7 C3       		ret
 9242              		.cfi_endproc
 9243              	.LFE1667:
 9244              		.section	.gcc_except_table
 9245              	.LLSDA1667:
 9246 053c FF       		.byte	0xff
 9247 053d FF       		.byte	0xff
 9248 053e 01       		.byte	0x1
 9249 053f 08       		.uleb128 .LLSDACSE1667-.LLSDACSB1667
 9250              	.LLSDACSB1667:
 9251 0540 14       		.uleb128 .LEHB190-.LFB1667
 9252 0541 05       		.uleb128 .LEHE190-.LEHB190
 9253 0542 27       		.uleb128 .L484-.LFB1667
 9254 0543 00       		.uleb128 0
 9255 0544 3C       		.uleb128 .LEHB191-.LFB1667
 9256 0545 05       		.uleb128 .LEHE191-.LEHB191
 9257 0546 00       		.uleb128 0
 9258 0547 00       		.uleb128 0
 9259              	.LLSDACSE1667:
 9260              		.text
 9262              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 9263              		.section	.data.rel.ro.local._ZTVN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTVN8UnitTest15Memor
 9264              		.align 8
 9267              	_ZTVN8UnitTest15MemoryOutStreamE:
 9268 0000 90000000 		.quad	144
 9268      00000000 
 9269 0008 00000000 		.quad	0
 9269      00000000 
 9270 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9270      00000000 
 9271 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 9271      00000000 
 9272 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 9272      00000000 
 9273 0028 70FFFFFF 		.quad	-144
 9273      FFFFFFFF 
 9274 0030 70FFFFFF 		.quad	-144
 9274      FFFFFFFF 
 9275 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9275      00000000 
 9276 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9276      00000000 
 9277 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9277      00000000 
 9278              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 9279              		.section	.data.rel.ro.local._ZTTN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTVN8UnitTest15Memor
 9280              		.align 8
 9283              	_ZTTN8UnitTest15MemoryOutStreamE:
 9284 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 9284      00000000 
 9285 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9285      00000000 
 9286 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 9286      00000000 
 9287 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 9287      00000000 
 9288 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9288      00000000 
 9289 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 9289      00000000 
 9290              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIc
 9291              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9292              		.section	.data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char
 9293              		.align 8
 9296              	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:
 9297 0000 90000000 		.quad	144
 9297      00000000 
 9298 0008 00000000 		.quad	0
 9298      00000000 
 9299 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9299      00000000 
 9300 0018 00000000 		.quad	0
 9300      00000000 
 9301 0020 00000000 		.quad	0
 9301      00000000 
 9302 0028 70FFFFFF 		.quad	-144
 9302      FFFFFFFF 
 9303 0030 70FFFFFF 		.quad	-144
 9303      FFFFFFFF 
 9304 0038 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9304      00000000 
 9305 0040 00000000 		.quad	0
 9305      00000000 
 9306 0048 00000000 		.quad	0
 9306      00000000 
 9307              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9308              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9309              		.section	.data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_So,"awG",@progbits,_ZTVN8UnitTest15MemoryO
 9310              		.align 8
 9313              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 9314 0000 90000000 		.quad	144
 9314      00000000 
 9315 0008 00000000 		.quad	0
 9315      00000000 
 9316 0010 00000000 		.quad	_ZTISo
 9316      00000000 
 9317 0018 00000000 		.quad	0
 9317      00000000 
 9318 0020 00000000 		.quad	0
 9318      00000000 
 9319 0028 70FFFFFF 		.quad	-144
 9319      FFFFFFFF 
 9320 0030 70FFFFFF 		.quad	-144
 9320      FFFFFFFF 
 9321 0038 00000000 		.quad	_ZTISo
 9321      00000000 
 9322 0040 00000000 		.quad	0
 9322      00000000 
 9323 0048 00000000 		.quad	0
 9323      00000000 
 9324              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9325              		.align 2
 9326              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 9328              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 9329              	.LFB1670:
  13:../MemoryOutStream.h **** {
 9330              		.loc 2 13 0 is_stmt 1
 9331              		.cfi_startproc
 9332              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9333              		.cfi_lsda 0x1b,.LLSDA1670
 9334 0000 55       		pushq	%rbp
 9335              		.cfi_def_cfa_offset 16
 9336              		.cfi_offset 6, -16
 9337 0001 4889E5   		movq	%rsp, %rbp
 9338              		.cfi_def_cfa_register 6
 9339 0004 53       		pushq	%rbx
 9340 0005 4883EC18 		subq	$24, %rsp
 9341              		.cfi_offset 3, -24
 9342 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9343              	.LBB131:
  13:../MemoryOutStream.h **** {
 9344              		.loc 2 13 0
 9345 000d 488D1500 		leaq	24+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
 9345      000000
 9346 0014 488B45E8 		movq	-24(%rbp), %rax
 9347 0018 488910   		movq	%rdx, (%rax)
 9348 001b 488B45E8 		movq	-24(%rbp), %rax
 9349 001f 488D9090 		leaq	144(%rax), %rdx
 9349      000000
 9350 0026 488D0500 		leaq	64+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rax
 9350      000000
 9351 002d 488902   		movq	%rax, (%rdx)
 9352 0030 488B45E8 		movq	-24(%rbp), %rax
 9353 0034 4883C070 		addq	$112, %rax
 9354 0038 4889C7   		movq	%rax, %rdi
 9355              	.LEHB192:
 9356 003b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 9356      00
 9357              	.LEHE192:
  13:../MemoryOutStream.h **** {
 9358              		.loc 2 13 0 is_stmt 0 discriminator 2
 9359 0040 488B45E8 		movq	-24(%rbp), %rax
 9360 0044 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
 9360      000000
 9361 004b 4889D6   		movq	%rdx, %rsi
 9362 004e 4889C7   		movq	%rax, %rdi
 9363              	.LEHB193:
 9364 0051 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
 9364      00
 9365              	.LEHE193:
  13:../MemoryOutStream.h **** {
 9366              		.loc 2 13 0 discriminator 4
 9367 0056 488B45E8 		movq	-24(%rbp), %rax
 9368 005a 48059000 		addq	$144, %rax
 9368      0000
 9369 0060 4889C7   		movq	%rax, %rdi
 9370              	.LEHB194:
 9371 0063 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 9371      00
 9372              	.LEHE194:
 9373              	.LBE131:
 9374 0068 EB3B     		jmp	.L491
 9375              	.L489:
 9376 006a 4889C3   		movq	%rax, %rbx
 9377              	.LBB132:
  13:../MemoryOutStream.h **** {
 9378              		.loc 2 13 0
 9379 006d 488B45E8 		movq	-24(%rbp), %rax
 9380 0071 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
 9380      000000
 9381 0078 4889D6   		movq	%rdx, %rsi
 9382 007b 4889C7   		movq	%rax, %rdi
 9383 007e E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
 9383      00
 9384 0083 EB03     		jmp	.L488
 9385              	.L490:
 9386 0085 4889C3   		movq	%rax, %rbx
 9387              	.L488:
  13:../MemoryOutStream.h **** {
 9388              		.loc 2 13 0 discriminator 3
 9389 0088 488B45E8 		movq	-24(%rbp), %rax
 9390 008c 48059000 		addq	$144, %rax
 9390      0000
 9391 0092 4889C7   		movq	%rax, %rdi
 9392 0095 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 9392      00
 9393 009a 4889D8   		movq	%rbx, %rax
 9394 009d 4889C7   		movq	%rax, %rdi
 9395              	.LEHB195:
 9396 00a0 E8000000 		call	_Unwind_Resume@PLT
 9396      00
 9397              	.LEHE195:
 9398              	.L491:
 9399              	.LBE132:
  13:../MemoryOutStream.h **** {
 9400              		.loc 2 13 0
 9401 00a5 4883C418 		addq	$24, %rsp
 9402 00a9 5B       		popq	%rbx
 9403 00aa 5D       		popq	%rbp
 9404              		.cfi_def_cfa 7, 8
 9405 00ab C3       		ret
 9406              		.cfi_endproc
 9407              	.LFE1670:
 9408              		.section	.gcc_except_table
 9409              	.LLSDA1670:
 9410 0548 FF       		.byte	0xff
 9411 0549 FF       		.byte	0xff
 9412 054a 01       		.byte	0x1
 9413 054b 12       		.uleb128 .LLSDACSE1670-.LLSDACSB1670
 9414              	.LLSDACSB1670:
 9415 054c 3B       		.uleb128 .LEHB192-.LFB1670
 9416 054d 05       		.uleb128 .LEHE192-.LEHB192
 9417 054e 6A       		.uleb128 .L489-.LFB1670
 9418 054f 00       		.uleb128 0
 9419 0550 51       		.uleb128 .LEHB193-.LFB1670
 9420 0551 05       		.uleb128 .LEHE193-.LEHB193
 9421 0552 8501     		.uleb128 .L490-.LFB1670
 9422 0554 00       		.uleb128 0
 9423 0555 63       		.uleb128 .LEHB194-.LFB1670
 9424 0556 05       		.uleb128 .LEHE194-.LEHB194
 9425 0557 00       		.uleb128 0
 9426 0558 00       		.uleb128 0
 9427 0559 A001     		.uleb128 .LEHB195-.LFB1670
 9428 055b 05       		.uleb128 .LEHE195-.LEHB195
 9429 055c 00       		.uleb128 0
 9430 055d 00       		.uleb128 0
 9431              	.LLSDACSE1670:
 9432              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9434              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 9435              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9437              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 9438              	.LFB1674:
  13:../MemoryOutStream.h **** {
 9439              		.loc 2 13 0 is_stmt 1
 9440              		.cfi_startproc
 9441 00ac 4C8B17   		movq	(%rdi), %r10
 9442 00af 49037AE8 		addq	-24(%r10), %rdi
 9443 00b3 E948FFFF 		jmp	.LTHUNK0
 9443      FF
 9444              		.cfi_endproc
 9445              	.LFE1674:
 9447              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 9448              		.align 2
 9449              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 9451              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 9452              	.LFB1671:
  13:../MemoryOutStream.h **** {
 9453              		.loc 2 13 0
 9454              		.cfi_startproc
 9455              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9456              		.cfi_lsda 0x1b,.LLSDA1671
 9457 0000 55       		pushq	%rbp
 9458              		.cfi_def_cfa_offset 16
 9459              		.cfi_offset 6, -16
 9460 0001 4889E5   		movq	%rsp, %rbp
 9461              		.cfi_def_cfa_register 6
 9462 0004 53       		pushq	%rbx
 9463 0005 4883EC18 		subq	$24, %rsp
 9464              		.cfi_offset 3, -24
 9465 0009 48897DE8 		movq	%rdi, -24(%rbp)
  13:../MemoryOutStream.h **** {
 9466              		.loc 2 13 0
 9467 000d 488B45E8 		movq	-24(%rbp), %rax
 9468 0011 4889C7   		movq	%rax, %rdi
 9469              	.LEHB196:
 9470 0014 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 9470      00
 9471              	.LEHE196:
  13:../MemoryOutStream.h **** {
 9472              		.loc 2 13 0 is_stmt 0 discriminator 2
 9473 0019 488B45E8 		movq	-24(%rbp), %rax
 9474 001d 4889C7   		movq	%rax, %rdi
 9475 0020 E8000000 		call	_ZdlPv@PLT
 9475      00
 9476 0025 EB1A     		jmp	.L495
 9477              	.L494:
 9478 0027 4889C3   		movq	%rax, %rbx
  13:../MemoryOutStream.h **** {
 9479              		.loc 2 13 0
 9480 002a 488B45E8 		movq	-24(%rbp), %rax
 9481 002e 4889C7   		movq	%rax, %rdi
 9482 0031 E8000000 		call	_ZdlPv@PLT
 9482      00
 9483 0036 4889D8   		movq	%rbx, %rax
 9484 0039 4889C7   		movq	%rax, %rdi
 9485              	.LEHB197:
 9486 003c E8000000 		call	_Unwind_Resume@PLT
 9486      00
 9487              	.LEHE197:
 9488              	.L495:
 9489 0041 4883C418 		addq	$24, %rsp
 9490 0045 5B       		popq	%rbx
 9491 0046 5D       		popq	%rbp
 9492              		.cfi_def_cfa 7, 8
 9493 0047 C3       		ret
 9494              		.cfi_endproc
 9495              	.LFE1671:
 9496              		.section	.gcc_except_table
 9497              	.LLSDA1671:
 9498 055e FF       		.byte	0xff
 9499 055f FF       		.byte	0xff
 9500 0560 01       		.byte	0x1
 9501 0561 08       		.uleb128 .LLSDACSE1671-.LLSDACSB1671
 9502              	.LLSDACSB1671:
 9503 0562 14       		.uleb128 .LEHB196-.LFB1671
 9504 0563 05       		.uleb128 .LEHE196-.LEHB196
 9505 0564 27       		.uleb128 .L494-.LFB1671
 9506 0565 00       		.uleb128 0
 9507 0566 3C       		.uleb128 .LEHB197-.LFB1671
 9508 0567 05       		.uleb128 .LEHE197-.LEHB197
 9509 0568 00       		.uleb128 0
 9510 0569 00       		.uleb128 0
 9511              	.LLSDACSE1671:
 9512              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 9514              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 9515              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9517              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 9518              	.LFB1675:
  13:../MemoryOutStream.h **** {
 9519              		.loc 2 13 0 is_stmt 1
 9520              		.cfi_startproc
 9521 0048 4C8B17   		movq	(%rdi), %r10
 9522 004b 49037AE8 		addq	-24(%r10), %rdi
 9523 004f EBAF     		jmp	.LTHUNK1
 9524              		.cfi_endproc
 9525              	.LFE1675:
 9527              		.section	.rodata
 9528 061e 0000     		.align 32
 9531              	_ZTSN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE:
 9532 0620 2A4E3132 		.string	"*N12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE"
 9532      5F474C4F 
 9532      42414C5F 
 9532      5F4E5F31 
 9532      33375465 
 9533              		.section	.data.rel.ro,"aw",@progbits
 9534              		.align 8
 9537              	_ZTIN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE:
 9538 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9538      00000000 
 9539 0008 00000000 		.quad	_ZTSN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
 9539      00000000 
 9540 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9540      00000000 
 9541              		.section	.rodata
 9542 0659 00000000 		.align 32
 9542      000000
 9545              	_ZTSN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE:
 9546 0660 2A4E3132 		.string	"*N12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE"
 9546      5F474C4F 
 9546      42414C5F 
 9546      5F4E5F31 
 9546      34335465 
 9547              		.section	.data.rel.ro
 9548              		.align 8
 9551              	_ZTIN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE:
 9552 0018 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9552      00000000 
 9553 0020 00000000 		.quad	_ZTSN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
 9553      00000000 
 9554 0028 00000000 		.quad	_ZTIN8UnitTest4TestE
 9554      00000000 
 9555              		.section	.rodata
 9556 069f 00       		.align 32
 9559              	_ZTSN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE:
 9560 06a0 2A4E3132 		.string	"*N12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE"
 9560      5F474C4F 
 9560      42414C5F 
 9560      5F4E5F31 
 9560      34335465 
 9561              		.section	.data.rel.ro
 9562              		.align 8
 9565              	_ZTIN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE:
 9566 0030 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9566      00000000 
 9567 0038 00000000 		.quad	_ZTSN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
 9567      00000000 
 9568 0040 00000000 		.quad	_ZTIN8UnitTest4TestE
 9568      00000000 
 9569              		.section	.rodata
 9570 06df 00       		.align 32
 9573              	_ZTSZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest:
 9574 06e0 2A5A4E4B 		.string	"*ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest"
 9574      31325F47 
 9574      4C4F4241 
 9574      4C5F5F4E 
 9574      5F313430 
 9575              		.section	.data.rel.ro
 9576              		.align 8
 9579              	_ZTIZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest:
 9580 0048 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9580      00000000 
 9581 0050 00000000 		.quad	_ZTSZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
 9581      00000000 
 9582 0058 00000000 		.quad	_ZTIN8UnitTest4TestE
 9582      00000000 
 9583              		.section	.rodata
 9584 0738 00000000 		.align 32
 9584      00000000 
 9587              	_ZTSN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE:
 9588 0740 2A4E3132 		.string	"*N12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE"
 9588      5F474C4F 
 9588      42414C5F 
 9588      5F4E5F31 
 9588      34305465 
 9589              		.section	.data.rel.ro
 9590              		.align 8
 9593              	_ZTIN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE:
 9594 0060 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9594      00000000 
 9595 0068 00000000 		.quad	_ZTSN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
 9595      00000000 
 9596 0070 00000000 		.quad	_ZTIN8UnitTest4TestE
 9596      00000000 
 9597              		.section	.rodata
 9598 077c 00000000 		.align 32
 9601              	_ZTSZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest:
 9602 0780 2A5A4E4B 		.string	"*ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest"
 9602      31325F47 
 9602      4C4F4241 
 9602      4C5F5F4E 
 9602      5F313432 
 9603              		.section	.data.rel.ro
 9604              		.align 8
 9607              	_ZTIZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest:
 9608 0078 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9608      00000000 
 9609 0080 00000000 		.quad	_ZTSZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
 9609      00000000 
 9610 0088 00000000 		.quad	_ZTIN8UnitTest4TestE
 9610      00000000 
 9611              		.section	.rodata
 9612 07d7 00000000 		.align 32
 9612      00000000 
 9612      00
 9615              	_ZTSN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE:
 9616 07e0 2A4E3132 		.string	"*N12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE"
 9616      5F474C4F 
 9616      42414C5F 
 9616      5F4E5F31 
 9616      34325465 
 9617              		.section	.data.rel.ro
 9618              		.align 8
 9621              	_ZTIN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE:
 9622 0090 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9622      00000000 
 9623 0098 00000000 		.quad	_ZTSN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
 9623      00000000 
 9624 00a0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9624      00000000 
 9625              		.section	.rodata
 9626 081e 0000     		.align 32
 9629              	_ZTSN12_GLOBAL__N_123TestCheckAssertSucceedsE:
 9630 0820 2A4E3132 		.string	"*N12_GLOBAL__N_123TestCheckAssertSucceedsE"
 9630      5F474C4F 
 9630      42414C5F 
 9630      5F4E5F31 
 9630      32335465 
 9631              		.section	.data.rel.ro
 9632              		.align 8
 9635              	_ZTIN12_GLOBAL__N_123TestCheckAssertSucceedsE:
 9636 00a8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9636      00000000 
 9637 00b0 00000000 		.quad	_ZTSN12_GLOBAL__N_123TestCheckAssertSucceedsE
 9637      00000000 
 9638 00b8 00000000 		.quad	_ZTIN8UnitTest4TestE
 9638      00000000 
 9639              		.section	.rodata
 9640 084b 00000000 		.align 32
 9640      00000000 
 9640      00000000 
 9640      00000000 
 9640      00000000 
 9643              	_ZTSZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException:
 9644 0860 2A5A4E4B 		.string	"*ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 9644      31325F47 
 9644      4C4F4241 
 9644      4C5F5F4E 
 9644      5F313435 
 9645              		.section	.data.rel.ro
 9646              		.align 8
 9649              	_ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException:
 9650 00c0 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 9650      00000000 
 9651 00c8 00000000 		.quad	_ZTSZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 9651      00000000 
 9652              		.section	.rodata
 9653 08bc 00000000 		.align 32
 9656              	_ZTSN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE:
 9657 08c0 2A4E3132 		.string	"*N12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE"
 9657      5F474C4F 
 9657      42414C5F 
 9657      5F4E5F31 
 9657      34355465 
 9658              		.section	.data.rel.ro
 9659              		.align 8
 9662              	_ZTIN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE:
 9663 00d0 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9663      00000000 
 9664 00d8 00000000 		.quad	_ZTSN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
 9664      00000000 
 9665 00e0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9665      00000000 
 9666              		.section	.rodata
 9667 0901 00000000 		.align 32
 9667      00000000 
 9667      00000000 
 9667      00000000 
 9667      00000000 
 9670              	_ZTSN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE:
 9671 0920 2A4E3132 		.string	"*N12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE"
 9671      5F474C4F 
 9671      42414C5F 
 9671      5F4E5F31 
 9671      33355465 
 9672              		.section	.data.rel.ro
 9673              		.align 8
 9676              	_ZTIN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE:
 9677 00e8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9677      00000000 
 9678 00f0 00000000 		.quad	_ZTSN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
 9678      00000000 
 9679 00f8 00000000 		.quad	_ZTIN8UnitTest4TestE
 9679      00000000 
 9680              		.section	.rodata
 9681 0957 00000000 		.align 32
 9681      00000000 
 9681      00
 9684              	_ZTSN12_GLOBAL__N_122TestArrayCloseSucceedsE:
 9685 0960 2A4E3132 		.string	"*N12_GLOBAL__N_122TestArrayCloseSucceedsE"
 9685      5F474C4F 
 9685      42414C5F 
 9685      5F4E5F31 
 9685      32325465 
 9686              		.section	.data.rel.ro
 9687              		.align 8
 9690              	_ZTIN12_GLOBAL__N_122TestArrayCloseSucceedsE:
 9691 0100 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9691      00000000 
 9692 0108 00000000 		.quad	_ZTSN12_GLOBAL__N_122TestArrayCloseSucceedsE
 9692      00000000 
 9693 0110 00000000 		.quad	_ZTIN8UnitTest4TestE
 9693      00000000 
 9694              		.section	.rodata
 9695 098a 00000000 		.align 32
 9695      00000000 
 9695      00000000 
 9695      00000000 
 9695      00000000 
 9698              	_ZTSN12_GLOBAL__N_127TestValidCheckCloseSucceedsE:
 9699 09a0 2A4E3132 		.string	"*N12_GLOBAL__N_127TestValidCheckCloseSucceedsE"
 9699      5F474C4F 
 9699      42414C5F 
 9699      5F4E5F31 
 9699      32375465 
 9700              		.section	.data.rel.ro
 9701              		.align 8
 9704              	_ZTIN12_GLOBAL__N_127TestValidCheckCloseSucceedsE:
 9705 0118 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9705      00000000 
 9706 0120 00000000 		.quad	_ZTSN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
 9706      00000000 
 9707 0128 00000000 		.quad	_ZTIN8UnitTest4TestE
 9707      00000000 
 9708              		.section	.rodata
 9709 09cf 00000000 		.align 32
 9709      00000000 
 9709      00000000 
 9709      00000000 
 9709      00
 9712              	_ZTSN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE:
 9713 09e0 2A4E3132 		.string	"*N12_GLOBAL__N_131TestCheckEqualWorksWithPointersE"
 9713      5F474C4F 
 9713      42414C5F 
 9713      5F4E5F31 
 9713      33315465 
 9714              		.section	.data.rel.ro
 9715              		.align 8
 9718              	_ZTIN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE:
 9719 0130 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9719      00000000 
 9720 0138 00000000 		.quad	_ZTSN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
 9720      00000000 
 9721 0140 00000000 		.quad	_ZTIN8UnitTest4TestE
 9721      00000000 
 9722              		.section	.rodata
 9723 0a13 00000000 		.align 32
 9723      00000000 
 9723      00000000 
 9723      00
 9726              	_ZTSN12_GLOBAL__N_127TestValidCheckEqualSucceedsE:
 9727 0a20 2A4E3132 		.string	"*N12_GLOBAL__N_127TestValidCheckEqualSucceedsE"
 9727      5F474C4F 
 9727      42414C5F 
 9727      5F4E5F31 
 9727      32375465 
 9728              		.section	.data.rel.ro
 9729              		.align 8
 9732              	_ZTIN12_GLOBAL__N_127TestValidCheckEqualSucceedsE:
 9733 0148 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9733      00000000 
 9734 0150 00000000 		.quad	_ZTSN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
 9734      00000000 
 9735 0158 00000000 		.quad	_ZTIN8UnitTest4TestE
 9735      00000000 
 9736              		.section	.rodata
 9737 0a4f 00000000 		.align 32
 9737      00000000 
 9737      00000000 
 9737      00000000 
 9737      00
 9740              	_ZTSN12_GLOBAL__N_126TestCheckWorksWithPointersE:
 9741 0a60 2A4E3132 		.string	"*N12_GLOBAL__N_126TestCheckWorksWithPointersE"
 9741      5F474C4F 
 9741      42414C5F 
 9741      5F4E5F31 
 9741      32365465 
 9742              		.section	.data.rel.ro
 9743              		.align 8
 9746              	_ZTIN12_GLOBAL__N_126TestCheckWorksWithPointersE:
 9747 0160 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9747      00000000 
 9748 0168 00000000 		.quad	_ZTSN12_GLOBAL__N_126TestCheckWorksWithPointersE
 9748      00000000 
 9749 0170 00000000 		.quad	_ZTIN8UnitTest4TestE
 9749      00000000 
 9750              		.section	.rodata
 9751 0a8e 00000000 		.align 32
 9751      00000000 
 9751      00000000 
 9751      00000000 
 9751      0000
 9754              	_ZTSN12_GLOBAL__N_122TestValidCheckSucceedsE:
 9755 0aa0 2A4E3132 		.string	"*N12_GLOBAL__N_122TestValidCheckSucceedsE"
 9755      5F474C4F 
 9755      42414C5F 
 9755      5F4E5F31 
 9755      32325465 
 9756              		.section	.data.rel.ro
 9757              		.align 8
 9760              	_ZTIN12_GLOBAL__N_122TestValidCheckSucceedsE:
 9761 0178 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9761      00000000 
 9762 0180 00000000 		.quad	_ZTSN12_GLOBAL__N_122TestValidCheckSucceedsE
 9762      00000000 
 9763 0188 00000000 		.quad	_ZTIN8UnitTest4TestE
 9763      00000000 
 9764              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 9765              		.section	.data.rel.ro._ZTIN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTIN8UnitTest15MemoryOutSt
 9766              		.align 8
 9769              	_ZTIN8UnitTest15MemoryOutStreamE:
 9770 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9770      00000000 
 9771 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 9771      00000000 
 9772 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9772      00000000 
 9773              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 9774              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 9775              		.align 16
 9778              	_ZTSN8UnitTest15MemoryOutStreamE:
 9779 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 9779      69745465 
 9779      73743135 
 9779      4D656D6F 
 9779      72794F75 
 9780              		.text
 9782              	_Z41__static_initialization_and_destruction_0ii:
 9783              	.LFB1672:
 155:TestUnitTest++.cpp **** 
 156:TestUnitTest++.cpp **** }
 9784              		.loc 4 156 0
 9785              		.cfi_startproc
 9786 29f8 55       		pushq	%rbp
 9787              		.cfi_def_cfa_offset 16
 9788              		.cfi_offset 6, -16
 9789 29f9 4889E5   		movq	%rsp, %rbp
 9790              		.cfi_def_cfa_register 6
 9791 29fc 4883EC10 		subq	$16, %rsp
 9792 2a00 897DFC   		movl	%edi, -4(%rbp)
 9793 2a03 8975F8   		movl	%esi, -8(%rbp)
 9794              		.loc 4 156 0
 9795 2a06 837DFC01 		cmpl	$1, -4(%rbp)
 9796 2a0a 0F859B03 		jne	.L498
 9796      0000
 9797              		.loc 4 156 0 is_stmt 0 discriminator 1
 9798 2a10 817DF8FF 		cmpl	$65535, -8(%rbp)
 9798      FF0000
 9799 2a17 0F858E03 		jne	.L498
 9799      0000
  11:TestUnitTest++.cpp **** {
 9800              		.loc 4 11 0 is_stmt 1
 9801 2a1d 488D3D00 		leaq	_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE(%rip), %rdi
 9801      000000
 9802 2a24 E8D7D5FF 		call	_ZN12_GLOBAL__N_122TestValidCheckSucceedsC1Ev
 9802      FF
 9803 2a29 488D1500 		leaq	__dso_handle(%rip), %rdx
 9803      000000
 9804 2a30 488D3500 		leaq	_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE(%rip), %rsi
 9804      000000
 9805 2a37 488D3D48 		leaq	_ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev(%rip), %rdi
 9805      FFFFFF
 9806 2a3e E8000000 		call	__cxa_atexit@PLT
 9806      00
 9807 2a43 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9807      00
 9808 2a48 488D1500 		leaq	_ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE(%rip), %rdx
 9808      000000
 9809 2a4f 4889C6   		movq	%rax, %rsi
 9810 2a52 488D3D00 		leaq	_ZN12_GLOBAL__N_123adderValidCheckSucceedsE(%rip), %rdi
 9810      000000
 9811 2a59 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9811      00
  17:TestUnitTest++.cpp **** {
 9812              		.loc 4 17 0
 9813 2a5e 488D3D00 		leaq	_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE(%rip), %rdi
 9813      000000
 9814 2a65 E8CCD6FF 		call	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersC1Ev
 9814      FF
 9815 2a6a 488D1500 		leaq	__dso_handle(%rip), %rdx
 9815      000000
 9816 2a71 488D3500 		leaq	_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE(%rip), %rsi
 9816      000000
 9817 2a78 488D3D95 		leaq	_ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev(%rip), %rdi
 9817      FEFFFF
 9818 2a7f E8000000 		call	__cxa_atexit@PLT
 9818      00
 9819 2a84 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9819      00
 9820 2a89 488D1500 		leaq	_ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE(%rip), %rdx
 9820      000000
 9821 2a90 4889C6   		movq	%rax, %rsi
 9822 2a93 488D3D00 		leaq	_ZN12_GLOBAL__N_127adderCheckWorksWithPointersE(%rip), %rdi
 9822      000000
 9823 2a9a E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9823      00
  24:TestUnitTest++.cpp **** {
 9824              		.loc 4 24 0
 9825 2a9f 488D3D00 		leaq	_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE(%rip), %rdi
 9825      000000
 9826 2aa6 E87BD8FF 		call	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC1Ev
 9826      FF
 9827 2aab 488D1500 		leaq	__dso_handle(%rip), %rdx
 9827      000000
 9828 2ab2 488D3500 		leaq	_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE(%rip), %rsi
 9828      000000
 9829 2ab9 488D3DE2 		leaq	_ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev(%rip), %rdi
 9829      FDFFFF
 9830 2ac0 E8000000 		call	__cxa_atexit@PLT
 9830      00
 9831 2ac5 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9831      00
 9832 2aca 488D1500 		leaq	_ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE(%rip), %rdx
 9832      000000
 9833 2ad1 4889C6   		movq	%rax, %rsi
 9834 2ad4 488D3D00 		leaq	_ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE(%rip), %rdi
 9834      000000
 9835 2adb E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9835      00
  31:TestUnitTest++.cpp **** {
 9836              		.loc 4 31 0
 9837 2ae0 488D3D00 		leaq	_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE(%rip), %rdi
 9837      000000
 9838 2ae7 E862D9FF 		call	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC1Ev
 9838      FF
 9839 2aec 488D1500 		leaq	__dso_handle(%rip), %rdx
 9839      000000
 9840 2af3 488D3500 		leaq	_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE(%rip), %rsi
 9840      000000
 9841 2afa 488D3D2F 		leaq	_ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev(%rip), %rdi
 9841      FDFFFF
 9842 2b01 E8000000 		call	__cxa_atexit@PLT
 9842      00
 9843 2b06 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9843      00
 9844 2b0b 488D1500 		leaq	_ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE(%rip), %rdx
 9844      000000
 9845 2b12 4889C6   		movq	%rax, %rsi
 9846 2b15 488D3D00 		leaq	_ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE(%rip), %rdi
 9846      000000
 9847 2b1c E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9847      00
  37:TestUnitTest++.cpp **** {
 9848              		.loc 4 37 0
 9849 2b21 488D3D00 		leaq	_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE(%rip), %rdi
 9849      000000
 9850 2b28 E84DDAFF 		call	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC1Ev
 9850      FF
 9851 2b2d 488D1500 		leaq	__dso_handle(%rip), %rdx
 9851      000000
 9852 2b34 488D3500 		leaq	_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE(%rip), %rsi
 9852      000000
 9853 2b3b 488D3D7C 		leaq	_ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev(%rip), %rdi
 9853      FCFFFF
 9854 2b42 E8000000 		call	__cxa_atexit@PLT
 9854      00
 9855 2b47 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9855      00
 9856 2b4c 488D1500 		leaq	_ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE(%rip), %rdx
 9856      000000
 9857 2b53 4889C6   		movq	%rax, %rsi
 9858 2b56 488D3D00 		leaq	_ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE(%rip), %rdi
 9858      000000
 9859 2b5d E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9859      00
  43:TestUnitTest++.cpp **** {
 9860              		.loc 4 43 0
 9861 2b62 488D3D00 		leaq	_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE(%rip), %rdi
 9861      000000
 9862 2b69 E820DCFF 		call	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsC1Ev
 9862      FF
 9863 2b6e 488D1500 		leaq	__dso_handle(%rip), %rdx
 9863      000000
 9864 2b75 488D3500 		leaq	_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE(%rip), %rsi
 9864      000000
 9865 2b7c 488D3DC9 		leaq	_ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev(%rip), %rdi
 9865      FBFFFF
 9866 2b83 E8000000 		call	__cxa_atexit@PLT
 9866      00
 9867 2b88 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9867      00
 9868 2b8d 488D1500 		leaq	_ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE(%rip), %rdx
 9868      000000
 9869 2b94 4889C6   		movq	%rax, %rsi
 9870 2b97 488D3D00 		leaq	_ZN12_GLOBAL__N_123adderArrayCloseSucceedsE(%rip), %rdi
 9870      000000
 9871 2b9e E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9871      00
  50:TestUnitTest++.cpp **** {
 9872              		.loc 4 50 0
 9873 2ba3 488D3D00 		leaq	_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE(%rip), %rdi
 9873      000000
 9874 2baa E865DDFF 		call	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC1Ev
 9874      FF
 9875 2baf 488D1500 		leaq	__dso_handle(%rip), %rdx
 9875      000000
 9876 2bb6 488D3500 		leaq	_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE(%rip), %rsi
 9876      000000
 9877 2bbd 488D3D16 		leaq	_ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev(%rip), %rdi
 9877      FBFFFF
 9878 2bc4 E8000000 		call	__cxa_atexit@PLT
 9878      00
 9879 2bc9 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9879      00
 9880 2bce 488D1500 		leaq	_ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE(%rip), %rdx
 9880      000000
 9881 2bd5 4889C6   		movq	%rax, %rsi
 9882 2bd8 488D3D00 		leaq	_ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE(%rip), %rdi
 9882      000000
 9883 2bdf E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9883      00
  59:TestUnitTest++.cpp **** {
 9884              		.loc 4 59 0
 9885 2be4 488D3D00 		leaq	_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE(%rip), %rdi
 9885      000000
 9886 2beb E814DFFF 		call	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC1Ev
 9886      FF
 9887 2bf0 488D1500 		leaq	__dso_handle(%rip), %rdx
 9887      000000
 9888 2bf7 488D3500 		leaq	_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE(%rip), %rsi
 9888      000000
 9889 2bfe 488D3D63 		leaq	_ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev(%rip), %rdi
 9889      FAFFFF
 9890 2c05 E8000000 		call	__cxa_atexit@PLT
 9890      00
 9891 2c0a E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9891      00
 9892 2c0f 488D1500 		leaq	_ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE(%rip), %rdx
 9892      000000
 9893 2c16 4889C6   		movq	%rax, %rsi
 9894 2c19 488D3D00 		leaq	_ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE(%rip), %rdi
 9894      000000
 9895 2c20 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9895      00
  65:TestUnitTest++.cpp **** {
 9896              		.loc 4 65 0
 9897 2c25 488D3D00 		leaq	_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE(%rip), %rdi
 9897      000000
 9898 2c2c E8EDDFFF 		call	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsC1Ev
 9898      FF
 9899 2c31 488D1500 		leaq	__dso_handle(%rip), %rdx
 9899      000000
 9900 2c38 488D3500 		leaq	_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE(%rip), %rsi
 9900      000000
 9901 2c3f 488D3DB0 		leaq	_ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev(%rip), %rdi
 9901      F9FFFF
 9902 2c46 E8000000 		call	__cxa_atexit@PLT
 9902      00
 9903 2c4b E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9903      00
 9904 2c50 488D1500 		leaq	_ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE(%rip), %rdx
 9904      000000
 9905 2c57 4889C6   		movq	%rax, %rsi
 9906 2c5a 488D3D00 		leaq	_ZN12_GLOBAL__N_124adderCheckAssertSucceedsE(%rip), %rdi
 9906      000000
 9907 2c61 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9907      00
  70:TestUnitTest++.cpp **** {
 9908              		.loc 4 70 0
 9909 2c66 488D3D00 		leaq	_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE(%rip), %rdi
 9909      000000
 9910 2c6d E8C0E0FF 		call	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC1Ev
 9910      FF
 9911 2c72 488D1500 		leaq	__dso_handle(%rip), %rdx
 9911      000000
 9912 2c79 488D3500 		leaq	_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE(%rip), %rsi
 9912      000000
 9913 2c80 488D3D8B 		leaq	_ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev(%rip), %rdi
 9913      F8FFFF
 9914 2c87 E8000000 		call	__cxa_atexit@PLT
 9914      00
 9915 2c8c E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9915      00
 9916 2c91 488D1500 		leaq	_ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE(%rip), %rdx
 9916      000000
 9917 2c98 4889C6   		movq	%rax, %rsi
 9918 2c9b 488D3D00 		leaq	_ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE(%rip), %rdi
 9918      000000
 9919 2ca2 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9919      00
  97:TestUnitTest++.cpp **** {
 9920              		.loc 4 97 0
 9921 2ca7 488D3D00 		leaq	_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE(%rip), %rdi
 9921      000000
 9922 2cae E825E3FF 		call	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC1Ev
 9922      FF
 9923 2cb3 488D1500 		leaq	__dso_handle(%rip), %rdx
 9923      000000
 9924 2cba 488D3500 		leaq	_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE(%rip), %rsi
 9924      000000
 9925 2cc1 488D3D66 		leaq	_ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev(%rip), %rdi
 9925      F7FFFF
 9926 2cc8 E8000000 		call	__cxa_atexit@PLT
 9926      00
 9927 2ccd E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9927      00
 9928 2cd2 488D1500 		leaq	_ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE(%rip), %rdx
 9928      000000
 9929 2cd9 4889C6   		movq	%rax, %rsi
 9930 2cdc 488D3D00 		leaq	_ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE(%rip), %rdi
 9930      000000
 9931 2ce3 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9931      00
 136:TestUnitTest++.cpp **** {
 9932              		.loc 4 136 0
 9933 2ce8 488D3D00 		leaq	_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE(%rip), %rdi
 9933      000000
 9934 2cef E826E6FF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC1Ev
 9934      FF
 9935 2cf4 488D1500 		leaq	__dso_handle(%rip), %rdx
 9935      000000
 9936 2cfb 488D3500 		leaq	_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE(%rip), %rsi
 9936      000000
 9937 2d02 488D3DB3 		leaq	_ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev(%rip), %rdi
 9937      F6FFFF
 9938 2d09 E8000000 		call	__cxa_atexit@PLT
 9938      00
 9939 2d0e E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9939      00
 9940 2d13 488D1500 		leaq	_ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE(%rip), %rdx
 9940      000000
 9941 2d1a 4889C6   		movq	%rax, %rsi
 9942 2d1d 488D3D00 		leaq	_ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE(%rip), %rdi
 9942      000000
 9943 2d24 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9943      00
 141:TestUnitTest++.cpp **** {
 9944              		.loc 4 141 0
 9945 2d29 488D3D00 		leaq	_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE(%rip), %rdi
 9945      000000
 9946 2d30 E873EAFF 		call	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC1Ev
 9946      FF
 9947 2d35 488D1500 		leaq	__dso_handle(%rip), %rdx
 9947      000000
 9948 2d3c 488D3500 		leaq	_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE(%rip), %rsi
 9948      000000
 9949 2d43 488D3D00 		leaq	_ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev(%rip), %rdi
 9949      F6FFFF
 9950 2d4a E8000000 		call	__cxa_atexit@PLT
 9950      00
 9951 2d4f E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9951      00
 9952 2d54 488D1500 		leaq	_ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE(%rip), %rdx
 9952      000000
 9953 2d5b 4889C6   		movq	%rax, %rsi
 9954 2d5e 488D3D00 		leaq	_ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE(%rip), %rdi
 9954      000000
 9955 2d65 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9955      00
 151:TestUnitTest++.cpp **** {
 9956              		.loc 4 151 0
 9957 2d6a 488D3D00 		leaq	_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE(%rip), %rdi
 9957      000000
 9958 2d71 E86AEFFF 		call	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC1Ev
 9958      FF
 9959 2d76 488D1500 		leaq	__dso_handle(%rip), %rdx
 9959      000000
 9960 2d7d 488D3500 		leaq	_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE(%rip), %rsi
 9960      000000
 9961 2d84 488D3D4D 		leaq	_ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev(%rip), %rdi
 9961      F5FFFF
 9962 2d8b E8000000 		call	__cxa_atexit@PLT
 9962      00
 9963 2d90 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 9963      00
 9964 2d95 488D1500 		leaq	_ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE(%rip), %rdx
 9964      000000
 9965 2d9c 4889C6   		movq	%rax, %rsi
 9966 2d9f 488D3D00 		leaq	_ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE(%rip), %rdi
 9966      000000
 9967 2da6 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 9967      00
 9968              	.L498:
 9969              		.loc 4 156 0
 9970 2dab 90       		nop
 9971 2dac C9       		leave
 9972              		.cfi_def_cfa 7, 8
 9973 2dad C3       		ret
 9974              		.cfi_endproc
 9975              	.LFE1672:
 9978              	_GLOBAL__sub_I_TestUnitTest__.cpp:
 9979              	.LFB1673:
 9980              		.loc 4 156 0
 9981              		.cfi_startproc
 9982 2dae 55       		pushq	%rbp
 9983              		.cfi_def_cfa_offset 16
 9984              		.cfi_offset 6, -16
 9985 2daf 4889E5   		movq	%rsp, %rbp
 9986              		.cfi_def_cfa_register 6
 9987              		.loc 4 156 0
 9988 2db2 BEFFFF00 		movl	$65535, %esi
 9988      00
 9989 2db7 BF010000 		movl	$1, %edi
 9989      00
 9990 2dbc E837FCFF 		call	_Z41__static_initialization_and_destruction_0ii
 9990      FF
 9991 2dc1 5D       		popq	%rbp
 9992              		.cfi_def_cfa 7, 8
 9993 2dc2 C3       		ret
 9994              		.cfi_endproc
 9995              	.LFE1673:
 9997              		.section	.init_array,"aw"
 9998              		.align 8
 9999 0000 00000000 		.quad	_GLOBAL__sub_I_TestUnitTest__.cpp
 9999      00000000 
 10000              		.section	.rodata
 10001 0aca 0000     		.align 4
 10002              	.LC15:
 10003 0acc 0AD7233C 		.long	1008981770
 10004              		.align 4
 10005              	.LC16:
 10006 0ad0 62100040 		.long	1073746018
 10007              		.align 4
 10008              	.LC17:
 10009 0ad4 00000040 		.long	1073741824
 10010              		.align 4
 10011              	.LC21:
 10012 0ad8 0000803F 		.long	1065353216
 10013              		.align 4
 10014              	.LC22:
 10015 0adc 00004040 		.long	1077936128
 10016              		.align 4
 10017              	.LC23:
 10018 0ae0 D7A30040 		.long	1073783767
 10019              		.align 4
 10020              	.LC24:
 10021 0ae4 CDCCCC3D 		.long	1036831949
 10022              		.align 4
 10023              	.LC28:
 10024 0ae8 17B7D138 		.long	953267991
 10025              		.text
 10026              	.Letext0:
 10027              		.file 14 "../TestDetails.h"
 10028              		.file 15 "../TestList.h"
 10029              		.file 16 "../TestResults.h"
 10030              		.file 17 "../PosixUtils/SignalTranslator.h"
 10031              		.file 18 "/usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h"
 10032              		.file 19 "/usr/include/c++/7/bits/basic_string.h"
 10033              		.file 20 "/usr/include/c++/7/bits/basic_string.tcc"
 10034              		.file 21 "/usr/include/c++/7/bits/stringfwd.h"
 10035              		.file 22 "/usr/include/c++/7/cwchar"
 10036              		.file 23 "/usr/include/c++/7/bits/cpp_type_traits.h"
 10037              		.file 24 "/usr/include/c++/7/bits/char_traits.h"
 10038              		.file 25 "/usr/include/c++/7/clocale"
 10039              		.file 26 "/usr/include/c++/7/cwctype"
 10040              		.file 27 "/usr/include/c++/7/bits/vector.tcc"
 10041              		.file 28 "/usr/include/c++/7/debug/debug.h"
 10042              		.file 29 "/usr/include/c++/7/bits/predefined_ops.h"
 10043              		.file 30 "/usr/include/c++/7/ext/numeric_traits.h"
 10044              		.file 31 "/usr/include/c++/7/ext/type_traits.h"
 10045              		.file 32 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 10046              		.file 33 "<built-in>"
 10047              		.file 34 "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h"
 10048              		.file 35 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h"
 10049              		.file 36 "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h"
 10050              		.file 37 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h"
 10051              		.file 38 "/usr/include/wchar.h"
 10052              		.file 39 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h"
 10053              		.file 40 "/usr/include/locale.h"
 10054              		.file 41 "/usr/include/x86_64-linux-gnu/bits/types.h"
 10055              		.file 42 "/usr/include/time.h"
 10056              		.file 43 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 10057              		.file 44 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h"
 10058              		.file 45 "/usr/include/wctype.h"
 10059              		.file 46 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 10060              		.file 47 "/usr/include/setjmp.h"
 10061              		.file 48 "/usr/include/x86_64-linux-gnu/bits/types/sigval_t.h"
 10062              		.file 49 "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h"
 10063              		.file 50 "/usr/include/signal.h"
 10064              		.file 51 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
 10065              		.file 52 "/usr/include/x86_64-linux-gnu/sys/time.h"
 10066              		.file 53 "/usr/include/c++/7/new"
 28911              		.align 8
 28914              	DW.ref._ZTIN8UnitTest15AssertExceptionE:
 28915 0000 00000000 		.quad	_ZTIN8UnitTest15AssertExceptionE
 28915      00000000 
 28916              		.hidden	DW.ref._ZTISt9exception
 28917              		.weak	DW.ref._ZTISt9exception
 28918              		.section	.data.DW.ref._ZTISt9exception,"awG",@progbits,DW.ref._ZTISt9exception,comdat
 28919              		.align 8
 28922              	DW.ref._ZTISt9exception:
 28923 0000 00000000 		.quad	_ZTISt9exception
 28923      00000000 
 28924              		.data
 28925              		.align 8
 28928              	.LDFCM0:
 28929 0000 00000000 		.quad	_ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestExcepti
 28929      00000000 
 28930              		.hidden	DW.ref._ZTIi
 28931              		.weak	DW.ref._ZTIi
 28932              		.section	.data.DW.ref._ZTIi,"awG",@progbits,DW.ref._ZTIi,comdat
 28933              		.align 8
 28936              	DW.ref._ZTIi:
 28937 0000 00000000 		.quad	_ZTIi
 28937      00000000 
 28938              		.hidden	DW.ref.__gxx_personality_v0
 28939              		.weak	DW.ref.__gxx_personality_v0
 28940              		.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
 28941              		.align 8
 28944              	DW.ref.__gxx_personality_v0:
 28945 0000 00000000 		.quad	__gxx_personality_v0
 28945      00000000 
 28946              		.hidden	__dso_handle
 28947              		.ident	"GCC: (Ubuntu 7.2.0-8ubuntu3.2) 7.2.0"
 28948              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestUnitTest++.cpp
     /tmp/cc8EAtiz.s:10     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/cc8EAtiz.s:33     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/cc8EAtiz.s:28944  .data.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc8EAtiz.s:9283   .data.rel.ro.local._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/cc8EAtiz.s:9267   .data.rel.ro.local._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/cc8EAtiz.s:145    .text._ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE:0000000000000000 _ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
     /tmp/cc8EAtiz.s:145    .text._ZN17ScopedCurrentTestC2ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE:0000000000000000 _ZN17ScopedCurrentTestC1ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
     /tmp/cc8EAtiz.s:199    .text._ZN17ScopedCurrentTestD2Ev:0000000000000000 _ZN17ScopedCurrentTestD2Ev
     /tmp/cc8EAtiz.s:199    .text._ZN17ScopedCurrentTestD2Ev:0000000000000000 _ZN17ScopedCurrentTestD1Ev
     /tmp/cc8EAtiz.s:242    .text:0000000000000000 _ZN12_GLOBAL__N_122TestValidCheckSucceedsC2Ev
     /tmp/cc8EAtiz.s:9160   .data.rel.ro.local:0000000000000258 _ZTVN12_GLOBAL__N_122TestValidCheckSucceedsE
     /tmp/cc8EAtiz.s:242    .text:0000000000000000 _ZN12_GLOBAL__N_122TestValidCheckSucceedsC1Ev
     /tmp/cc8EAtiz.s:281    .bss:0000000000000000 _ZN12_GLOBAL__N_130testValidCheckSucceedsInstanceE
     /tmp/cc8EAtiz.s:281    .bss:0000000000000038 _ZN12_GLOBAL__N_123adderValidCheckSucceedsE
     /tmp/cc8EAtiz.s:293    .text:000000000000004c _ZNK12_GLOBAL__N_122TestValidCheckSucceeds7RunImplEv
     /tmp/cc8EAtiz.s:4485   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/cc8EAtiz.s:434    .text:0000000000000136 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersC2Ev
     /tmp/cc8EAtiz.s:9054   .data.rel.ro.local:0000000000000230 _ZTVN12_GLOBAL__N_126TestCheckWorksWithPointersE
     /tmp/cc8EAtiz.s:434    .text:0000000000000136 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersC1Ev
     /tmp/cc8EAtiz.s:472    .bss:0000000000000040 _ZN12_GLOBAL__N_134testCheckWorksWithPointersInstanceE
     /tmp/cc8EAtiz.s:472    .bss:0000000000000078 _ZN12_GLOBAL__N_127adderCheckWorksWithPointersE
     /tmp/cc8EAtiz.s:489    .text:0000000000000182 _ZNK12_GLOBAL__N_126TestCheckWorksWithPointers7RunImplEv
     /tmp/cc8EAtiz.s:4509   .text._ZN8UnitTest5CheckIPvEEbT_:0000000000000000 _ZN8UnitTest5CheckIPvEEbT_
     /tmp/cc8EAtiz.s:712    .text:0000000000000326 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC2Ev
     /tmp/cc8EAtiz.s:8948   .data.rel.ro.local:0000000000000208 _ZTVN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
     /tmp/cc8EAtiz.s:712    .text:0000000000000326 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsC1Ev
     /tmp/cc8EAtiz.s:750    .bss:0000000000000080 _ZN12_GLOBAL__N_135testValidCheckEqualSucceedsInstanceE
     /tmp/cc8EAtiz.s:750    .bss:00000000000000b8 _ZN12_GLOBAL__N_128adderValidCheckEqualSucceedsE
     /tmp/cc8EAtiz.s:760    .text:0000000000000372 _ZNK12_GLOBAL__N_127TestValidCheckEqualSucceeds7RunImplEv
     /tmp/cc8EAtiz.s:4537   .text._ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIiiEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/cc8EAtiz.s:895    .text:000000000000044e _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC2Ev
     /tmp/cc8EAtiz.s:8842   .data.rel.ro.local:00000000000001e0 _ZTVN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
     /tmp/cc8EAtiz.s:895    .text:000000000000044e _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersC1Ev
     /tmp/cc8EAtiz.s:933    .bss:00000000000000c0 _ZN12_GLOBAL__N_139testCheckEqualWorksWithPointersInstanceE
     /tmp/cc8EAtiz.s:933    .bss:00000000000000f8 _ZN12_GLOBAL__N_132adderCheckEqualWorksWithPointersE
     /tmp/cc8EAtiz.s:943    .text:000000000000049a _ZNK12_GLOBAL__N_131TestCheckEqualWorksWithPointers7RunImplEv
     /tmp/cc8EAtiz.s:4677   .text._ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPvS1_EEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/cc8EAtiz.s:1088   .text:000000000000057a _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC2Ev
     /tmp/cc8EAtiz.s:8736   .data.rel.ro.local:00000000000001b8 _ZTVN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
     /tmp/cc8EAtiz.s:1088   .text:000000000000057a _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsC1Ev
     /tmp/cc8EAtiz.s:1126   .bss:0000000000000100 _ZN12_GLOBAL__N_135testValidCheckCloseSucceedsInstanceE
     /tmp/cc8EAtiz.s:1126   .bss:0000000000000138 _ZN12_GLOBAL__N_128adderValidCheckCloseSucceedsE
     /tmp/cc8EAtiz.s:1139   .text:00000000000005c6 _ZNK12_GLOBAL__N_127TestValidCheckCloseSucceeds7RunImplEv
     /tmp/cc8EAtiz.s:4820   .text._ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckCloseIfffEEvRNS_11TestResultsERKT_RKT0_RKT1_RKNS_11TestDetailsE
     /tmp/cc8EAtiz.s:1377   .text:000000000000078e _ZN12_GLOBAL__N_122TestArrayCloseSucceedsC2Ev
     /tmp/cc8EAtiz.s:8630   .data.rel.ro.local:0000000000000190 _ZTVN12_GLOBAL__N_122TestArrayCloseSucceedsE
     /tmp/cc8EAtiz.s:1377   .text:000000000000078e _ZN12_GLOBAL__N_122TestArrayCloseSucceedsC1Ev
     /tmp/cc8EAtiz.s:1415   .bss:0000000000000140 _ZN12_GLOBAL__N_130testArrayCloseSucceedsInstanceE
     /tmp/cc8EAtiz.s:1415   .bss:0000000000000178 _ZN12_GLOBAL__N_123adderArrayCloseSucceedsE
     /tmp/cc8EAtiz.s:1425   .text:00000000000007da _ZNK12_GLOBAL__N_122TestArrayCloseSucceeds7RunImplEv
     /tmp/cc8EAtiz.s:4989   .text._ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest15CheckArrayCloseIA3_fS1_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE
     /tmp/cc8EAtiz.s:1588   .text:0000000000000914 _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC2Ev
     /tmp/cc8EAtiz.s:8524   .data.rel.ro.local:0000000000000168 _ZTVN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
     /tmp/cc8EAtiz.s:1588   .text:0000000000000914 _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsC1Ev
     /tmp/cc8EAtiz.s:1626   .bss:0000000000000180 _ZN12_GLOBAL__N_143testCheckArrayCloseWorksWithVectorsInstanceE
     /tmp/cc8EAtiz.s:1626   .bss:00000000000001b8 _ZN12_GLOBAL__N_136adderCheckArrayCloseWorksWithVectorsE
     /tmp/cc8EAtiz.s:1636   .text:0000000000000960 _ZNK12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectors7RunImplEv
     /tmp/cc8EAtiz.s:5194   .text._ZNSaIfEC2Ev:0000000000000000 _ZNSaIfEC1Ev
     /tmp/cc8EAtiz.s:5255   .text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_:0000000000000000 _ZNSt6vectorIfSaIfEEC1EmRKfRKS0_
     /tmp/cc8EAtiz.s:5225   .text._ZNSaIfED2Ev:0000000000000000 _ZNSaIfED1Ev
     /tmp/cc8EAtiz.s:5432   .text._ZNSt6vectorIfSaIfEEixEm:0000000000000000 _ZNSt6vectorIfSaIfEEixEm
     /tmp/cc8EAtiz.s:5460   .text._ZNKSt6vectorIfSaIfEE4sizeEv:0000000000000000 _ZNKSt6vectorIfSaIfEE4sizeEv
     /tmp/cc8EAtiz.s:5488   .text._ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest15CheckArrayCloseISt6vectorIfSaIfEES3_fEEvRNS_11TestResultsERKT_RKT0_iRKT1_RKNS_11TestDetailsE
     /tmp/cc8EAtiz.s:5345   .text._ZNSt6vectorIfSaIfEED2Ev:0000000000000000 _ZNSt6vectorIfSaIfEED1Ev
     /tmp/cc8EAtiz.s:1856   .text:0000000000000b04 _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC2Ev
     /tmp/cc8EAtiz.s:8418   .data.rel.ro.local:0000000000000140 _ZTVN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/cc8EAtiz.s:1856   .text:0000000000000b04 _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionC1Ev
     /tmp/cc8EAtiz.s:1894   .bss:00000000000001c0 _ZN12_GLOBAL__N_153testCheckThrowMacroSucceedsOnCorrectExceptionInstanceE
     /tmp/cc8EAtiz.s:1894   .bss:00000000000001f8 _ZN12_GLOBAL__N_146adderCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/cc8EAtiz.s:1904   .text:0000000000000b50 _ZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEv
     /tmp/cc8EAtiz.s:9649   .data.rel.ro:00000000000000c0 _ZTIZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException
     /tmp/cc8EAtiz.s:2031   .text:0000000000000c1e _ZN12_GLOBAL__N_123TestCheckAssertSucceedsC2Ev
     /tmp/cc8EAtiz.s:8312   .data.rel.ro.local:0000000000000118 _ZTVN12_GLOBAL__N_123TestCheckAssertSucceedsE
     /tmp/cc8EAtiz.s:2031   .text:0000000000000c1e _ZN12_GLOBAL__N_123TestCheckAssertSucceedsC1Ev
     /tmp/cc8EAtiz.s:2069   .bss:0000000000000200 _ZN12_GLOBAL__N_131testCheckAssertSucceedsInstanceE
     /tmp/cc8EAtiz.s:2069   .bss:0000000000000238 _ZN12_GLOBAL__N_124adderCheckAssertSucceedsE
     /tmp/cc8EAtiz.s:2083   .text:0000000000000c6a _ZNK12_GLOBAL__N_123TestCheckAssertSucceeds7RunImplEv
     /tmp/cc8EAtiz.s:28914  .data.DW.ref._ZTIN8UnitTest15AssertExceptionE:0000000000000000 DW.ref._ZTIN8UnitTest15AssertExceptionE
     /tmp/cc8EAtiz.s:2209   .text:0000000000000d32 _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC2Ev
     /tmp/cc8EAtiz.s:8100   .data.rel.ro.local:00000000000000c8 _ZTVN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
     /tmp/cc8EAtiz.s:2209   .text:0000000000000d32 _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionC1Ev
     /tmp/cc8EAtiz.s:2247   .bss:0000000000000240 _ZN12_GLOBAL__N_150testCheckThrowMacroFailsOnMissingExceptionInstanceE
     /tmp/cc8EAtiz.s:2247   .bss:0000000000000278 _ZN12_GLOBAL__N_143adderCheckThrowMacroFailsOnMissingExceptionE
     /tmp/cc8EAtiz.s:2258   .text:0000000000000d7e _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC2Ev
     /tmp/cc8EAtiz.s:8206   .data.rel.ro.local:00000000000000f0 _ZTVZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
     /tmp/cc8EAtiz.s:2258   .text:0000000000000d7e _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestC1Ev
     /tmp/cc8EAtiz.s:2292   .text:0000000000000dc2 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest9DontThrowEv
     /tmp/cc8EAtiz.s:2317   .text:0000000000000dce _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvENK11NoThrowTest7RunImplEv
     /tmp/cc8EAtiz.s:2383   .text:0000000000000e5c _ZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEv
     /tmp/cc8EAtiz.s:8215   .text:0000000000002584 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD1Ev
     /tmp/cc8EAtiz.s:2617   .text:0000000000000fd8 _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC2Ev
     /tmp/cc8EAtiz.s:7888   .data.rel.ro.local:0000000000000078 _ZTVN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
     /tmp/cc8EAtiz.s:2617   .text:0000000000000fd8 _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionC1Ev
     /tmp/cc8EAtiz.s:2655   .bss:0000000000000280 _ZN12_GLOBAL__N_148testCheckThrowMacroFailsOnWrongExceptionInstanceE
     /tmp/cc8EAtiz.s:2655   .bss:00000000000002b8 _ZN12_GLOBAL__N_141adderCheckThrowMacroFailsOnWrongExceptionE
     /tmp/cc8EAtiz.s:2664   .text:0000000000001024 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC2Ev
     /tmp/cc8EAtiz.s:7994   .data.rel.ro.local:00000000000000a0 _ZTVZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
     /tmp/cc8EAtiz.s:2664   .text:0000000000001024 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestC1Ev
     /tmp/cc8EAtiz.s:2702   .text:0000000000001068 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvENK14WrongThrowTest7RunImplEv
     /tmp/cc8EAtiz.s:28936  .data.DW.ref._ZTIi:0000000000000000 DW.ref._ZTIi
     /tmp/cc8EAtiz.s:2827   .text:0000000000001140 _ZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEv
     /tmp/cc8EAtiz.s:8003   .text:00000000000024a0 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD1Ev
     /tmp/cc8EAtiz.s:3056   .text:00000000000012bc _ZN12_GLOBAL__N_113SimpleFixtureC2Ev
     /tmp/cc8EAtiz.s:3107   .bss:00000000000002bc _ZN12_GLOBAL__N_113SimpleFixture13instanceCountE
     /tmp/cc8EAtiz.s:3082   .text:00000000000012d6 _ZN12_GLOBAL__N_113SimpleFixtureD2Ev
     /tmp/cc8EAtiz.s:3110   .text:00000000000012f0 _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cc8EAtiz.s:3110   .text:00000000000012f0 _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/cc8EAtiz.s:3145   .text:000000000000131a _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC2Ev
     /tmp/cc8EAtiz.s:7782   .data.rel.ro.local:0000000000000050 _ZTVN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/cc8EAtiz.s:3145   .text:000000000000131a _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledC1Ev
     /tmp/cc8EAtiz.s:3183   .bss:00000000000002c0 _ZN12_GLOBAL__N_151testSimpleFixtureDefaultFixtureCtorIsCalledInstanceE
     /tmp/cc8EAtiz.s:3183   .bss:00000000000002f8 _ZN12_GLOBAL__N_144adderSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/cc8EAtiz.s:3188   .text:0000000000001366 _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD2Ev
     /tmp/cc8EAtiz.s:3188   .text:0000000000001366 _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperD1Ev
     /tmp/cc8EAtiz.s:3225   .text:0000000000001382 _ZNK12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalled7RunImplEv
     /tmp/cc8EAtiz.s:5702   .text:0000000000001d45 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc8EAtiz.s:9328   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/cc8EAtiz.s:28922  .data.DW.ref._ZTISt9exception:0000000000000000 DW.ref._ZTISt9exception
     /tmp/cc8EAtiz.s:3560   .text:000000000000168e _ZN12_GLOBAL__N_145SimpleFixtureDefaultFixtureCtorIsCalledHelper7RunImplEv
     /tmp/cc8EAtiz.s:3699   .text:000000000000177e _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cc8EAtiz.s:3699   .text:000000000000177e _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/cc8EAtiz.s:3734   .text:00000000000017a8 _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC2Ev
     /tmp/cc8EAtiz.s:7676   .data.rel.ro.local:0000000000000028 _ZTVN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/cc8EAtiz.s:3734   .text:00000000000017a8 _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeC1Ev
     /tmp/cc8EAtiz.s:3772   .bss:0000000000000300 _ZN12_GLOBAL__N_151testSimpleFixtureOnlyOneFixtureAliveAtATimeInstanceE
     /tmp/cc8EAtiz.s:3772   .bss:0000000000000338 _ZN12_GLOBAL__N_144adderSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/cc8EAtiz.s:3777   .text:00000000000017f4 _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD2Ev
     /tmp/cc8EAtiz.s:3777   .text:00000000000017f4 _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperD1Ev
     /tmp/cc8EAtiz.s:3804   .text:0000000000001810 _ZNK12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATime7RunImplEv
     /tmp/cc8EAtiz.s:6055   .text:000000000000200e _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc8EAtiz.s:4136   .text:0000000000001b1c _ZN12_GLOBAL__N_145SimpleFixtureOnlyOneFixtureAliveAtATimeHelper7RunImplEv
     /tmp/cc8EAtiz.s:4275   .text:0000000000001bf8 _ZN12_GLOBAL__N_19CheckBoolEb
     /tmp/cc8EAtiz.s:4417   .text:0000000000001ce0 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC2Ev
     /tmp/cc8EAtiz.s:7570   .data.rel.ro.local:0000000000000000 _ZTVN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
     /tmp/cc8EAtiz.s:4417   .text:0000000000001ce0 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionC1Ev
     /tmp/cc8EAtiz.s:4455   .bss:0000000000000340 _ZN12_GLOBAL__N_145testCanCallCHECKOutsideOfTestFunctionInstanceE
     /tmp/cc8EAtiz.s:4455   .bss:0000000000000378 _ZN12_GLOBAL__N_138adderCanCallCHECKOutsideOfTestFunctionE
     /tmp/cc8EAtiz.s:4460   .text:0000000000001d2c _ZNK12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunction7RunImplEv
     /tmp/cc8EAtiz.s:6409   .text._ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_:0000000000000000 _ZN8UnitTest8AreCloseIfffEEbRKT_RKT0_RKT1_
     /tmp/cc8EAtiz.s:6458   .text._ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_:0000000000000000 _ZN8UnitTest13ArrayAreCloseIA3_fS1_fEEbRKT_RKT0_iRKT1_
     /tmp/cc8EAtiz.s:5194   .text._ZNSaIfEC2Ev:0000000000000000 _ZNSaIfEC2Ev
     /tmp/cc8EAtiz.s:6521   .text._ZN9__gnu_cxx13new_allocatorIfEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC2Ev
     /tmp/cc8EAtiz.s:5225   .text._ZNSaIfED2Ev:0000000000000000 _ZNSaIfED2Ev
     /tmp/cc8EAtiz.s:6546   .text._ZN9__gnu_cxx13new_allocatorIfED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfED2Ev
     /tmp/cc8EAtiz.s:5255   .text._ZNSt6vectorIfSaIfEEC2EmRKfRKS0_:0000000000000000 _ZNSt6vectorIfSaIfEEC2EmRKfRKS0_
     /tmp/cc8EAtiz.s:6600   .text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_
     /tmp/cc8EAtiz.s:6766   .text._ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf:0000000000000000 _ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf
     /tmp/cc8EAtiz.s:6680   .text._ZNSt12_Vector_baseIfSaIfEED2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEED2Ev
     /tmp/cc8EAtiz.s:5345   .text._ZNSt6vectorIfSaIfEED2Ev:0000000000000000 _ZNSt6vectorIfSaIfEED2Ev
     /tmp/cc8EAtiz.s:6807   .text._ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv
     /tmp/cc8EAtiz.s:6828   .text._ZSt8_DestroyIPffEvT_S1_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPffEvT_S1_RSaIT0_E
     /tmp/cc8EAtiz.s:6859   .text._ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_:0000000000000000 _ZN8UnitTest13ArrayAreCloseISt6vectorIfSaIfEES3_fEEbRKT_RKT0_iRKT1_
     /tmp/cc8EAtiz.s:6931   .text._ZNKSt6vectorIfSaIfEEixEm:0000000000000000 _ZNKSt6vectorIfSaIfEEixEm
     /tmp/cc8EAtiz.s:6521   .text._ZN9__gnu_cxx13new_allocatorIfEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC1Ev
     /tmp/cc8EAtiz.s:6546   .text._ZN9__gnu_cxx13new_allocatorIfED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfED1Ev
     /tmp/cc8EAtiz.s:6570   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev
     /tmp/cc8EAtiz.s:6570   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev
     /tmp/cc8EAtiz.s:6959   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_
     /tmp/cc8EAtiz.s:6999   .text._ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm
     /tmp/cc8EAtiz.s:6600   .text._ZNSt12_Vector_baseIfSaIfEEC2EmRKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEEC1EmRKS0_
     /tmp/cc8EAtiz.s:7045   .text._ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm
     /tmp/cc8EAtiz.s:6680   .text._ZNSt12_Vector_baseIfSaIfEED2Ev:0000000000000000 _ZNSt12_Vector_baseIfSaIfEED1Ev
     /tmp/cc8EAtiz.s:7080   .text._ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E:0000000000000000 _ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E
     /tmp/cc8EAtiz.s:7111   .text._ZSt8_DestroyIPfEvT_S1_:0000000000000000 _ZSt8_DestroyIPfEvT_S1_
     /tmp/cc8EAtiz.s:6959   .text._ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implC2ERKS0_
     /tmp/cc8EAtiz.s:7141   .text._ZNSaIfEC2ERKS_:0000000000000000 _ZNSaIfEC2ERKS_
     /tmp/cc8EAtiz.s:7174   .text._ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm
     /tmp/cc8EAtiz.s:7210   .text._ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIfEE10deallocateERS1_Pfm
     /tmp/cc8EAtiz.s:7241   .text._ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_:0000000000000000 _ZSt20uninitialized_fill_nIPfmfET_S1_T0_RKT1_
     /tmp/cc8EAtiz.s:7273   .text._ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_:0000000000000000 _ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_
     /tmp/cc8EAtiz.s:7296   .text._ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_
     /tmp/cc8EAtiz.s:7141   .text._ZNSaIfEC2ERKS_:0000000000000000 _ZNSaIfEC1ERKS_
     /tmp/cc8EAtiz.s:7320   .text._ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIfEE8allocateERS1_m
     /tmp/cc8EAtiz.s:7349   .text._ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm
     /tmp/cc8EAtiz.s:7377   .text._ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_:0000000000000000 _ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPfmfEET_S3_T0_RKT1_
     /tmp/cc8EAtiz.s:7296   .text._ZN9__gnu_cxx13new_allocatorIfEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_
     /tmp/cc8EAtiz.s:7407   .text._ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv
     /tmp/cc8EAtiz.s:7446   .text._ZSt6fill_nIPfmfET_S1_T0_RKT1_:0000000000000000 _ZSt6fill_nIPfmfET_S1_T0_RKT1_
     /tmp/cc8EAtiz.s:7481   .text._ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv
     /tmp/cc8EAtiz.s:7502   .text._ZSt12__niter_baseIPfET_S1_:0000000000000000 _ZSt12__niter_baseIPfET_S1_
     /tmp/cc8EAtiz.s:7523   .text._ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_:0000000000000000 _ZSt10__fill_n_aIPfmfEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_
     /tmp/cc8EAtiz.s:9537   .data.rel.ro:0000000000000000 _ZTIN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
     /tmp/cc8EAtiz.s:7579   .text:00000000000022d8 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD1Ev
     /tmp/cc8EAtiz.s:7609   .text:0000000000002302 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD0Ev
     /tmp/cc8EAtiz.s:7579   .text:00000000000022d8 _ZN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionD2Ev
     /tmp/cc8EAtiz.s:9551   .data.rel.ro:0000000000000018 _ZTIN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/cc8EAtiz.s:7685   .text:000000000000234a _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD1Ev
     /tmp/cc8EAtiz.s:7715   .text:0000000000002374 _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD0Ev
     /tmp/cc8EAtiz.s:7685   .text:000000000000234a _ZN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeD2Ev
     /tmp/cc8EAtiz.s:9565   .data.rel.ro:0000000000000030 _ZTIN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/cc8EAtiz.s:7791   .text:00000000000023bc _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD1Ev
     /tmp/cc8EAtiz.s:7821   .text:00000000000023e6 _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD0Ev
     /tmp/cc8EAtiz.s:7791   .text:00000000000023bc _ZN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledD2Ev
     /tmp/cc8EAtiz.s:9593   .data.rel.ro:0000000000000060 _ZTIN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
     /tmp/cc8EAtiz.s:7897   .text:000000000000242e _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD1Ev
     /tmp/cc8EAtiz.s:7927   .text:0000000000002458 _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD0Ev
     /tmp/cc8EAtiz.s:7897   .text:000000000000242e _ZN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionD2Ev
     /tmp/cc8EAtiz.s:9579   .data.rel.ro:0000000000000048 _ZTIZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
     /tmp/cc8EAtiz.s:8033   .text:00000000000024ca _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD0Ev
     /tmp/cc8EAtiz.s:8003   .text:00000000000024a0 _ZZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvEN14WrongThrowTestD2Ev
     /tmp/cc8EAtiz.s:9621   .data.rel.ro:0000000000000090 _ZTIN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
     /tmp/cc8EAtiz.s:8109   .text:0000000000002512 _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD1Ev
     /tmp/cc8EAtiz.s:8139   .text:000000000000253c _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD0Ev
     /tmp/cc8EAtiz.s:8109   .text:0000000000002512 _ZN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionD2Ev
     /tmp/cc8EAtiz.s:9607   .data.rel.ro:0000000000000078 _ZTIZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
     /tmp/cc8EAtiz.s:8245   .text:00000000000025ae _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD0Ev
     /tmp/cc8EAtiz.s:8215   .text:0000000000002584 _ZZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvEN11NoThrowTestD2Ev
     /tmp/cc8EAtiz.s:9635   .data.rel.ro:00000000000000a8 _ZTIN12_GLOBAL__N_123TestCheckAssertSucceedsE
     /tmp/cc8EAtiz.s:8321   .text:00000000000025f6 _ZN12_GLOBAL__N_123TestCheckAssertSucceedsD1Ev
     /tmp/cc8EAtiz.s:8351   .text:0000000000002620 _ZN12_GLOBAL__N_123TestCheckAssertSucceedsD0Ev
     /tmp/cc8EAtiz.s:8321   .text:00000000000025f6 _ZN12_GLOBAL__N_123TestCheckAssertSucceedsD2Ev
     /tmp/cc8EAtiz.s:9662   .data.rel.ro:00000000000000d0 _ZTIN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/cc8EAtiz.s:8427   .text:0000000000002668 _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD1Ev
     /tmp/cc8EAtiz.s:8457   .text:0000000000002692 _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD0Ev
     /tmp/cc8EAtiz.s:8427   .text:0000000000002668 _ZN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionD2Ev
     /tmp/cc8EAtiz.s:9676   .data.rel.ro:00000000000000e8 _ZTIN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
     /tmp/cc8EAtiz.s:8533   .text:00000000000026da _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD1Ev
     /tmp/cc8EAtiz.s:8563   .text:0000000000002704 _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD0Ev
     /tmp/cc8EAtiz.s:8533   .text:00000000000026da _ZN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsD2Ev
     /tmp/cc8EAtiz.s:9690   .data.rel.ro:0000000000000100 _ZTIN12_GLOBAL__N_122TestArrayCloseSucceedsE
     /tmp/cc8EAtiz.s:8639   .text:000000000000274c _ZN12_GLOBAL__N_122TestArrayCloseSucceedsD1Ev
     /tmp/cc8EAtiz.s:8669   .text:0000000000002776 _ZN12_GLOBAL__N_122TestArrayCloseSucceedsD0Ev
     /tmp/cc8EAtiz.s:8639   .text:000000000000274c _ZN12_GLOBAL__N_122TestArrayCloseSucceedsD2Ev
     /tmp/cc8EAtiz.s:9704   .data.rel.ro:0000000000000118 _ZTIN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
     /tmp/cc8EAtiz.s:8745   .text:00000000000027be _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD1Ev
     /tmp/cc8EAtiz.s:8775   .text:00000000000027e8 _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD0Ev
     /tmp/cc8EAtiz.s:8745   .text:00000000000027be _ZN12_GLOBAL__N_127TestValidCheckCloseSucceedsD2Ev
     /tmp/cc8EAtiz.s:9718   .data.rel.ro:0000000000000130 _ZTIN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
     /tmp/cc8EAtiz.s:8851   .text:0000000000002830 _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD1Ev
     /tmp/cc8EAtiz.s:8881   .text:000000000000285a _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD0Ev
     /tmp/cc8EAtiz.s:8851   .text:0000000000002830 _ZN12_GLOBAL__N_131TestCheckEqualWorksWithPointersD2Ev
     /tmp/cc8EAtiz.s:9732   .data.rel.ro:0000000000000148 _ZTIN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
     /tmp/cc8EAtiz.s:8957   .text:00000000000028a2 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD1Ev
     /tmp/cc8EAtiz.s:8987   .text:00000000000028cc _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD0Ev
     /tmp/cc8EAtiz.s:8957   .text:00000000000028a2 _ZN12_GLOBAL__N_127TestValidCheckEqualSucceedsD2Ev
     /tmp/cc8EAtiz.s:9746   .data.rel.ro:0000000000000160 _ZTIN12_GLOBAL__N_126TestCheckWorksWithPointersE
     /tmp/cc8EAtiz.s:9063   .text:0000000000002914 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersD1Ev
     /tmp/cc8EAtiz.s:9093   .text:000000000000293e _ZN12_GLOBAL__N_126TestCheckWorksWithPointersD0Ev
     /tmp/cc8EAtiz.s:9063   .text:0000000000002914 _ZN12_GLOBAL__N_126TestCheckWorksWithPointersD2Ev
     /tmp/cc8EAtiz.s:9760   .data.rel.ro:0000000000000178 _ZTIN12_GLOBAL__N_122TestValidCheckSucceedsE
     /tmp/cc8EAtiz.s:9169   .text:0000000000002986 _ZN12_GLOBAL__N_122TestValidCheckSucceedsD1Ev
     /tmp/cc8EAtiz.s:9199   .text:00000000000029b0 _ZN12_GLOBAL__N_122TestValidCheckSucceedsD0Ev
     /tmp/cc8EAtiz.s:9169   .text:0000000000002986 _ZN12_GLOBAL__N_122TestValidCheckSucceedsD2Ev
     /tmp/cc8EAtiz.s:9769   .data.rel.ro._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/cc8EAtiz.s:9451   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/cc8EAtiz.s:9437   .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000ac _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/cc8EAtiz.s:9517   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000048 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/cc8EAtiz.s:9296   .data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
     /tmp/cc8EAtiz.s:9313   .data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/cc8EAtiz.s:9531   .rodata:0000000000000620 _ZTSN12_GLOBAL__N_137TestCanCallCHECKOutsideOfTestFunctionE
     /tmp/cc8EAtiz.s:9545   .rodata:0000000000000660 _ZTSN12_GLOBAL__N_143TestSimpleFixtureOnlyOneFixtureAliveAtATimeE
     /tmp/cc8EAtiz.s:9559   .rodata:00000000000006a0 _ZTSN12_GLOBAL__N_143TestSimpleFixtureDefaultFixtureCtorIsCalledE
     /tmp/cc8EAtiz.s:9573   .rodata:00000000000006e0 _ZTSZNK12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongException7RunImplEvE14WrongThrowTest
     /tmp/cc8EAtiz.s:9587   .rodata:0000000000000740 _ZTSN12_GLOBAL__N_140TestCheckThrowMacroFailsOnWrongExceptionE
     /tmp/cc8EAtiz.s:9601   .rodata:0000000000000780 _ZTSZNK12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingException7RunImplEvE11NoThrowTest
     /tmp/cc8EAtiz.s:9615   .rodata:00000000000007e0 _ZTSN12_GLOBAL__N_142TestCheckThrowMacroFailsOnMissingExceptionE
     /tmp/cc8EAtiz.s:9629   .rodata:0000000000000820 _ZTSN12_GLOBAL__N_123TestCheckAssertSucceedsE
     /tmp/cc8EAtiz.s:9643   .rodata:0000000000000860 _ZTSZNK12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectException7RunImplEvE13TestException
     /tmp/cc8EAtiz.s:9656   .rodata:00000000000008c0 _ZTSN12_GLOBAL__N_145TestCheckThrowMacroSucceedsOnCorrectExceptionE
     /tmp/cc8EAtiz.s:9670   .rodata:0000000000000920 _ZTSN12_GLOBAL__N_135TestCheckArrayCloseWorksWithVectorsE
     /tmp/cc8EAtiz.s:9684   .rodata:0000000000000960 _ZTSN12_GLOBAL__N_122TestArrayCloseSucceedsE
     /tmp/cc8EAtiz.s:9698   .rodata:00000000000009a0 _ZTSN12_GLOBAL__N_127TestValidCheckCloseSucceedsE
     /tmp/cc8EAtiz.s:9712   .rodata:00000000000009e0 _ZTSN12_GLOBAL__N_131TestCheckEqualWorksWithPointersE
     /tmp/cc8EAtiz.s:9726   .rodata:0000000000000a20 _ZTSN12_GLOBAL__N_127TestValidCheckEqualSucceedsE
     /tmp/cc8EAtiz.s:9740   .rodata:0000000000000a60 _ZTSN12_GLOBAL__N_126TestCheckWorksWithPointersE
     /tmp/cc8EAtiz.s:9754   .rodata:0000000000000aa0 _ZTSN12_GLOBAL__N_122TestValidCheckSucceedsE
     /tmp/cc8EAtiz.s:9778   .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/cc8EAtiz.s:9782   .text:00000000000029f8 _Z41__static_initialization_and_destruction_0ii
     /tmp/cc8EAtiz.s:9978   .text:0000000000002dae _GLOBAL__sub_I_TestUnitTest__.cpp
                           .group:0000000000000000 _ZN17ScopedCurrentTestC5ERN8UnitTest11TestResultsEPKNS0_11TestDetailsE
                           .group:0000000000000000 _ZN17ScopedCurrentTestD5Ev
                           .group:0000000000000000 _ZNSaIfEC5Ev
                           .group:0000000000000000 _ZNSaIfED5Ev
                           .group:0000000000000000 _ZNSt6vectorIfSaIfEEC5EmRKfRKS0_
                           .group:0000000000000000 _ZNSt6vectorIfSaIfEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEEC5EmRKS0_
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIfSaIfEE12_Vector_implC5ERKS0_
                           .group:0000000000000000 _ZNSaIfEC5ERKS_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIfEC5ERKS1_

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
__gxx_personality_v0
_ZN8UnitTest11CurrentTest7ResultsEv
_ZN8UnitTest11CurrentTest7DetailsEv
_ZN8UnitTest4TestC2EPKcS2_S2_i
_ZN8UnitTest11TestDetailsC1ERKS0_i
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
__cxa_begin_catch
__cxa_end_catch
__stack_chk_fail
__cxa_allocate_exception
__cxa_throw
_ZN8UnitTest12ReportAssertEPKcS1_i
_ZN8UnitTest11TestResultsC1EPNS_12TestReporterE
_ZN8UnitTest4Test3RunEv
_ZNK8UnitTest11TestResults15GetFailureCountEv
_ZTIPKc
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZNSolsEi
_ZNSolsEPKv
_ZNSolsEf
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
_ZN8UnitTest16SignalTranslatorD1Ev
_ZdlPv
_ZSt17__throw_bad_allocv
_Znwm
_ZN8UnitTest4TestD2Ev
_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
_ZTISo
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN8UnitTest4TestE
_ZTVN10__cxxabiv117__class_type_infoE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
_ZTIN8UnitTest15AssertExceptionE
_ZTISt9exception
_ZTIi
