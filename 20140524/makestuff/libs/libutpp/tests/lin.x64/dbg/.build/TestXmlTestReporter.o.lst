   1              		.file	"TestXmlTestReporter.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 44656661 		.string	"DefaultSuite"
   6      756C7453 
   6      75697465 
   6      00
   7              		.section	.text._ZN13UnitTestSuite12GetSuiteNameEv,"axG",@progbits,_ZN13UnitTestSuite12GetSuiteName
   8              		.weak	_ZN13UnitTestSuite12GetSuiteNameEv
  10              	_ZN13UnitTestSuite12GetSuiteNameEv:
  11              	.LFB0:
  12              		.file 1 "../TestSuite.h"
   1:../TestSuite.h **** #ifndef UNITTEST_TESTSUITE_H
   2:../TestSuite.h **** #define UNITTEST_TESTSUITE_H
   3:../TestSuite.h **** 
   4:../TestSuite.h **** namespace UnitTestSuite {
   5:../TestSuite.h **** 
   6:../TestSuite.h ****     inline char const* GetSuiteName ()
   7:../TestSuite.h ****     {
  13              		.loc 1 7 0
  14              		.cfi_startproc
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
  18 0001 4889E5   		movq	%rsp, %rbp
  19              		.cfi_def_cfa_register 6
   8:../TestSuite.h ****         return "DefaultSuite";
  20              		.loc 1 8 0
  21 0004 488D0500 		leaq	.LC0(%rip), %rax
  21      000000
   9:../TestSuite.h ****     }
  22              		.loc 1 9 0
  23 000b 5D       		popq	%rbp
  24              		.cfi_def_cfa 7, 8
  25 000c C3       		ret
  26              		.cfi_endproc
  27              	.LFE0:
  29              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
  30              		.align 2
  31              		.weak	_ZN8UnitTest15MemoryOutStreamC1Ev
  33              	_ZN8UnitTest15MemoryOutStreamC1Ev:
  34              	.LFB1076:
  35              		.file 2 "../MemoryOutStream.h"
   1:../MemoryOutStream.h **** #ifndef UNITTEST_MEMORYOUTSTREAM_H
   2:../MemoryOutStream.h **** #define UNITTEST_MEMORYOUTSTREAM_H
   3:../MemoryOutStream.h **** 
   4:../MemoryOutStream.h **** #include "Config.h"
   5:../MemoryOutStream.h **** 
   6:../MemoryOutStream.h **** #ifndef UNITTEST_USE_CUSTOM_STREAMS
   7:../MemoryOutStream.h **** 
   8:../MemoryOutStream.h **** #include <sstream>
   9:../MemoryOutStream.h **** 
  10:../MemoryOutStream.h **** namespace UnitTest
  11:../MemoryOutStream.h **** {
  12:../MemoryOutStream.h **** 
  13:../MemoryOutStream.h **** class MemoryOutStream : public std::ostringstream
  14:../MemoryOutStream.h **** {
  15:../MemoryOutStream.h **** public:
  16:../MemoryOutStream.h ****     MemoryOutStream() {}
  36              		.loc 2 16 0
  37              		.cfi_startproc
  38              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  39              		.cfi_lsda 0x1b,.LLSDA1076
  40 0000 55       		pushq	%rbp
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 6, -16
  43 0001 4889E5   		movq	%rsp, %rbp
  44              		.cfi_def_cfa_register 6
  45 0004 53       		pushq	%rbx
  46 0005 4883EC18 		subq	$24, %rsp
  47              		.cfi_offset 3, -24
  48 0009 48897DE8 		movq	%rdi, -24(%rbp)
  49              	.LBB2:
  50              		.loc 2 16 0
  51 000d 488B45E8 		movq	-24(%rbp), %rax
  52 0011 48059000 		addq	$144, %rax
  52      0000
  53 0017 4889C7   		movq	%rax, %rdi
  54              	.LEHB0:
  55 001a E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev@PLT
  55      00
  56              	.LEHE0:
  57 001f 488B45E8 		movq	-24(%rbp), %rax
  58 0023 488D0D00 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rcx
  58      000000
  59 002a BA100000 		movl	$16, %edx
  59      00
  60 002f 4889CE   		movq	%rcx, %rsi
  61 0032 4889C7   		movq	%rax, %rdi
  62              	.LEHB1:
  63 0035 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode@PLT
  63      00
  64              	.LEHE1:
  65              		.loc 2 16 0 is_stmt 0 discriminator 8
  66 003a 488D1500 		leaq	24+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
  66      000000
  67 0041 488B45E8 		movq	-24(%rbp), %rax
  68 0045 488910   		movq	%rdx, (%rax)
  69 0048 488B45E8 		movq	-24(%rbp), %rax
  70 004c 488D9090 		leaq	144(%rax), %rdx
  70      000000
  71 0053 488D0500 		leaq	64+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rax
  71      000000
  72 005a 488902   		movq	%rax, (%rdx)
  73 005d 488B45E8 		movq	-24(%rbp), %rax
  74 0061 4883C070 		addq	$112, %rax
  75 0065 4889C7   		movq	%rax, %rdi
  76              	.LEHB2:
  77 0068 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@PLT
  77      00
  78              	.LEHE2:
  79              	.LBE2:
  80              		.loc 2 16 0
  81 006d EB3B     		jmp	.L9
  82              	.L7:
  83 006f 4889C3   		movq	%rax, %rbx
  84              	.LBB3:
  85 0072 488B45E8 		movq	-24(%rbp), %rax
  86 0076 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
  86      000000
  87 007d 4889D6   		movq	%rdx, %rsi
  88 0080 4889C7   		movq	%rax, %rdi
  89 0083 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
  89      00
  90 0088 EB03     		jmp	.L8
  91              	.L6:
  92 008a 4889C3   		movq	%rax, %rbx
  93              	.L8:
  94              		.loc 2 16 0 discriminator 11
  95 008d 488B45E8 		movq	-24(%rbp), %rax
  96 0091 48059000 		addq	$144, %rax
  96      0000
  97 0097 4889C7   		movq	%rax, %rdi
  98 009a E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
  98      00
  99 009f 4889D8   		movq	%rbx, %rax
 100 00a2 4889C7   		movq	%rax, %rdi
 101              	.LEHB3:
 102 00a5 E8000000 		call	_Unwind_Resume@PLT
 102      00
 103              	.LEHE3:
 104              	.L9:
 105              	.LBE3:
 106              		.loc 2 16 0
 107 00aa 4883C418 		addq	$24, %rsp
 108 00ae 5B       		popq	%rbx
 109 00af 5D       		popq	%rbp
 110              		.cfi_def_cfa 7, 8
 111 00b0 C3       		ret
 112              		.cfi_endproc
 113              	.LFE1076:
 114              		.globl	__gxx_personality_v0
 115              		.section	.gcc_except_table._ZN8UnitTest15MemoryOutStreamC1Ev,"aG",@progbits,_ZN8UnitTest15MemoryOu
 116              	.LLSDA1076:
 117 0000 FF       		.byte	0xff
 118 0001 FF       		.byte	0xff
 119 0002 01       		.byte	0x1
 120 0003 12       		.uleb128 .LLSDACSE1076-.LLSDACSB1076
 121              	.LLSDACSB1076:
 122 0004 1A       		.uleb128 .LEHB0-.LFB1076
 123 0005 05       		.uleb128 .LEHE0-.LEHB0
 124 0006 00       		.uleb128 0
 125 0007 00       		.uleb128 0
 126 0008 35       		.uleb128 .LEHB1-.LFB1076
 127 0009 05       		.uleb128 .LEHE1-.LEHB1
 128 000a 8A01     		.uleb128 .L6-.LFB1076
 129 000c 00       		.uleb128 0
 130 000d 68       		.uleb128 .LEHB2-.LFB1076
 131 000e 05       		.uleb128 .LEHE2-.LEHB2
 132 000f 6F       		.uleb128 .L7-.LFB1076
 133 0010 00       		.uleb128 0
 134 0011 A501     		.uleb128 .LEHB3-.LFB1076
 135 0013 05       		.uleb128 .LEHE3-.LEHB3
 136 0014 00       		.uleb128 0
 137 0015 00       		.uleb128 0
 138              	.LLSDACSE1076:
 139              		.section	.text._ZN8UnitTest15MemoryOutStreamC1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamC1Ev
 141              		.text
 142              		.align 2
 144              	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev:
 145              	.LFB1356:
 146              		.file 3 "TestXmlTestReporter.cpp"
   1:TestXmlTestReporter.cpp **** #include "../UnitTest++.h"
   2:TestXmlTestReporter.cpp **** #include "../XmlTestReporter.h"
   3:TestXmlTestReporter.cpp **** 
   4:TestXmlTestReporter.cpp **** #include <sstream>
   5:TestXmlTestReporter.cpp **** 
   6:TestXmlTestReporter.cpp **** using namespace UnitTest;
   7:TestXmlTestReporter.cpp **** using std::ostringstream;
   8:TestXmlTestReporter.cpp **** 
   9:TestXmlTestReporter.cpp **** namespace
  10:TestXmlTestReporter.cpp **** {
  11:TestXmlTestReporter.cpp **** 
  12:TestXmlTestReporter.cpp **** #ifdef UNITTEST_USE_CUSTOM_STREAMS
  13:TestXmlTestReporter.cpp **** 
  14:TestXmlTestReporter.cpp **** // Overload to let MemoryOutStream accept std::string
  15:TestXmlTestReporter.cpp **** MemoryOutStream& operator<<(MemoryOutStream& s, const std::string& value)
  16:TestXmlTestReporter.cpp **** {
  17:TestXmlTestReporter.cpp ****     s << value.c_str();
  18:TestXmlTestReporter.cpp ****     return s;
  19:TestXmlTestReporter.cpp **** }
  20:TestXmlTestReporter.cpp **** 
  21:TestXmlTestReporter.cpp **** #endif
  22:TestXmlTestReporter.cpp **** 
  23:TestXmlTestReporter.cpp **** struct XmlTestReporterFixture
  24:TestXmlTestReporter.cpp **** {
  25:TestXmlTestReporter.cpp ****     XmlTestReporterFixture()
 147              		.loc 3 25 0 is_stmt 1
 148              		.cfi_startproc
 149              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 150              		.cfi_lsda 0x1b,.LLSDA1356
 151 0000 55       		pushq	%rbp
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 6, -16
 154 0001 4889E5   		movq	%rsp, %rbp
 155              		.cfi_def_cfa_register 6
 156 0004 53       		pushq	%rbx
 157 0005 4883EC18 		subq	$24, %rsp
 158              		.cfi_offset 3, -24
 159 0009 48897DE8 		movq	%rdi, -24(%rbp)
 160              	.LBB4:
  26:TestXmlTestReporter.cpp ****         : reporter(output)
 161              		.loc 3 26 0
 162 000d 488B45E8 		movq	-24(%rbp), %rax
 163 0011 BE100000 		movl	$16, %esi
 163      00
 164 0016 4889C7   		movq	%rax, %rdi
 165              	.LEHB4:
 166 0019 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode@PLT
 166      00
 167              	.LEHE4:
 168 001e 488B45E8 		movq	-24(%rbp), %rax
 169 0022 488D9078 		leaq	376(%rax), %rdx
 169      010000
 170 0029 488B45E8 		movq	-24(%rbp), %rax
 171 002d 4889C6   		movq	%rax, %rsi
 172 0030 4889D7   		movq	%rdx, %rdi
 173              	.LEHB5:
 174 0033 E8000000 		call	_ZN8UnitTest15XmlTestReporterC1ERSo@PLT
 174      00
 175              	.LEHE5:
 176              	.LBE4:
  27:TestXmlTestReporter.cpp ****     {
  28:TestXmlTestReporter.cpp ****     }
 177              		.loc 3 28 0
 178 0038 EB1A     		jmp	.L13
 179              	.L12:
 180 003a 4889C3   		movq	%rax, %rbx
 181              	.LBB5:
  26:TestXmlTestReporter.cpp ****         : reporter(output)
 182              		.loc 3 26 0
 183 003d 488B45E8 		movq	-24(%rbp), %rax
 184 0041 4889C7   		movq	%rax, %rdi
 185 0044 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT
 185      00
 186 0049 4889D8   		movq	%rbx, %rax
 187 004c 4889C7   		movq	%rax, %rdi
 188              	.LEHB6:
 189 004f E8000000 		call	_Unwind_Resume@PLT
 189      00
 190              	.LEHE6:
 191              	.L13:
 192              	.LBE5:
 193              		.loc 3 28 0
 194 0054 4883C418 		addq	$24, %rsp
 195 0058 5B       		popq	%rbx
 196 0059 5D       		popq	%rbp
 197              		.cfi_def_cfa 7, 8
 198 005a C3       		ret
 199              		.cfi_endproc
 200              	.LFE1356:
 201              		.section	.gcc_except_table,"a",@progbits
 202              	.LLSDA1356:
 203 0000 FF       		.byte	0xff
 204 0001 FF       		.byte	0xff
 205 0002 01       		.byte	0x1
 206 0003 0C       		.uleb128 .LLSDACSE1356-.LLSDACSB1356
 207              	.LLSDACSB1356:
 208 0004 19       		.uleb128 .LEHB4-.LFB1356
 209 0005 05       		.uleb128 .LEHE4-.LEHB4
 210 0006 00       		.uleb128 0
 211 0007 00       		.uleb128 0
 212 0008 33       		.uleb128 .LEHB5-.LFB1356
 213 0009 05       		.uleb128 .LEHE5-.LEHB5
 214 000a 3A       		.uleb128 .L12-.LFB1356
 215 000b 00       		.uleb128 0
 216 000c 4F       		.uleb128 .LEHB6-.LFB1356
 217 000d 05       		.uleb128 .LEHE6-.LEHB6
 218 000e 00       		.uleb128 0
 219 000f 00       		.uleb128 0
 220              	.LLSDACSE1356:
 221              		.text
 223 005b 90       		.align 2
 225              	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev:
 226              	.LFB1360:
  23:TestXmlTestReporter.cpp **** {
 227              		.loc 3 23 0
 228              		.cfi_startproc
 229              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 230              		.cfi_lsda 0x1b,.LLSDA1360
 231 005c 55       		pushq	%rbp
 232              		.cfi_def_cfa_offset 16
 233              		.cfi_offset 6, -16
 234 005d 4889E5   		movq	%rsp, %rbp
 235              		.cfi_def_cfa_register 6
 236 0060 53       		pushq	%rbx
 237 0061 4883EC18 		subq	$24, %rsp
 238              		.cfi_offset 3, -24
 239 0065 48897DE8 		movq	%rdi, -24(%rbp)
 240              	.LBB6:
  23:TestXmlTestReporter.cpp **** {
 241              		.loc 3 23 0
 242 0069 488B45E8 		movq	-24(%rbp), %rax
 243 006d 48057801 		addq	$376, %rax
 243      0000
 244 0073 4889C7   		movq	%rax, %rdi
 245              	.LEHB7:
 246 0076 E8000000 		call	_ZN8UnitTest15XmlTestReporterD1Ev
 246      00
 247              	.LEHE7:
  23:TestXmlTestReporter.cpp **** {
 248              		.loc 3 23 0 is_stmt 0 discriminator 2
 249 007b 488B45E8 		movq	-24(%rbp), %rax
 250 007f 4889C7   		movq	%rax, %rdi
 251              	.LEHB8:
 252 0082 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT
 252      00
 253              	.LEHE8:
 254              	.LBE6:
 255 0087 EB1A     		jmp	.L17
 256              	.L16:
 257 0089 4889C3   		movq	%rax, %rbx
 258              	.LBB7:
  23:TestXmlTestReporter.cpp **** {
 259              		.loc 3 23 0
 260 008c 488B45E8 		movq	-24(%rbp), %rax
 261 0090 4889C7   		movq	%rax, %rdi
 262 0093 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@PLT
 262      00
 263 0098 4889D8   		movq	%rbx, %rax
 264 009b 4889C7   		movq	%rax, %rdi
 265              	.LEHB9:
 266 009e E8000000 		call	_Unwind_Resume@PLT
 266      00
 267              	.LEHE9:
 268              	.L17:
 269              	.LBE7:
 270 00a3 4883C418 		addq	$24, %rsp
 271 00a7 5B       		popq	%rbx
 272 00a8 5D       		popq	%rbp
 273              		.cfi_def_cfa 7, 8
 274 00a9 C3       		ret
 275              		.cfi_endproc
 276              	.LFE1360:
 277              		.section	.gcc_except_table
 278              	.LLSDA1360:
 279 0010 FF       		.byte	0xff
 280 0011 FF       		.byte	0xff
 281 0012 01       		.byte	0x1
 282 0013 0C       		.uleb128 .LLSDACSE1360-.LLSDACSB1360
 283              	.LLSDACSB1360:
 284 0014 1A       		.uleb128 .LEHB7-.LFB1360
 285 0015 05       		.uleb128 .LEHE7-.LEHB7
 286 0016 2D       		.uleb128 .L16-.LFB1360
 287 0017 00       		.uleb128 0
 288 0018 26       		.uleb128 .LEHB8-.LFB1360
 289 0019 05       		.uleb128 .LEHE8-.LEHB8
 290 001a 00       		.uleb128 0
 291 001b 00       		.uleb128 0
 292 001c 42       		.uleb128 .LEHB9-.LFB1360
 293 001d 05       		.uleb128 .LEHE9-.LEHB9
 294 001e 00       		.uleb128 0
 295 001f 00       		.uleb128 0
 296              	.LLSDACSE1360:
 297              		.text
 299              		.align 2
 301              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC2ERKN8UnitTest11TestDet
 302              	.LFB1362:
  29:TestXmlTestReporter.cpp **** 
  30:TestXmlTestReporter.cpp ****     ostringstream output;
  31:TestXmlTestReporter.cpp ****     XmlTestReporter reporter;
  32:TestXmlTestReporter.cpp **** };
  33:TestXmlTestReporter.cpp **** 
  34:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, MultipleCharactersAreEscaped)
 303              		.loc 3 34 0 is_stmt 1
 304              		.cfi_startproc
 305 00aa 55       		pushq	%rbp
 306              		.cfi_def_cfa_offset 16
 307              		.cfi_offset 6, -16
 308 00ab 4889E5   		movq	%rsp, %rbp
 309              		.cfi_def_cfa_register 6
 310 00ae 4883EC10 		subq	$16, %rsp
 311 00b2 48897DF8 		movq	%rdi, -8(%rbp)
 312 00b6 488975F0 		movq	%rsi, -16(%rbp)
 313              	.LBB8:
 314              		.loc 3 34 0
 315 00ba 488B45F8 		movq	-8(%rbp), %rax
 316 00be 4889C7   		movq	%rax, %rdi
 317 00c1 E83AFFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 317      FF
 318 00c6 488B45F8 		movq	-8(%rbp), %rax
 319 00ca 488B55F0 		movq	-16(%rbp), %rdx
 320 00ce 488990A0 		movq	%rdx, 416(%rax)
 320      010000
 321              	.LBE8:
 322 00d5 90       		nop
 323 00d6 C9       		leave
 324              		.cfi_def_cfa 7, 8
 325 00d7 C3       		ret
 326              		.cfi_endproc
 327              	.LFE1362:
 329              		.set	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11T
 330              		.section	.rodata
 331              	.LC1:
 332 000d 54657374 		.string	"TestXmlTestReporter.cpp"
 332      586D6C54 
 332      65737452 
 332      65706F72 
 332      7465722E 
 333              	.LC2:
 334 0025 4D756C74 		.string	"MultipleCharactersAreEscaped"
 334      69706C65 
 334      43686172 
 334      61637465 
 334      72734172 
 335              		.text
 336              		.align 2
 338              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC2Ev:
 339              	.LFB1365:
 340              		.loc 3 34 0
 341              		.cfi_startproc
 342 00d8 55       		pushq	%rbp
 343              		.cfi_def_cfa_offset 16
 344              		.cfi_offset 6, -16
 345 00d9 4889E5   		movq	%rsp, %rbp
 346              		.cfi_def_cfa_register 6
 347 00dc 53       		pushq	%rbx
 348 00dd 4883EC18 		subq	$24, %rsp
 349              		.cfi_offset 3, -24
 350 00e1 48897DE8 		movq	%rdi, -24(%rbp)
 351              	.LBB9:
 352              		.loc 3 34 0
 353 00e5 488B5DE8 		movq	-24(%rbp), %rbx
 354 00e9 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 354      00
 355 00ee 41B82200 		movl	$34, %r8d
 355      0000
 356 00f4 488D0D00 		leaq	.LC1(%rip), %rcx
 356      000000
 357 00fb 4889C2   		movq	%rax, %rdx
 358 00fe 488D3500 		leaq	.LC2(%rip), %rsi
 358      000000
 359 0105 4889DF   		movq	%rbx, %rdi
 360 0108 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 360      00
 361 010d 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE(%rip), %rdx
 361      000000
 362 0114 488B45E8 		movq	-24(%rbp), %rax
 363 0118 488910   		movq	%rdx, (%rax)
 364              	.LBE9:
 365 011b 90       		nop
 366 011c 4883C418 		addq	$24, %rsp
 367 0120 5B       		popq	%rbx
 368 0121 5D       		popq	%rbp
 369              		.cfi_def_cfa 7, 8
 370 0122 C3       		ret
 371              		.cfi_endproc
 372              	.LFE1365:
 374              		.set	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev,_ZN12_GLOBAL__N
 375              		.local	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE
 376              		.comm	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE,56,32
 377              		.local	_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE
 378              		.comm	_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE,1,1
 379 0123 90       		.align 2
 381              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD2Ev:
 382              	.LFB1369:
 383              		.loc 3 34 0
 384              		.cfi_startproc
 385 0124 55       		pushq	%rbp
 386              		.cfi_def_cfa_offset 16
 387              		.cfi_offset 6, -16
 388 0125 4889E5   		movq	%rsp, %rbp
 389              		.cfi_def_cfa_register 6
 390 0128 4883EC10 		subq	$16, %rsp
 391 012c 48897DF8 		movq	%rdi, -8(%rbp)
 392              	.LBB10:
 393              		.loc 3 34 0
 394 0130 488B45F8 		movq	-8(%rbp), %rax
 395 0134 4889C7   		movq	%rax, %rdi
 396 0137 E820FFFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 396      FF
 397              	.LBE10:
 398 013c 90       		nop
 399 013d C9       		leave
 400              		.cfi_def_cfa 7, 8
 401 013e C3       		ret
 402              		.cfi_endproc
 403              	.LFE1369:
 405              		.set	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev,_ZN12_GLOBAL_
 406              		.section	.rodata
 407              	.LC3:
 408 0042 556E6861 		.string	"Unhandled exception: "
 408      6E646C65 
 408      64206578 
 408      63657074 
 408      696F6E3A 
 409              		.align 8
 410              	.LC4:
 411 0058 556E6861 		.string	"Unhandled exception while destroying fixture XmlTestReporterFixture"
 411      6E646C65 
 411      64206578 
 411      63657074 
 411      696F6E20 
 412 009c 00000000 		.align 8
 413              	.LC5:
 414 00a0 556E6861 		.string	"Unhandled exception while constructing fixture XmlTestReporterFixture"
 414      6E646C65 
 414      64206578 
 414      63657074 
 414      696F6E20 
 415              		.text
 416 013f 90       		.align 2
 418              	_ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv:
 419              	.LFB1367:
 420              		.loc 3 34 0
 421              		.cfi_startproc
 422              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 423              		.cfi_lsda 0x1b,.LLSDA1367
 424 0140 55       		pushq	%rbp
 425              		.cfi_def_cfa_offset 16
 426              		.cfi_offset 6, -16
 427 0141 4889E5   		movq	%rsp, %rbp
 428              		.cfi_def_cfa_register 6
 429 0144 4155     		pushq	%r13
 430 0146 4154     		pushq	%r12
 431 0148 53       		pushq	%rbx
 432 0149 4881EC08 		subq	$520, %rsp
 432      020000
 433              		.cfi_offset 13, -24
 434              		.cfi_offset 12, -32
 435              		.cfi_offset 3, -40
 436 0150 4889BDE8 		movq	%rdi, -536(%rbp)
 436      FDFFFF
 437              		.loc 3 34 0
 438 0157 64488B04 		movq	%fs:40, %rax
 438      25280000 
 438      00
 439 0160 488945D8 		movq	%rax, -40(%rbp)
 440 0164 31C0     		xorl	%eax, %eax
 441 0166 C685FFFD 		movb	$0, -513(%rbp)
 441      FFFF00
 442              	.LBB11:
 443 016d 488B85E8 		movq	-536(%rbp), %rax
 443      FDFFFF
 444 0174 488D5008 		leaq	8(%rax), %rdx
 445 0178 488D8530 		leaq	-464(%rbp), %rax
 445      FEFFFF
 446 017f 4889D6   		movq	%rdx, %rsi
 447 0182 4889C7   		movq	%rax, %rdi
 448              	.LEHB10:
 449 0185 E820FFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11T
 449      FF
 450              	.LEHE10:
 451              		.loc 3 34 0 is_stmt 0 discriminator 1
 452 018a C685FFFD 		movb	$1, -513(%rbp)
 452      FFFF01
 453 0191 488B85E8 		movq	-536(%rbp), %rax
 453      FDFFFF
 454 0198 488D5008 		leaq	8(%rax), %rdx
 455 019c 488D8530 		leaq	-464(%rbp), %rax
 455      FEFFFF
 456 01a3 4889D6   		movq	%rdx, %rsi
 457 01a6 4889C7   		movq	%rax, %rdi
 458              	.LEHB11:
 459 01a9 E8952B00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscaped
 459      00
 460              	.LEHE11:
 461              		.loc 3 34 0 discriminator 3
 462 01ae 488D8530 		leaq	-464(%rbp), %rax
 462      FEFFFF
 463 01b5 4889C7   		movq	%rax, %rdi
 464              	.LEHB12:
 465 01b8 E867FFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
 465      FF
 466              	.LEHE12:
 467              	.LBE11:
 468              		.loc 3 34 0
 469 01bd E9690200 		jmp	.L21
 469      00
 470              	.L36:
 471 01c2 4989C4   		movq	%rax, %r12
 472 01c5 4889D3   		movq	%rdx, %rbx
 473              	.LBB12:
 474 01c8 488D8530 		leaq	-464(%rbp), %rax
 474      FEFFFF
 475 01cf 4889C7   		movq	%rax, %rdi
 476 01d2 E84DFFFF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
 476      FF
 477 01d7 4C89E0   		movq	%r12, %rax
 478 01da 4889DA   		movq	%rbx, %rdx
 479 01dd EB00     		jmp	.L23
 480              	.L35:
 481              	.L23:
 482 01df 4883FA01 		cmpq	$1, %rdx
 483 01e3 740F     		je	.L25
 484 01e5 4883FA02 		cmpq	$2, %rdx
 485 01e9 0F84A700 		je	.L26
 485      0000
 486 01ef E94A0100 		jmp	.L41
 486      00
 487              	.L25:
 488              	.LBE12:
 489              	.LBB13:
 490 01f4 4889C7   		movq	%rax, %rdi
 491 01f7 E8000000 		call	__cxa_begin_catch@PLT
 491      00
 492 01fc 48898508 		movq	%rax, -504(%rbp)
 492      FEFFFF
 493              	.LEHB13:
 494 0203 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 494      00
 495 0208 488B18   		movq	(%rax), %rbx
 496 020b 488B8508 		movq	-504(%rbp), %rax
 496      FEFFFF
 497 0212 488B00   		movq	(%rax), %rax
 498 0215 4883C010 		addq	$16, %rax
 499 0219 488B00   		movq	(%rax), %rax
 500 021c 488B9508 		movq	-504(%rbp), %rdx
 500      FEFFFF
 501 0223 4889D7   		movq	%rdx, %rdi
 502 0226 FFD0     		call	*%rax
 503              	.LVL0:
 504 0228 4989C4   		movq	%rax, %r12
 505 022b 488B8508 		movq	-504(%rbp), %rax
 505      FEFFFF
 506 0232 4889C7   		movq	%rax, %rdi
 507 0235 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 507      00
 508              		.loc 3 34 0 discriminator 5
 509 023a 4189C5   		movl	%eax, %r13d
 510 023d 488B8508 		movq	-504(%rbp), %rax
 510      FEFFFF
 511 0244 4889C7   		movq	%rax, %rdi
 512 0247 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 512      00
 513              		.loc 3 34 0 discriminator 7
 514 024c 4889C1   		movq	%rax, %rcx
 515 024f 488B85E8 		movq	-536(%rbp), %rax
 515      FDFFFF
 516 0256 488B5008 		movq	8(%rax), %rdx
 517 025a 488B85E8 		movq	-536(%rbp), %rax
 517      FDFFFF
 518 0261 488B7010 		movq	16(%rax), %rsi
 519 0265 488D8510 		leaq	-496(%rbp), %rax
 519      FEFFFF
 520 026c 4589E8   		movl	%r13d, %r8d
 521 026f 4889C7   		movq	%rax, %rdi
 522 0272 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 522      00
 523              		.loc 3 34 0 discriminator 11
 524 0277 488D8510 		leaq	-496(%rbp), %rax
 524      FEFFFF
 525 027e 4C89E2   		movq	%r12, %rdx
 526 0281 4889C6   		movq	%rax, %rsi
 527 0284 4889DF   		movq	%rbx, %rdi
 528 0287 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 528      00
 529              	.LEHE13:
 530              		.loc 3 34 0 discriminator 13
 531 028c E8000000 		call	__cxa_end_catch@PLT
 531      00
 532              	.LBE13:
 533 0291 E9950100 		jmp	.L21
 533      00
 534              	.L26:
 535              	.LBB14:
 536              		.loc 3 34 0
 537 0296 4889C7   		movq	%rax, %rdi
 538 0299 E8000000 		call	__cxa_begin_catch@PLT
 538      00
 539 029e 48898500 		movq	%rax, -512(%rbp)
 539      FEFFFF
 540              	.LBB15:
 541 02a5 488D8530 		leaq	-464(%rbp), %rax
 541      FEFFFF
 542 02ac 4889C7   		movq	%rax, %rdi
 543              	.LEHB14:
 544 02af E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 544      00
 545              	.LEHE14:
 546              		.loc 3 34 0 discriminator 15
 547 02b4 488D8530 		leaq	-464(%rbp), %rax
 547      FEFFFF
 548 02bb 488D3500 		leaq	.LC3(%rip), %rsi
 548      000000
 549 02c2 4889C7   		movq	%rax, %rdi
 550              	.LEHB15:
 551 02c5 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 551      00
 552 02ca 4889C3   		movq	%rax, %rbx
 553 02cd 488B8500 		movq	-512(%rbp), %rax
 553      FEFFFF
 554 02d4 488B00   		movq	(%rax), %rax
 555 02d7 4883C010 		addq	$16, %rax
 556 02db 488B00   		movq	(%rax), %rax
 557 02de 488B9500 		movq	-512(%rbp), %rdx
 557      FEFFFF
 558 02e5 4889D7   		movq	%rdx, %rdi
 559 02e8 FFD0     		call	*%rax
 560              	.LVL1:
 561 02ea 4889C6   		movq	%rax, %rsi
 562 02ed 4889DF   		movq	%rbx, %rdi
 563 02f0 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 563      00
 564              		.loc 3 34 0 discriminator 19
 565 02f5 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 565      00
 566 02fa 488B18   		movq	(%rax), %rbx
 567 02fd 488D8530 		leaq	-464(%rbp), %rax
 567      FEFFFF
 568 0304 4889C7   		movq	%rax, %rdi
 569 0307 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 569      00
 570              		.loc 3 34 0 discriminator 21
 571 030c 4889C2   		movq	%rax, %rdx
 572 030f 488B85E8 		movq	-536(%rbp), %rax
 572      FDFFFF
 573 0316 4883C008 		addq	$8, %rax
 574 031a 4889C6   		movq	%rax, %rsi
 575 031d 4889DF   		movq	%rbx, %rdi
 576 0320 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 576      00
 577              	.LEHE15:
 578              		.loc 3 34 0 discriminator 25
 579 0325 488D8530 		leaq	-464(%rbp), %rax
 579      FEFFFF
 580 032c 4889C7   		movq	%rax, %rdi
 581              	.LEHB16:
 582 032f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 582      00
 583              	.LEHE16:
 584              	.LBE15:
 585              		.loc 3 34 0 discriminator 26
 586 0334 E8000000 		call	__cxa_end_catch@PLT
 586      00
 587              	.LBE14:
 588 0339 E9ED0000 		jmp	.L21
 588      00
 589              	.L41:
 590              		.loc 3 34 0
 591 033e 4889C7   		movq	%rax, %rdi
 592 0341 E8000000 		call	__cxa_begin_catch@PLT
 592      00
 593 0346 80BDFFFD 		cmpb	$0, -513(%rbp)
 593      FFFF00
 594 034d 7445     		je	.L28
 595              	.LEHB17:
 596              		.loc 3 34 0 discriminator 28
 597 034f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 597      00
 598 0354 488B18   		movq	(%rax), %rbx
 599 0357 488B85E8 		movq	-536(%rbp), %rax
 599      FDFFFF
 600 035e 488D4808 		leaq	8(%rax), %rcx
 601 0362 488D8510 		leaq	-496(%rbp), %rax
 601      FEFFFF
 602 0369 BA220000 		movl	$34, %edx
 602      00
 603 036e 4889CE   		movq	%rcx, %rsi
 604 0371 4889C7   		movq	%rax, %rdi
 605 0374 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 605      00
 606              		.loc 3 34 0 discriminator 33
 607 0379 488D8510 		leaq	-496(%rbp), %rax
 607      FEFFFF
 608 0380 488D1500 		leaq	.LC4(%rip), %rdx
 608      000000
 609 0387 4889C6   		movq	%rax, %rsi
 610 038a 4889DF   		movq	%rbx, %rdi
 611 038d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 611      00
 612 0392 EB43     		jmp	.L29
 613              	.L28:
 614              		.loc 3 34 0 discriminator 29
 615 0394 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 615      00
 616 0399 488B18   		movq	(%rax), %rbx
 617 039c 488B85E8 		movq	-536(%rbp), %rax
 617      FDFFFF
 618 03a3 488D4808 		leaq	8(%rax), %rcx
 619 03a7 488D8510 		leaq	-496(%rbp), %rax
 619      FEFFFF
 620 03ae BA220000 		movl	$34, %edx
 620      00
 621 03b3 4889CE   		movq	%rcx, %rsi
 622 03b6 4889C7   		movq	%rax, %rdi
 623 03b9 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 623      00
 624              		.loc 3 34 0 discriminator 40
 625 03be 488D8510 		leaq	-496(%rbp), %rax
 625      FEFFFF
 626 03c5 488D1500 		leaq	.LC5(%rip), %rdx
 626      000000
 627 03cc 4889C6   		movq	%rax, %rsi
 628 03cf 4889DF   		movq	%rbx, %rdi
 629 03d2 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 629      00
 630              	.LEHE17:
 631              	.L29:
 632              	.LEHB18:
 633              		.loc 3 34 0 discriminator 43
 634 03d7 E8000000 		call	__cxa_end_catch@PLT
 634      00
 635 03dc EB4D     		jmp	.L21
 636              	.L37:
 637 03de 4889C3   		movq	%rax, %rbx
 638              	.LBB17:
 639              		.loc 3 34 0
 640 03e1 E8000000 		call	__cxa_end_catch@PLT
 640      00
 641 03e6 4889D8   		movq	%rbx, %rax
 642 03e9 4889C7   		movq	%rax, %rdi
 643 03ec E8000000 		call	_Unwind_Resume@PLT
 643      00
 644              	.LEHE18:
 645              	.L39:
 646 03f1 4889C3   		movq	%rax, %rbx
 647              	.LBE17:
 648              	.LBB18:
 649              	.LBB16:
 650 03f4 488D8530 		leaq	-464(%rbp), %rax
 650      FEFFFF
 651 03fb 4889C7   		movq	%rax, %rdi
 652 03fe E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 652      00
 653 0403 EB03     		jmp	.L32
 654              	.L38:
 655 0405 4889C3   		movq	%rax, %rbx
 656              	.L32:
 657              	.LBE16:
 658 0408 E8000000 		call	__cxa_end_catch@PLT
 658      00
 659 040d 4889D8   		movq	%rbx, %rax
 660 0410 4889C7   		movq	%rax, %rdi
 661              	.LEHB19:
 662 0413 E8000000 		call	_Unwind_Resume@PLT
 662      00
 663              	.LEHE19:
 664              	.L40:
 665 0418 4889C3   		movq	%rax, %rbx
 666              	.LBE18:
 667 041b E8000000 		call	__cxa_end_catch@PLT
 667      00
 668 0420 4889D8   		movq	%rbx, %rax
 669 0423 4889C7   		movq	%rax, %rdi
 670              	.LEHB20:
 671 0426 E8000000 		call	_Unwind_Resume@PLT
 671      00
 672              	.LEHE20:
 673              	.L21:
 674 042b 488B45D8 		movq	-40(%rbp), %rax
 675 042f 64483304 		xorq	%fs:40, %rax
 675      25280000 
 675      00
 676 0438 7405     		je	.L34
 677 043a E8000000 		call	__stack_chk_fail@PLT
 677      00
 678              	.L34:
 679 043f 4881C408 		addq	$520, %rsp
 679      020000
 680 0446 5B       		popq	%rbx
 681 0447 415C     		popq	%r12
 682 0449 415D     		popq	%r13
 683 044b 5D       		popq	%rbp
 684              		.cfi_def_cfa 7, 8
 685 044c C3       		ret
 686              		.cfi_endproc
 687              	.LFE1367:
 688              		.section	.gcc_except_table
 689              		.align 4
 690              	.LLSDA1367:
 691 0020 FF       		.byte	0xff
 692 0021 9B       		.byte	0x9b
 693 0022 55       		.uleb128 .LLSDATT1367-.LLSDATTD1367
 694              	.LLSDATTD1367:
 695 0023 01       		.byte	0x1
 696 0024 3E       		.uleb128 .LLSDACSE1367-.LLSDACSB1367
 697              	.LLSDACSB1367:
 698 0025 45       		.uleb128 .LEHB10-.LFB1367
 699 0026 05       		.uleb128 .LEHE10-.LEHB10
 700 0027 9F01     		.uleb128 .L35-.LFB1367
 701 0029 05       		.uleb128 0x5
 702 002a 69       		.uleb128 .LEHB11-.LFB1367
 703 002b 05       		.uleb128 .LEHE11-.LEHB11
 704 002c 8201     		.uleb128 .L36-.LFB1367
 705 002e 07       		.uleb128 0x7
 706 002f 78       		.uleb128 .LEHB12-.LFB1367
 707 0030 05       		.uleb128 .LEHE12-.LEHB12
 708 0031 9F01     		.uleb128 .L35-.LFB1367
 709 0033 05       		.uleb128 0x5
 710 0034 C301     		.uleb128 .LEHB13-.LFB1367
 711 0036 8901     		.uleb128 .LEHE13-.LEHB13
 712 0038 9E05     		.uleb128 .L37-.LFB1367
 713 003a 00       		.uleb128 0
 714 003b EF02     		.uleb128 .LEHB14-.LFB1367
 715 003d 05       		.uleb128 .LEHE14-.LEHB14
 716 003e C505     		.uleb128 .L38-.LFB1367
 717 0040 00       		.uleb128 0
 718 0041 8503     		.uleb128 .LEHB15-.LFB1367
 719 0043 60       		.uleb128 .LEHE15-.LEHB15
 720 0044 B105     		.uleb128 .L39-.LFB1367
 721 0046 00       		.uleb128 0
 722 0047 EF03     		.uleb128 .LEHB16-.LFB1367
 723 0049 05       		.uleb128 .LEHE16-.LEHB16
 724 004a C505     		.uleb128 .L38-.LFB1367
 725 004c 00       		.uleb128 0
 726 004d 8F04     		.uleb128 .LEHB17-.LFB1367
 727 004f 8801     		.uleb128 .LEHE17-.LEHB17
 728 0051 D805     		.uleb128 .L40-.LFB1367
 729 0053 00       		.uleb128 0
 730 0054 9705     		.uleb128 .LEHB18-.LFB1367
 731 0056 1A       		.uleb128 .LEHE18-.LEHB18
 732 0057 00       		.uleb128 0
 733 0058 00       		.uleb128 0
 734 0059 D305     		.uleb128 .LEHB19-.LFB1367
 735 005b 05       		.uleb128 .LEHE19-.LEHB19
 736 005c 00       		.uleb128 0
 737 005d 00       		.uleb128 0
 738 005e E605     		.uleb128 .LEHB20-.LFB1367
 739 0060 05       		.uleb128 .LEHE20-.LEHB20
 740 0061 00       		.uleb128 0
 741 0062 00       		.uleb128 0
 742              	.LLSDACSE1367:
 743 0063 03       		.byte	0x3
 744 0064 00       		.byte	0
 745 0065 02       		.byte	0x2
 746 0066 7D       		.byte	0x7d
 747 0067 01       		.byte	0x1
 748 0068 7D       		.byte	0x7d
 749 0069 00       		.byte	0
 750 006a 7D       		.byte	0x7d
 751 006b 00       		.align 4
 752 006c 00000000 		.long	0
 753              	
 754 0070 00000000 		.long	DW.ref._ZTISt9exception-.
 755 0074 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 756              	.LLSDATT1367:
 757              		.text
 759              		.section	.rodata
 760              	.LC6:
 761 00e6 66696C65 		.string	"filename.h"
 761      6E616D65 
 761      2E6800
 762              	.LC7:
 763 00f1 73756974 		.string	"suite"
 763      6500
 764              	.LC8:
 765 00f7 54657374 		.string	"TestName"
 765      4E616D65 
 765      00
 766              	.LC9:
 767 0100 22222727 		.string	"\"\"''&&<<>>"
 767      26263C3C 
 767      3E3E00
 768 010b 00000000 		.align 8
 768      00
 769              	.LC11:
 770 0110 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"2\" failures=\"3\" tim
 770      6C207665 
 770      7273696F 
 770      6E3D2231 
 770      2E30223F 
 771 020d 000000   		.align 8
 772              	.LC12:
 773 0210 556E6861 		.string	"Unhandled exception in CHECK_EQUAL(expected, output.str())"
 773      6E646C65 
 773      64206578 
 773      63657074 
 773      696F6E20 
 774              		.text
 775 044d 90       		.align 2
 777              	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv:
 778              	.LFB1371:
  35:TestXmlTestReporter.cpp **** {
 779              		.loc 3 35 0 is_stmt 1
 780              		.cfi_startproc
 781              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 782              		.cfi_lsda 0x1b,.LLSDA1371
 783 044e 55       		pushq	%rbp
 784              		.cfi_def_cfa_offset 16
 785              		.cfi_offset 6, -16
 786 044f 4889E5   		movq	%rsp, %rbp
 787              		.cfi_def_cfa_register 6
 788 0452 53       		pushq	%rbx
 789 0453 4881EC98 		subq	$152, %rsp
 789      000000
 790              		.cfi_offset 3, -24
 791 045a 4889BD68 		movq	%rdi, -152(%rbp)
 791      FFFFFF
 792              		.loc 3 35 0
 793 0461 64488B04 		movq	%fs:40, %rax
 793      25280000 
 793      00
 794 046a 488945E8 		movq	%rax, -24(%rbp)
 795 046e 31C0     		xorl	%eax, %eax
  36:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "suite", "filename.h", 4321);
 796              		.loc 3 36 0
 797 0470 488D4580 		leaq	-128(%rbp), %rax
 798 0474 41B8E110 		movl	$4321, %r8d
 798      0000
 799 047a 488D0D00 		leaq	.LC6(%rip), %rcx
 799      000000
 800 0481 488D1500 		leaq	.LC7(%rip), %rdx
 800      000000
 801 0488 488D3500 		leaq	.LC8(%rip), %rsi
 801      000000
 802 048f 4889C7   		movq	%rax, %rdi
 803              	.LEHB21:
 804 0492 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 804      00
  37:TestXmlTestReporter.cpp **** 
  38:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 805              		.loc 3 38 0
 806 0497 488B8568 		movq	-152(%rbp), %rax
 806      FFFFFF
 807 049e 488D9078 		leaq	376(%rax), %rdx
 807      010000
 808 04a5 488D4580 		leaq	-128(%rbp), %rax
 809 04a9 4889C6   		movq	%rax, %rsi
 810 04ac 4889D7   		movq	%rdx, %rdi
 811 04af E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 811      00
  39:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "\"\"\'\'&&<<>>");
 812              		.loc 3 39 0
 813 04b4 488B8568 		movq	-152(%rbp), %rax
 813      FFFFFF
 814 04bb 488D8878 		leaq	376(%rax), %rcx
 814      010000
 815 04c2 488D4580 		leaq	-128(%rbp), %rax
 816 04c6 488D1500 		leaq	.LC9(%rip), %rdx
 816      000000
 817 04cd 4889C6   		movq	%rax, %rsi
 818 04d0 4889CF   		movq	%rcx, %rdi
 819 04d3 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 819      00
  40:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 0.1f);
 820              		.loc 3 40 0
 821 04d8 488B8568 		movq	-152(%rbp), %rax
 821      FFFFFF
 822 04df 488D9078 		leaq	376(%rax), %rdx
 822      010000
 823 04e6 488D4580 		leaq	-128(%rbp), %rax
 824 04ea F30F1005 		movss	.LC10(%rip), %xmm0
 824      00000000 
 825 04f2 4889C6   		movq	%rax, %rsi
 826 04f5 4889D7   		movq	%rdx, %rdi
 827 04f8 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 827      00
  41:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 2, 3, 0.1f);
 828              		.loc 3 41 0
 829 04fd 488B8568 		movq	-152(%rbp), %rax
 829      FFFFFF
 830 0504 48057801 		addq	$376, %rax
 830      0000
 831 050a F30F1005 		movss	.LC10(%rip), %xmm0
 831      00000000 
 832 0512 B9030000 		movl	$3, %ecx
 832      00
 833 0517 BA020000 		movl	$2, %edx
 833      00
 834 051c BE010000 		movl	$1, %esi
 834      00
 835 0521 4889C7   		movq	%rax, %rdi
 836 0524 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 836      00
 837              	.LEHE21:
  42:TestXmlTestReporter.cpp **** 
  43:TestXmlTestReporter.cpp ****     char const* expected =
 838              		.loc 3 43 0
 839 0529 488D0500 		leaq	.LC11(%rip), %rax
 839      000000
 840 0530 48898578 		movq	%rax, -136(%rbp)
 840      FFFFFF
 841              	.LEHB22:
  44:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
  45:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"2\" failures=\"3\" time=\"0.1\">"
  46:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"TestName\" time=\"0.1\">"
  47:TestXmlTestReporter.cpp ****         "<failure message=\"filename.h(4321) : "
  48:TestXmlTestReporter.cpp ****         "&quot;&quot;&apos;&apos;&amp;&amp;&lt;&lt;&gt;&gt;\"/>"
  49:TestXmlTestReporter.cpp ****         "</test>"
  50:TestXmlTestReporter.cpp ****         "</unittest-results>";
  51:TestXmlTestReporter.cpp **** 
  52:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 842              		.loc 3 52 0
 843 0537 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 843      00
 844 053c 488B08   		movq	(%rax), %rcx
 845 053f 488D45A0 		leaq	-96(%rbp), %rax
 846 0543 BA340000 		movl	$52, %edx
 846      00
 847 0548 4889CE   		movq	%rcx, %rsi
 848 054b 4889C7   		movq	%rax, %rdi
 849 054e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 849      00
 850              		.loc 3 52 0 is_stmt 0 discriminator 2
 851 0553 488B9568 		movq	-152(%rbp), %rdx
 851      FFFFFF
 852 055a 488D45C0 		leaq	-64(%rbp), %rax
 853 055e 4889D6   		movq	%rdx, %rsi
 854 0561 4889C7   		movq	%rax, %rdi
 855 0564 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 855      00
 856              	.LEHE22:
 857              	.LEHB23:
 858              		.loc 3 52 0 discriminator 4
 859 0569 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 859      00
 860 056e 488B00   		movq	(%rax), %rax
 861 0571 488D4DA0 		leaq	-96(%rbp), %rcx
 862 0575 488D55C0 		leaq	-64(%rbp), %rdx
 863 0579 488DB578 		leaq	-136(%rbp), %rsi
 863      FFFFFF
 864 0580 4889C7   		movq	%rax, %rdi
 865 0583 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 865      00
 866              	.LEHE23:
 867              		.loc 3 52 0 discriminator 8
 868 0588 488D45C0 		leaq	-64(%rbp), %rax
 869 058c 4889C7   		movq	%rax, %rdi
 870              	.LEHB24:
 871 058f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 871      00
 872              	.LEHE24:
  53:TestXmlTestReporter.cpp **** }
 873              		.loc 3 53 0 is_stmt 1
 874 0594 EB70     		jmp	.L42
 875              	.L49:
 876 0596 4889C3   		movq	%rax, %rbx
  52:TestXmlTestReporter.cpp **** }
 877              		.loc 3 52 0
 878 0599 488D45C0 		leaq	-64(%rbp), %rax
 879 059d 4889C7   		movq	%rax, %rdi
 880 05a0 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 880      00
 881 05a5 4889D8   		movq	%rbx, %rax
 882 05a8 EB00     		jmp	.L44
 883              	.L48:
 884              	.L44:
 885 05aa 4889C7   		movq	%rax, %rdi
 886 05ad E8000000 		call	__cxa_begin_catch@PLT
 886      00
 887              	.LEHB25:
 888 05b2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 888      00
 889 05b7 488B18   		movq	(%rax), %rbx
 890 05ba E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 890      00
  52:TestXmlTestReporter.cpp **** }
 891              		.loc 3 52 0 is_stmt 0 discriminator 12
 892 05bf 488B08   		movq	(%rax), %rcx
 893 05c2 488D45A0 		leaq	-96(%rbp), %rax
 894 05c6 BA340000 		movl	$52, %edx
 894      00
 895 05cb 4889CE   		movq	%rcx, %rsi
 896 05ce 4889C7   		movq	%rax, %rdi
 897 05d1 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 897      00
  52:TestXmlTestReporter.cpp **** }
 898              		.loc 3 52 0 discriminator 16
 899 05d6 488D45A0 		leaq	-96(%rbp), %rax
 900 05da 488D1500 		leaq	.LC12(%rip), %rdx
 900      000000
 901 05e1 4889C6   		movq	%rax, %rsi
 902 05e4 4889DF   		movq	%rbx, %rdi
 903 05e7 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 903      00
 904              	.LEHE25:
 905              	.LEHB26:
  52:TestXmlTestReporter.cpp **** }
 906              		.loc 3 52 0 discriminator 18
 907 05ec E8000000 		call	__cxa_end_catch@PLT
 907      00
 908              	.LEHE26:
 909              		.loc 3 53 0 is_stmt 1 discriminator 18
 910 05f1 EB13     		jmp	.L42
 911              	.L50:
 912 05f3 4889C3   		movq	%rax, %rbx
  52:TestXmlTestReporter.cpp **** }
 913              		.loc 3 52 0
 914 05f6 E8000000 		call	__cxa_end_catch@PLT
 914      00
 915 05fb 4889D8   		movq	%rbx, %rax
 916 05fe 4889C7   		movq	%rax, %rdi
 917              	.LEHB27:
 918 0601 E8000000 		call	_Unwind_Resume@PLT
 918      00
 919              	.LEHE27:
 920              	.L42:
 921              		.loc 3 53 0
 922 0606 488B45E8 		movq	-24(%rbp), %rax
 923 060a 64483304 		xorq	%fs:40, %rax
 923      25280000 
 923      00
 924 0613 7405     		je	.L47
 925 0615 E8000000 		call	__stack_chk_fail@PLT
 925      00
 926              	.L47:
 927 061a 4881C498 		addq	$152, %rsp
 927      000000
 928 0621 5B       		popq	%rbx
 929 0622 5D       		popq	%rbp
 930              		.cfi_def_cfa 7, 8
 931 0623 C3       		ret
 932              		.cfi_endproc
 933              	.LFE1371:
 934              		.section	.gcc_except_table
 935              		.align 4
 936              	.LLSDA1371:
 937 0078 FF       		.byte	0xff
 938 0079 9B       		.byte	0x9b
 939 007a 31       		.uleb128 .LLSDATT1371-.LLSDATTD1371
 940              	.LLSDATTD1371:
 941 007b 01       		.byte	0x1
 942 007c 27       		.uleb128 .LLSDACSE1371-.LLSDACSB1371
 943              	.LLSDACSB1371:
 944 007d 44       		.uleb128 .LEHB21-.LFB1371
 945 007e 9701     		.uleb128 .LEHE21-.LEHB21
 946 0080 00       		.uleb128 0
 947 0081 00       		.uleb128 0
 948 0082 E901     		.uleb128 .LEHB22-.LFB1371
 949 0084 32       		.uleb128 .LEHE22-.LEHB22
 950 0085 DC02     		.uleb128 .L48-.LFB1371
 951 0087 01       		.uleb128 0x1
 952 0088 9B02     		.uleb128 .LEHB23-.LFB1371
 953 008a 1F       		.uleb128 .LEHE23-.LEHB23
 954 008b C802     		.uleb128 .L49-.LFB1371
 955 008d 03       		.uleb128 0x3
 956 008e C102     		.uleb128 .LEHB24-.LFB1371
 957 0090 05       		.uleb128 .LEHE24-.LEHB24
 958 0091 DC02     		.uleb128 .L48-.LFB1371
 959 0093 01       		.uleb128 0x1
 960 0094 E402     		.uleb128 .LEHB25-.LFB1371
 961 0096 3A       		.uleb128 .LEHE25-.LEHB25
 962 0097 A503     		.uleb128 .L50-.LFB1371
 963 0099 00       		.uleb128 0
 964 009a 9E03     		.uleb128 .LEHB26-.LFB1371
 965 009c 05       		.uleb128 .LEHE26-.LEHB26
 966 009d 00       		.uleb128 0
 967 009e 00       		.uleb128 0
 968 009f B303     		.uleb128 .LEHB27-.LFB1371
 969 00a1 05       		.uleb128 .LEHE27-.LEHB27
 970 00a2 00       		.uleb128 0
 971 00a3 00       		.uleb128 0
 972              	.LLSDACSE1371:
 973 00a4 01       		.byte	0x1
 974 00a5 00       		.byte	0
 975 00a6 00       		.byte	0
 976 00a7 7D       		.byte	0x7d
 977              		.align 4
 978 00a8 00000000 		.long	0
 979              	
 980              	.LLSDATT1371:
 981              		.text
 983              		.align 2
 985              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC2ERKN8UnitT
 986              	.LFB1373:
  54:TestXmlTestReporter.cpp **** 
  55:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, OutputIsCachedUntilReportSummaryIsCalled)
 987              		.loc 3 55 0
 988              		.cfi_startproc
 989 0624 55       		pushq	%rbp
 990              		.cfi_def_cfa_offset 16
 991              		.cfi_offset 6, -16
 992 0625 4889E5   		movq	%rsp, %rbp
 993              		.cfi_def_cfa_register 6
 994 0628 4883EC10 		subq	$16, %rsp
 995 062c 48897DF8 		movq	%rdi, -8(%rbp)
 996 0630 488975F0 		movq	%rsi, -16(%rbp)
 997              	.LBB19:
 998              		.loc 3 55 0
 999 0634 488B45F8 		movq	-8(%rbp), %rax
 1000 0638 4889C7   		movq	%rax, %rdi
 1001 063b E8C0F9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 1001      FF
 1002 0640 488B45F8 		movq	-8(%rbp), %rax
 1003 0644 488B55F0 		movq	-16(%rbp), %rdx
 1004 0648 488990A0 		movq	%rdx, 416(%rax)
 1004      010000
 1005              	.LBE19:
 1006 064f 90       		nop
 1007 0650 C9       		leave
 1008              		.cfi_def_cfa 7, 8
 1009 0651 C3       		ret
 1010              		.cfi_endproc
 1011              	.LFE1373:
 1013              		.set	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN
 1014              		.section	.rodata
 1015 024b 00000000 		.align 8
 1015      00
 1016              	.LC13:
 1017 0250 4F757470 		.string	"OutputIsCachedUntilReportSummaryIsCalled"
 1017      75744973 
 1017      43616368 
 1017      6564556E 
 1017      74696C52 
 1018              		.text
 1019              		.align 2
 1021              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC2Ev:
 1022              	.LFB1376:
 1023              		.loc 3 55 0
 1024              		.cfi_startproc
 1025 0652 55       		pushq	%rbp
 1026              		.cfi_def_cfa_offset 16
 1027              		.cfi_offset 6, -16
 1028 0653 4889E5   		movq	%rsp, %rbp
 1029              		.cfi_def_cfa_register 6
 1030 0656 53       		pushq	%rbx
 1031 0657 4883EC18 		subq	$24, %rsp
 1032              		.cfi_offset 3, -24
 1033 065b 48897DE8 		movq	%rdi, -24(%rbp)
 1034              	.LBB20:
 1035              		.loc 3 55 0
 1036 065f 488B5DE8 		movq	-24(%rbp), %rbx
 1037 0663 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1037      00
 1038 0668 41B83700 		movl	$55, %r8d
 1038      0000
 1039 066e 488D0D00 		leaq	.LC1(%rip), %rcx
 1039      000000
 1040 0675 4889C2   		movq	%rax, %rdx
 1041 0678 488D3500 		leaq	.LC13(%rip), %rsi
 1041      000000
 1042 067f 4889DF   		movq	%rbx, %rdi
 1043 0682 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 1043      00
 1044 0687 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE(%
 1044      000000
 1045 068e 488B45E8 		movq	-24(%rbp), %rax
 1046 0692 488910   		movq	%rdx, (%rax)
 1047              	.LBE20:
 1048 0695 90       		nop
 1049 0696 4883C418 		addq	$24, %rsp
 1050 069a 5B       		popq	%rbx
 1051 069b 5D       		popq	%rbp
 1052              		.cfi_def_cfa 7, 8
 1053 069c C3       		ret
 1054              		.cfi_endproc
 1055              	.LFE1376:
 1057              		.set	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev,_ZN
 1058              		.local	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstan
 1059              		.comm	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanc
 1060              		.local	_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 1061              		.comm	_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE,1,1
 1062 069d 90       		.align 2
 1064              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD2Ev:
 1065              	.LFB1380:
 1066              		.loc 3 55 0
 1067              		.cfi_startproc
 1068 069e 55       		pushq	%rbp
 1069              		.cfi_def_cfa_offset 16
 1070              		.cfi_offset 6, -16
 1071 069f 4889E5   		movq	%rsp, %rbp
 1072              		.cfi_def_cfa_register 6
 1073 06a2 4883EC10 		subq	$16, %rsp
 1074 06a6 48897DF8 		movq	%rdi, -8(%rbp)
 1075              	.LBB21:
 1076              		.loc 3 55 0
 1077 06aa 488B45F8 		movq	-8(%rbp), %rax
 1078 06ae 4889C7   		movq	%rax, %rdi
 1079 06b1 E8A6F9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 1079      FF
 1080              	.LBE21:
 1081 06b6 90       		nop
 1082 06b7 C9       		leave
 1083              		.cfi_def_cfa 7, 8
 1084 06b8 C3       		ret
 1085              		.cfi_endproc
 1086              	.LFE1380:
 1088              		.set	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev,_
 1089 06b9 90       		.align 2
 1091              	_ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunImplEv:
 1092              	.LFB1378:
 1093              		.loc 3 55 0
 1094              		.cfi_startproc
 1095              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1096              		.cfi_lsda 0x1b,.LLSDA1378
 1097 06ba 55       		pushq	%rbp
 1098              		.cfi_def_cfa_offset 16
 1099              		.cfi_offset 6, -16
 1100 06bb 4889E5   		movq	%rsp, %rbp
 1101              		.cfi_def_cfa_register 6
 1102 06be 4155     		pushq	%r13
 1103 06c0 4154     		pushq	%r12
 1104 06c2 53       		pushq	%rbx
 1105 06c3 4881EC08 		subq	$520, %rsp
 1105      020000
 1106              		.cfi_offset 13, -24
 1107              		.cfi_offset 12, -32
 1108              		.cfi_offset 3, -40
 1109 06ca 4889BDE8 		movq	%rdi, -536(%rbp)
 1109      FDFFFF
 1110              		.loc 3 55 0
 1111 06d1 64488B04 		movq	%fs:40, %rax
 1111      25280000 
 1111      00
 1112 06da 488945D8 		movq	%rax, -40(%rbp)
 1113 06de 31C0     		xorl	%eax, %eax
 1114 06e0 C685FFFD 		movb	$0, -513(%rbp)
 1114      FFFF00
 1115              	.LBB22:
 1116 06e7 488B85E8 		movq	-536(%rbp), %rax
 1116      FDFFFF
 1117 06ee 488D5008 		leaq	8(%rax), %rdx
 1118 06f2 488D8530 		leaq	-464(%rbp), %rax
 1118      FEFFFF
 1119 06f9 4889D6   		movq	%rdx, %rsi
 1120 06fc 4889C7   		movq	%rax, %rdi
 1121              	.LEHB28:
 1122 06ff E820FFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN
 1122      FF
 1123              	.LEHE28:
 1124              		.loc 3 55 0 is_stmt 0 discriminator 1
 1125 0704 C685FFFD 		movb	$1, -513(%rbp)
 1125      FFFF01
 1126 070b 488B85E8 		movq	-536(%rbp), %rax
 1126      FDFFFF
 1127 0712 488D5008 		leaq	8(%rax), %rdx
 1128 0716 488D8530 		leaq	-464(%rbp), %rax
 1128      FEFFFF
 1129 071d 4889D6   		movq	%rdx, %rsi
 1130 0720 4889C7   		movq	%rax, %rdi
 1131              	.LEHB29:
 1132 0723 E8E42800 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSum
 1132      00
 1133              	.LEHE29:
 1134              		.loc 3 55 0 discriminator 3
 1135 0728 488D8530 		leaq	-464(%rbp), %rax
 1135      FEFFFF
 1136 072f 4889C7   		movq	%rax, %rdi
 1137              	.LEHB30:
 1138 0732 E867FFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
 1138      FF
 1139              	.LEHE30:
 1140              	.LBE22:
 1141              		.loc 3 55 0
 1142 0737 E9690200 		jmp	.L54
 1142      00
 1143              	.L69:
 1144 073c 4989C4   		movq	%rax, %r12
 1145 073f 4889D3   		movq	%rdx, %rbx
 1146              	.LBB23:
 1147 0742 488D8530 		leaq	-464(%rbp), %rax
 1147      FEFFFF
 1148 0749 4889C7   		movq	%rax, %rdi
 1149 074c E84DFFFF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
 1149      FF
 1150 0751 4C89E0   		movq	%r12, %rax
 1151 0754 4889DA   		movq	%rbx, %rdx
 1152 0757 EB00     		jmp	.L56
 1153              	.L68:
 1154              	.L56:
 1155 0759 4883FA01 		cmpq	$1, %rdx
 1156 075d 740F     		je	.L58
 1157 075f 4883FA02 		cmpq	$2, %rdx
 1158 0763 0F84A700 		je	.L59
 1158      0000
 1159 0769 E94A0100 		jmp	.L74
 1159      00
 1160              	.L58:
 1161              	.LBE23:
 1162              	.LBB24:
 1163 076e 4889C7   		movq	%rax, %rdi
 1164 0771 E8000000 		call	__cxa_begin_catch@PLT
 1164      00
 1165 0776 48898508 		movq	%rax, -504(%rbp)
 1165      FEFFFF
 1166              	.LEHB31:
 1167 077d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1167      00
 1168 0782 488B18   		movq	(%rax), %rbx
 1169 0785 488B8508 		movq	-504(%rbp), %rax
 1169      FEFFFF
 1170 078c 488B00   		movq	(%rax), %rax
 1171 078f 4883C010 		addq	$16, %rax
 1172 0793 488B00   		movq	(%rax), %rax
 1173 0796 488B9508 		movq	-504(%rbp), %rdx
 1173      FEFFFF
 1174 079d 4889D7   		movq	%rdx, %rdi
 1175 07a0 FFD0     		call	*%rax
 1176              	.LVL2:
 1177 07a2 4989C4   		movq	%rax, %r12
 1178 07a5 488B8508 		movq	-504(%rbp), %rax
 1178      FEFFFF
 1179 07ac 4889C7   		movq	%rax, %rdi
 1180 07af E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 1180      00
 1181              		.loc 3 55 0 discriminator 5
 1182 07b4 4189C5   		movl	%eax, %r13d
 1183 07b7 488B8508 		movq	-504(%rbp), %rax
 1183      FEFFFF
 1184 07be 4889C7   		movq	%rax, %rdi
 1185 07c1 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 1185      00
 1186              		.loc 3 55 0 discriminator 7
 1187 07c6 4889C1   		movq	%rax, %rcx
 1188 07c9 488B85E8 		movq	-536(%rbp), %rax
 1188      FDFFFF
 1189 07d0 488B5008 		movq	8(%rax), %rdx
 1190 07d4 488B85E8 		movq	-536(%rbp), %rax
 1190      FDFFFF
 1191 07db 488B7010 		movq	16(%rax), %rsi
 1192 07df 488D8510 		leaq	-496(%rbp), %rax
 1192      FEFFFF
 1193 07e6 4589E8   		movl	%r13d, %r8d
 1194 07e9 4889C7   		movq	%rax, %rdi
 1195 07ec E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 1195      00
 1196              		.loc 3 55 0 discriminator 11
 1197 07f1 488D8510 		leaq	-496(%rbp), %rax
 1197      FEFFFF
 1198 07f8 4C89E2   		movq	%r12, %rdx
 1199 07fb 4889C6   		movq	%rax, %rsi
 1200 07fe 4889DF   		movq	%rbx, %rdi
 1201 0801 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1201      00
 1202              	.LEHE31:
 1203              		.loc 3 55 0 discriminator 13
 1204 0806 E8000000 		call	__cxa_end_catch@PLT
 1204      00
 1205              	.LBE24:
 1206 080b E9950100 		jmp	.L54
 1206      00
 1207              	.L59:
 1208              	.LBB25:
 1209              		.loc 3 55 0
 1210 0810 4889C7   		movq	%rax, %rdi
 1211 0813 E8000000 		call	__cxa_begin_catch@PLT
 1211      00
 1212 0818 48898500 		movq	%rax, -512(%rbp)
 1212      FEFFFF
 1213              	.LBB26:
 1214 081f 488D8530 		leaq	-464(%rbp), %rax
 1214      FEFFFF
 1215 0826 4889C7   		movq	%rax, %rdi
 1216              	.LEHB32:
 1217 0829 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 1217      00
 1218              	.LEHE32:
 1219              		.loc 3 55 0 discriminator 15
 1220 082e 488D8530 		leaq	-464(%rbp), %rax
 1220      FEFFFF
 1221 0835 488D3500 		leaq	.LC3(%rip), %rsi
 1221      000000
 1222 083c 4889C7   		movq	%rax, %rdi
 1223              	.LEHB33:
 1224 083f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1224      00
 1225 0844 4889C3   		movq	%rax, %rbx
 1226 0847 488B8500 		movq	-512(%rbp), %rax
 1226      FEFFFF
 1227 084e 488B00   		movq	(%rax), %rax
 1228 0851 4883C010 		addq	$16, %rax
 1229 0855 488B00   		movq	(%rax), %rax
 1230 0858 488B9500 		movq	-512(%rbp), %rdx
 1230      FEFFFF
 1231 085f 4889D7   		movq	%rdx, %rdi
 1232 0862 FFD0     		call	*%rax
 1233              	.LVL3:
 1234 0864 4889C6   		movq	%rax, %rsi
 1235 0867 4889DF   		movq	%rbx, %rdi
 1236 086a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 1236      00
 1237              		.loc 3 55 0 discriminator 19
 1238 086f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1238      00
 1239 0874 488B18   		movq	(%rax), %rbx
 1240 0877 488D8530 		leaq	-464(%rbp), %rax
 1240      FEFFFF
 1241 087e 4889C7   		movq	%rax, %rdi
 1242 0881 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 1242      00
 1243              		.loc 3 55 0 discriminator 21
 1244 0886 4889C2   		movq	%rax, %rdx
 1245 0889 488B85E8 		movq	-536(%rbp), %rax
 1245      FDFFFF
 1246 0890 4883C008 		addq	$8, %rax
 1247 0894 4889C6   		movq	%rax, %rsi
 1248 0897 4889DF   		movq	%rbx, %rdi
 1249 089a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1249      00
 1250              	.LEHE33:
 1251              		.loc 3 55 0 discriminator 25
 1252 089f 488D8530 		leaq	-464(%rbp), %rax
 1252      FEFFFF
 1253 08a6 4889C7   		movq	%rax, %rdi
 1254              	.LEHB34:
 1255 08a9 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1255      00
 1256              	.LEHE34:
 1257              	.LBE26:
 1258              		.loc 3 55 0 discriminator 26
 1259 08ae E8000000 		call	__cxa_end_catch@PLT
 1259      00
 1260              	.LBE25:
 1261 08b3 E9ED0000 		jmp	.L54
 1261      00
 1262              	.L74:
 1263              		.loc 3 55 0
 1264 08b8 4889C7   		movq	%rax, %rdi
 1265 08bb E8000000 		call	__cxa_begin_catch@PLT
 1265      00
 1266 08c0 80BDFFFD 		cmpb	$0, -513(%rbp)
 1266      FFFF00
 1267 08c7 7445     		je	.L61
 1268              	.LEHB35:
 1269              		.loc 3 55 0 discriminator 28
 1270 08c9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1270      00
 1271 08ce 488B18   		movq	(%rax), %rbx
 1272 08d1 488B85E8 		movq	-536(%rbp), %rax
 1272      FDFFFF
 1273 08d8 488D4808 		leaq	8(%rax), %rcx
 1274 08dc 488D8510 		leaq	-496(%rbp), %rax
 1274      FEFFFF
 1275 08e3 BA370000 		movl	$55, %edx
 1275      00
 1276 08e8 4889CE   		movq	%rcx, %rsi
 1277 08eb 4889C7   		movq	%rax, %rdi
 1278 08ee E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1278      00
 1279              		.loc 3 55 0 discriminator 33
 1280 08f3 488D8510 		leaq	-496(%rbp), %rax
 1280      FEFFFF
 1281 08fa 488D1500 		leaq	.LC4(%rip), %rdx
 1281      000000
 1282 0901 4889C6   		movq	%rax, %rsi
 1283 0904 4889DF   		movq	%rbx, %rdi
 1284 0907 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1284      00
 1285 090c EB43     		jmp	.L62
 1286              	.L61:
 1287              		.loc 3 55 0 discriminator 29
 1288 090e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1288      00
 1289 0913 488B18   		movq	(%rax), %rbx
 1290 0916 488B85E8 		movq	-536(%rbp), %rax
 1290      FDFFFF
 1291 091d 488D4808 		leaq	8(%rax), %rcx
 1292 0921 488D8510 		leaq	-496(%rbp), %rax
 1292      FEFFFF
 1293 0928 BA370000 		movl	$55, %edx
 1293      00
 1294 092d 4889CE   		movq	%rcx, %rsi
 1295 0930 4889C7   		movq	%rax, %rdi
 1296 0933 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1296      00
 1297              		.loc 3 55 0 discriminator 40
 1298 0938 488D8510 		leaq	-496(%rbp), %rax
 1298      FEFFFF
 1299 093f 488D1500 		leaq	.LC5(%rip), %rdx
 1299      000000
 1300 0946 4889C6   		movq	%rax, %rsi
 1301 0949 4889DF   		movq	%rbx, %rdi
 1302 094c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1302      00
 1303              	.LEHE35:
 1304              	.L62:
 1305              	.LEHB36:
 1306              		.loc 3 55 0 discriminator 43
 1307 0951 E8000000 		call	__cxa_end_catch@PLT
 1307      00
 1308 0956 EB4D     		jmp	.L54
 1309              	.L70:
 1310 0958 4889C3   		movq	%rax, %rbx
 1311              	.LBB28:
 1312              		.loc 3 55 0
 1313 095b E8000000 		call	__cxa_end_catch@PLT
 1313      00
 1314 0960 4889D8   		movq	%rbx, %rax
 1315 0963 4889C7   		movq	%rax, %rdi
 1316 0966 E8000000 		call	_Unwind_Resume@PLT
 1316      00
 1317              	.LEHE36:
 1318              	.L72:
 1319 096b 4889C3   		movq	%rax, %rbx
 1320              	.LBE28:
 1321              	.LBB29:
 1322              	.LBB27:
 1323 096e 488D8530 		leaq	-464(%rbp), %rax
 1323      FEFFFF
 1324 0975 4889C7   		movq	%rax, %rdi
 1325 0978 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 1325      00
 1326 097d EB03     		jmp	.L65
 1327              	.L71:
 1328 097f 4889C3   		movq	%rax, %rbx
 1329              	.L65:
 1330              	.LBE27:
 1331 0982 E8000000 		call	__cxa_end_catch@PLT
 1331      00
 1332 0987 4889D8   		movq	%rbx, %rax
 1333 098a 4889C7   		movq	%rax, %rdi
 1334              	.LEHB37:
 1335 098d E8000000 		call	_Unwind_Resume@PLT
 1335      00
 1336              	.LEHE37:
 1337              	.L73:
 1338 0992 4889C3   		movq	%rax, %rbx
 1339              	.LBE29:
 1340 0995 E8000000 		call	__cxa_end_catch@PLT
 1340      00
 1341 099a 4889D8   		movq	%rbx, %rax
 1342 099d 4889C7   		movq	%rax, %rdi
 1343              	.LEHB38:
 1344 09a0 E8000000 		call	_Unwind_Resume@PLT
 1344      00
 1345              	.LEHE38:
 1346              	.L54:
 1347 09a5 488B45D8 		movq	-40(%rbp), %rax
 1348 09a9 64483304 		xorq	%fs:40, %rax
 1348      25280000 
 1348      00
 1349 09b2 7405     		je	.L67
 1350 09b4 E8000000 		call	__stack_chk_fail@PLT
 1350      00
 1351              	.L67:
 1352 09b9 4881C408 		addq	$520, %rsp
 1352      020000
 1353 09c0 5B       		popq	%rbx
 1354 09c1 415C     		popq	%r12
 1355 09c3 415D     		popq	%r13
 1356 09c5 5D       		popq	%rbp
 1357              		.cfi_def_cfa 7, 8
 1358 09c6 C3       		ret
 1359              		.cfi_endproc
 1360              	.LFE1378:
 1361              		.section	.gcc_except_table
 1362              		.align 4
 1363              	.LLSDA1378:
 1364 00ac FF       		.byte	0xff
 1365 00ad 9B       		.byte	0x9b
 1366 00ae 55       		.uleb128 .LLSDATT1378-.LLSDATTD1378
 1367              	.LLSDATTD1378:
 1368 00af 01       		.byte	0x1
 1369 00b0 3E       		.uleb128 .LLSDACSE1378-.LLSDACSB1378
 1370              	.LLSDACSB1378:
 1371 00b1 45       		.uleb128 .LEHB28-.LFB1378
 1372 00b2 05       		.uleb128 .LEHE28-.LEHB28
 1373 00b3 9F01     		.uleb128 .L68-.LFB1378
 1374 00b5 05       		.uleb128 0x5
 1375 00b6 69       		.uleb128 .LEHB29-.LFB1378
 1376 00b7 05       		.uleb128 .LEHE29-.LEHB29
 1377 00b8 8201     		.uleb128 .L69-.LFB1378
 1378 00ba 07       		.uleb128 0x7
 1379 00bb 78       		.uleb128 .LEHB30-.LFB1378
 1380 00bc 05       		.uleb128 .LEHE30-.LEHB30
 1381 00bd 9F01     		.uleb128 .L68-.LFB1378
 1382 00bf 05       		.uleb128 0x5
 1383 00c0 C301     		.uleb128 .LEHB31-.LFB1378
 1384 00c2 8901     		.uleb128 .LEHE31-.LEHB31
 1385 00c4 9E05     		.uleb128 .L70-.LFB1378
 1386 00c6 00       		.uleb128 0
 1387 00c7 EF02     		.uleb128 .LEHB32-.LFB1378
 1388 00c9 05       		.uleb128 .LEHE32-.LEHB32
 1389 00ca C505     		.uleb128 .L71-.LFB1378
 1390 00cc 00       		.uleb128 0
 1391 00cd 8503     		.uleb128 .LEHB33-.LFB1378
 1392 00cf 60       		.uleb128 .LEHE33-.LEHB33
 1393 00d0 B105     		.uleb128 .L72-.LFB1378
 1394 00d2 00       		.uleb128 0
 1395 00d3 EF03     		.uleb128 .LEHB34-.LFB1378
 1396 00d5 05       		.uleb128 .LEHE34-.LEHB34
 1397 00d6 C505     		.uleb128 .L71-.LFB1378
 1398 00d8 00       		.uleb128 0
 1399 00d9 8F04     		.uleb128 .LEHB35-.LFB1378
 1400 00db 8801     		.uleb128 .LEHE35-.LEHB35
 1401 00dd D805     		.uleb128 .L73-.LFB1378
 1402 00df 00       		.uleb128 0
 1403 00e0 9705     		.uleb128 .LEHB36-.LFB1378
 1404 00e2 1A       		.uleb128 .LEHE36-.LEHB36
 1405 00e3 00       		.uleb128 0
 1406 00e4 00       		.uleb128 0
 1407 00e5 D305     		.uleb128 .LEHB37-.LFB1378
 1408 00e7 05       		.uleb128 .LEHE37-.LEHB37
 1409 00e8 00       		.uleb128 0
 1410 00e9 00       		.uleb128 0
 1411 00ea E605     		.uleb128 .LEHB38-.LFB1378
 1412 00ec 05       		.uleb128 .LEHE38-.LEHB38
 1413 00ed 00       		.uleb128 0
 1414 00ee 00       		.uleb128 0
 1415              	.LLSDACSE1378:
 1416 00ef 03       		.byte	0x3
 1417 00f0 00       		.byte	0
 1418 00f1 02       		.byte	0x2
 1419 00f2 7D       		.byte	0x7d
 1420 00f3 01       		.byte	0x1
 1421 00f4 7D       		.byte	0x7d
 1422 00f5 00       		.byte	0
 1423 00f6 7D       		.byte	0x7d
 1424 00f7 00       		.align 4
 1425 00f8 00000000 		.long	0
 1426              	
 1427 00fc 00000000 		.long	DW.ref._ZTISt9exception-.
 1428 0100 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 1429              	.LLSDATT1378:
 1430              		.text
 1432              		.section	.rodata
 1433              	.LC14:
 1434 0279 00       		.string	""
 1435              	.LC15:
 1436 027a 6D657373 		.string	"message"
 1436      61676500 
 1437              	.LC17:
 1438 0282 6F757470 		.string	"output.str().empty()"
 1438      75742E73 
 1438      74722829 
 1438      2E656D70 
 1438      74792829 
 1439              	.LC18:
 1440 0297 216F7574 		.string	"!output.str().empty()"
 1440      7075742E 
 1440      73747228 
 1440      292E656D 
 1440      70747928 
 1441 02ad 000000   		.align 8
 1442              	.LC19:
 1443 02b0 556E6861 		.string	"Unhandled exception in CHECK(output.str().empty())"
 1443      6E646C65 
 1443      64206578 
 1443      63657074 
 1443      696F6E20 
 1444 02e3 00000000 		.align 8
 1444      00
 1445              	.LC20:
 1446 02e8 556E6861 		.string	"Unhandled exception in CHECK(!output.str().empty())"
 1446      6E646C65 
 1446      64206578 
 1446      63657074 
 1446      696F6E20 
 1447              		.text
 1448 09c7 90       		.align 2
 1450              	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunImplEv:
 1451              	.LFB1382:
  56:TestXmlTestReporter.cpp **** {
 1452              		.loc 3 56 0 is_stmt 1
 1453              		.cfi_startproc
 1454              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1455              		.cfi_lsda 0x1b,.LLSDA1382
 1456 09c8 55       		pushq	%rbp
 1457              		.cfi_def_cfa_offset 16
 1458              		.cfi_offset 6, -16
 1459 09c9 4889E5   		movq	%rsp, %rbp
 1460              		.cfi_def_cfa_register 6
 1461 09cc 53       		pushq	%rbx
 1462 09cd 4881EC88 		subq	$136, %rsp
 1462      000000
 1463              		.cfi_offset 3, -24
 1464 09d4 4889BD78 		movq	%rdi, -136(%rbp)
 1464      FFFFFF
 1465              		.loc 3 56 0
 1466 09db 64488B04 		movq	%fs:40, %rax
 1466      25280000 
 1466      00
 1467 09e4 488945E8 		movq	%rax, -24(%rbp)
 1468 09e8 31C0     		xorl	%eax, %eax
  57:TestXmlTestReporter.cpp ****     TestDetails const details("", "", "", 0);
 1469              		.loc 3 57 0
 1470 09ea 488D4580 		leaq	-128(%rbp), %rax
 1471 09ee 41B80000 		movl	$0, %r8d
 1471      0000
 1472 09f4 488D0D00 		leaq	.LC14(%rip), %rcx
 1472      000000
 1473 09fb 488D1500 		leaq	.LC14(%rip), %rdx
 1473      000000
 1474 0a02 488D3500 		leaq	.LC14(%rip), %rsi
 1474      000000
 1475 0a09 4889C7   		movq	%rax, %rdi
 1476              	.LEHB39:
 1477 0a0c E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 1477      00
  58:TestXmlTestReporter.cpp **** 
  59:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 1478              		.loc 3 59 0
 1479 0a11 488B8578 		movq	-136(%rbp), %rax
 1479      FFFFFF
 1480 0a18 488D9078 		leaq	376(%rax), %rdx
 1480      010000
 1481 0a1f 488D4580 		leaq	-128(%rbp), %rax
 1482 0a23 4889C6   		movq	%rax, %rsi
 1483 0a26 4889D7   		movq	%rdx, %rdi
 1484 0a29 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 1484      00
  60:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "message");
 1485              		.loc 3 60 0
 1486 0a2e 488B8578 		movq	-136(%rbp), %rax
 1486      FFFFFF
 1487 0a35 488D8878 		leaq	376(%rax), %rcx
 1487      010000
 1488 0a3c 488D4580 		leaq	-128(%rbp), %rax
 1489 0a40 488D1500 		leaq	.LC15(%rip), %rdx
 1489      000000
 1490 0a47 4889C6   		movq	%rax, %rsi
 1491 0a4a 4889CF   		movq	%rcx, %rdi
 1492 0a4d E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 1492      00
  61:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 1.0F);
 1493              		.loc 3 61 0
 1494 0a52 488B8578 		movq	-136(%rbp), %rax
 1494      FFFFFF
 1495 0a59 488D9078 		leaq	376(%rax), %rdx
 1495      010000
 1496 0a60 488D4580 		leaq	-128(%rbp), %rax
 1497 0a64 F30F1005 		movss	.LC16(%rip), %xmm0
 1497      00000000 
 1498 0a6c 4889C6   		movq	%rax, %rsi
 1499 0a6f 4889D7   		movq	%rdx, %rdi
 1500 0a72 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 1500      00
 1501              	.LEHE39:
  62:TestXmlTestReporter.cpp ****     CHECK(output.str().empty());
 1502              		.loc 3 62 0
 1503 0a77 488B9578 		movq	-136(%rbp), %rdx
 1503      FFFFFF
 1504 0a7e 488D45C0 		leaq	-64(%rbp), %rax
 1505 0a82 4889D6   		movq	%rdx, %rsi
 1506 0a85 4889C7   		movq	%rax, %rdi
 1507              	.LEHB40:
 1508 0a88 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 1508      00
 1509              	.LEHE40:
 1510              		.loc 3 62 0 is_stmt 0 discriminator 1
 1511 0a8d 488D45C0 		leaq	-64(%rbp), %rax
 1512 0a91 4889C7   		movq	%rax, %rdi
 1513              	.LEHB41:
 1514 0a94 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv@PLT
 1514      00
 1515              	.LEHE41:
 1516 0a99 0FB6C0   		movzbl	%al, %eax
 1517 0a9c 89C7     		movl	%eax, %edi
 1518 0a9e E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 1518      00
 1519 0aa3 83F001   		xorl	$1, %eax
 1520 0aa6 89C3     		movl	%eax, %ebx
 1521 0aa8 488D45C0 		leaq	-64(%rbp), %rax
 1522 0aac 4889C7   		movq	%rax, %rdi
 1523              	.LEHB42:
 1524 0aaf E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1524      00
 1525              		.loc 3 62 0 discriminator 5
 1526 0ab4 84DB     		testb	%bl, %bl
 1527 0ab6 743A     		je	.L76
 1528              		.loc 3 62 0 discriminator 6
 1529 0ab8 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1529      00
 1530 0abd 488B18   		movq	(%rax), %rbx
 1531 0ac0 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1531      00
 1532              		.loc 3 62 0 discriminator 7
 1533 0ac5 488B08   		movq	(%rax), %rcx
 1534 0ac8 488D45A0 		leaq	-96(%rbp), %rax
 1535 0acc BA3E0000 		movl	$62, %edx
 1535      00
 1536 0ad1 4889CE   		movq	%rcx, %rsi
 1537 0ad4 4889C7   		movq	%rax, %rdi
 1538 0ad7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1538      00
 1539              		.loc 3 62 0 discriminator 9
 1540 0adc 488D45A0 		leaq	-96(%rbp), %rax
 1541 0ae0 488D1500 		leaq	.LC17(%rip), %rdx
 1541      000000
 1542 0ae7 4889C6   		movq	%rax, %rsi
 1543 0aea 4889DF   		movq	%rbx, %rdi
 1544 0aed E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1544      00
 1545              	.LEHE42:
 1546              	.L76:
  63:TestXmlTestReporter.cpp **** 
  64:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 1.0f);
 1547              		.loc 3 64 0 is_stmt 1
 1548 0af2 488B8578 		movq	-136(%rbp), %rax
 1548      FFFFFF
 1549 0af9 48057801 		addq	$376, %rax
 1549      0000
 1550 0aff F30F1005 		movss	.LC16(%rip), %xmm0
 1550      00000000 
 1551 0b07 B9010000 		movl	$1, %ecx
 1551      00
 1552 0b0c BA010000 		movl	$1, %edx
 1552      00
 1553 0b11 BE010000 		movl	$1, %esi
 1553      00
 1554 0b16 4889C7   		movq	%rax, %rdi
 1555              	.LEHB43:
 1556 0b19 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 1556      00
 1557              	.LEHE43:
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1558              		.loc 3 65 0
 1559 0b1e 488B9578 		movq	-136(%rbp), %rdx
 1559      FFFFFF
 1560 0b25 488D45C0 		leaq	-64(%rbp), %rax
 1561 0b29 4889D6   		movq	%rdx, %rsi
 1562 0b2c 4889C7   		movq	%rax, %rdi
 1563              	.LEHB44:
 1564 0b2f E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 1564      00
 1565              	.LEHE44:
 1566              		.loc 3 65 0 is_stmt 0 discriminator 1
 1567 0b34 488D45C0 		leaq	-64(%rbp), %rax
 1568 0b38 4889C7   		movq	%rax, %rdi
 1569              	.LEHB45:
 1570 0b3b E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv@PLT
 1570      00
 1571              	.LEHE45:
 1572 0b40 83F001   		xorl	$1, %eax
 1573 0b43 0FB6C0   		movzbl	%al, %eax
 1574 0b46 89C7     		movl	%eax, %edi
 1575 0b48 E8000000 		call	_ZN8UnitTest5CheckIbEEbT_
 1575      00
 1576 0b4d 83F001   		xorl	$1, %eax
 1577 0b50 89C3     		movl	%eax, %ebx
 1578 0b52 488D45C0 		leaq	-64(%rbp), %rax
 1579 0b56 4889C7   		movq	%rax, %rdi
 1580              	.LEHB46:
 1581 0b59 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1581      00
 1582              		.loc 3 65 0 discriminator 5
 1583 0b5e 84DB     		testb	%bl, %bl
 1584 0b60 0F842201 		je	.L91
 1584      0000
 1585              		.loc 3 65 0 discriminator 6
 1586 0b66 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1586      00
 1587 0b6b 488B18   		movq	(%rax), %rbx
 1588 0b6e E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1588      00
 1589              		.loc 3 65 0 discriminator 7
 1590 0b73 488B08   		movq	(%rax), %rcx
 1591 0b76 488D45A0 		leaq	-96(%rbp), %rax
 1592 0b7a BA410000 		movl	$65, %edx
 1592      00
 1593 0b7f 4889CE   		movq	%rcx, %rsi
 1594 0b82 4889C7   		movq	%rax, %rdi
 1595 0b85 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1595      00
 1596              		.loc 3 65 0 discriminator 9
 1597 0b8a 488D45A0 		leaq	-96(%rbp), %rax
 1598 0b8e 488D1500 		leaq	.LC18(%rip), %rdx
 1598      000000
 1599 0b95 4889C6   		movq	%rax, %rsi
 1600 0b98 4889DF   		movq	%rbx, %rdi
 1601 0b9b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1601      00
 1602              	.LEHE46:
  66:TestXmlTestReporter.cpp **** }
 1603              		.loc 3 66 0 is_stmt 1
 1604 0ba0 E9E30000 		jmp	.L91
 1604      00
 1605              	.L86:
 1606 0ba5 4889C3   		movq	%rax, %rbx
  62:TestXmlTestReporter.cpp **** 
 1607              		.loc 3 62 0
 1608 0ba8 488D45C0 		leaq	-64(%rbp), %rax
 1609 0bac 4889C7   		movq	%rax, %rdi
 1610 0baf E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1610      00
 1611 0bb4 4889D8   		movq	%rbx, %rax
 1612 0bb7 EB00     		jmp	.L79
 1613              	.L85:
 1614              	.L79:
 1615 0bb9 4889C7   		movq	%rax, %rdi
 1616 0bbc E8000000 		call	__cxa_begin_catch@PLT
 1616      00
 1617              	.LEHB47:
 1618 0bc1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1618      00
 1619 0bc6 488B18   		movq	(%rax), %rbx
 1620 0bc9 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1620      00
  62:TestXmlTestReporter.cpp **** 
 1621              		.loc 3 62 0 is_stmt 0 discriminator 13
 1622 0bce 488B08   		movq	(%rax), %rcx
 1623 0bd1 488D45A0 		leaq	-96(%rbp), %rax
 1624 0bd5 BA3E0000 		movl	$62, %edx
 1624      00
 1625 0bda 4889CE   		movq	%rcx, %rsi
 1626 0bdd 4889C7   		movq	%rax, %rdi
 1627 0be0 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1627      00
  62:TestXmlTestReporter.cpp **** 
 1628              		.loc 3 62 0 discriminator 17
 1629 0be5 488D45A0 		leaq	-96(%rbp), %rax
 1630 0be9 488D1500 		leaq	.LC19(%rip), %rdx
 1630      000000
 1631 0bf0 4889C6   		movq	%rax, %rsi
 1632 0bf3 4889DF   		movq	%rbx, %rdi
 1633 0bf6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1633      00
 1634              	.LEHE47:
 1635              	.LEHB48:
  62:TestXmlTestReporter.cpp **** 
 1636              		.loc 3 62 0 discriminator 19
 1637 0bfb E8000000 		call	__cxa_end_catch@PLT
 1637      00
 1638              	.LEHE48:
 1639 0c00 E9EDFEFF 		jmp	.L76
 1639      FF
 1640              	.L87:
 1641 0c05 4889C3   		movq	%rax, %rbx
  62:TestXmlTestReporter.cpp **** 
 1642              		.loc 3 62 0
 1643 0c08 E8000000 		call	__cxa_end_catch@PLT
 1643      00
 1644 0c0d 4889D8   		movq	%rbx, %rax
 1645 0c10 4889C7   		movq	%rax, %rdi
 1646              	.LEHB49:
 1647 0c13 E8000000 		call	_Unwind_Resume@PLT
 1647      00
 1648              	.LEHE49:
 1649              	.L89:
 1650 0c18 4889C3   		movq	%rax, %rbx
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1651              		.loc 3 65 0 is_stmt 1
 1652 0c1b 488D45C0 		leaq	-64(%rbp), %rax
 1653 0c1f 4889C7   		movq	%rax, %rdi
 1654 0c22 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 1654      00
 1655 0c27 4889D8   		movq	%rbx, %rax
 1656 0c2a EB00     		jmp	.L82
 1657              	.L88:
 1658              	.L82:
 1659 0c2c 4889C7   		movq	%rax, %rdi
 1660 0c2f E8000000 		call	__cxa_begin_catch@PLT
 1660      00
 1661              	.LEHB50:
 1662 0c34 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1662      00
 1663 0c39 488B18   		movq	(%rax), %rbx
 1664 0c3c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 1664      00
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1665              		.loc 3 65 0 is_stmt 0 discriminator 13
 1666 0c41 488B08   		movq	(%rax), %rcx
 1667 0c44 488D45A0 		leaq	-96(%rbp), %rax
 1668 0c48 BA410000 		movl	$65, %edx
 1668      00
 1669 0c4d 4889CE   		movq	%rcx, %rsi
 1670 0c50 4889C7   		movq	%rax, %rdi
 1671 0c53 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 1671      00
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1672              		.loc 3 65 0 discriminator 17
 1673 0c58 488D45A0 		leaq	-96(%rbp), %rax
 1674 0c5c 488D1500 		leaq	.LC20(%rip), %rdx
 1674      000000
 1675 0c63 4889C6   		movq	%rax, %rsi
 1676 0c66 4889DF   		movq	%rbx, %rdi
 1677 0c69 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 1677      00
 1678              	.LEHE50:
 1679              	.LEHB51:
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1680              		.loc 3 65 0 discriminator 19
 1681 0c6e E8000000 		call	__cxa_end_catch@PLT
 1681      00
 1682              	.LEHE51:
 1683              		.loc 3 66 0 is_stmt 1 discriminator 19
 1684 0c73 EB13     		jmp	.L91
 1685              	.L90:
 1686 0c75 4889C3   		movq	%rax, %rbx
  65:TestXmlTestReporter.cpp ****     CHECK(!output.str().empty());
 1687              		.loc 3 65 0
 1688 0c78 E8000000 		call	__cxa_end_catch@PLT
 1688      00
 1689 0c7d 4889D8   		movq	%rbx, %rax
 1690 0c80 4889C7   		movq	%rax, %rdi
 1691              	.LEHB52:
 1692 0c83 E8000000 		call	_Unwind_Resume@PLT
 1692      00
 1693              	.LEHE52:
 1694              	.L91:
 1695              		.loc 3 66 0
 1696 0c88 90       		nop
 1697 0c89 488B45E8 		movq	-24(%rbp), %rax
 1698 0c8d 64483304 		xorq	%fs:40, %rax
 1698      25280000 
 1698      00
 1699 0c96 7405     		je	.L84
 1700 0c98 E8000000 		call	__stack_chk_fail@PLT
 1700      00
 1701              	.L84:
 1702 0c9d 4881C488 		addq	$136, %rsp
 1702      000000
 1703 0ca4 5B       		popq	%rbx
 1704 0ca5 5D       		popq	%rbp
 1705              		.cfi_def_cfa 7, 8
 1706 0ca6 C3       		ret
 1707              		.cfi_endproc
 1708              	.LFE1382:
 1709              		.section	.gcc_except_table
 1710              		.align 4
 1711              	.LLSDA1382:
 1712 0104 FF       		.byte	0xff
 1713 0105 9B       		.byte	0x9b
 1714 0106 59       		.uleb128 .LLSDATT1382-.LLSDATTD1382
 1715              	.LLSDATTD1382:
 1716 0107 01       		.byte	0x1
 1717 0108 4D       		.uleb128 .LLSDACSE1382-.LLSDACSB1382
 1718              	.LLSDACSB1382:
 1719 0109 44       		.uleb128 .LEHB39-.LFB1382
 1720 010a 6B       		.uleb128 .LEHE39-.LEHB39
 1721 010b 00       		.uleb128 0
 1722 010c 00       		.uleb128 0
 1723 010d C001     		.uleb128 .LEHB40-.LFB1382
 1724 010f 05       		.uleb128 .LEHE40-.LEHB40
 1725 0110 F103     		.uleb128 .L85-.LFB1382
 1726 0112 01       		.uleb128 0x1
 1727 0113 CC01     		.uleb128 .LEHB41-.LFB1382
 1728 0115 05       		.uleb128 .LEHE41-.LEHB41
 1729 0116 DD03     		.uleb128 .L86-.LFB1382
 1730 0118 03       		.uleb128 0x3
 1731 0119 E701     		.uleb128 .LEHB42-.LFB1382
 1732 011b 43       		.uleb128 .LEHE42-.LEHB42
 1733 011c F103     		.uleb128 .L85-.LFB1382
 1734 011e 01       		.uleb128 0x1
 1735 011f D102     		.uleb128 .LEHB43-.LFB1382
 1736 0121 05       		.uleb128 .LEHE43-.LEHB43
 1737 0122 00       		.uleb128 0
 1738 0123 00       		.uleb128 0
 1739 0124 E702     		.uleb128 .LEHB44-.LFB1382
 1740 0126 05       		.uleb128 .LEHE44-.LEHB44
 1741 0127 E404     		.uleb128 .L88-.LFB1382
 1742 0129 01       		.uleb128 0x1
 1743 012a F302     		.uleb128 .LEHB45-.LFB1382
 1744 012c 05       		.uleb128 .LEHE45-.LEHB45
 1745 012d D004     		.uleb128 .L89-.LFB1382
 1746 012f 03       		.uleb128 0x3
 1747 0130 9103     		.uleb128 .LEHB46-.LFB1382
 1748 0132 47       		.uleb128 .LEHE46-.LEHB46
 1749 0133 E404     		.uleb128 .L88-.LFB1382
 1750 0135 01       		.uleb128 0x1
 1751 0136 F903     		.uleb128 .LEHB47-.LFB1382
 1752 0138 3A       		.uleb128 .LEHE47-.LEHB47
 1753 0139 BD04     		.uleb128 .L87-.LFB1382
 1754 013b 00       		.uleb128 0
 1755 013c B304     		.uleb128 .LEHB48-.LFB1382
 1756 013e 05       		.uleb128 .LEHE48-.LEHB48
 1757 013f 00       		.uleb128 0
 1758 0140 00       		.uleb128 0
 1759 0141 CB04     		.uleb128 .LEHB49-.LFB1382
 1760 0143 05       		.uleb128 .LEHE49-.LEHB49
 1761 0144 00       		.uleb128 0
 1762 0145 00       		.uleb128 0
 1763 0146 EC04     		.uleb128 .LEHB50-.LFB1382
 1764 0148 3A       		.uleb128 .LEHE50-.LEHB50
 1765 0149 AD05     		.uleb128 .L90-.LFB1382
 1766 014b 00       		.uleb128 0
 1767 014c A605     		.uleb128 .LEHB51-.LFB1382
 1768 014e 05       		.uleb128 .LEHE51-.LEHB51
 1769 014f 00       		.uleb128 0
 1770 0150 00       		.uleb128 0
 1771 0151 BB05     		.uleb128 .LEHB52-.LFB1382
 1772 0153 05       		.uleb128 .LEHE52-.LEHB52
 1773 0154 00       		.uleb128 0
 1774 0155 00       		.uleb128 0
 1775              	.LLSDACSE1382:
 1776 0156 01       		.byte	0x1
 1777 0157 00       		.byte	0
 1778 0158 00       		.byte	0
 1779 0159 7D       		.byte	0x7d
 1780 015a 0000     		.align 4
 1781 015c 00000000 		.long	0
 1782              	
 1783              	.LLSDATT1382:
 1784              		.text
 1786 0ca7 90       		.align 2
 1788              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC2ERKN8UnitTest11TestDetails
 1789              	.LFB1384:
  67:TestXmlTestReporter.cpp **** 
  68:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, EmptyReportSummaryFormat)
 1790              		.loc 3 68 0
 1791              		.cfi_startproc
 1792 0ca8 55       		pushq	%rbp
 1793              		.cfi_def_cfa_offset 16
 1794              		.cfi_offset 6, -16
 1795 0ca9 4889E5   		movq	%rsp, %rbp
 1796              		.cfi_def_cfa_register 6
 1797 0cac 4883EC10 		subq	$16, %rsp
 1798 0cb0 48897DF8 		movq	%rdi, -8(%rbp)
 1799 0cb4 488975F0 		movq	%rsi, -16(%rbp)
 1800              	.LBB30:
 1801              		.loc 3 68 0
 1802 0cb8 488B45F8 		movq	-8(%rbp), %rax
 1803 0cbc 4889C7   		movq	%rax, %rdi
 1804 0cbf E83CF3FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 1804      FF
 1805 0cc4 488B45F8 		movq	-8(%rbp), %rax
 1806 0cc8 488B55F0 		movq	-16(%rbp), %rdx
 1807 0ccc 488990A0 		movq	%rdx, 416(%rax)
 1807      010000
 1808              	.LBE30:
 1809 0cd3 90       		nop
 1810 0cd4 C9       		leave
 1811              		.cfi_def_cfa 7, 8
 1812 0cd5 C3       		ret
 1813              		.cfi_endproc
 1814              	.LFE1384:
 1816              		.set	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestD
 1817              		.section	.rodata
 1818              	.LC21:
 1819 031c 456D7074 		.string	"EmptyReportSummaryFormat"
 1819      79526570 
 1819      6F727453 
 1819      756D6D61 
 1819      7279466F 
 1820              		.text
 1821              		.align 2
 1823              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC2Ev:
 1824              	.LFB1387:
 1825              		.loc 3 68 0
 1826              		.cfi_startproc
 1827 0cd6 55       		pushq	%rbp
 1828              		.cfi_def_cfa_offset 16
 1829              		.cfi_offset 6, -16
 1830 0cd7 4889E5   		movq	%rsp, %rbp
 1831              		.cfi_def_cfa_register 6
 1832 0cda 53       		pushq	%rbx
 1833 0cdb 4883EC18 		subq	$24, %rsp
 1834              		.cfi_offset 3, -24
 1835 0cdf 48897DE8 		movq	%rdi, -24(%rbp)
 1836              	.LBB31:
 1837              		.loc 3 68 0
 1838 0ce3 488B5DE8 		movq	-24(%rbp), %rbx
 1839 0ce7 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 1839      00
 1840 0cec 41B84400 		movl	$68, %r8d
 1840      0000
 1841 0cf2 488D0D00 		leaq	.LC1(%rip), %rcx
 1841      000000
 1842 0cf9 4889C2   		movq	%rax, %rdx
 1843 0cfc 488D3500 		leaq	.LC21(%rip), %rsi
 1843      000000
 1844 0d03 4889DF   		movq	%rbx, %rdi
 1845 0d06 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 1845      00
 1846 0d0b 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE(%rip), %rdx
 1846      000000
 1847 0d12 488B45E8 		movq	-24(%rbp), %rax
 1848 0d16 488910   		movq	%rdx, (%rax)
 1849              	.LBE31:
 1850 0d19 90       		nop
 1851 0d1a 4883C418 		addq	$24, %rsp
 1852 0d1e 5B       		popq	%rbx
 1853 0d1f 5D       		popq	%rbp
 1854              		.cfi_def_cfa 7, 8
 1855 0d20 C3       		ret
 1856              		.cfi_endproc
 1857              	.LFE1387:
 1859              		.set	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev,_ZN12_GLOBAL__N_150
 1860              		.local	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE
 1861              		.comm	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE,56,32
 1862              		.local	_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE
 1863              		.comm	_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE,1,1
 1864 0d21 90       		.align 2
 1866              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD2Ev:
 1867              	.LFB1391:
 1868              		.loc 3 68 0
 1869              		.cfi_startproc
 1870 0d22 55       		pushq	%rbp
 1871              		.cfi_def_cfa_offset 16
 1872              		.cfi_offset 6, -16
 1873 0d23 4889E5   		movq	%rsp, %rbp
 1874              		.cfi_def_cfa_register 6
 1875 0d26 4883EC10 		subq	$16, %rsp
 1876 0d2a 48897DF8 		movq	%rdi, -8(%rbp)
 1877              	.LBB32:
 1878              		.loc 3 68 0
 1879 0d2e 488B45F8 		movq	-8(%rbp), %rax
 1880 0d32 4889C7   		movq	%rax, %rdi
 1881 0d35 E822F3FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 1881      FF
 1882              	.LBE32:
 1883 0d3a 90       		nop
 1884 0d3b C9       		leave
 1885              		.cfi_def_cfa 7, 8
 1886 0d3c C3       		ret
 1887              		.cfi_endproc
 1888              	.LFE1391:
 1890              		.set	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev,_ZN12_GLOBAL__N_1
 1891 0d3d 90       		.align 2
 1893              	_ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv:
 1894              	.LFB1389:
 1895              		.loc 3 68 0
 1896              		.cfi_startproc
 1897              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1898              		.cfi_lsda 0x1b,.LLSDA1389
 1899 0d3e 55       		pushq	%rbp
 1900              		.cfi_def_cfa_offset 16
 1901              		.cfi_offset 6, -16
 1902 0d3f 4889E5   		movq	%rsp, %rbp
 1903              		.cfi_def_cfa_register 6
 1904 0d42 4155     		pushq	%r13
 1905 0d44 4154     		pushq	%r12
 1906 0d46 53       		pushq	%rbx
 1907 0d47 4881EC08 		subq	$520, %rsp
 1907      020000
 1908              		.cfi_offset 13, -24
 1909              		.cfi_offset 12, -32
 1910              		.cfi_offset 3, -40
 1911 0d4e 4889BDE8 		movq	%rdi, -536(%rbp)
 1911      FDFFFF
 1912              		.loc 3 68 0
 1913 0d55 64488B04 		movq	%fs:40, %rax
 1913      25280000 
 1913      00
 1914 0d5e 488945D8 		movq	%rax, -40(%rbp)
 1915 0d62 31C0     		xorl	%eax, %eax
 1916 0d64 C685FFFD 		movb	$0, -513(%rbp)
 1916      FFFF00
 1917              	.LBB33:
 1918 0d6b 488B85E8 		movq	-536(%rbp), %rax
 1918      FDFFFF
 1919 0d72 488D5008 		leaq	8(%rax), %rdx
 1920 0d76 488D8530 		leaq	-464(%rbp), %rax
 1920      FEFFFF
 1921 0d7d 4889D6   		movq	%rdx, %rsi
 1922 0d80 4889C7   		movq	%rax, %rdi
 1923              	.LEHB53:
 1924 0d83 E820FFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestD
 1924      FF
 1925              	.LEHE53:
 1926              		.loc 3 68 0 is_stmt 0 discriminator 1
 1927 0d88 C685FFFD 		movb	$1, -513(%rbp)
 1927      FFFF01
 1928 0d8f 488B85E8 		movq	-536(%rbp), %rax
 1928      FDFFFF
 1929 0d96 488D5008 		leaq	8(%rax), %rdx
 1930 0d9a 488D8530 		leaq	-464(%rbp), %rax
 1930      FEFFFF
 1931 0da1 4889D6   		movq	%rdx, %rsi
 1932 0da4 4889C7   		movq	%rax, %rdi
 1933              	.LEHB54:
 1934 0da7 E8292500 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelp
 1934      00
 1935              	.LEHE54:
 1936              		.loc 3 68 0 discriminator 3
 1937 0dac 488D8530 		leaq	-464(%rbp), %rax
 1937      FEFFFF
 1938 0db3 4889C7   		movq	%rax, %rdi
 1939              	.LEHB55:
 1940 0db6 E867FFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
 1940      FF
 1941              	.LEHE55:
 1942              	.LBE33:
 1943              		.loc 3 68 0
 1944 0dbb E9690200 		jmp	.L95
 1944      00
 1945              	.L110:
 1946 0dc0 4989C4   		movq	%rax, %r12
 1947 0dc3 4889D3   		movq	%rdx, %rbx
 1948              	.LBB34:
 1949 0dc6 488D8530 		leaq	-464(%rbp), %rax
 1949      FEFFFF
 1950 0dcd 4889C7   		movq	%rax, %rdi
 1951 0dd0 E84DFFFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
 1951      FF
 1952 0dd5 4C89E0   		movq	%r12, %rax
 1953 0dd8 4889DA   		movq	%rbx, %rdx
 1954 0ddb EB00     		jmp	.L97
 1955              	.L109:
 1956              	.L97:
 1957 0ddd 4883FA01 		cmpq	$1, %rdx
 1958 0de1 740F     		je	.L99
 1959 0de3 4883FA02 		cmpq	$2, %rdx
 1960 0de7 0F84A700 		je	.L100
 1960      0000
 1961 0ded E94A0100 		jmp	.L115
 1961      00
 1962              	.L99:
 1963              	.LBE34:
 1964              	.LBB35:
 1965 0df2 4889C7   		movq	%rax, %rdi
 1966 0df5 E8000000 		call	__cxa_begin_catch@PLT
 1966      00
 1967 0dfa 48898508 		movq	%rax, -504(%rbp)
 1967      FEFFFF
 1968              	.LEHB56:
 1969 0e01 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 1969      00
 1970 0e06 488B18   		movq	(%rax), %rbx
 1971 0e09 488B8508 		movq	-504(%rbp), %rax
 1971      FEFFFF
 1972 0e10 488B00   		movq	(%rax), %rax
 1973 0e13 4883C010 		addq	$16, %rax
 1974 0e17 488B00   		movq	(%rax), %rax
 1975 0e1a 488B9508 		movq	-504(%rbp), %rdx
 1975      FEFFFF
 1976 0e21 4889D7   		movq	%rdx, %rdi
 1977 0e24 FFD0     		call	*%rax
 1978              	.LVL4:
 1979 0e26 4989C4   		movq	%rax, %r12
 1980 0e29 488B8508 		movq	-504(%rbp), %rax
 1980      FEFFFF
 1981 0e30 4889C7   		movq	%rax, %rdi
 1982 0e33 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 1982      00
 1983              		.loc 3 68 0 discriminator 5
 1984 0e38 4189C5   		movl	%eax, %r13d
 1985 0e3b 488B8508 		movq	-504(%rbp), %rax
 1985      FEFFFF
 1986 0e42 4889C7   		movq	%rax, %rdi
 1987 0e45 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 1987      00
 1988              		.loc 3 68 0 discriminator 7
 1989 0e4a 4889C1   		movq	%rax, %rcx
 1990 0e4d 488B85E8 		movq	-536(%rbp), %rax
 1990      FDFFFF
 1991 0e54 488B5008 		movq	8(%rax), %rdx
 1992 0e58 488B85E8 		movq	-536(%rbp), %rax
 1992      FDFFFF
 1993 0e5f 488B7010 		movq	16(%rax), %rsi
 1994 0e63 488D8510 		leaq	-496(%rbp), %rax
 1994      FEFFFF
 1995 0e6a 4589E8   		movl	%r13d, %r8d
 1996 0e6d 4889C7   		movq	%rax, %rdi
 1997 0e70 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 1997      00
 1998              		.loc 3 68 0 discriminator 11
 1999 0e75 488D8510 		leaq	-496(%rbp), %rax
 1999      FEFFFF
 2000 0e7c 4C89E2   		movq	%r12, %rdx
 2001 0e7f 4889C6   		movq	%rax, %rsi
 2002 0e82 4889DF   		movq	%rbx, %rdi
 2003 0e85 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2003      00
 2004              	.LEHE56:
 2005              		.loc 3 68 0 discriminator 13
 2006 0e8a E8000000 		call	__cxa_end_catch@PLT
 2006      00
 2007              	.LBE35:
 2008 0e8f E9950100 		jmp	.L95
 2008      00
 2009              	.L100:
 2010              	.LBB36:
 2011              		.loc 3 68 0
 2012 0e94 4889C7   		movq	%rax, %rdi
 2013 0e97 E8000000 		call	__cxa_begin_catch@PLT
 2013      00
 2014 0e9c 48898500 		movq	%rax, -512(%rbp)
 2014      FEFFFF
 2015              	.LBB37:
 2016 0ea3 488D8530 		leaq	-464(%rbp), %rax
 2016      FEFFFF
 2017 0eaa 4889C7   		movq	%rax, %rdi
 2018              	.LEHB57:
 2019 0ead E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2019      00
 2020              	.LEHE57:
 2021              		.loc 3 68 0 discriminator 15
 2022 0eb2 488D8530 		leaq	-464(%rbp), %rax
 2022      FEFFFF
 2023 0eb9 488D3500 		leaq	.LC3(%rip), %rsi
 2023      000000
 2024 0ec0 4889C7   		movq	%rax, %rdi
 2025              	.LEHB58:
 2026 0ec3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2026      00
 2027 0ec8 4889C3   		movq	%rax, %rbx
 2028 0ecb 488B8500 		movq	-512(%rbp), %rax
 2028      FEFFFF
 2029 0ed2 488B00   		movq	(%rax), %rax
 2030 0ed5 4883C010 		addq	$16, %rax
 2031 0ed9 488B00   		movq	(%rax), %rax
 2032 0edc 488B9500 		movq	-512(%rbp), %rdx
 2032      FEFFFF
 2033 0ee3 4889D7   		movq	%rdx, %rdi
 2034 0ee6 FFD0     		call	*%rax
 2035              	.LVL5:
 2036 0ee8 4889C6   		movq	%rax, %rsi
 2037 0eeb 4889DF   		movq	%rbx, %rdi
 2038 0eee E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2038      00
 2039              		.loc 3 68 0 discriminator 19
 2040 0ef3 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2040      00
 2041 0ef8 488B18   		movq	(%rax), %rbx
 2042 0efb 488D8530 		leaq	-464(%rbp), %rax
 2042      FEFFFF
 2043 0f02 4889C7   		movq	%rax, %rdi
 2044 0f05 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 2044      00
 2045              		.loc 3 68 0 discriminator 21
 2046 0f0a 4889C2   		movq	%rax, %rdx
 2047 0f0d 488B85E8 		movq	-536(%rbp), %rax
 2047      FDFFFF
 2048 0f14 4883C008 		addq	$8, %rax
 2049 0f18 4889C6   		movq	%rax, %rsi
 2050 0f1b 4889DF   		movq	%rbx, %rdi
 2051 0f1e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2051      00
 2052              	.LEHE58:
 2053              		.loc 3 68 0 discriminator 25
 2054 0f23 488D8530 		leaq	-464(%rbp), %rax
 2054      FEFFFF
 2055 0f2a 4889C7   		movq	%rax, %rdi
 2056              	.LEHB59:
 2057 0f2d E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2057      00
 2058              	.LEHE59:
 2059              	.LBE37:
 2060              		.loc 3 68 0 discriminator 26
 2061 0f32 E8000000 		call	__cxa_end_catch@PLT
 2061      00
 2062              	.LBE36:
 2063 0f37 E9ED0000 		jmp	.L95
 2063      00
 2064              	.L115:
 2065              		.loc 3 68 0
 2066 0f3c 4889C7   		movq	%rax, %rdi
 2067 0f3f E8000000 		call	__cxa_begin_catch@PLT
 2067      00
 2068 0f44 80BDFFFD 		cmpb	$0, -513(%rbp)
 2068      FFFF00
 2069 0f4b 7445     		je	.L102
 2070              	.LEHB60:
 2071              		.loc 3 68 0 discriminator 28
 2072 0f4d E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2072      00
 2073 0f52 488B18   		movq	(%rax), %rbx
 2074 0f55 488B85E8 		movq	-536(%rbp), %rax
 2074      FDFFFF
 2075 0f5c 488D4808 		leaq	8(%rax), %rcx
 2076 0f60 488D8510 		leaq	-496(%rbp), %rax
 2076      FEFFFF
 2077 0f67 BA440000 		movl	$68, %edx
 2077      00
 2078 0f6c 4889CE   		movq	%rcx, %rsi
 2079 0f6f 4889C7   		movq	%rax, %rdi
 2080 0f72 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2080      00
 2081              		.loc 3 68 0 discriminator 33
 2082 0f77 488D8510 		leaq	-496(%rbp), %rax
 2082      FEFFFF
 2083 0f7e 488D1500 		leaq	.LC4(%rip), %rdx
 2083      000000
 2084 0f85 4889C6   		movq	%rax, %rsi
 2085 0f88 4889DF   		movq	%rbx, %rdi
 2086 0f8b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2086      00
 2087 0f90 EB43     		jmp	.L103
 2088              	.L102:
 2089              		.loc 3 68 0 discriminator 29
 2090 0f92 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2090      00
 2091 0f97 488B18   		movq	(%rax), %rbx
 2092 0f9a 488B85E8 		movq	-536(%rbp), %rax
 2092      FDFFFF
 2093 0fa1 488D4808 		leaq	8(%rax), %rcx
 2094 0fa5 488D8510 		leaq	-496(%rbp), %rax
 2094      FEFFFF
 2095 0fac BA440000 		movl	$68, %edx
 2095      00
 2096 0fb1 4889CE   		movq	%rcx, %rsi
 2097 0fb4 4889C7   		movq	%rax, %rdi
 2098 0fb7 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2098      00
 2099              		.loc 3 68 0 discriminator 40
 2100 0fbc 488D8510 		leaq	-496(%rbp), %rax
 2100      FEFFFF
 2101 0fc3 488D1500 		leaq	.LC5(%rip), %rdx
 2101      000000
 2102 0fca 4889C6   		movq	%rax, %rsi
 2103 0fcd 4889DF   		movq	%rbx, %rdi
 2104 0fd0 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2104      00
 2105              	.LEHE60:
 2106              	.L103:
 2107              	.LEHB61:
 2108              		.loc 3 68 0 discriminator 43
 2109 0fd5 E8000000 		call	__cxa_end_catch@PLT
 2109      00
 2110 0fda EB4D     		jmp	.L95
 2111              	.L111:
 2112 0fdc 4889C3   		movq	%rax, %rbx
 2113              	.LBB39:
 2114              		.loc 3 68 0
 2115 0fdf E8000000 		call	__cxa_end_catch@PLT
 2115      00
 2116 0fe4 4889D8   		movq	%rbx, %rax
 2117 0fe7 4889C7   		movq	%rax, %rdi
 2118 0fea E8000000 		call	_Unwind_Resume@PLT
 2118      00
 2119              	.LEHE61:
 2120              	.L113:
 2121 0fef 4889C3   		movq	%rax, %rbx
 2122              	.LBE39:
 2123              	.LBB40:
 2124              	.LBB38:
 2125 0ff2 488D8530 		leaq	-464(%rbp), %rax
 2125      FEFFFF
 2126 0ff9 4889C7   		movq	%rax, %rdi
 2127 0ffc E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2127      00
 2128 1001 EB03     		jmp	.L106
 2129              	.L112:
 2130 1003 4889C3   		movq	%rax, %rbx
 2131              	.L106:
 2132              	.LBE38:
 2133 1006 E8000000 		call	__cxa_end_catch@PLT
 2133      00
 2134 100b 4889D8   		movq	%rbx, %rax
 2135 100e 4889C7   		movq	%rax, %rdi
 2136              	.LEHB62:
 2137 1011 E8000000 		call	_Unwind_Resume@PLT
 2137      00
 2138              	.LEHE62:
 2139              	.L114:
 2140 1016 4889C3   		movq	%rax, %rbx
 2141              	.LBE40:
 2142 1019 E8000000 		call	__cxa_end_catch@PLT
 2142      00
 2143 101e 4889D8   		movq	%rbx, %rax
 2144 1021 4889C7   		movq	%rax, %rdi
 2145              	.LEHB63:
 2146 1024 E8000000 		call	_Unwind_Resume@PLT
 2146      00
 2147              	.LEHE63:
 2148              	.L95:
 2149 1029 488B45D8 		movq	-40(%rbp), %rax
 2150 102d 64483304 		xorq	%fs:40, %rax
 2150      25280000 
 2150      00
 2151 1036 7405     		je	.L108
 2152 1038 E8000000 		call	__stack_chk_fail@PLT
 2152      00
 2153              	.L108:
 2154 103d 4881C408 		addq	$520, %rsp
 2154      020000
 2155 1044 5B       		popq	%rbx
 2156 1045 415C     		popq	%r12
 2157 1047 415D     		popq	%r13
 2158 1049 5D       		popq	%rbp
 2159              		.cfi_def_cfa 7, 8
 2160 104a C3       		ret
 2161              		.cfi_endproc
 2162              	.LFE1389:
 2163              		.section	.gcc_except_table
 2164              		.align 4
 2165              	.LLSDA1389:
 2166 0160 FF       		.byte	0xff
 2167 0161 9B       		.byte	0x9b
 2168 0162 55       		.uleb128 .LLSDATT1389-.LLSDATTD1389
 2169              	.LLSDATTD1389:
 2170 0163 01       		.byte	0x1
 2171 0164 3E       		.uleb128 .LLSDACSE1389-.LLSDACSB1389
 2172              	.LLSDACSB1389:
 2173 0165 45       		.uleb128 .LEHB53-.LFB1389
 2174 0166 05       		.uleb128 .LEHE53-.LEHB53
 2175 0167 9F01     		.uleb128 .L109-.LFB1389
 2176 0169 05       		.uleb128 0x5
 2177 016a 69       		.uleb128 .LEHB54-.LFB1389
 2178 016b 05       		.uleb128 .LEHE54-.LEHB54
 2179 016c 8201     		.uleb128 .L110-.LFB1389
 2180 016e 07       		.uleb128 0x7
 2181 016f 78       		.uleb128 .LEHB55-.LFB1389
 2182 0170 05       		.uleb128 .LEHE55-.LEHB55
 2183 0171 9F01     		.uleb128 .L109-.LFB1389
 2184 0173 05       		.uleb128 0x5
 2185 0174 C301     		.uleb128 .LEHB56-.LFB1389
 2186 0176 8901     		.uleb128 .LEHE56-.LEHB56
 2187 0178 9E05     		.uleb128 .L111-.LFB1389
 2188 017a 00       		.uleb128 0
 2189 017b EF02     		.uleb128 .LEHB57-.LFB1389
 2190 017d 05       		.uleb128 .LEHE57-.LEHB57
 2191 017e C505     		.uleb128 .L112-.LFB1389
 2192 0180 00       		.uleb128 0
 2193 0181 8503     		.uleb128 .LEHB58-.LFB1389
 2194 0183 60       		.uleb128 .LEHE58-.LEHB58
 2195 0184 B105     		.uleb128 .L113-.LFB1389
 2196 0186 00       		.uleb128 0
 2197 0187 EF03     		.uleb128 .LEHB59-.LFB1389
 2198 0189 05       		.uleb128 .LEHE59-.LEHB59
 2199 018a C505     		.uleb128 .L112-.LFB1389
 2200 018c 00       		.uleb128 0
 2201 018d 8F04     		.uleb128 .LEHB60-.LFB1389
 2202 018f 8801     		.uleb128 .LEHE60-.LEHB60
 2203 0191 D805     		.uleb128 .L114-.LFB1389
 2204 0193 00       		.uleb128 0
 2205 0194 9705     		.uleb128 .LEHB61-.LFB1389
 2206 0196 1A       		.uleb128 .LEHE61-.LEHB61
 2207 0197 00       		.uleb128 0
 2208 0198 00       		.uleb128 0
 2209 0199 D305     		.uleb128 .LEHB62-.LFB1389
 2210 019b 05       		.uleb128 .LEHE62-.LEHB62
 2211 019c 00       		.uleb128 0
 2212 019d 00       		.uleb128 0
 2213 019e E605     		.uleb128 .LEHB63-.LFB1389
 2214 01a0 05       		.uleb128 .LEHE63-.LEHB63
 2215 01a1 00       		.uleb128 0
 2216 01a2 00       		.uleb128 0
 2217              	.LLSDACSE1389:
 2218 01a3 03       		.byte	0x3
 2219 01a4 00       		.byte	0
 2220 01a5 02       		.byte	0x2
 2221 01a6 7D       		.byte	0x7d
 2222 01a7 01       		.byte	0x1
 2223 01a8 7D       		.byte	0x7d
 2224 01a9 00       		.byte	0
 2225 01aa 7D       		.byte	0x7d
 2226 01ab 00       		.align 4
 2227 01ac 00000000 		.long	0
 2228              	
 2229 01b0 00000000 		.long	DW.ref._ZTISt9exception-.
 2230 01b4 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 2231              	.LLSDATT1389:
 2232              		.text
 2234              		.section	.rodata
 2235 0335 000000   		.align 8
 2236              	.LC22:
 2237 0338 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"0\" failedtests=\"0\" failures=\"0\" tim
 2237      6C207665 
 2237      7273696F 
 2237      6E3D2231 
 2237      2E30223F 
 2238              		.text
 2239 104b 90       		.align 2
 2241              	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv:
 2242              	.LFB1393:
  69:TestXmlTestReporter.cpp **** {
 2243              		.loc 3 69 0 is_stmt 1
 2244              		.cfi_startproc
 2245              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2246              		.cfi_lsda 0x1b,.LLSDA1393
 2247 104c 55       		pushq	%rbp
 2248              		.cfi_def_cfa_offset 16
 2249              		.cfi_offset 6, -16
 2250 104d 4889E5   		movq	%rsp, %rbp
 2251              		.cfi_def_cfa_register 6
 2252 1050 53       		pushq	%rbx
 2253 1051 4883EC78 		subq	$120, %rsp
 2254              		.cfi_offset 3, -24
 2255 1055 48897D88 		movq	%rdi, -120(%rbp)
 2256              		.loc 3 69 0
 2257 1059 64488B04 		movq	%fs:40, %rax
 2257      25280000 
 2257      00
 2258 1062 488945E8 		movq	%rax, -24(%rbp)
 2259 1066 31C0     		xorl	%eax, %eax
  70:TestXmlTestReporter.cpp ****     reporter.ReportSummary(0, 0, 0, 0.1f);
 2260              		.loc 3 70 0
 2261 1068 488B4588 		movq	-120(%rbp), %rax
 2262 106c 48057801 		addq	$376, %rax
 2262      0000
 2263 1072 F30F1005 		movss	.LC10(%rip), %xmm0
 2263      00000000 
 2264 107a B9000000 		movl	$0, %ecx
 2264      00
 2265 107f BA000000 		movl	$0, %edx
 2265      00
 2266 1084 BE000000 		movl	$0, %esi
 2266      00
 2267 1089 4889C7   		movq	%rax, %rdi
 2268              	.LEHB64:
 2269 108c E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 2269      00
 2270              	.LEHE64:
  71:TestXmlTestReporter.cpp **** 
  72:TestXmlTestReporter.cpp ****     const char *expected =
 2271              		.loc 3 72 0
 2272 1091 488D0500 		leaq	.LC22(%rip), %rax
 2272      000000
 2273 1098 48894598 		movq	%rax, -104(%rbp)
 2274              	.LEHB65:
  73:TestXmlTestReporter.cpp **** "<?xml version=\"1.0\"?>"
  74:TestXmlTestReporter.cpp **** "<unittest-results tests=\"0\" failedtests=\"0\" failures=\"0\" time=\"0.1\">"
  75:TestXmlTestReporter.cpp **** "</unittest-results>";
  76:TestXmlTestReporter.cpp **** 
  77:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 2275              		.loc 3 77 0
 2276 109c E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2276      00
 2277 10a1 488B08   		movq	(%rax), %rcx
 2278 10a4 488D45A0 		leaq	-96(%rbp), %rax
 2279 10a8 BA4D0000 		movl	$77, %edx
 2279      00
 2280 10ad 4889CE   		movq	%rcx, %rsi
 2281 10b0 4889C7   		movq	%rax, %rdi
 2282 10b3 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2282      00
 2283              		.loc 3 77 0 is_stmt 0 discriminator 2
 2284 10b8 488B5588 		movq	-120(%rbp), %rdx
 2285 10bc 488D45C0 		leaq	-64(%rbp), %rax
 2286 10c0 4889D6   		movq	%rdx, %rsi
 2287 10c3 4889C7   		movq	%rax, %rdi
 2288 10c6 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 2288      00
 2289              	.LEHE65:
 2290              	.LEHB66:
 2291              		.loc 3 77 0 discriminator 4
 2292 10cb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2292      00
 2293 10d0 488B00   		movq	(%rax), %rax
 2294 10d3 488D4DA0 		leaq	-96(%rbp), %rcx
 2295 10d7 488D55C0 		leaq	-64(%rbp), %rdx
 2296 10db 488D7598 		leaq	-104(%rbp), %rsi
 2297 10df 4889C7   		movq	%rax, %rdi
 2298 10e2 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 2298      00
 2299              	.LEHE66:
 2300              		.loc 3 77 0 discriminator 8
 2301 10e7 488D45C0 		leaq	-64(%rbp), %rax
 2302 10eb 4889C7   		movq	%rax, %rdi
 2303              	.LEHB67:
 2304 10ee E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 2304      00
 2305              	.LEHE67:
  78:TestXmlTestReporter.cpp **** }
 2306              		.loc 3 78 0 is_stmt 1
 2307 10f3 EB70     		jmp	.L116
 2308              	.L123:
 2309 10f5 4889C3   		movq	%rax, %rbx
  77:TestXmlTestReporter.cpp **** }
 2310              		.loc 3 77 0
 2311 10f8 488D45C0 		leaq	-64(%rbp), %rax
 2312 10fc 4889C7   		movq	%rax, %rdi
 2313 10ff E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 2313      00
 2314 1104 4889D8   		movq	%rbx, %rax
 2315 1107 EB00     		jmp	.L118
 2316              	.L122:
 2317              	.L118:
 2318 1109 4889C7   		movq	%rax, %rdi
 2319 110c E8000000 		call	__cxa_begin_catch@PLT
 2319      00
 2320              	.LEHB68:
 2321 1111 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2321      00
 2322 1116 488B18   		movq	(%rax), %rbx
 2323 1119 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2323      00
  77:TestXmlTestReporter.cpp **** }
 2324              		.loc 3 77 0 is_stmt 0 discriminator 12
 2325 111e 488B08   		movq	(%rax), %rcx
 2326 1121 488D45A0 		leaq	-96(%rbp), %rax
 2327 1125 BA4D0000 		movl	$77, %edx
 2327      00
 2328 112a 4889CE   		movq	%rcx, %rsi
 2329 112d 4889C7   		movq	%rax, %rdi
 2330 1130 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2330      00
  77:TestXmlTestReporter.cpp **** }
 2331              		.loc 3 77 0 discriminator 16
 2332 1135 488D45A0 		leaq	-96(%rbp), %rax
 2333 1139 488D1500 		leaq	.LC12(%rip), %rdx
 2333      000000
 2334 1140 4889C6   		movq	%rax, %rsi
 2335 1143 4889DF   		movq	%rbx, %rdi
 2336 1146 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2336      00
 2337              	.LEHE68:
 2338              	.LEHB69:
  77:TestXmlTestReporter.cpp **** }
 2339              		.loc 3 77 0 discriminator 18
 2340 114b E8000000 		call	__cxa_end_catch@PLT
 2340      00
 2341              	.LEHE69:
 2342              		.loc 3 78 0 is_stmt 1 discriminator 18
 2343 1150 EB13     		jmp	.L116
 2344              	.L124:
 2345 1152 4889C3   		movq	%rax, %rbx
  77:TestXmlTestReporter.cpp **** }
 2346              		.loc 3 77 0
 2347 1155 E8000000 		call	__cxa_end_catch@PLT
 2347      00
 2348 115a 4889D8   		movq	%rbx, %rax
 2349 115d 4889C7   		movq	%rax, %rdi
 2350              	.LEHB70:
 2351 1160 E8000000 		call	_Unwind_Resume@PLT
 2351      00
 2352              	.LEHE70:
 2353              	.L116:
 2354              		.loc 3 78 0
 2355 1165 488B45E8 		movq	-24(%rbp), %rax
 2356 1169 64483304 		xorq	%fs:40, %rax
 2356      25280000 
 2356      00
 2357 1172 7405     		je	.L121
 2358 1174 E8000000 		call	__stack_chk_fail@PLT
 2358      00
 2359              	.L121:
 2360 1179 4883C478 		addq	$120, %rsp
 2361 117d 5B       		popq	%rbx
 2362 117e 5D       		popq	%rbp
 2363              		.cfi_def_cfa 7, 8
 2364 117f C3       		ret
 2365              		.cfi_endproc
 2366              	.LFE1393:
 2367              		.section	.gcc_except_table
 2368              		.align 4
 2369              	.LLSDA1393:
 2370 01b8 FF       		.byte	0xff
 2371 01b9 9B       		.byte	0x9b
 2372 01ba 31       		.uleb128 .LLSDATT1393-.LLSDATTD1393
 2373              	.LLSDATTD1393:
 2374 01bb 01       		.byte	0x1
 2375 01bc 24       		.uleb128 .LLSDACSE1393-.LLSDACSB1393
 2376              	.LLSDACSB1393:
 2377 01bd 40       		.uleb128 .LEHB64-.LFB1393
 2378 01be 05       		.uleb128 .LEHE64-.LEHB64
 2379 01bf 00       		.uleb128 0
 2380 01c0 00       		.uleb128 0
 2381 01c1 50       		.uleb128 .LEHB65-.LFB1393
 2382 01c2 2F       		.uleb128 .LEHE65-.LEHB65
 2383 01c3 BD01     		.uleb128 .L122-.LFB1393
 2384 01c5 01       		.uleb128 0x1
 2385 01c6 7F       		.uleb128 .LEHB66-.LFB1393
 2386 01c7 1C       		.uleb128 .LEHE66-.LEHB66
 2387 01c8 A901     		.uleb128 .L123-.LFB1393
 2388 01ca 03       		.uleb128 0x3
 2389 01cb A201     		.uleb128 .LEHB67-.LFB1393
 2390 01cd 05       		.uleb128 .LEHE67-.LEHB67
 2391 01ce BD01     		.uleb128 .L122-.LFB1393
 2392 01d0 01       		.uleb128 0x1
 2393 01d1 C501     		.uleb128 .LEHB68-.LFB1393
 2394 01d3 3A       		.uleb128 .LEHE68-.LEHB68
 2395 01d4 8602     		.uleb128 .L124-.LFB1393
 2396 01d6 00       		.uleb128 0
 2397 01d7 FF01     		.uleb128 .LEHB69-.LFB1393
 2398 01d9 05       		.uleb128 .LEHE69-.LEHB69
 2399 01da 00       		.uleb128 0
 2400 01db 00       		.uleb128 0
 2401 01dc 9402     		.uleb128 .LEHB70-.LFB1393
 2402 01de 05       		.uleb128 .LEHE70-.LEHB70
 2403 01df 00       		.uleb128 0
 2404 01e0 00       		.uleb128 0
 2405              	.LLSDACSE1393:
 2406 01e1 01       		.byte	0x1
 2407 01e2 00       		.byte	0
 2408 01e3 00       		.byte	0
 2409 01e4 7D       		.byte	0x7d
 2410 01e5 000000   		.align 4
 2411 01e8 00000000 		.long	0
 2412              	
 2413              	.LLSDATT1393:
 2414              		.text
 2416              		.align 2
 2418              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC2ERKN8UnitTe
 2419              	.LFB1395:
  79:TestXmlTestReporter.cpp **** 
  80:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, SingleSuccessfulTestReportSummaryFormat)
 2420              		.loc 3 80 0
 2421              		.cfi_startproc
 2422 1180 55       		pushq	%rbp
 2423              		.cfi_def_cfa_offset 16
 2424              		.cfi_offset 6, -16
 2425 1181 4889E5   		movq	%rsp, %rbp
 2426              		.cfi_def_cfa_register 6
 2427 1184 4883EC10 		subq	$16, %rsp
 2428 1188 48897DF8 		movq	%rdi, -8(%rbp)
 2429 118c 488975F0 		movq	%rsi, -16(%rbp)
 2430              	.LBB41:
 2431              		.loc 3 80 0
 2432 1190 488B45F8 		movq	-8(%rbp), %rax
 2433 1194 4889C7   		movq	%rax, %rdi
 2434 1197 E864EEFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 2434      FF
 2435 119c 488B45F8 		movq	-8(%rbp), %rax
 2436 11a0 488B55F0 		movq	-16(%rbp), %rdx
 2437 11a4 488990A0 		movq	%rdx, 416(%rax)
 2437      010000
 2438              	.LBE41:
 2439 11ab 90       		nop
 2440 11ac C9       		leave
 2441              		.cfi_def_cfa 7, 8
 2442 11ad C3       		ret
 2443              		.cfi_endproc
 2444              	.LFE1395:
 2446              		.set	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8
 2447              		.section	.rodata
 2448 03a5 000000   		.align 8
 2449              	.LC23:
 2450 03a8 53696E67 		.string	"SingleSuccessfulTestReportSummaryFormat"
 2450      6C655375 
 2450      63636573 
 2450      7366756C 
 2450      54657374 
 2451              		.text
 2452              		.align 2
 2454              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC2Ev:
 2455              	.LFB1398:
 2456              		.loc 3 80 0
 2457              		.cfi_startproc
 2458 11ae 55       		pushq	%rbp
 2459              		.cfi_def_cfa_offset 16
 2460              		.cfi_offset 6, -16
 2461 11af 4889E5   		movq	%rsp, %rbp
 2462              		.cfi_def_cfa_register 6
 2463 11b2 53       		pushq	%rbx
 2464 11b3 4883EC18 		subq	$24, %rsp
 2465              		.cfi_offset 3, -24
 2466 11b7 48897DE8 		movq	%rdi, -24(%rbp)
 2467              	.LBB42:
 2468              		.loc 3 80 0
 2469 11bb 488B5DE8 		movq	-24(%rbp), %rbx
 2470 11bf E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 2470      00
 2471 11c4 41B85000 		movl	$80, %r8d
 2471      0000
 2472 11ca 488D0D00 		leaq	.LC1(%rip), %rcx
 2472      000000
 2473 11d1 4889C2   		movq	%rax, %rdx
 2474 11d4 488D3500 		leaq	.LC23(%rip), %rsi
 2474      000000
 2475 11db 4889DF   		movq	%rbx, %rdi
 2476 11de E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 2476      00
 2477 11e3 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE(%r
 2477      000000
 2478 11ea 488B45E8 		movq	-24(%rbp), %rax
 2479 11ee 488910   		movq	%rdx, (%rax)
 2480              	.LBE42:
 2481 11f1 90       		nop
 2482 11f2 4883C418 		addq	$24, %rsp
 2483 11f6 5B       		popq	%rbx
 2484 11f7 5D       		popq	%rbp
 2485              		.cfi_def_cfa 7, 8
 2486 11f8 C3       		ret
 2487              		.cfi_endproc
 2488              	.LFE1398:
 2490              		.set	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev,_ZN1
 2491              		.local	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanc
 2492              		.comm	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstance
 2493              		.local	_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 2494              		.comm	_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE,1,1
 2495 11f9 90       		.align 2
 2497              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD2Ev:
 2498              	.LFB1402:
 2499              		.loc 3 80 0
 2500              		.cfi_startproc
 2501 11fa 55       		pushq	%rbp
 2502              		.cfi_def_cfa_offset 16
 2503              		.cfi_offset 6, -16
 2504 11fb 4889E5   		movq	%rsp, %rbp
 2505              		.cfi_def_cfa_register 6
 2506 11fe 4883EC10 		subq	$16, %rsp
 2507 1202 48897DF8 		movq	%rdi, -8(%rbp)
 2508              	.LBB43:
 2509              		.loc 3 80 0
 2510 1206 488B45F8 		movq	-8(%rbp), %rax
 2511 120a 4889C7   		movq	%rax, %rdi
 2512 120d E84AEEFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 2512      FF
 2513              	.LBE43:
 2514 1212 90       		nop
 2515 1213 C9       		leave
 2516              		.cfi_def_cfa 7, 8
 2517 1214 C3       		ret
 2518              		.cfi_endproc
 2519              	.LFE1402:
 2521              		.set	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev,_Z
 2522 1215 90       		.align 2
 2524              	_ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImplEv:
 2525              	.LFB1400:
 2526              		.loc 3 80 0
 2527              		.cfi_startproc
 2528              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2529              		.cfi_lsda 0x1b,.LLSDA1400
 2530 1216 55       		pushq	%rbp
 2531              		.cfi_def_cfa_offset 16
 2532              		.cfi_offset 6, -16
 2533 1217 4889E5   		movq	%rsp, %rbp
 2534              		.cfi_def_cfa_register 6
 2535 121a 4155     		pushq	%r13
 2536 121c 4154     		pushq	%r12
 2537 121e 53       		pushq	%rbx
 2538 121f 4881EC08 		subq	$520, %rsp
 2538      020000
 2539              		.cfi_offset 13, -24
 2540              		.cfi_offset 12, -32
 2541              		.cfi_offset 3, -40
 2542 1226 4889BDE8 		movq	%rdi, -536(%rbp)
 2542      FDFFFF
 2543              		.loc 3 80 0
 2544 122d 64488B04 		movq	%fs:40, %rax
 2544      25280000 
 2544      00
 2545 1236 488945D8 		movq	%rax, -40(%rbp)
 2546 123a 31C0     		xorl	%eax, %eax
 2547 123c C685FFFD 		movb	$0, -513(%rbp)
 2547      FFFF00
 2548              	.LBB44:
 2549 1243 488B85E8 		movq	-536(%rbp), %rax
 2549      FDFFFF
 2550 124a 488D5008 		leaq	8(%rax), %rdx
 2551 124e 488D8530 		leaq	-464(%rbp), %rax
 2551      FEFFFF
 2552 1255 4889D6   		movq	%rdx, %rsi
 2553 1258 4889C7   		movq	%rax, %rdi
 2554              	.LEHB71:
 2555 125b E820FFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8
 2555      FF
 2556              	.LEHE71:
 2557              		.loc 3 80 0 is_stmt 0 discriminator 1
 2558 1260 C685FFFD 		movb	$1, -513(%rbp)
 2558      FFFF01
 2559 1267 488B85E8 		movq	-536(%rbp), %rax
 2559      FDFFFF
 2560 126e 488D5008 		leaq	8(%rax), %rdx
 2561 1272 488D8530 		leaq	-464(%rbp), %rax
 2561      FEFFFF
 2562 1279 4889D6   		movq	%rdx, %rsi
 2563 127c 4889C7   		movq	%rax, %rdi
 2564              	.LEHB72:
 2565 127f E81A2300 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSu
 2565      00
 2566              	.LEHE72:
 2567              		.loc 3 80 0 discriminator 3
 2568 1284 488D8530 		leaq	-464(%rbp), %rax
 2568      FEFFFF
 2569 128b 4889C7   		movq	%rax, %rdi
 2570              	.LEHB73:
 2571 128e E867FFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
 2571      FF
 2572              	.LEHE73:
 2573              	.LBE44:
 2574              		.loc 3 80 0
 2575 1293 E9690200 		jmp	.L128
 2575      00
 2576              	.L143:
 2577 1298 4989C4   		movq	%rax, %r12
 2578 129b 4889D3   		movq	%rdx, %rbx
 2579              	.LBB45:
 2580 129e 488D8530 		leaq	-464(%rbp), %rax
 2580      FEFFFF
 2581 12a5 4889C7   		movq	%rax, %rdi
 2582 12a8 E84DFFFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
 2582      FF
 2583 12ad 4C89E0   		movq	%r12, %rax
 2584 12b0 4889DA   		movq	%rbx, %rdx
 2585 12b3 EB00     		jmp	.L130
 2586              	.L142:
 2587              	.L130:
 2588 12b5 4883FA01 		cmpq	$1, %rdx
 2589 12b9 740F     		je	.L132
 2590 12bb 4883FA02 		cmpq	$2, %rdx
 2591 12bf 0F84A700 		je	.L133
 2591      0000
 2592 12c5 E94A0100 		jmp	.L148
 2592      00
 2593              	.L132:
 2594              	.LBE45:
 2595              	.LBB46:
 2596 12ca 4889C7   		movq	%rax, %rdi
 2597 12cd E8000000 		call	__cxa_begin_catch@PLT
 2597      00
 2598 12d2 48898508 		movq	%rax, -504(%rbp)
 2598      FEFFFF
 2599              	.LEHB74:
 2600 12d9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2600      00
 2601 12de 488B18   		movq	(%rax), %rbx
 2602 12e1 488B8508 		movq	-504(%rbp), %rax
 2602      FEFFFF
 2603 12e8 488B00   		movq	(%rax), %rax
 2604 12eb 4883C010 		addq	$16, %rax
 2605 12ef 488B00   		movq	(%rax), %rax
 2606 12f2 488B9508 		movq	-504(%rbp), %rdx
 2606      FEFFFF
 2607 12f9 4889D7   		movq	%rdx, %rdi
 2608 12fc FFD0     		call	*%rax
 2609              	.LVL6:
 2610 12fe 4989C4   		movq	%rax, %r12
 2611 1301 488B8508 		movq	-504(%rbp), %rax
 2611      FEFFFF
 2612 1308 4889C7   		movq	%rax, %rdi
 2613 130b E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 2613      00
 2614              		.loc 3 80 0 discriminator 5
 2615 1310 4189C5   		movl	%eax, %r13d
 2616 1313 488B8508 		movq	-504(%rbp), %rax
 2616      FEFFFF
 2617 131a 4889C7   		movq	%rax, %rdi
 2618 131d E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 2618      00
 2619              		.loc 3 80 0 discriminator 7
 2620 1322 4889C1   		movq	%rax, %rcx
 2621 1325 488B85E8 		movq	-536(%rbp), %rax
 2621      FDFFFF
 2622 132c 488B5008 		movq	8(%rax), %rdx
 2623 1330 488B85E8 		movq	-536(%rbp), %rax
 2623      FDFFFF
 2624 1337 488B7010 		movq	16(%rax), %rsi
 2625 133b 488D8510 		leaq	-496(%rbp), %rax
 2625      FEFFFF
 2626 1342 4589E8   		movl	%r13d, %r8d
 2627 1345 4889C7   		movq	%rax, %rdi
 2628 1348 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 2628      00
 2629              		.loc 3 80 0 discriminator 11
 2630 134d 488D8510 		leaq	-496(%rbp), %rax
 2630      FEFFFF
 2631 1354 4C89E2   		movq	%r12, %rdx
 2632 1357 4889C6   		movq	%rax, %rsi
 2633 135a 4889DF   		movq	%rbx, %rdi
 2634 135d E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2634      00
 2635              	.LEHE74:
 2636              		.loc 3 80 0 discriminator 13
 2637 1362 E8000000 		call	__cxa_end_catch@PLT
 2637      00
 2638              	.LBE46:
 2639 1367 E9950100 		jmp	.L128
 2639      00
 2640              	.L133:
 2641              	.LBB47:
 2642              		.loc 3 80 0
 2643 136c 4889C7   		movq	%rax, %rdi
 2644 136f E8000000 		call	__cxa_begin_catch@PLT
 2644      00
 2645 1374 48898500 		movq	%rax, -512(%rbp)
 2645      FEFFFF
 2646              	.LBB48:
 2647 137b 488D8530 		leaq	-464(%rbp), %rax
 2647      FEFFFF
 2648 1382 4889C7   		movq	%rax, %rdi
 2649              	.LEHB75:
 2650 1385 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 2650      00
 2651              	.LEHE75:
 2652              		.loc 3 80 0 discriminator 15
 2653 138a 488D8530 		leaq	-464(%rbp), %rax
 2653      FEFFFF
 2654 1391 488D3500 		leaq	.LC3(%rip), %rsi
 2654      000000
 2655 1398 4889C7   		movq	%rax, %rdi
 2656              	.LEHB76:
 2657 139b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2657      00
 2658 13a0 4889C3   		movq	%rax, %rbx
 2659 13a3 488B8500 		movq	-512(%rbp), %rax
 2659      FEFFFF
 2660 13aa 488B00   		movq	(%rax), %rax
 2661 13ad 4883C010 		addq	$16, %rax
 2662 13b1 488B00   		movq	(%rax), %rax
 2663 13b4 488B9500 		movq	-512(%rbp), %rdx
 2663      FEFFFF
 2664 13bb 4889D7   		movq	%rdx, %rdi
 2665 13be FFD0     		call	*%rax
 2666              	.LVL7:
 2667 13c0 4889C6   		movq	%rax, %rsi
 2668 13c3 4889DF   		movq	%rbx, %rdi
 2669 13c6 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2669      00
 2670              		.loc 3 80 0 discriminator 19
 2671 13cb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2671      00
 2672 13d0 488B18   		movq	(%rax), %rbx
 2673 13d3 488D8530 		leaq	-464(%rbp), %rax
 2673      FEFFFF
 2674 13da 4889C7   		movq	%rax, %rdi
 2675 13dd E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 2675      00
 2676              		.loc 3 80 0 discriminator 21
 2677 13e2 4889C2   		movq	%rax, %rdx
 2678 13e5 488B85E8 		movq	-536(%rbp), %rax
 2678      FDFFFF
 2679 13ec 4883C008 		addq	$8, %rax
 2680 13f0 4889C6   		movq	%rax, %rsi
 2681 13f3 4889DF   		movq	%rbx, %rdi
 2682 13f6 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2682      00
 2683              	.LEHE76:
 2684              		.loc 3 80 0 discriminator 25
 2685 13fb 488D8530 		leaq	-464(%rbp), %rax
 2685      FEFFFF
 2686 1402 4889C7   		movq	%rax, %rdi
 2687              	.LEHB77:
 2688 1405 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2688      00
 2689              	.LEHE77:
 2690              	.LBE48:
 2691              		.loc 3 80 0 discriminator 26
 2692 140a E8000000 		call	__cxa_end_catch@PLT
 2692      00
 2693              	.LBE47:
 2694 140f E9ED0000 		jmp	.L128
 2694      00
 2695              	.L148:
 2696              		.loc 3 80 0
 2697 1414 4889C7   		movq	%rax, %rdi
 2698 1417 E8000000 		call	__cxa_begin_catch@PLT
 2698      00
 2699 141c 80BDFFFD 		cmpb	$0, -513(%rbp)
 2699      FFFF00
 2700 1423 7445     		je	.L135
 2701              	.LEHB78:
 2702              		.loc 3 80 0 discriminator 28
 2703 1425 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2703      00
 2704 142a 488B18   		movq	(%rax), %rbx
 2705 142d 488B85E8 		movq	-536(%rbp), %rax
 2705      FDFFFF
 2706 1434 488D4808 		leaq	8(%rax), %rcx
 2707 1438 488D8510 		leaq	-496(%rbp), %rax
 2707      FEFFFF
 2708 143f BA500000 		movl	$80, %edx
 2708      00
 2709 1444 4889CE   		movq	%rcx, %rsi
 2710 1447 4889C7   		movq	%rax, %rdi
 2711 144a E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2711      00
 2712              		.loc 3 80 0 discriminator 33
 2713 144f 488D8510 		leaq	-496(%rbp), %rax
 2713      FEFFFF
 2714 1456 488D1500 		leaq	.LC4(%rip), %rdx
 2714      000000
 2715 145d 4889C6   		movq	%rax, %rsi
 2716 1460 4889DF   		movq	%rbx, %rdi
 2717 1463 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2717      00
 2718 1468 EB43     		jmp	.L136
 2719              	.L135:
 2720              		.loc 3 80 0 discriminator 29
 2721 146a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2721      00
 2722 146f 488B18   		movq	(%rax), %rbx
 2723 1472 488B85E8 		movq	-536(%rbp), %rax
 2723      FDFFFF
 2724 1479 488D4808 		leaq	8(%rax), %rcx
 2725 147d 488D8510 		leaq	-496(%rbp), %rax
 2725      FEFFFF
 2726 1484 BA500000 		movl	$80, %edx
 2726      00
 2727 1489 4889CE   		movq	%rcx, %rsi
 2728 148c 4889C7   		movq	%rax, %rdi
 2729 148f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2729      00
 2730              		.loc 3 80 0 discriminator 40
 2731 1494 488D8510 		leaq	-496(%rbp), %rax
 2731      FEFFFF
 2732 149b 488D1500 		leaq	.LC5(%rip), %rdx
 2732      000000
 2733 14a2 4889C6   		movq	%rax, %rsi
 2734 14a5 4889DF   		movq	%rbx, %rdi
 2735 14a8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2735      00
 2736              	.LEHE78:
 2737              	.L136:
 2738              	.LEHB79:
 2739              		.loc 3 80 0 discriminator 43
 2740 14ad E8000000 		call	__cxa_end_catch@PLT
 2740      00
 2741 14b2 EB4D     		jmp	.L128
 2742              	.L144:
 2743 14b4 4889C3   		movq	%rax, %rbx
 2744              	.LBB50:
 2745              		.loc 3 80 0
 2746 14b7 E8000000 		call	__cxa_end_catch@PLT
 2746      00
 2747 14bc 4889D8   		movq	%rbx, %rax
 2748 14bf 4889C7   		movq	%rax, %rdi
 2749 14c2 E8000000 		call	_Unwind_Resume@PLT
 2749      00
 2750              	.LEHE79:
 2751              	.L146:
 2752 14c7 4889C3   		movq	%rax, %rbx
 2753              	.LBE50:
 2754              	.LBB51:
 2755              	.LBB49:
 2756 14ca 488D8530 		leaq	-464(%rbp), %rax
 2756      FEFFFF
 2757 14d1 4889C7   		movq	%rax, %rdi
 2758 14d4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 2758      00
 2759 14d9 EB03     		jmp	.L139
 2760              	.L145:
 2761 14db 4889C3   		movq	%rax, %rbx
 2762              	.L139:
 2763              	.LBE49:
 2764 14de E8000000 		call	__cxa_end_catch@PLT
 2764      00
 2765 14e3 4889D8   		movq	%rbx, %rax
 2766 14e6 4889C7   		movq	%rax, %rdi
 2767              	.LEHB80:
 2768 14e9 E8000000 		call	_Unwind_Resume@PLT
 2768      00
 2769              	.LEHE80:
 2770              	.L147:
 2771 14ee 4889C3   		movq	%rax, %rbx
 2772              	.LBE51:
 2773 14f1 E8000000 		call	__cxa_end_catch@PLT
 2773      00
 2774 14f6 4889D8   		movq	%rbx, %rax
 2775 14f9 4889C7   		movq	%rax, %rdi
 2776              	.LEHB81:
 2777 14fc E8000000 		call	_Unwind_Resume@PLT
 2777      00
 2778              	.LEHE81:
 2779              	.L128:
 2780 1501 488B45D8 		movq	-40(%rbp), %rax
 2781 1505 64483304 		xorq	%fs:40, %rax
 2781      25280000 
 2781      00
 2782 150e 7405     		je	.L141
 2783 1510 E8000000 		call	__stack_chk_fail@PLT
 2783      00
 2784              	.L141:
 2785 1515 4881C408 		addq	$520, %rsp
 2785      020000
 2786 151c 5B       		popq	%rbx
 2787 151d 415C     		popq	%r12
 2788 151f 415D     		popq	%r13
 2789 1521 5D       		popq	%rbp
 2790              		.cfi_def_cfa 7, 8
 2791 1522 C3       		ret
 2792              		.cfi_endproc
 2793              	.LFE1400:
 2794              		.section	.gcc_except_table
 2795              		.align 4
 2796              	.LLSDA1400:
 2797 01ec FF       		.byte	0xff
 2798 01ed 9B       		.byte	0x9b
 2799 01ee 55       		.uleb128 .LLSDATT1400-.LLSDATTD1400
 2800              	.LLSDATTD1400:
 2801 01ef 01       		.byte	0x1
 2802 01f0 3E       		.uleb128 .LLSDACSE1400-.LLSDACSB1400
 2803              	.LLSDACSB1400:
 2804 01f1 45       		.uleb128 .LEHB71-.LFB1400
 2805 01f2 05       		.uleb128 .LEHE71-.LEHB71
 2806 01f3 9F01     		.uleb128 .L142-.LFB1400
 2807 01f5 05       		.uleb128 0x5
 2808 01f6 69       		.uleb128 .LEHB72-.LFB1400
 2809 01f7 05       		.uleb128 .LEHE72-.LEHB72
 2810 01f8 8201     		.uleb128 .L143-.LFB1400
 2811 01fa 07       		.uleb128 0x7
 2812 01fb 78       		.uleb128 .LEHB73-.LFB1400
 2813 01fc 05       		.uleb128 .LEHE73-.LEHB73
 2814 01fd 9F01     		.uleb128 .L142-.LFB1400
 2815 01ff 05       		.uleb128 0x5
 2816 0200 C301     		.uleb128 .LEHB74-.LFB1400
 2817 0202 8901     		.uleb128 .LEHE74-.LEHB74
 2818 0204 9E05     		.uleb128 .L144-.LFB1400
 2819 0206 00       		.uleb128 0
 2820 0207 EF02     		.uleb128 .LEHB75-.LFB1400
 2821 0209 05       		.uleb128 .LEHE75-.LEHB75
 2822 020a C505     		.uleb128 .L145-.LFB1400
 2823 020c 00       		.uleb128 0
 2824 020d 8503     		.uleb128 .LEHB76-.LFB1400
 2825 020f 60       		.uleb128 .LEHE76-.LEHB76
 2826 0210 B105     		.uleb128 .L146-.LFB1400
 2827 0212 00       		.uleb128 0
 2828 0213 EF03     		.uleb128 .LEHB77-.LFB1400
 2829 0215 05       		.uleb128 .LEHE77-.LEHB77
 2830 0216 C505     		.uleb128 .L145-.LFB1400
 2831 0218 00       		.uleb128 0
 2832 0219 8F04     		.uleb128 .LEHB78-.LFB1400
 2833 021b 8801     		.uleb128 .LEHE78-.LEHB78
 2834 021d D805     		.uleb128 .L147-.LFB1400
 2835 021f 00       		.uleb128 0
 2836 0220 9705     		.uleb128 .LEHB79-.LFB1400
 2837 0222 1A       		.uleb128 .LEHE79-.LEHB79
 2838 0223 00       		.uleb128 0
 2839 0224 00       		.uleb128 0
 2840 0225 D305     		.uleb128 .LEHB80-.LFB1400
 2841 0227 05       		.uleb128 .LEHE80-.LEHB80
 2842 0228 00       		.uleb128 0
 2843 0229 00       		.uleb128 0
 2844 022a E605     		.uleb128 .LEHB81-.LFB1400
 2845 022c 05       		.uleb128 .LEHE81-.LEHB81
 2846 022d 00       		.uleb128 0
 2847 022e 00       		.uleb128 0
 2848              	.LLSDACSE1400:
 2849 022f 03       		.byte	0x3
 2850 0230 00       		.byte	0
 2851 0231 02       		.byte	0x2
 2852 0232 7D       		.byte	0x7d
 2853 0233 01       		.byte	0x1
 2854 0234 7D       		.byte	0x7d
 2855 0235 00       		.byte	0
 2856 0236 7D       		.byte	0x7d
 2857 0237 00       		.align 4
 2858 0238 00000000 		.long	0
 2859              	
 2860 023c 00000000 		.long	DW.ref._ZTISt9exception-.
 2861 0240 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 2862              	.LLSDATT1400:
 2863              		.text
 2865              		.section	.rodata
 2866              		.align 8
 2867              	.LC24:
 2868 03d0 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"0\" failures=\"0\" tim
 2868      6C207665 
 2868      7273696F 
 2868      6E3D2231 
 2868      2E30223F 
 2869              		.text
 2870 1523 90       		.align 2
 2872              	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImplEv:
 2873              	.LFB1404:
  81:TestXmlTestReporter.cpp **** {
 2874              		.loc 3 81 0 is_stmt 1
 2875              		.cfi_startproc
 2876              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2877              		.cfi_lsda 0x1b,.LLSDA1404
 2878 1524 55       		pushq	%rbp
 2879              		.cfi_def_cfa_offset 16
 2880              		.cfi_offset 6, -16
 2881 1525 4889E5   		movq	%rsp, %rbp
 2882              		.cfi_def_cfa_register 6
 2883 1528 53       		pushq	%rbx
 2884 1529 4881EC98 		subq	$152, %rsp
 2884      000000
 2885              		.cfi_offset 3, -24
 2886 1530 4889BD68 		movq	%rdi, -152(%rbp)
 2886      FFFFFF
 2887              		.loc 3 81 0
 2888 1537 64488B04 		movq	%fs:40, %rax
 2888      25280000 
 2888      00
 2889 1540 488945E8 		movq	%rax, -24(%rbp)
 2890 1544 31C0     		xorl	%eax, %eax
  82:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "DefaultSuite", "", 0);
 2891              		.loc 3 82 0
 2892 1546 488D4580 		leaq	-128(%rbp), %rax
 2893 154a 41B80000 		movl	$0, %r8d
 2893      0000
 2894 1550 488D0D00 		leaq	.LC14(%rip), %rcx
 2894      000000
 2895 1557 488D1500 		leaq	.LC0(%rip), %rdx
 2895      000000
 2896 155e 488D3500 		leaq	.LC8(%rip), %rsi
 2896      000000
 2897 1565 4889C7   		movq	%rax, %rdi
 2898              	.LEHB82:
 2899 1568 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 2899      00
  83:TestXmlTestReporter.cpp **** 
  84:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 2900              		.loc 3 84 0
 2901 156d 488B8568 		movq	-152(%rbp), %rax
 2901      FFFFFF
 2902 1574 488D9078 		leaq	376(%rax), %rdx
 2902      010000
 2903 157b 488D4580 		leaq	-128(%rbp), %rax
 2904 157f 4889C6   		movq	%rax, %rsi
 2905 1582 4889D7   		movq	%rdx, %rdi
 2906 1585 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 2906      00
  85:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 0, 0, 0.1f);
 2907              		.loc 3 85 0
 2908 158a 488B8568 		movq	-152(%rbp), %rax
 2908      FFFFFF
 2909 1591 48057801 		addq	$376, %rax
 2909      0000
 2910 1597 F30F1005 		movss	.LC10(%rip), %xmm0
 2910      00000000 
 2911 159f B9000000 		movl	$0, %ecx
 2911      00
 2912 15a4 BA000000 		movl	$0, %edx
 2912      00
 2913 15a9 BE010000 		movl	$1, %esi
 2913      00
 2914 15ae 4889C7   		movq	%rax, %rdi
 2915 15b1 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 2915      00
 2916              	.LEHE82:
  86:TestXmlTestReporter.cpp **** 
  87:TestXmlTestReporter.cpp ****     const char *expected =
 2917              		.loc 3 87 0
 2918 15b6 488D0500 		leaq	.LC24(%rip), %rax
 2918      000000
 2919 15bd 48898578 		movq	%rax, -136(%rbp)
 2919      FFFFFF
 2920              	.LEHB83:
  88:TestXmlTestReporter.cpp **** "<?xml version=\"1.0\"?>"
  89:TestXmlTestReporter.cpp **** "<unittest-results tests=\"1\" failedtests=\"0\" failures=\"0\" time=\"0.1\">"
  90:TestXmlTestReporter.cpp **** "<test suite=\"DefaultSuite\" name=\"TestName\" time=\"0\"/>"
  91:TestXmlTestReporter.cpp **** "</unittest-results>";
  92:TestXmlTestReporter.cpp **** 
  93:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 2921              		.loc 3 93 0
 2922 15c4 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2922      00
 2923 15c9 488B08   		movq	(%rax), %rcx
 2924 15cc 488D45A0 		leaq	-96(%rbp), %rax
 2925 15d0 BA5D0000 		movl	$93, %edx
 2925      00
 2926 15d5 4889CE   		movq	%rcx, %rsi
 2927 15d8 4889C7   		movq	%rax, %rdi
 2928 15db E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2928      00
 2929              		.loc 3 93 0 is_stmt 0 discriminator 2
 2930 15e0 488B9568 		movq	-152(%rbp), %rdx
 2930      FFFFFF
 2931 15e7 488D45C0 		leaq	-64(%rbp), %rax
 2932 15eb 4889D6   		movq	%rdx, %rsi
 2933 15ee 4889C7   		movq	%rax, %rdi
 2934 15f1 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 2934      00
 2935              	.LEHE83:
 2936              	.LEHB84:
 2937              		.loc 3 93 0 discriminator 4
 2938 15f6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2938      00
 2939 15fb 488B00   		movq	(%rax), %rax
 2940 15fe 488D4DA0 		leaq	-96(%rbp), %rcx
 2941 1602 488D55C0 		leaq	-64(%rbp), %rdx
 2942 1606 488DB578 		leaq	-136(%rbp), %rsi
 2942      FFFFFF
 2943 160d 4889C7   		movq	%rax, %rdi
 2944 1610 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 2944      00
 2945              	.LEHE84:
 2946              		.loc 3 93 0 discriminator 8
 2947 1615 488D45C0 		leaq	-64(%rbp), %rax
 2948 1619 4889C7   		movq	%rax, %rdi
 2949              	.LEHB85:
 2950 161c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 2950      00
 2951              	.LEHE85:
  94:TestXmlTestReporter.cpp **** }
 2952              		.loc 3 94 0 is_stmt 1
 2953 1621 EB70     		jmp	.L149
 2954              	.L156:
 2955 1623 4889C3   		movq	%rax, %rbx
  93:TestXmlTestReporter.cpp **** }
 2956              		.loc 3 93 0
 2957 1626 488D45C0 		leaq	-64(%rbp), %rax
 2958 162a 4889C7   		movq	%rax, %rdi
 2959 162d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 2959      00
 2960 1632 4889D8   		movq	%rbx, %rax
 2961 1635 EB00     		jmp	.L151
 2962              	.L155:
 2963              	.L151:
 2964 1637 4889C7   		movq	%rax, %rdi
 2965 163a E8000000 		call	__cxa_begin_catch@PLT
 2965      00
 2966              	.LEHB86:
 2967 163f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 2967      00
 2968 1644 488B18   		movq	(%rax), %rbx
 2969 1647 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 2969      00
  93:TestXmlTestReporter.cpp **** }
 2970              		.loc 3 93 0 is_stmt 0 discriminator 12
 2971 164c 488B08   		movq	(%rax), %rcx
 2972 164f 488D45A0 		leaq	-96(%rbp), %rax
 2973 1653 BA5D0000 		movl	$93, %edx
 2973      00
 2974 1658 4889CE   		movq	%rcx, %rsi
 2975 165b 4889C7   		movq	%rax, %rdi
 2976 165e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 2976      00
  93:TestXmlTestReporter.cpp **** }
 2977              		.loc 3 93 0 discriminator 16
 2978 1663 488D45A0 		leaq	-96(%rbp), %rax
 2979 1667 488D1500 		leaq	.LC12(%rip), %rdx
 2979      000000
 2980 166e 4889C6   		movq	%rax, %rsi
 2981 1671 4889DF   		movq	%rbx, %rdi
 2982 1674 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 2982      00
 2983              	.LEHE86:
 2984              	.LEHB87:
  93:TestXmlTestReporter.cpp **** }
 2985              		.loc 3 93 0 discriminator 18
 2986 1679 E8000000 		call	__cxa_end_catch@PLT
 2986      00
 2987              	.LEHE87:
 2988              		.loc 3 94 0 is_stmt 1 discriminator 18
 2989 167e EB13     		jmp	.L149
 2990              	.L157:
 2991 1680 4889C3   		movq	%rax, %rbx
  93:TestXmlTestReporter.cpp **** }
 2992              		.loc 3 93 0
 2993 1683 E8000000 		call	__cxa_end_catch@PLT
 2993      00
 2994 1688 4889D8   		movq	%rbx, %rax
 2995 168b 4889C7   		movq	%rax, %rdi
 2996              	.LEHB88:
 2997 168e E8000000 		call	_Unwind_Resume@PLT
 2997      00
 2998              	.LEHE88:
 2999              	.L149:
 3000              		.loc 3 94 0
 3001 1693 488B45E8 		movq	-24(%rbp), %rax
 3002 1697 64483304 		xorq	%fs:40, %rax
 3002      25280000 
 3002      00
 3003 16a0 7405     		je	.L154
 3004 16a2 E8000000 		call	__stack_chk_fail@PLT
 3004      00
 3005              	.L154:
 3006 16a7 4881C498 		addq	$152, %rsp
 3006      000000
 3007 16ae 5B       		popq	%rbx
 3008 16af 5D       		popq	%rbp
 3009              		.cfi_def_cfa 7, 8
 3010 16b0 C3       		ret
 3011              		.cfi_endproc
 3012              	.LFE1404:
 3013              		.section	.gcc_except_table
 3014              		.align 4
 3015              	.LLSDA1404:
 3016 0244 FF       		.byte	0xff
 3017 0245 9B       		.byte	0x9b
 3018 0246 31       		.uleb128 .LLSDATT1404-.LLSDATTD1404
 3019              	.LLSDATTD1404:
 3020 0247 01       		.byte	0x1
 3021 0248 26       		.uleb128 .LLSDACSE1404-.LLSDACSB1404
 3022              	.LLSDACSB1404:
 3023 0249 44       		.uleb128 .LEHB82-.LFB1404
 3024 024a 4E       		.uleb128 .LEHE82-.LEHB82
 3025 024b 00       		.uleb128 0
 3026 024c 00       		.uleb128 0
 3027 024d A001     		.uleb128 .LEHB83-.LFB1404
 3028 024f 32       		.uleb128 .LEHE83-.LEHB83
 3029 0250 9302     		.uleb128 .L155-.LFB1404
 3030 0252 01       		.uleb128 0x1
 3031 0253 D201     		.uleb128 .LEHB84-.LFB1404
 3032 0255 1F       		.uleb128 .LEHE84-.LEHB84
 3033 0256 FF01     		.uleb128 .L156-.LFB1404
 3034 0258 03       		.uleb128 0x3
 3035 0259 F801     		.uleb128 .LEHB85-.LFB1404
 3036 025b 05       		.uleb128 .LEHE85-.LEHB85
 3037 025c 9302     		.uleb128 .L155-.LFB1404
 3038 025e 01       		.uleb128 0x1
 3039 025f 9B02     		.uleb128 .LEHB86-.LFB1404
 3040 0261 3A       		.uleb128 .LEHE86-.LEHB86
 3041 0262 DC02     		.uleb128 .L157-.LFB1404
 3042 0264 00       		.uleb128 0
 3043 0265 D502     		.uleb128 .LEHB87-.LFB1404
 3044 0267 05       		.uleb128 .LEHE87-.LEHB87
 3045 0268 00       		.uleb128 0
 3046 0269 00       		.uleb128 0
 3047 026a EA02     		.uleb128 .LEHB88-.LFB1404
 3048 026c 05       		.uleb128 .LEHE88-.LEHB88
 3049 026d 00       		.uleb128 0
 3050 026e 00       		.uleb128 0
 3051              	.LLSDACSE1404:
 3052 026f 01       		.byte	0x1
 3053 0270 00       		.byte	0
 3054 0271 00       		.byte	0
 3055 0272 7D       		.byte	0x7d
 3056 0273 00       		.align 4
 3057 0274 00000000 		.long	0
 3058              	
 3059              	.LLSDATT1404:
 3060              		.text
 3062 16b1 90       		.align 2
 3064              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC2ERKN8UnitTest11
 3065              	.LFB1406:
  95:TestXmlTestReporter.cpp **** 
  96:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, SingleFailedTestReportSummaryFormat)
 3066              		.loc 3 96 0
 3067              		.cfi_startproc
 3068 16b2 55       		pushq	%rbp
 3069              		.cfi_def_cfa_offset 16
 3070              		.cfi_offset 6, -16
 3071 16b3 4889E5   		movq	%rsp, %rbp
 3072              		.cfi_def_cfa_register 6
 3073 16b6 4883EC10 		subq	$16, %rsp
 3074 16ba 48897DF8 		movq	%rdi, -8(%rbp)
 3075 16be 488975F0 		movq	%rsi, -16(%rbp)
 3076              	.LBB52:
 3077              		.loc 3 96 0
 3078 16c2 488B45F8 		movq	-8(%rbp), %rax
 3079 16c6 4889C7   		movq	%rax, %rdi
 3080 16c9 E832E9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 3080      FF
 3081 16ce 488B45F8 		movq	-8(%rbp), %rax
 3082 16d2 488B55F0 		movq	-16(%rbp), %rdx
 3083 16d6 488990A0 		movq	%rdx, 416(%rax)
 3083      010000
 3084              	.LBE52:
 3085 16dd 90       		nop
 3086 16de C9       		leave
 3087              		.cfi_def_cfa 7, 8
 3088 16df C3       		ret
 3089              		.cfi_endproc
 3090              	.LFE1406:
 3092              		.set	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8Unit
 3093              		.section	.rodata
 3094 0472 00000000 		.align 8
 3094      0000
 3095              	.LC25:
 3096 0478 53696E67 		.string	"SingleFailedTestReportSummaryFormat"
 3096      6C654661 
 3096      696C6564 
 3096      54657374 
 3096      5265706F 
 3097              		.text
 3098              		.align 2
 3100              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC2Ev:
 3101              	.LFB1409:
 3102              		.loc 3 96 0
 3103              		.cfi_startproc
 3104 16e0 55       		pushq	%rbp
 3105              		.cfi_def_cfa_offset 16
 3106              		.cfi_offset 6, -16
 3107 16e1 4889E5   		movq	%rsp, %rbp
 3108              		.cfi_def_cfa_register 6
 3109 16e4 53       		pushq	%rbx
 3110 16e5 4883EC18 		subq	$24, %rsp
 3111              		.cfi_offset 3, -24
 3112 16e9 48897DE8 		movq	%rdi, -24(%rbp)
 3113              	.LBB53:
 3114              		.loc 3 96 0
 3115 16ed 488B5DE8 		movq	-24(%rbp), %rbx
 3116 16f1 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3116      00
 3117 16f6 41B86000 		movl	$96, %r8d
 3117      0000
 3118 16fc 488D0D00 		leaq	.LC1(%rip), %rcx
 3118      000000
 3119 1703 4889C2   		movq	%rax, %rdx
 3120 1706 488D3500 		leaq	.LC25(%rip), %rsi
 3120      000000
 3121 170d 4889DF   		movq	%rbx, %rdi
 3122 1710 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 3122      00
 3123 1715 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE(%rip),
 3123      000000
 3124 171c 488B45E8 		movq	-24(%rbp), %rax
 3125 1720 488910   		movq	%rdx, (%rax)
 3126              	.LBE53:
 3127 1723 90       		nop
 3128 1724 4883C418 		addq	$24, %rsp
 3129 1728 5B       		popq	%rbx
 3130 1729 5D       		popq	%rbp
 3131              		.cfi_def_cfa 7, 8
 3132 172a C3       		ret
 3133              		.cfi_endproc
 3134              	.LFE1409:
 3136              		.set	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev,_ZN12_GL
 3137              		.local	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE
 3138              		.comm	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE,56
 3139              		.local	_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 3140              		.comm	_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE,1,1
 3141 172b 90       		.align 2
 3143              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD2Ev:
 3144              	.LFB1413:
 3145              		.loc 3 96 0
 3146              		.cfi_startproc
 3147 172c 55       		pushq	%rbp
 3148              		.cfi_def_cfa_offset 16
 3149              		.cfi_offset 6, -16
 3150 172d 4889E5   		movq	%rsp, %rbp
 3151              		.cfi_def_cfa_register 6
 3152 1730 4883EC10 		subq	$16, %rsp
 3153 1734 48897DF8 		movq	%rdi, -8(%rbp)
 3154              	.LBB54:
 3155              		.loc 3 96 0
 3156 1738 488B45F8 		movq	-8(%rbp), %rax
 3157 173c 4889C7   		movq	%rax, %rdi
 3158 173f E818E9FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 3158      FF
 3159              	.LBE54:
 3160 1744 90       		nop
 3161 1745 C9       		leave
 3162              		.cfi_def_cfa 7, 8
 3163 1746 C3       		ret
 3164              		.cfi_endproc
 3165              	.LFE1413:
 3167              		.set	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev,_ZN12_
 3168 1747 90       		.align 2
 3170              	_ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv:
 3171              	.LFB1411:
 3172              		.loc 3 96 0
 3173              		.cfi_startproc
 3174              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3175              		.cfi_lsda 0x1b,.LLSDA1411
 3176 1748 55       		pushq	%rbp
 3177              		.cfi_def_cfa_offset 16
 3178              		.cfi_offset 6, -16
 3179 1749 4889E5   		movq	%rsp, %rbp
 3180              		.cfi_def_cfa_register 6
 3181 174c 4155     		pushq	%r13
 3182 174e 4154     		pushq	%r12
 3183 1750 53       		pushq	%rbx
 3184 1751 4881EC08 		subq	$520, %rsp
 3184      020000
 3185              		.cfi_offset 13, -24
 3186              		.cfi_offset 12, -32
 3187              		.cfi_offset 3, -40
 3188 1758 4889BDE8 		movq	%rdi, -536(%rbp)
 3188      FDFFFF
 3189              		.loc 3 96 0
 3190 175f 64488B04 		movq	%fs:40, %rax
 3190      25280000 
 3190      00
 3191 1768 488945D8 		movq	%rax, -40(%rbp)
 3192 176c 31C0     		xorl	%eax, %eax
 3193 176e C685FFFD 		movb	$0, -513(%rbp)
 3193      FFFF00
 3194              	.LBB55:
 3195 1775 488B85E8 		movq	-536(%rbp), %rax
 3195      FDFFFF
 3196 177c 488D5008 		leaq	8(%rax), %rdx
 3197 1780 488D8530 		leaq	-464(%rbp), %rax
 3197      FEFFFF
 3198 1787 4889D6   		movq	%rdx, %rsi
 3199 178a 4889C7   		movq	%rax, %rdi
 3200              	.LEHB89:
 3201 178d E820FFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8Unit
 3201      FF
 3202              	.LEHE89:
 3203              		.loc 3 96 0 is_stmt 0 discriminator 1
 3204 1792 C685FFFD 		movb	$1, -513(%rbp)
 3204      FFFF01
 3205 1799 488B85E8 		movq	-536(%rbp), %rax
 3205      FDFFFF
 3206 17a0 488D5008 		leaq	8(%rax), %rdx
 3207 17a4 488D8530 		leaq	-464(%rbp), %rax
 3207      FEFFFF
 3208 17ab 4889D6   		movq	%rdx, %rsi
 3209 17ae 4889C7   		movq	%rax, %rdi
 3210              	.LEHB90:
 3211 17b1 E8B12000 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummar
 3211      00
 3212              	.LEHE90:
 3213              		.loc 3 96 0 discriminator 3
 3214 17b6 488D8530 		leaq	-464(%rbp), %rax
 3214      FEFFFF
 3215 17bd 4889C7   		movq	%rax, %rdi
 3216              	.LEHB91:
 3217 17c0 E867FFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
 3217      FF
 3218              	.LEHE91:
 3219              	.LBE55:
 3220              		.loc 3 96 0
 3221 17c5 E9690200 		jmp	.L161
 3221      00
 3222              	.L176:
 3223 17ca 4989C4   		movq	%rax, %r12
 3224 17cd 4889D3   		movq	%rdx, %rbx
 3225              	.LBB56:
 3226 17d0 488D8530 		leaq	-464(%rbp), %rax
 3226      FEFFFF
 3227 17d7 4889C7   		movq	%rax, %rdi
 3228 17da E84DFFFF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
 3228      FF
 3229 17df 4C89E0   		movq	%r12, %rax
 3230 17e2 4889DA   		movq	%rbx, %rdx
 3231 17e5 EB00     		jmp	.L163
 3232              	.L175:
 3233              	.L163:
 3234 17e7 4883FA01 		cmpq	$1, %rdx
 3235 17eb 740F     		je	.L165
 3236 17ed 4883FA02 		cmpq	$2, %rdx
 3237 17f1 0F84A700 		je	.L166
 3237      0000
 3238 17f7 E94A0100 		jmp	.L181
 3238      00
 3239              	.L165:
 3240              	.LBE56:
 3241              	.LBB57:
 3242 17fc 4889C7   		movq	%rax, %rdi
 3243 17ff E8000000 		call	__cxa_begin_catch@PLT
 3243      00
 3244 1804 48898508 		movq	%rax, -504(%rbp)
 3244      FEFFFF
 3245              	.LEHB92:
 3246 180b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3246      00
 3247 1810 488B18   		movq	(%rax), %rbx
 3248 1813 488B8508 		movq	-504(%rbp), %rax
 3248      FEFFFF
 3249 181a 488B00   		movq	(%rax), %rax
 3250 181d 4883C010 		addq	$16, %rax
 3251 1821 488B00   		movq	(%rax), %rax
 3252 1824 488B9508 		movq	-504(%rbp), %rdx
 3252      FEFFFF
 3253 182b 4889D7   		movq	%rdx, %rdi
 3254 182e FFD0     		call	*%rax
 3255              	.LVL8:
 3256 1830 4989C4   		movq	%rax, %r12
 3257 1833 488B8508 		movq	-504(%rbp), %rax
 3257      FEFFFF
 3258 183a 4889C7   		movq	%rax, %rdi
 3259 183d E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 3259      00
 3260              		.loc 3 96 0 discriminator 5
 3261 1842 4189C5   		movl	%eax, %r13d
 3262 1845 488B8508 		movq	-504(%rbp), %rax
 3262      FEFFFF
 3263 184c 4889C7   		movq	%rax, %rdi
 3264 184f E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 3264      00
 3265              		.loc 3 96 0 discriminator 7
 3266 1854 4889C1   		movq	%rax, %rcx
 3267 1857 488B85E8 		movq	-536(%rbp), %rax
 3267      FDFFFF
 3268 185e 488B5008 		movq	8(%rax), %rdx
 3269 1862 488B85E8 		movq	-536(%rbp), %rax
 3269      FDFFFF
 3270 1869 488B7010 		movq	16(%rax), %rsi
 3271 186d 488D8510 		leaq	-496(%rbp), %rax
 3271      FEFFFF
 3272 1874 4589E8   		movl	%r13d, %r8d
 3273 1877 4889C7   		movq	%rax, %rdi
 3274 187a E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 3274      00
 3275              		.loc 3 96 0 discriminator 11
 3276 187f 488D8510 		leaq	-496(%rbp), %rax
 3276      FEFFFF
 3277 1886 4C89E2   		movq	%r12, %rdx
 3278 1889 4889C6   		movq	%rax, %rsi
 3279 188c 4889DF   		movq	%rbx, %rdi
 3280 188f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3280      00
 3281              	.LEHE92:
 3282              		.loc 3 96 0 discriminator 13
 3283 1894 E8000000 		call	__cxa_end_catch@PLT
 3283      00
 3284              	.LBE57:
 3285 1899 E9950100 		jmp	.L161
 3285      00
 3286              	.L166:
 3287              	.LBB58:
 3288              		.loc 3 96 0
 3289 189e 4889C7   		movq	%rax, %rdi
 3290 18a1 E8000000 		call	__cxa_begin_catch@PLT
 3290      00
 3291 18a6 48898500 		movq	%rax, -512(%rbp)
 3291      FEFFFF
 3292              	.LBB59:
 3293 18ad 488D8530 		leaq	-464(%rbp), %rax
 3293      FEFFFF
 3294 18b4 4889C7   		movq	%rax, %rdi
 3295              	.LEHB93:
 3296 18b7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3296      00
 3297              	.LEHE93:
 3298              		.loc 3 96 0 discriminator 15
 3299 18bc 488D8530 		leaq	-464(%rbp), %rax
 3299      FEFFFF
 3300 18c3 488D3500 		leaq	.LC3(%rip), %rsi
 3300      000000
 3301 18ca 4889C7   		movq	%rax, %rdi
 3302              	.LEHB94:
 3303 18cd E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3303      00
 3304 18d2 4889C3   		movq	%rax, %rbx
 3305 18d5 488B8500 		movq	-512(%rbp), %rax
 3305      FEFFFF
 3306 18dc 488B00   		movq	(%rax), %rax
 3307 18df 4883C010 		addq	$16, %rax
 3308 18e3 488B00   		movq	(%rax), %rax
 3309 18e6 488B9500 		movq	-512(%rbp), %rdx
 3309      FEFFFF
 3310 18ed 4889D7   		movq	%rdx, %rdi
 3311 18f0 FFD0     		call	*%rax
 3312              	.LVL9:
 3313 18f2 4889C6   		movq	%rax, %rsi
 3314 18f5 4889DF   		movq	%rbx, %rdi
 3315 18f8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3315      00
 3316              		.loc 3 96 0 discriminator 19
 3317 18fd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3317      00
 3318 1902 488B18   		movq	(%rax), %rbx
 3319 1905 488D8530 		leaq	-464(%rbp), %rax
 3319      FEFFFF
 3320 190c 4889C7   		movq	%rax, %rdi
 3321 190f E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 3321      00
 3322              		.loc 3 96 0 discriminator 21
 3323 1914 4889C2   		movq	%rax, %rdx
 3324 1917 488B85E8 		movq	-536(%rbp), %rax
 3324      FDFFFF
 3325 191e 4883C008 		addq	$8, %rax
 3326 1922 4889C6   		movq	%rax, %rsi
 3327 1925 4889DF   		movq	%rbx, %rdi
 3328 1928 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3328      00
 3329              	.LEHE94:
 3330              		.loc 3 96 0 discriminator 25
 3331 192d 488D8530 		leaq	-464(%rbp), %rax
 3331      FEFFFF
 3332 1934 4889C7   		movq	%rax, %rdi
 3333              	.LEHB95:
 3334 1937 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3334      00
 3335              	.LEHE95:
 3336              	.LBE59:
 3337              		.loc 3 96 0 discriminator 26
 3338 193c E8000000 		call	__cxa_end_catch@PLT
 3338      00
 3339              	.LBE58:
 3340 1941 E9ED0000 		jmp	.L161
 3340      00
 3341              	.L181:
 3342              		.loc 3 96 0
 3343 1946 4889C7   		movq	%rax, %rdi
 3344 1949 E8000000 		call	__cxa_begin_catch@PLT
 3344      00
 3345 194e 80BDFFFD 		cmpb	$0, -513(%rbp)
 3345      FFFF00
 3346 1955 7445     		je	.L168
 3347              	.LEHB96:
 3348              		.loc 3 96 0 discriminator 28
 3349 1957 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3349      00
 3350 195c 488B18   		movq	(%rax), %rbx
 3351 195f 488B85E8 		movq	-536(%rbp), %rax
 3351      FDFFFF
 3352 1966 488D4808 		leaq	8(%rax), %rcx
 3353 196a 488D8510 		leaq	-496(%rbp), %rax
 3353      FEFFFF
 3354 1971 BA600000 		movl	$96, %edx
 3354      00
 3355 1976 4889CE   		movq	%rcx, %rsi
 3356 1979 4889C7   		movq	%rax, %rdi
 3357 197c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3357      00
 3358              		.loc 3 96 0 discriminator 33
 3359 1981 488D8510 		leaq	-496(%rbp), %rax
 3359      FEFFFF
 3360 1988 488D1500 		leaq	.LC4(%rip), %rdx
 3360      000000
 3361 198f 4889C6   		movq	%rax, %rsi
 3362 1992 4889DF   		movq	%rbx, %rdi
 3363 1995 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3363      00
 3364 199a EB43     		jmp	.L169
 3365              	.L168:
 3366              		.loc 3 96 0 discriminator 29
 3367 199c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3367      00
 3368 19a1 488B18   		movq	(%rax), %rbx
 3369 19a4 488B85E8 		movq	-536(%rbp), %rax
 3369      FDFFFF
 3370 19ab 488D4808 		leaq	8(%rax), %rcx
 3371 19af 488D8510 		leaq	-496(%rbp), %rax
 3371      FEFFFF
 3372 19b6 BA600000 		movl	$96, %edx
 3372      00
 3373 19bb 4889CE   		movq	%rcx, %rsi
 3374 19be 4889C7   		movq	%rax, %rdi
 3375 19c1 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3375      00
 3376              		.loc 3 96 0 discriminator 40
 3377 19c6 488D8510 		leaq	-496(%rbp), %rax
 3377      FEFFFF
 3378 19cd 488D1500 		leaq	.LC5(%rip), %rdx
 3378      000000
 3379 19d4 4889C6   		movq	%rax, %rsi
 3380 19d7 4889DF   		movq	%rbx, %rdi
 3381 19da E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3381      00
 3382              	.LEHE96:
 3383              	.L169:
 3384              	.LEHB97:
 3385              		.loc 3 96 0 discriminator 43
 3386 19df E8000000 		call	__cxa_end_catch@PLT
 3386      00
 3387 19e4 EB4D     		jmp	.L161
 3388              	.L177:
 3389 19e6 4889C3   		movq	%rax, %rbx
 3390              	.LBB61:
 3391              		.loc 3 96 0
 3392 19e9 E8000000 		call	__cxa_end_catch@PLT
 3392      00
 3393 19ee 4889D8   		movq	%rbx, %rax
 3394 19f1 4889C7   		movq	%rax, %rdi
 3395 19f4 E8000000 		call	_Unwind_Resume@PLT
 3395      00
 3396              	.LEHE97:
 3397              	.L179:
 3398 19f9 4889C3   		movq	%rax, %rbx
 3399              	.LBE61:
 3400              	.LBB62:
 3401              	.LBB60:
 3402 19fc 488D8530 		leaq	-464(%rbp), %rax
 3402      FEFFFF
 3403 1a03 4889C7   		movq	%rax, %rdi
 3404 1a06 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3404      00
 3405 1a0b EB03     		jmp	.L172
 3406              	.L178:
 3407 1a0d 4889C3   		movq	%rax, %rbx
 3408              	.L172:
 3409              	.LBE60:
 3410 1a10 E8000000 		call	__cxa_end_catch@PLT
 3410      00
 3411 1a15 4889D8   		movq	%rbx, %rax
 3412 1a18 4889C7   		movq	%rax, %rdi
 3413              	.LEHB98:
 3414 1a1b E8000000 		call	_Unwind_Resume@PLT
 3414      00
 3415              	.LEHE98:
 3416              	.L180:
 3417 1a20 4889C3   		movq	%rax, %rbx
 3418              	.LBE62:
 3419 1a23 E8000000 		call	__cxa_end_catch@PLT
 3419      00
 3420 1a28 4889D8   		movq	%rbx, %rax
 3421 1a2b 4889C7   		movq	%rax, %rdi
 3422              	.LEHB99:
 3423 1a2e E8000000 		call	_Unwind_Resume@PLT
 3423      00
 3424              	.LEHE99:
 3425              	.L161:
 3426 1a33 488B45D8 		movq	-40(%rbp), %rax
 3427 1a37 64483304 		xorq	%fs:40, %rax
 3427      25280000 
 3427      00
 3428 1a40 7405     		je	.L174
 3429 1a42 E8000000 		call	__stack_chk_fail@PLT
 3429      00
 3430              	.L174:
 3431 1a47 4881C408 		addq	$520, %rsp
 3431      020000
 3432 1a4e 5B       		popq	%rbx
 3433 1a4f 415C     		popq	%r12
 3434 1a51 415D     		popq	%r13
 3435 1a53 5D       		popq	%rbp
 3436              		.cfi_def_cfa 7, 8
 3437 1a54 C3       		ret
 3438              		.cfi_endproc
 3439              	.LFE1411:
 3440              		.section	.gcc_except_table
 3441              		.align 4
 3442              	.LLSDA1411:
 3443 0278 FF       		.byte	0xff
 3444 0279 9B       		.byte	0x9b
 3445 027a 55       		.uleb128 .LLSDATT1411-.LLSDATTD1411
 3446              	.LLSDATTD1411:
 3447 027b 01       		.byte	0x1
 3448 027c 3E       		.uleb128 .LLSDACSE1411-.LLSDACSB1411
 3449              	.LLSDACSB1411:
 3450 027d 45       		.uleb128 .LEHB89-.LFB1411
 3451 027e 05       		.uleb128 .LEHE89-.LEHB89
 3452 027f 9F01     		.uleb128 .L175-.LFB1411
 3453 0281 05       		.uleb128 0x5
 3454 0282 69       		.uleb128 .LEHB90-.LFB1411
 3455 0283 05       		.uleb128 .LEHE90-.LEHB90
 3456 0284 8201     		.uleb128 .L176-.LFB1411
 3457 0286 07       		.uleb128 0x7
 3458 0287 78       		.uleb128 .LEHB91-.LFB1411
 3459 0288 05       		.uleb128 .LEHE91-.LEHB91
 3460 0289 9F01     		.uleb128 .L175-.LFB1411
 3461 028b 05       		.uleb128 0x5
 3462 028c C301     		.uleb128 .LEHB92-.LFB1411
 3463 028e 8901     		.uleb128 .LEHE92-.LEHB92
 3464 0290 9E05     		.uleb128 .L177-.LFB1411
 3465 0292 00       		.uleb128 0
 3466 0293 EF02     		.uleb128 .LEHB93-.LFB1411
 3467 0295 05       		.uleb128 .LEHE93-.LEHB93
 3468 0296 C505     		.uleb128 .L178-.LFB1411
 3469 0298 00       		.uleb128 0
 3470 0299 8503     		.uleb128 .LEHB94-.LFB1411
 3471 029b 60       		.uleb128 .LEHE94-.LEHB94
 3472 029c B105     		.uleb128 .L179-.LFB1411
 3473 029e 00       		.uleb128 0
 3474 029f EF03     		.uleb128 .LEHB95-.LFB1411
 3475 02a1 05       		.uleb128 .LEHE95-.LEHB95
 3476 02a2 C505     		.uleb128 .L178-.LFB1411
 3477 02a4 00       		.uleb128 0
 3478 02a5 8F04     		.uleb128 .LEHB96-.LFB1411
 3479 02a7 8801     		.uleb128 .LEHE96-.LEHB96
 3480 02a9 D805     		.uleb128 .L180-.LFB1411
 3481 02ab 00       		.uleb128 0
 3482 02ac 9705     		.uleb128 .LEHB97-.LFB1411
 3483 02ae 1A       		.uleb128 .LEHE97-.LEHB97
 3484 02af 00       		.uleb128 0
 3485 02b0 00       		.uleb128 0
 3486 02b1 D305     		.uleb128 .LEHB98-.LFB1411
 3487 02b3 05       		.uleb128 .LEHE98-.LEHB98
 3488 02b4 00       		.uleb128 0
 3489 02b5 00       		.uleb128 0
 3490 02b6 E605     		.uleb128 .LEHB99-.LFB1411
 3491 02b8 05       		.uleb128 .LEHE99-.LEHB99
 3492 02b9 00       		.uleb128 0
 3493 02ba 00       		.uleb128 0
 3494              	.LLSDACSE1411:
 3495 02bb 03       		.byte	0x3
 3496 02bc 00       		.byte	0
 3497 02bd 02       		.byte	0x2
 3498 02be 7D       		.byte	0x7d
 3499 02bf 01       		.byte	0x1
 3500 02c0 7D       		.byte	0x7d
 3501 02c1 00       		.byte	0
 3502 02c2 7D       		.byte	0x7d
 3503 02c3 00       		.align 4
 3504 02c4 00000000 		.long	0
 3505              	
 3506 02c8 00000000 		.long	DW.ref._ZTISt9exception-.
 3507 02cc 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 3508              	.LLSDATT1411:
 3509              		.text
 3511              		.section	.rodata
 3512              	.LC26:
 3513 049c 41204669 		.string	"A File"
 3513      6C6500
 3514              	.LC27:
 3515 04a3 41205465 		.string	"A Test"
 3515      737400
 3516              	.LC28:
 3517 04aa 41204661 		.string	"A Failure"
 3517      696C7572 
 3517      6500
 3518 04b4 00000000 		.align 8
 3519              	.LC29:
 3520 04b8 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" tim
 3520      6C207665 
 3520      7273696F 
 3520      6E3D2231 
 3520      2E30223F 
 3521              		.text
 3522 1a55 90       		.align 2
 3524              	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv:
 3525              	.LFB1415:
  97:TestXmlTestReporter.cpp **** {
 3526              		.loc 3 97 0 is_stmt 1
 3527              		.cfi_startproc
 3528              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3529              		.cfi_lsda 0x1b,.LLSDA1415
 3530 1a56 55       		pushq	%rbp
 3531              		.cfi_def_cfa_offset 16
 3532              		.cfi_offset 6, -16
 3533 1a57 4889E5   		movq	%rsp, %rbp
 3534              		.cfi_def_cfa_register 6
 3535 1a5a 53       		pushq	%rbx
 3536 1a5b 4881EC98 		subq	$152, %rsp
 3536      000000
 3537              		.cfi_offset 3, -24
 3538 1a62 4889BD68 		movq	%rdi, -152(%rbp)
 3538      FFFFFF
 3539              		.loc 3 97 0
 3540 1a69 64488B04 		movq	%fs:40, %rax
 3540      25280000 
 3540      00
 3541 1a72 488945E8 		movq	%rax, -24(%rbp)
 3542 1a76 31C0     		xorl	%eax, %eax
  98:TestXmlTestReporter.cpp ****     TestDetails const details("A Test", "suite", "A File", 4321);
 3543              		.loc 3 98 0
 3544 1a78 488D4580 		leaq	-128(%rbp), %rax
 3545 1a7c 41B8E110 		movl	$4321, %r8d
 3545      0000
 3546 1a82 488D0D00 		leaq	.LC26(%rip), %rcx
 3546      000000
 3547 1a89 488D1500 		leaq	.LC7(%rip), %rdx
 3547      000000
 3548 1a90 488D3500 		leaq	.LC27(%rip), %rsi
 3548      000000
 3549 1a97 4889C7   		movq	%rax, %rdi
 3550              	.LEHB100:
 3551 1a9a E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 3551      00
  99:TestXmlTestReporter.cpp **** 
 100:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 3552              		.loc 3 100 0
 3553 1a9f 488B8568 		movq	-152(%rbp), %rax
 3553      FFFFFF
 3554 1aa6 488D9078 		leaq	376(%rax), %rdx
 3554      010000
 3555 1aad 488D4580 		leaq	-128(%rbp), %rax
 3556 1ab1 4889C6   		movq	%rax, %rsi
 3557 1ab4 4889D7   		movq	%rdx, %rdi
 3558 1ab7 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 3558      00
 101:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "A Failure");
 3559              		.loc 3 101 0
 3560 1abc 488B8568 		movq	-152(%rbp), %rax
 3560      FFFFFF
 3561 1ac3 488D8878 		leaq	376(%rax), %rcx
 3561      010000
 3562 1aca 488D4580 		leaq	-128(%rbp), %rax
 3563 1ace 488D1500 		leaq	.LC28(%rip), %rdx
 3563      000000
 3564 1ad5 4889C6   		movq	%rax, %rsi
 3565 1ad8 4889CF   		movq	%rcx, %rdi
 3566 1adb E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 3566      00
 102:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 0.1f);
 3567              		.loc 3 102 0
 3568 1ae0 488B8568 		movq	-152(%rbp), %rax
 3568      FFFFFF
 3569 1ae7 48057801 		addq	$376, %rax
 3569      0000
 3570 1aed F30F1005 		movss	.LC10(%rip), %xmm0
 3570      00000000 
 3571 1af5 B9010000 		movl	$1, %ecx
 3571      00
 3572 1afa BA010000 		movl	$1, %edx
 3572      00
 3573 1aff BE010000 		movl	$1, %esi
 3573      00
 3574 1b04 4889C7   		movq	%rax, %rdi
 3575 1b07 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 3575      00
 3576              	.LEHE100:
 103:TestXmlTestReporter.cpp **** 
 104:TestXmlTestReporter.cpp ****     const char *expected =
 3577              		.loc 3 104 0
 3578 1b0c 488D0500 		leaq	.LC29(%rip), %rax
 3578      000000
 3579 1b13 48898578 		movq	%rax, -136(%rbp)
 3579      FFFFFF
 3580              	.LEHB101:
 105:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 106:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" time=\"0.1\">"
 107:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"A Test\" time=\"0\">"
 108:TestXmlTestReporter.cpp ****         "<failure message=\"A File(4321) : A Failure\"/>"
 109:TestXmlTestReporter.cpp ****         "</test>"
 110:TestXmlTestReporter.cpp ****         "</unittest-results>";
 111:TestXmlTestReporter.cpp **** 
 112:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 3581              		.loc 3 112 0
 3582 1b1a E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3582      00
 3583 1b1f 488B08   		movq	(%rax), %rcx
 3584 1b22 488D45A0 		leaq	-96(%rbp), %rax
 3585 1b26 BA700000 		movl	$112, %edx
 3585      00
 3586 1b2b 4889CE   		movq	%rcx, %rsi
 3587 1b2e 4889C7   		movq	%rax, %rdi
 3588 1b31 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3588      00
 3589              		.loc 3 112 0 is_stmt 0 discriminator 2
 3590 1b36 488B9568 		movq	-152(%rbp), %rdx
 3590      FFFFFF
 3591 1b3d 488D45C0 		leaq	-64(%rbp), %rax
 3592 1b41 4889D6   		movq	%rdx, %rsi
 3593 1b44 4889C7   		movq	%rax, %rdi
 3594 1b47 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 3594      00
 3595              	.LEHE101:
 3596              	.LEHB102:
 3597              		.loc 3 112 0 discriminator 4
 3598 1b4c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3598      00
 3599 1b51 488B00   		movq	(%rax), %rax
 3600 1b54 488D4DA0 		leaq	-96(%rbp), %rcx
 3601 1b58 488D55C0 		leaq	-64(%rbp), %rdx
 3602 1b5c 488DB578 		leaq	-136(%rbp), %rsi
 3602      FFFFFF
 3603 1b63 4889C7   		movq	%rax, %rdi
 3604 1b66 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 3604      00
 3605              	.LEHE102:
 3606              		.loc 3 112 0 discriminator 8
 3607 1b6b 488D45C0 		leaq	-64(%rbp), %rax
 3608 1b6f 4889C7   		movq	%rax, %rdi
 3609              	.LEHB103:
 3610 1b72 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 3610      00
 3611              	.LEHE103:
 113:TestXmlTestReporter.cpp **** }
 3612              		.loc 3 113 0 is_stmt 1
 3613 1b77 EB70     		jmp	.L182
 3614              	.L189:
 3615 1b79 4889C3   		movq	%rax, %rbx
 112:TestXmlTestReporter.cpp **** }
 3616              		.loc 3 112 0
 3617 1b7c 488D45C0 		leaq	-64(%rbp), %rax
 3618 1b80 4889C7   		movq	%rax, %rdi
 3619 1b83 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 3619      00
 3620 1b88 4889D8   		movq	%rbx, %rax
 3621 1b8b EB00     		jmp	.L184
 3622              	.L188:
 3623              	.L184:
 3624 1b8d 4889C7   		movq	%rax, %rdi
 3625 1b90 E8000000 		call	__cxa_begin_catch@PLT
 3625      00
 3626              	.LEHB104:
 3627 1b95 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3627      00
 3628 1b9a 488B18   		movq	(%rax), %rbx
 3629 1b9d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 3629      00
 112:TestXmlTestReporter.cpp **** }
 3630              		.loc 3 112 0 is_stmt 0 discriminator 12
 3631 1ba2 488B08   		movq	(%rax), %rcx
 3632 1ba5 488D45A0 		leaq	-96(%rbp), %rax
 3633 1ba9 BA700000 		movl	$112, %edx
 3633      00
 3634 1bae 4889CE   		movq	%rcx, %rsi
 3635 1bb1 4889C7   		movq	%rax, %rdi
 3636 1bb4 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 3636      00
 112:TestXmlTestReporter.cpp **** }
 3637              		.loc 3 112 0 discriminator 16
 3638 1bb9 488D45A0 		leaq	-96(%rbp), %rax
 3639 1bbd 488D1500 		leaq	.LC12(%rip), %rdx
 3639      000000
 3640 1bc4 4889C6   		movq	%rax, %rsi
 3641 1bc7 4889DF   		movq	%rbx, %rdi
 3642 1bca E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3642      00
 3643              	.LEHE104:
 3644              	.LEHB105:
 112:TestXmlTestReporter.cpp **** }
 3645              		.loc 3 112 0 discriminator 18
 3646 1bcf E8000000 		call	__cxa_end_catch@PLT
 3646      00
 3647              	.LEHE105:
 3648              		.loc 3 113 0 is_stmt 1 discriminator 18
 3649 1bd4 EB13     		jmp	.L182
 3650              	.L190:
 3651 1bd6 4889C3   		movq	%rax, %rbx
 112:TestXmlTestReporter.cpp **** }
 3652              		.loc 3 112 0
 3653 1bd9 E8000000 		call	__cxa_end_catch@PLT
 3653      00
 3654 1bde 4889D8   		movq	%rbx, %rax
 3655 1be1 4889C7   		movq	%rax, %rdi
 3656              	.LEHB106:
 3657 1be4 E8000000 		call	_Unwind_Resume@PLT
 3657      00
 3658              	.LEHE106:
 3659              	.L182:
 3660              		.loc 3 113 0
 3661 1be9 488B45E8 		movq	-24(%rbp), %rax
 3662 1bed 64483304 		xorq	%fs:40, %rax
 3662      25280000 
 3662      00
 3663 1bf6 7405     		je	.L187
 3664 1bf8 E8000000 		call	__stack_chk_fail@PLT
 3664      00
 3665              	.L187:
 3666 1bfd 4881C498 		addq	$152, %rsp
 3666      000000
 3667 1c04 5B       		popq	%rbx
 3668 1c05 5D       		popq	%rbp
 3669              		.cfi_def_cfa 7, 8
 3670 1c06 C3       		ret
 3671              		.cfi_endproc
 3672              	.LFE1415:
 3673              		.section	.gcc_except_table
 3674              		.align 4
 3675              	.LLSDA1415:
 3676 02d0 FF       		.byte	0xff
 3677 02d1 9B       		.byte	0x9b
 3678 02d2 31       		.uleb128 .LLSDATT1415-.LLSDATTD1415
 3679              	.LLSDATTD1415:
 3680 02d3 01       		.byte	0x1
 3681 02d4 26       		.uleb128 .LLSDACSE1415-.LLSDACSB1415
 3682              	.LLSDACSB1415:
 3683 02d5 44       		.uleb128 .LEHB100-.LFB1415
 3684 02d6 72       		.uleb128 .LEHE100-.LEHB100
 3685 02d7 00       		.uleb128 0
 3686 02d8 00       		.uleb128 0
 3687 02d9 C401     		.uleb128 .LEHB101-.LFB1415
 3688 02db 32       		.uleb128 .LEHE101-.LEHB101
 3689 02dc B702     		.uleb128 .L188-.LFB1415
 3690 02de 01       		.uleb128 0x1
 3691 02df F601     		.uleb128 .LEHB102-.LFB1415
 3692 02e1 1F       		.uleb128 .LEHE102-.LEHB102
 3693 02e2 A302     		.uleb128 .L189-.LFB1415
 3694 02e4 03       		.uleb128 0x3
 3695 02e5 9C02     		.uleb128 .LEHB103-.LFB1415
 3696 02e7 05       		.uleb128 .LEHE103-.LEHB103
 3697 02e8 B702     		.uleb128 .L188-.LFB1415
 3698 02ea 01       		.uleb128 0x1
 3699 02eb BF02     		.uleb128 .LEHB104-.LFB1415
 3700 02ed 3A       		.uleb128 .LEHE104-.LEHB104
 3701 02ee 8003     		.uleb128 .L190-.LFB1415
 3702 02f0 00       		.uleb128 0
 3703 02f1 F902     		.uleb128 .LEHB105-.LFB1415
 3704 02f3 05       		.uleb128 .LEHE105-.LEHB105
 3705 02f4 00       		.uleb128 0
 3706 02f5 00       		.uleb128 0
 3707 02f6 8E03     		.uleb128 .LEHB106-.LFB1415
 3708 02f8 05       		.uleb128 .LEHE106-.LEHB106
 3709 02f9 00       		.uleb128 0
 3710 02fa 00       		.uleb128 0
 3711              	.LLSDACSE1415:
 3712 02fb 01       		.byte	0x1
 3713 02fc 00       		.byte	0
 3714 02fd 00       		.byte	0
 3715 02fe 7D       		.byte	0x7d
 3716 02ff 00       		.align 4
 3717 0300 00000000 		.long	0
 3718              	
 3719              	.LLSDATT1415:
 3720              		.text
 3722 1c07 90       		.align 2
 3724              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC2ERKN8UnitTest11TestDetai
 3725              	.LFB1417:
 114:TestXmlTestReporter.cpp **** 
 115:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, FailureMessageIsXMLEscaped)
 3726              		.loc 3 115 0
 3727              		.cfi_startproc
 3728 1c08 55       		pushq	%rbp
 3729              		.cfi_def_cfa_offset 16
 3730              		.cfi_offset 6, -16
 3731 1c09 4889E5   		movq	%rsp, %rbp
 3732              		.cfi_def_cfa_register 6
 3733 1c0c 4883EC10 		subq	$16, %rsp
 3734 1c10 48897DF8 		movq	%rdi, -8(%rbp)
 3735 1c14 488975F0 		movq	%rsi, -16(%rbp)
 3736              	.LBB63:
 3737              		.loc 3 115 0
 3738 1c18 488B45F8 		movq	-8(%rbp), %rax
 3739 1c1c 4889C7   		movq	%rax, %rdi
 3740 1c1f E8DCE3FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 3740      FF
 3741 1c24 488B45F8 		movq	-8(%rbp), %rax
 3742 1c28 488B55F0 		movq	-16(%rbp), %rdx
 3743 1c2c 488990A0 		movq	%rdx, 416(%rax)
 3743      010000
 3744              	.LBE63:
 3745 1c33 90       		nop
 3746 1c34 C9       		leave
 3747              		.cfi_def_cfa 7, 8
 3748 1c35 C3       		ret
 3749              		.cfi_endproc
 3750              	.LFE1417:
 3752              		.set	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11Tes
 3753              		.section	.rodata
 3754              	.LC30:
 3755 0584 4661696C 		.string	"FailureMessageIsXMLEscaped"
 3755      7572654D 
 3755      65737361 
 3755      67654973 
 3755      584D4C45 
 3756              		.text
 3757              		.align 2
 3759              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC2Ev:
 3760              	.LFB1420:
 3761              		.loc 3 115 0
 3762              		.cfi_startproc
 3763 1c36 55       		pushq	%rbp
 3764              		.cfi_def_cfa_offset 16
 3765              		.cfi_offset 6, -16
 3766 1c37 4889E5   		movq	%rsp, %rbp
 3767              		.cfi_def_cfa_register 6
 3768 1c3a 53       		pushq	%rbx
 3769 1c3b 4883EC18 		subq	$24, %rsp
 3770              		.cfi_offset 3, -24
 3771 1c3f 48897DE8 		movq	%rdi, -24(%rbp)
 3772              	.LBB64:
 3773              		.loc 3 115 0
 3774 1c43 488B5DE8 		movq	-24(%rbp), %rbx
 3775 1c47 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 3775      00
 3776 1c4c 41B87300 		movl	$115, %r8d
 3776      0000
 3777 1c52 488D0D00 		leaq	.LC1(%rip), %rcx
 3777      000000
 3778 1c59 4889C2   		movq	%rax, %rdx
 3779 1c5c 488D3500 		leaq	.LC30(%rip), %rsi
 3779      000000
 3780 1c63 4889DF   		movq	%rbx, %rdi
 3781 1c66 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 3781      00
 3782 1c6b 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE(%rip), %rdx
 3782      000000
 3783 1c72 488B45E8 		movq	-24(%rbp), %rax
 3784 1c76 488910   		movq	%rdx, (%rax)
 3785              	.LBE64:
 3786 1c79 90       		nop
 3787 1c7a 4883C418 		addq	$24, %rsp
 3788 1c7e 5B       		popq	%rbx
 3789 1c7f 5D       		popq	%rbp
 3790              		.cfi_def_cfa 7, 8
 3791 1c80 C3       		ret
 3792              		.cfi_endproc
 3793              	.LFE1420:
 3795              		.set	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev,_ZN12_GLOBAL__N_1
 3796              		.local	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE
 3797              		.comm	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE,56,32
 3798              		.local	_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 3799              		.comm	_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE,1,1
 3800 1c81 90       		.align 2
 3802              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD2Ev:
 3803              	.LFB1424:
 3804              		.loc 3 115 0
 3805              		.cfi_startproc
 3806 1c82 55       		pushq	%rbp
 3807              		.cfi_def_cfa_offset 16
 3808              		.cfi_offset 6, -16
 3809 1c83 4889E5   		movq	%rsp, %rbp
 3810              		.cfi_def_cfa_register 6
 3811 1c86 4883EC10 		subq	$16, %rsp
 3812 1c8a 48897DF8 		movq	%rdi, -8(%rbp)
 3813              	.LBB65:
 3814              		.loc 3 115 0
 3815 1c8e 488B45F8 		movq	-8(%rbp), %rax
 3816 1c92 4889C7   		movq	%rax, %rdi
 3817 1c95 E8C2E3FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 3817      FF
 3818              	.LBE65:
 3819 1c9a 90       		nop
 3820 1c9b C9       		leave
 3821              		.cfi_def_cfa 7, 8
 3822 1c9c C3       		ret
 3823              		.cfi_endproc
 3824              	.LFE1424:
 3826              		.set	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev,_ZN12_GLOBAL__N
 3827 1c9d 90       		.align 2
 3829              	_ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv:
 3830              	.LFB1422:
 3831              		.loc 3 115 0
 3832              		.cfi_startproc
 3833              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3834              		.cfi_lsda 0x1b,.LLSDA1422
 3835 1c9e 55       		pushq	%rbp
 3836              		.cfi_def_cfa_offset 16
 3837              		.cfi_offset 6, -16
 3838 1c9f 4889E5   		movq	%rsp, %rbp
 3839              		.cfi_def_cfa_register 6
 3840 1ca2 4155     		pushq	%r13
 3841 1ca4 4154     		pushq	%r12
 3842 1ca6 53       		pushq	%rbx
 3843 1ca7 4881EC08 		subq	$520, %rsp
 3843      020000
 3844              		.cfi_offset 13, -24
 3845              		.cfi_offset 12, -32
 3846              		.cfi_offset 3, -40
 3847 1cae 4889BDE8 		movq	%rdi, -536(%rbp)
 3847      FDFFFF
 3848              		.loc 3 115 0
 3849 1cb5 64488B04 		movq	%fs:40, %rax
 3849      25280000 
 3849      00
 3850 1cbe 488945D8 		movq	%rax, -40(%rbp)
 3851 1cc2 31C0     		xorl	%eax, %eax
 3852 1cc4 C685FFFD 		movb	$0, -513(%rbp)
 3852      FFFF00
 3853              	.LBB66:
 3854 1ccb 488B85E8 		movq	-536(%rbp), %rax
 3854      FDFFFF
 3855 1cd2 488D5008 		leaq	8(%rax), %rdx
 3856 1cd6 488D8530 		leaq	-464(%rbp), %rax
 3856      FEFFFF
 3857 1cdd 4889D6   		movq	%rdx, %rsi
 3858 1ce0 4889C7   		movq	%rax, %rdi
 3859              	.LEHB107:
 3860 1ce3 E820FFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11Tes
 3860      FF
 3861              	.LEHE107:
 3862              		.loc 3 115 0 is_stmt 0 discriminator 1
 3863 1ce8 C685FFFD 		movb	$1, -513(%rbp)
 3863      FFFF01
 3864 1cef 488B85E8 		movq	-536(%rbp), %rax
 3864      FDFFFF
 3865 1cf6 488D5008 		leaq	8(%rax), %rdx
 3866 1cfa 488D8530 		leaq	-464(%rbp), %rax
 3866      FEFFFF
 3867 1d01 4889D6   		movq	%rdx, %rsi
 3868 1d04 4889C7   		movq	%rax, %rdi
 3869              	.LEHB108:
 3870 1d07 E8241E00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHe
 3870      00
 3871              	.LEHE108:
 3872              		.loc 3 115 0 discriminator 3
 3873 1d0c 488D8530 		leaq	-464(%rbp), %rax
 3873      FEFFFF
 3874 1d13 4889C7   		movq	%rax, %rdi
 3875              	.LEHB109:
 3876 1d16 E867FFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
 3876      FF
 3877              	.LEHE109:
 3878              	.LBE66:
 3879              		.loc 3 115 0
 3880 1d1b E9690200 		jmp	.L194
 3880      00
 3881              	.L209:
 3882 1d20 4989C4   		movq	%rax, %r12
 3883 1d23 4889D3   		movq	%rdx, %rbx
 3884              	.LBB67:
 3885 1d26 488D8530 		leaq	-464(%rbp), %rax
 3885      FEFFFF
 3886 1d2d 4889C7   		movq	%rax, %rdi
 3887 1d30 E84DFFFF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
 3887      FF
 3888 1d35 4C89E0   		movq	%r12, %rax
 3889 1d38 4889DA   		movq	%rbx, %rdx
 3890 1d3b EB00     		jmp	.L196
 3891              	.L208:
 3892              	.L196:
 3893 1d3d 4883FA01 		cmpq	$1, %rdx
 3894 1d41 740F     		je	.L198
 3895 1d43 4883FA02 		cmpq	$2, %rdx
 3896 1d47 0F84A700 		je	.L199
 3896      0000
 3897 1d4d E94A0100 		jmp	.L214
 3897      00
 3898              	.L198:
 3899              	.LBE67:
 3900              	.LBB68:
 3901 1d52 4889C7   		movq	%rax, %rdi
 3902 1d55 E8000000 		call	__cxa_begin_catch@PLT
 3902      00
 3903 1d5a 48898508 		movq	%rax, -504(%rbp)
 3903      FEFFFF
 3904              	.LEHB110:
 3905 1d61 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3905      00
 3906 1d66 488B18   		movq	(%rax), %rbx
 3907 1d69 488B8508 		movq	-504(%rbp), %rax
 3907      FEFFFF
 3908 1d70 488B00   		movq	(%rax), %rax
 3909 1d73 4883C010 		addq	$16, %rax
 3910 1d77 488B00   		movq	(%rax), %rax
 3911 1d7a 488B9508 		movq	-504(%rbp), %rdx
 3911      FEFFFF
 3912 1d81 4889D7   		movq	%rdx, %rdi
 3913 1d84 FFD0     		call	*%rax
 3914              	.LVL10:
 3915 1d86 4989C4   		movq	%rax, %r12
 3916 1d89 488B8508 		movq	-504(%rbp), %rax
 3916      FEFFFF
 3917 1d90 4889C7   		movq	%rax, %rdi
 3918 1d93 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 3918      00
 3919              		.loc 3 115 0 discriminator 5
 3920 1d98 4189C5   		movl	%eax, %r13d
 3921 1d9b 488B8508 		movq	-504(%rbp), %rax
 3921      FEFFFF
 3922 1da2 4889C7   		movq	%rax, %rdi
 3923 1da5 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 3923      00
 3924              		.loc 3 115 0 discriminator 7
 3925 1daa 4889C1   		movq	%rax, %rcx
 3926 1dad 488B85E8 		movq	-536(%rbp), %rax
 3926      FDFFFF
 3927 1db4 488B5008 		movq	8(%rax), %rdx
 3928 1db8 488B85E8 		movq	-536(%rbp), %rax
 3928      FDFFFF
 3929 1dbf 488B7010 		movq	16(%rax), %rsi
 3930 1dc3 488D8510 		leaq	-496(%rbp), %rax
 3930      FEFFFF
 3931 1dca 4589E8   		movl	%r13d, %r8d
 3932 1dcd 4889C7   		movq	%rax, %rdi
 3933 1dd0 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 3933      00
 3934              		.loc 3 115 0 discriminator 11
 3935 1dd5 488D8510 		leaq	-496(%rbp), %rax
 3935      FEFFFF
 3936 1ddc 4C89E2   		movq	%r12, %rdx
 3937 1ddf 4889C6   		movq	%rax, %rsi
 3938 1de2 4889DF   		movq	%rbx, %rdi
 3939 1de5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3939      00
 3940              	.LEHE110:
 3941              		.loc 3 115 0 discriminator 13
 3942 1dea E8000000 		call	__cxa_end_catch@PLT
 3942      00
 3943              	.LBE68:
 3944 1def E9950100 		jmp	.L194
 3944      00
 3945              	.L199:
 3946              	.LBB69:
 3947              		.loc 3 115 0
 3948 1df4 4889C7   		movq	%rax, %rdi
 3949 1df7 E8000000 		call	__cxa_begin_catch@PLT
 3949      00
 3950 1dfc 48898500 		movq	%rax, -512(%rbp)
 3950      FEFFFF
 3951              	.LBB70:
 3952 1e03 488D8530 		leaq	-464(%rbp), %rax
 3952      FEFFFF
 3953 1e0a 4889C7   		movq	%rax, %rdi
 3954              	.LEHB111:
 3955 1e0d E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 3955      00
 3956              	.LEHE111:
 3957              		.loc 3 115 0 discriminator 15
 3958 1e12 488D8530 		leaq	-464(%rbp), %rax
 3958      FEFFFF
 3959 1e19 488D3500 		leaq	.LC3(%rip), %rsi
 3959      000000
 3960 1e20 4889C7   		movq	%rax, %rdi
 3961              	.LEHB112:
 3962 1e23 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3962      00
 3963 1e28 4889C3   		movq	%rax, %rbx
 3964 1e2b 488B8500 		movq	-512(%rbp), %rax
 3964      FEFFFF
 3965 1e32 488B00   		movq	(%rax), %rax
 3966 1e35 4883C010 		addq	$16, %rax
 3967 1e39 488B00   		movq	(%rax), %rax
 3968 1e3c 488B9500 		movq	-512(%rbp), %rdx
 3968      FEFFFF
 3969 1e43 4889D7   		movq	%rdx, %rdi
 3970 1e46 FFD0     		call	*%rax
 3971              	.LVL11:
 3972 1e48 4889C6   		movq	%rax, %rsi
 3973 1e4b 4889DF   		movq	%rbx, %rdi
 3974 1e4e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 3974      00
 3975              		.loc 3 115 0 discriminator 19
 3976 1e53 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 3976      00
 3977 1e58 488B18   		movq	(%rax), %rbx
 3978 1e5b 488D8530 		leaq	-464(%rbp), %rax
 3978      FEFFFF
 3979 1e62 4889C7   		movq	%rax, %rdi
 3980 1e65 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 3980      00
 3981              		.loc 3 115 0 discriminator 21
 3982 1e6a 4889C2   		movq	%rax, %rdx
 3983 1e6d 488B85E8 		movq	-536(%rbp), %rax
 3983      FDFFFF
 3984 1e74 4883C008 		addq	$8, %rax
 3985 1e78 4889C6   		movq	%rax, %rsi
 3986 1e7b 4889DF   		movq	%rbx, %rdi
 3987 1e7e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 3987      00
 3988              	.LEHE112:
 3989              		.loc 3 115 0 discriminator 25
 3990 1e83 488D8530 		leaq	-464(%rbp), %rax
 3990      FEFFFF
 3991 1e8a 4889C7   		movq	%rax, %rdi
 3992              	.LEHB113:
 3993 1e8d E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 3993      00
 3994              	.LEHE113:
 3995              	.LBE70:
 3996              		.loc 3 115 0 discriminator 26
 3997 1e92 E8000000 		call	__cxa_end_catch@PLT
 3997      00
 3998              	.LBE69:
 3999 1e97 E9ED0000 		jmp	.L194
 3999      00
 4000              	.L214:
 4001              		.loc 3 115 0
 4002 1e9c 4889C7   		movq	%rax, %rdi
 4003 1e9f E8000000 		call	__cxa_begin_catch@PLT
 4003      00
 4004 1ea4 80BDFFFD 		cmpb	$0, -513(%rbp)
 4004      FFFF00
 4005 1eab 7445     		je	.L201
 4006              	.LEHB114:
 4007              		.loc 3 115 0 discriminator 28
 4008 1ead E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4008      00
 4009 1eb2 488B18   		movq	(%rax), %rbx
 4010 1eb5 488B85E8 		movq	-536(%rbp), %rax
 4010      FDFFFF
 4011 1ebc 488D4808 		leaq	8(%rax), %rcx
 4012 1ec0 488D8510 		leaq	-496(%rbp), %rax
 4012      FEFFFF
 4013 1ec7 BA730000 		movl	$115, %edx
 4013      00
 4014 1ecc 4889CE   		movq	%rcx, %rsi
 4015 1ecf 4889C7   		movq	%rax, %rdi
 4016 1ed2 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4016      00
 4017              		.loc 3 115 0 discriminator 33
 4018 1ed7 488D8510 		leaq	-496(%rbp), %rax
 4018      FEFFFF
 4019 1ede 488D1500 		leaq	.LC4(%rip), %rdx
 4019      000000
 4020 1ee5 4889C6   		movq	%rax, %rsi
 4021 1ee8 4889DF   		movq	%rbx, %rdi
 4022 1eeb E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4022      00
 4023 1ef0 EB43     		jmp	.L202
 4024              	.L201:
 4025              		.loc 3 115 0 discriminator 29
 4026 1ef2 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4026      00
 4027 1ef7 488B18   		movq	(%rax), %rbx
 4028 1efa 488B85E8 		movq	-536(%rbp), %rax
 4028      FDFFFF
 4029 1f01 488D4808 		leaq	8(%rax), %rcx
 4030 1f05 488D8510 		leaq	-496(%rbp), %rax
 4030      FEFFFF
 4031 1f0c BA730000 		movl	$115, %edx
 4031      00
 4032 1f11 4889CE   		movq	%rcx, %rsi
 4033 1f14 4889C7   		movq	%rax, %rdi
 4034 1f17 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4034      00
 4035              		.loc 3 115 0 discriminator 40
 4036 1f1c 488D8510 		leaq	-496(%rbp), %rax
 4036      FEFFFF
 4037 1f23 488D1500 		leaq	.LC5(%rip), %rdx
 4037      000000
 4038 1f2a 4889C6   		movq	%rax, %rsi
 4039 1f2d 4889DF   		movq	%rbx, %rdi
 4040 1f30 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4040      00
 4041              	.LEHE114:
 4042              	.L202:
 4043              	.LEHB115:
 4044              		.loc 3 115 0 discriminator 43
 4045 1f35 E8000000 		call	__cxa_end_catch@PLT
 4045      00
 4046 1f3a EB4D     		jmp	.L194
 4047              	.L210:
 4048 1f3c 4889C3   		movq	%rax, %rbx
 4049              	.LBB72:
 4050              		.loc 3 115 0
 4051 1f3f E8000000 		call	__cxa_end_catch@PLT
 4051      00
 4052 1f44 4889D8   		movq	%rbx, %rax
 4053 1f47 4889C7   		movq	%rax, %rdi
 4054 1f4a E8000000 		call	_Unwind_Resume@PLT
 4054      00
 4055              	.LEHE115:
 4056              	.L212:
 4057 1f4f 4889C3   		movq	%rax, %rbx
 4058              	.LBE72:
 4059              	.LBB73:
 4060              	.LBB71:
 4061 1f52 488D8530 		leaq	-464(%rbp), %rax
 4061      FEFFFF
 4062 1f59 4889C7   		movq	%rax, %rdi
 4063 1f5c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4063      00
 4064 1f61 EB03     		jmp	.L205
 4065              	.L211:
 4066 1f63 4889C3   		movq	%rax, %rbx
 4067              	.L205:
 4068              	.LBE71:
 4069 1f66 E8000000 		call	__cxa_end_catch@PLT
 4069      00
 4070 1f6b 4889D8   		movq	%rbx, %rax
 4071 1f6e 4889C7   		movq	%rax, %rdi
 4072              	.LEHB116:
 4073 1f71 E8000000 		call	_Unwind_Resume@PLT
 4073      00
 4074              	.LEHE116:
 4075              	.L213:
 4076 1f76 4889C3   		movq	%rax, %rbx
 4077              	.LBE73:
 4078 1f79 E8000000 		call	__cxa_end_catch@PLT
 4078      00
 4079 1f7e 4889D8   		movq	%rbx, %rax
 4080 1f81 4889C7   		movq	%rax, %rdi
 4081              	.LEHB117:
 4082 1f84 E8000000 		call	_Unwind_Resume@PLT
 4082      00
 4083              	.LEHE117:
 4084              	.L194:
 4085 1f89 488B45D8 		movq	-40(%rbp), %rax
 4086 1f8d 64483304 		xorq	%fs:40, %rax
 4086      25280000 
 4086      00
 4087 1f96 7405     		je	.L207
 4088 1f98 E8000000 		call	__stack_chk_fail@PLT
 4088      00
 4089              	.L207:
 4090 1f9d 4881C408 		addq	$520, %rsp
 4090      020000
 4091 1fa4 5B       		popq	%rbx
 4092 1fa5 415C     		popq	%r12
 4093 1fa7 415D     		popq	%r13
 4094 1fa9 5D       		popq	%rbp
 4095              		.cfi_def_cfa 7, 8
 4096 1faa C3       		ret
 4097              		.cfi_endproc
 4098              	.LFE1422:
 4099              		.section	.gcc_except_table
 4100              		.align 4
 4101              	.LLSDA1422:
 4102 0304 FF       		.byte	0xff
 4103 0305 9B       		.byte	0x9b
 4104 0306 55       		.uleb128 .LLSDATT1422-.LLSDATTD1422
 4105              	.LLSDATTD1422:
 4106 0307 01       		.byte	0x1
 4107 0308 3E       		.uleb128 .LLSDACSE1422-.LLSDACSB1422
 4108              	.LLSDACSB1422:
 4109 0309 45       		.uleb128 .LEHB107-.LFB1422
 4110 030a 05       		.uleb128 .LEHE107-.LEHB107
 4111 030b 9F01     		.uleb128 .L208-.LFB1422
 4112 030d 05       		.uleb128 0x5
 4113 030e 69       		.uleb128 .LEHB108-.LFB1422
 4114 030f 05       		.uleb128 .LEHE108-.LEHB108
 4115 0310 8201     		.uleb128 .L209-.LFB1422
 4116 0312 07       		.uleb128 0x7
 4117 0313 78       		.uleb128 .LEHB109-.LFB1422
 4118 0314 05       		.uleb128 .LEHE109-.LEHB109
 4119 0315 9F01     		.uleb128 .L208-.LFB1422
 4120 0317 05       		.uleb128 0x5
 4121 0318 C301     		.uleb128 .LEHB110-.LFB1422
 4122 031a 8901     		.uleb128 .LEHE110-.LEHB110
 4123 031c 9E05     		.uleb128 .L210-.LFB1422
 4124 031e 00       		.uleb128 0
 4125 031f EF02     		.uleb128 .LEHB111-.LFB1422
 4126 0321 05       		.uleb128 .LEHE111-.LEHB111
 4127 0322 C505     		.uleb128 .L211-.LFB1422
 4128 0324 00       		.uleb128 0
 4129 0325 8503     		.uleb128 .LEHB112-.LFB1422
 4130 0327 60       		.uleb128 .LEHE112-.LEHB112
 4131 0328 B105     		.uleb128 .L212-.LFB1422
 4132 032a 00       		.uleb128 0
 4133 032b EF03     		.uleb128 .LEHB113-.LFB1422
 4134 032d 05       		.uleb128 .LEHE113-.LEHB113
 4135 032e C505     		.uleb128 .L211-.LFB1422
 4136 0330 00       		.uleb128 0
 4137 0331 8F04     		.uleb128 .LEHB114-.LFB1422
 4138 0333 8801     		.uleb128 .LEHE114-.LEHB114
 4139 0335 D805     		.uleb128 .L213-.LFB1422
 4140 0337 00       		.uleb128 0
 4141 0338 9705     		.uleb128 .LEHB115-.LFB1422
 4142 033a 1A       		.uleb128 .LEHE115-.LEHB115
 4143 033b 00       		.uleb128 0
 4144 033c 00       		.uleb128 0
 4145 033d D305     		.uleb128 .LEHB116-.LFB1422
 4146 033f 05       		.uleb128 .LEHE116-.LEHB116
 4147 0340 00       		.uleb128 0
 4148 0341 00       		.uleb128 0
 4149 0342 E605     		.uleb128 .LEHB117-.LFB1422
 4150 0344 05       		.uleb128 .LEHE117-.LEHB117
 4151 0345 00       		.uleb128 0
 4152 0346 00       		.uleb128 0
 4153              	.LLSDACSE1422:
 4154 0347 03       		.byte	0x3
 4155 0348 00       		.byte	0
 4156 0349 02       		.byte	0x2
 4157 034a 7D       		.byte	0x7d
 4158 034b 01       		.byte	0x1
 4159 034c 7D       		.byte	0x7d
 4160 034d 00       		.byte	0
 4161 034e 7D       		.byte	0x7d
 4162 034f 00       		.align 4
 4163 0350 00000000 		.long	0
 4164              	
 4165 0354 00000000 		.long	DW.ref._ZTISt9exception-.
 4166 0358 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 4167              	.LLSDATT1422:
 4168              		.text
 4170              		.section	.rodata
 4171              	.LC31:
 4172 059f 2227263C 		.string	"\"'&<>"
 4172      3E00
 4173 05a5 000000   		.align 8
 4174              	.LC32:
 4175 05a8 3C3F786D 		.string	"<?xml version=\"1.0\"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" tim
 4175      6C207665 
 4175      7273696F 
 4175      6E3D2231 
 4175      2E30223F 
 4176              		.text
 4177 1fab 90       		.align 2
 4179              	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv:
 4180              	.LFB1426:
 116:TestXmlTestReporter.cpp **** {
 4181              		.loc 3 116 0 is_stmt 1
 4182              		.cfi_startproc
 4183              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4184              		.cfi_lsda 0x1b,.LLSDA1426
 4185 1fac 55       		pushq	%rbp
 4186              		.cfi_def_cfa_offset 16
 4187              		.cfi_offset 6, -16
 4188 1fad 4889E5   		movq	%rsp, %rbp
 4189              		.cfi_def_cfa_register 6
 4190 1fb0 53       		pushq	%rbx
 4191 1fb1 4881EC98 		subq	$152, %rsp
 4191      000000
 4192              		.cfi_offset 3, -24
 4193 1fb8 4889BD68 		movq	%rdi, -152(%rbp)
 4193      FFFFFF
 4194              		.loc 3 116 0
 4195 1fbf 64488B04 		movq	%fs:40, %rax
 4195      25280000 
 4195      00
 4196 1fc8 488945E8 		movq	%rax, -24(%rbp)
 4197 1fcc 31C0     		xorl	%eax, %eax
 117:TestXmlTestReporter.cpp ****     TestDetails const details("TestName", "suite", "filename.h", 4321);
 4198              		.loc 3 117 0
 4199 1fce 488D4580 		leaq	-128(%rbp), %rax
 4200 1fd2 41B8E110 		movl	$4321, %r8d
 4200      0000
 4201 1fd8 488D0D00 		leaq	.LC6(%rip), %rcx
 4201      000000
 4202 1fdf 488D1500 		leaq	.LC7(%rip), %rdx
 4202      000000
 4203 1fe6 488D3500 		leaq	.LC8(%rip), %rsi
 4203      000000
 4204 1fed 4889C7   		movq	%rax, %rdi
 4205              	.LEHB118:
 4206 1ff0 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 4206      00
 118:TestXmlTestReporter.cpp **** 
 119:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(details);
 4207              		.loc 3 119 0
 4208 1ff5 488B8568 		movq	-152(%rbp), %rax
 4208      FFFFFF
 4209 1ffc 488D9078 		leaq	376(%rax), %rdx
 4209      010000
 4210 2003 488D4580 		leaq	-128(%rbp), %rax
 4211 2007 4889C6   		movq	%rax, %rsi
 4212 200a 4889D7   		movq	%rdx, %rdi
 4213 200d E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 4213      00
 120:TestXmlTestReporter.cpp ****     reporter.ReportFailure(details, "\"\'&<>");
 4214              		.loc 3 120 0
 4215 2012 488B8568 		movq	-152(%rbp), %rax
 4215      FFFFFF
 4216 2019 488D8878 		leaq	376(%rax), %rcx
 4216      010000
 4217 2020 488D4580 		leaq	-128(%rbp), %rax
 4218 2024 488D1500 		leaq	.LC31(%rip), %rdx
 4218      000000
 4219 202b 4889C6   		movq	%rax, %rsi
 4220 202e 4889CF   		movq	%rcx, %rdi
 4221 2031 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 4221      00
 121:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(details, 0.1f);
 4222              		.loc 3 121 0
 4223 2036 488B8568 		movq	-152(%rbp), %rax
 4223      FFFFFF
 4224 203d 488D9078 		leaq	376(%rax), %rdx
 4224      010000
 4225 2044 488D4580 		leaq	-128(%rbp), %rax
 4226 2048 F30F1005 		movss	.LC10(%rip), %xmm0
 4226      00000000 
 4227 2050 4889C6   		movq	%rax, %rsi
 4228 2053 4889D7   		movq	%rdx, %rdi
 4229 2056 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 4229      00
 122:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 1, 0.1f);
 4230              		.loc 3 122 0
 4231 205b 488B8568 		movq	-152(%rbp), %rax
 4231      FFFFFF
 4232 2062 48057801 		addq	$376, %rax
 4232      0000
 4233 2068 F30F1005 		movss	.LC10(%rip), %xmm0
 4233      00000000 
 4234 2070 B9010000 		movl	$1, %ecx
 4234      00
 4235 2075 BA010000 		movl	$1, %edx
 4235      00
 4236 207a BE010000 		movl	$1, %esi
 4236      00
 4237 207f 4889C7   		movq	%rax, %rdi
 4238 2082 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 4238      00
 4239              	.LEHE118:
 123:TestXmlTestReporter.cpp **** 
 124:TestXmlTestReporter.cpp ****     char const* expected =
 4240              		.loc 3 124 0
 4241 2087 488D0500 		leaq	.LC32(%rip), %rax
 4241      000000
 4242 208e 48898578 		movq	%rax, -136(%rbp)
 4242      FFFFFF
 4243              	.LEHB119:
 125:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 126:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"1\" time=\"0.1\">"
 127:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"TestName\" time=\"0.1\">"
 128:TestXmlTestReporter.cpp ****         "<failure message=\"filename.h(4321) : &quot;&apos;&amp;&lt;&gt;\"/>"
 129:TestXmlTestReporter.cpp ****         "</test>"
 130:TestXmlTestReporter.cpp ****         "</unittest-results>";
 131:TestXmlTestReporter.cpp **** 
 132:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 4244              		.loc 3 132 0
 4245 2095 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4245      00
 4246 209a 488B08   		movq	(%rax), %rcx
 4247 209d 488D45A0 		leaq	-96(%rbp), %rax
 4248 20a1 BA840000 		movl	$132, %edx
 4248      00
 4249 20a6 4889CE   		movq	%rcx, %rsi
 4250 20a9 4889C7   		movq	%rax, %rdi
 4251 20ac E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4251      00
 4252              		.loc 3 132 0 is_stmt 0 discriminator 2
 4253 20b1 488B9568 		movq	-152(%rbp), %rdx
 4253      FFFFFF
 4254 20b8 488D45C0 		leaq	-64(%rbp), %rax
 4255 20bc 4889D6   		movq	%rdx, %rsi
 4256 20bf 4889C7   		movq	%rax, %rdi
 4257 20c2 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 4257      00
 4258              	.LEHE119:
 4259              	.LEHB120:
 4260              		.loc 3 132 0 discriminator 4
 4261 20c7 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4261      00
 4262 20cc 488B00   		movq	(%rax), %rax
 4263 20cf 488D4DA0 		leaq	-96(%rbp), %rcx
 4264 20d3 488D55C0 		leaq	-64(%rbp), %rdx
 4265 20d7 488DB578 		leaq	-136(%rbp), %rsi
 4265      FFFFFF
 4266 20de 4889C7   		movq	%rax, %rdi
 4267 20e1 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4267      00
 4268              	.LEHE120:
 4269              		.loc 3 132 0 discriminator 8
 4270 20e6 488D45C0 		leaq	-64(%rbp), %rax
 4271 20ea 4889C7   		movq	%rax, %rdi
 4272              	.LEHB121:
 4273 20ed E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 4273      00
 4274              	.LEHE121:
 133:TestXmlTestReporter.cpp **** }
 4275              		.loc 3 133 0 is_stmt 1
 4276 20f2 EB70     		jmp	.L215
 4277              	.L222:
 4278 20f4 4889C3   		movq	%rax, %rbx
 132:TestXmlTestReporter.cpp **** }
 4279              		.loc 3 132 0
 4280 20f7 488D45C0 		leaq	-64(%rbp), %rax
 4281 20fb 4889C7   		movq	%rax, %rdi
 4282 20fe E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 4282      00
 4283 2103 4889D8   		movq	%rbx, %rax
 4284 2106 EB00     		jmp	.L217
 4285              	.L221:
 4286              	.L217:
 4287 2108 4889C7   		movq	%rax, %rdi
 4288 210b E8000000 		call	__cxa_begin_catch@PLT
 4288      00
 4289              	.LEHB122:
 4290 2110 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4290      00
 4291 2115 488B18   		movq	(%rax), %rbx
 4292 2118 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4292      00
 132:TestXmlTestReporter.cpp **** }
 4293              		.loc 3 132 0 is_stmt 0 discriminator 12
 4294 211d 488B08   		movq	(%rax), %rcx
 4295 2120 488D45A0 		leaq	-96(%rbp), %rax
 4296 2124 BA840000 		movl	$132, %edx
 4296      00
 4297 2129 4889CE   		movq	%rcx, %rsi
 4298 212c 4889C7   		movq	%rax, %rdi
 4299 212f E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4299      00
 132:TestXmlTestReporter.cpp **** }
 4300              		.loc 3 132 0 discriminator 16
 4301 2134 488D45A0 		leaq	-96(%rbp), %rax
 4302 2138 488D1500 		leaq	.LC12(%rip), %rdx
 4302      000000
 4303 213f 4889C6   		movq	%rax, %rsi
 4304 2142 4889DF   		movq	%rbx, %rdi
 4305 2145 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4305      00
 4306              	.LEHE122:
 4307              	.LEHB123:
 132:TestXmlTestReporter.cpp **** }
 4308              		.loc 3 132 0 discriminator 18
 4309 214a E8000000 		call	__cxa_end_catch@PLT
 4309      00
 4310              	.LEHE123:
 4311              		.loc 3 133 0 is_stmt 1 discriminator 18
 4312 214f EB13     		jmp	.L215
 4313              	.L223:
 4314 2151 4889C3   		movq	%rax, %rbx
 132:TestXmlTestReporter.cpp **** }
 4315              		.loc 3 132 0
 4316 2154 E8000000 		call	__cxa_end_catch@PLT
 4316      00
 4317 2159 4889D8   		movq	%rbx, %rax
 4318 215c 4889C7   		movq	%rax, %rdi
 4319              	.LEHB124:
 4320 215f E8000000 		call	_Unwind_Resume@PLT
 4320      00
 4321              	.LEHE124:
 4322              	.L215:
 4323              		.loc 3 133 0
 4324 2164 488B45E8 		movq	-24(%rbp), %rax
 4325 2168 64483304 		xorq	%fs:40, %rax
 4325      25280000 
 4325      00
 4326 2171 7405     		je	.L220
 4327 2173 E8000000 		call	__stack_chk_fail@PLT
 4327      00
 4328              	.L220:
 4329 2178 4881C498 		addq	$152, %rsp
 4329      000000
 4330 217f 5B       		popq	%rbx
 4331 2180 5D       		popq	%rbp
 4332              		.cfi_def_cfa 7, 8
 4333 2181 C3       		ret
 4334              		.cfi_endproc
 4335              	.LFE1426:
 4336              		.section	.gcc_except_table
 4337              		.align 4
 4338              	.LLSDA1426:
 4339 035c FF       		.byte	0xff
 4340 035d 9B       		.byte	0x9b
 4341 035e 31       		.uleb128 .LLSDATT1426-.LLSDATTD1426
 4342              	.LLSDATTD1426:
 4343 035f 01       		.byte	0x1
 4344 0360 27       		.uleb128 .LLSDACSE1426-.LLSDACSB1426
 4345              	.LLSDACSB1426:
 4346 0361 44       		.uleb128 .LEHB118-.LFB1426
 4347 0362 9701     		.uleb128 .LEHE118-.LEHB118
 4348 0364 00       		.uleb128 0
 4349 0365 00       		.uleb128 0
 4350 0366 E901     		.uleb128 .LEHB119-.LFB1426
 4351 0368 32       		.uleb128 .LEHE119-.LEHB119
 4352 0369 DC02     		.uleb128 .L221-.LFB1426
 4353 036b 01       		.uleb128 0x1
 4354 036c 9B02     		.uleb128 .LEHB120-.LFB1426
 4355 036e 1F       		.uleb128 .LEHE120-.LEHB120
 4356 036f C802     		.uleb128 .L222-.LFB1426
 4357 0371 03       		.uleb128 0x3
 4358 0372 C102     		.uleb128 .LEHB121-.LFB1426
 4359 0374 05       		.uleb128 .LEHE121-.LEHB121
 4360 0375 DC02     		.uleb128 .L221-.LFB1426
 4361 0377 01       		.uleb128 0x1
 4362 0378 E402     		.uleb128 .LEHB122-.LFB1426
 4363 037a 3A       		.uleb128 .LEHE122-.LEHB122
 4364 037b A503     		.uleb128 .L223-.LFB1426
 4365 037d 00       		.uleb128 0
 4366 037e 9E03     		.uleb128 .LEHB123-.LFB1426
 4367 0380 05       		.uleb128 .LEHE123-.LEHB123
 4368 0381 00       		.uleb128 0
 4369 0382 00       		.uleb128 0
 4370 0383 B303     		.uleb128 .LEHB124-.LFB1426
 4371 0385 05       		.uleb128 .LEHE124-.LEHB124
 4372 0386 00       		.uleb128 0
 4373 0387 00       		.uleb128 0
 4374              	.LLSDACSE1426:
 4375 0388 01       		.byte	0x1
 4376 0389 00       		.byte	0
 4377 038a 00       		.byte	0
 4378 038b 7D       		.byte	0x7d
 4379              		.align 4
 4380 038c 00000000 		.long	0
 4381              	
 4382              	.LLSDATT1426:
 4383              		.text
 4385              		.align 2
 4387              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC2ERKN8UnitTest11TestDetailsE
 4388              	.LFB1428:
 134:TestXmlTestReporter.cpp **** 
 135:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, OneFailureAndOneSuccess)
 4389              		.loc 3 135 0
 4390              		.cfi_startproc
 4391 2182 55       		pushq	%rbp
 4392              		.cfi_def_cfa_offset 16
 4393              		.cfi_offset 6, -16
 4394 2183 4889E5   		movq	%rsp, %rbp
 4395              		.cfi_def_cfa_register 6
 4396 2186 4883EC10 		subq	$16, %rsp
 4397 218a 48897DF8 		movq	%rdi, -8(%rbp)
 4398 218e 488975F0 		movq	%rsi, -16(%rbp)
 4399              	.LBB74:
 4400              		.loc 3 135 0
 4401 2192 488B45F8 		movq	-8(%rbp), %rax
 4402 2196 4889C7   		movq	%rax, %rdi
 4403 2199 E862DEFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 4403      FF
 4404 219e 488B45F8 		movq	-8(%rbp), %rax
 4405 21a2 488B55F0 		movq	-16(%rbp), %rdx
 4406 21a6 488990A0 		movq	%rdx, 416(%rax)
 4406      010000
 4407              	.LBE74:
 4408 21ad 90       		nop
 4409 21ae C9       		leave
 4410              		.cfi_def_cfa 7, 8
 4411 21af C3       		ret
 4412              		.cfi_endproc
 4413              	.LFE1428:
 4415              		.set	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDe
 4416              		.section	.rodata
 4417              	.LC33:
 4418 068c 4F6E6546 		.string	"OneFailureAndOneSuccess"
 4418      61696C75 
 4418      7265416E 
 4418      644F6E65 
 4418      53756363 
 4419              		.text
 4420              		.align 2
 4422              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC2Ev:
 4423              	.LFB1431:
 4424              		.loc 3 135 0
 4425              		.cfi_startproc
 4426 21b0 55       		pushq	%rbp
 4427              		.cfi_def_cfa_offset 16
 4428              		.cfi_offset 6, -16
 4429 21b1 4889E5   		movq	%rsp, %rbp
 4430              		.cfi_def_cfa_register 6
 4431 21b4 53       		pushq	%rbx
 4432 21b5 4883EC18 		subq	$24, %rsp
 4433              		.cfi_offset 3, -24
 4434 21b9 48897DE8 		movq	%rdi, -24(%rbp)
 4435              	.LBB75:
 4436              		.loc 3 135 0
 4437 21bd 488B5DE8 		movq	-24(%rbp), %rbx
 4438 21c1 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 4438      00
 4439 21c6 41B88700 		movl	$135, %r8d
 4439      0000
 4440 21cc 488D0D00 		leaq	.LC1(%rip), %rcx
 4440      000000
 4441 21d3 4889C2   		movq	%rax, %rdx
 4442 21d6 488D3500 		leaq	.LC33(%rip), %rsi
 4442      000000
 4443 21dd 4889DF   		movq	%rbx, %rdi
 4444 21e0 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 4444      00
 4445 21e5 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE(%rip), %rdx
 4445      000000
 4446 21ec 488B45E8 		movq	-24(%rbp), %rax
 4447 21f0 488910   		movq	%rdx, (%rax)
 4448              	.LBE75:
 4449 21f3 90       		nop
 4450 21f4 4883C418 		addq	$24, %rsp
 4451 21f8 5B       		popq	%rbx
 4452 21f9 5D       		popq	%rbp
 4453              		.cfi_def_cfa 7, 8
 4454 21fa C3       		ret
 4455              		.cfi_endproc
 4456              	.LFE1431:
 4458              		.set	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev,_ZN12_GLOBAL__N_149T
 4459              		.local	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE
 4460              		.comm	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE,56,32
 4461              		.local	_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE
 4462              		.comm	_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE,1,1
 4463 21fb 90       		.align 2
 4465              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD2Ev:
 4466              	.LFB1435:
 4467              		.loc 3 135 0
 4468              		.cfi_startproc
 4469 21fc 55       		pushq	%rbp
 4470              		.cfi_def_cfa_offset 16
 4471              		.cfi_offset 6, -16
 4472 21fd 4889E5   		movq	%rsp, %rbp
 4473              		.cfi_def_cfa_register 6
 4474 2200 4883EC10 		subq	$16, %rsp
 4475 2204 48897DF8 		movq	%rdi, -8(%rbp)
 4476              	.LBB76:
 4477              		.loc 3 135 0
 4478 2208 488B45F8 		movq	-8(%rbp), %rax
 4479 220c 4889C7   		movq	%rax, %rdi
 4480 220f E848DEFF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 4480      FF
 4481              	.LBE76:
 4482 2214 90       		nop
 4483 2215 C9       		leave
 4484              		.cfi_def_cfa 7, 8
 4485 2216 C3       		ret
 4486              		.cfi_endproc
 4487              	.LFE1435:
 4489              		.set	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev,_ZN12_GLOBAL__N_15
 4490 2217 90       		.align 2
 4492              	_ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv:
 4493              	.LFB1433:
 4494              		.loc 3 135 0
 4495              		.cfi_startproc
 4496              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4497              		.cfi_lsda 0x1b,.LLSDA1433
 4498 2218 55       		pushq	%rbp
 4499              		.cfi_def_cfa_offset 16
 4500              		.cfi_offset 6, -16
 4501 2219 4889E5   		movq	%rsp, %rbp
 4502              		.cfi_def_cfa_register 6
 4503 221c 4155     		pushq	%r13
 4504 221e 4154     		pushq	%r12
 4505 2220 53       		pushq	%rbx
 4506 2221 4881EC08 		subq	$520, %rsp
 4506      020000
 4507              		.cfi_offset 13, -24
 4508              		.cfi_offset 12, -32
 4509              		.cfi_offset 3, -40
 4510 2228 4889BDE8 		movq	%rdi, -536(%rbp)
 4510      FDFFFF
 4511              		.loc 3 135 0
 4512 222f 64488B04 		movq	%fs:40, %rax
 4512      25280000 
 4512      00
 4513 2238 488945D8 		movq	%rax, -40(%rbp)
 4514 223c 31C0     		xorl	%eax, %eax
 4515 223e C685FFFD 		movb	$0, -513(%rbp)
 4515      FFFF00
 4516              	.LBB77:
 4517 2245 488B85E8 		movq	-536(%rbp), %rax
 4517      FDFFFF
 4518 224c 488D5008 		leaq	8(%rax), %rdx
 4519 2250 488D8530 		leaq	-464(%rbp), %rax
 4519      FEFFFF
 4520 2257 4889D6   		movq	%rdx, %rsi
 4521 225a 4889C7   		movq	%rax, %rdi
 4522              	.LEHB125:
 4523 225d E820FFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDe
 4523      FF
 4524              	.LEHE125:
 4525              		.loc 3 135 0 is_stmt 0 discriminator 1
 4526 2262 C685FFFD 		movb	$1, -513(%rbp)
 4526      FFFF01
 4527 2269 488B85E8 		movq	-536(%rbp), %rax
 4527      FDFFFF
 4528 2270 488D5008 		leaq	8(%rax), %rdx
 4529 2274 488D8530 		leaq	-464(%rbp), %rax
 4529      FEFFFF
 4530 227b 4889D6   		movq	%rdx, %rsi
 4531 227e 4889C7   		movq	%rax, %rdi
 4532              	.LEHB126:
 4533 2281 E8731B00 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelpe
 4533      00
 4534              	.LEHE126:
 4535              		.loc 3 135 0 discriminator 3
 4536 2286 488D8530 		leaq	-464(%rbp), %rax
 4536      FEFFFF
 4537 228d 4889C7   		movq	%rax, %rdi
 4538              	.LEHB127:
 4539 2290 E867FFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
 4539      FF
 4540              	.LEHE127:
 4541              	.LBE77:
 4542              		.loc 3 135 0
 4543 2295 E9690200 		jmp	.L227
 4543      00
 4544              	.L242:
 4545 229a 4989C4   		movq	%rax, %r12
 4546 229d 4889D3   		movq	%rdx, %rbx
 4547              	.LBB78:
 4548 22a0 488D8530 		leaq	-464(%rbp), %rax
 4548      FEFFFF
 4549 22a7 4889C7   		movq	%rax, %rdi
 4550 22aa E84DFFFF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
 4550      FF
 4551 22af 4C89E0   		movq	%r12, %rax
 4552 22b2 4889DA   		movq	%rbx, %rdx
 4553 22b5 EB00     		jmp	.L229
 4554              	.L241:
 4555              	.L229:
 4556 22b7 4883FA01 		cmpq	$1, %rdx
 4557 22bb 740F     		je	.L231
 4558 22bd 4883FA02 		cmpq	$2, %rdx
 4559 22c1 0F84A700 		je	.L232
 4559      0000
 4560 22c7 E94A0100 		jmp	.L247
 4560      00
 4561              	.L231:
 4562              	.LBE78:
 4563              	.LBB79:
 4564 22cc 4889C7   		movq	%rax, %rdi
 4565 22cf E8000000 		call	__cxa_begin_catch@PLT
 4565      00
 4566 22d4 48898508 		movq	%rax, -504(%rbp)
 4566      FEFFFF
 4567              	.LEHB128:
 4568 22db E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4568      00
 4569 22e0 488B18   		movq	(%rax), %rbx
 4570 22e3 488B8508 		movq	-504(%rbp), %rax
 4570      FEFFFF
 4571 22ea 488B00   		movq	(%rax), %rax
 4572 22ed 4883C010 		addq	$16, %rax
 4573 22f1 488B00   		movq	(%rax), %rax
 4574 22f4 488B9508 		movq	-504(%rbp), %rdx
 4574      FEFFFF
 4575 22fb 4889D7   		movq	%rdx, %rdi
 4576 22fe FFD0     		call	*%rax
 4577              	.LVL12:
 4578 2300 4989C4   		movq	%rax, %r12
 4579 2303 488B8508 		movq	-504(%rbp), %rax
 4579      FEFFFF
 4580 230a 4889C7   		movq	%rax, %rdi
 4581 230d E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 4581      00
 4582              		.loc 3 135 0 discriminator 5
 4583 2312 4189C5   		movl	%eax, %r13d
 4584 2315 488B8508 		movq	-504(%rbp), %rax
 4584      FEFFFF
 4585 231c 4889C7   		movq	%rax, %rdi
 4586 231f E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 4586      00
 4587              		.loc 3 135 0 discriminator 7
 4588 2324 4889C1   		movq	%rax, %rcx
 4589 2327 488B85E8 		movq	-536(%rbp), %rax
 4589      FDFFFF
 4590 232e 488B5008 		movq	8(%rax), %rdx
 4591 2332 488B85E8 		movq	-536(%rbp), %rax
 4591      FDFFFF
 4592 2339 488B7010 		movq	16(%rax), %rsi
 4593 233d 488D8510 		leaq	-496(%rbp), %rax
 4593      FEFFFF
 4594 2344 4589E8   		movl	%r13d, %r8d
 4595 2347 4889C7   		movq	%rax, %rdi
 4596 234a E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 4596      00
 4597              		.loc 3 135 0 discriminator 11
 4598 234f 488D8510 		leaq	-496(%rbp), %rax
 4598      FEFFFF
 4599 2356 4C89E2   		movq	%r12, %rdx
 4600 2359 4889C6   		movq	%rax, %rsi
 4601 235c 4889DF   		movq	%rbx, %rdi
 4602 235f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4602      00
 4603              	.LEHE128:
 4604              		.loc 3 135 0 discriminator 13
 4605 2364 E8000000 		call	__cxa_end_catch@PLT
 4605      00
 4606              	.LBE79:
 4607 2369 E9950100 		jmp	.L227
 4607      00
 4608              	.L232:
 4609              	.LBB80:
 4610              		.loc 3 135 0
 4611 236e 4889C7   		movq	%rax, %rdi
 4612 2371 E8000000 		call	__cxa_begin_catch@PLT
 4612      00
 4613 2376 48898500 		movq	%rax, -512(%rbp)
 4613      FEFFFF
 4614              	.LBB81:
 4615 237d 488D8530 		leaq	-464(%rbp), %rax
 4615      FEFFFF
 4616 2384 4889C7   		movq	%rax, %rdi
 4617              	.LEHB129:
 4618 2387 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 4618      00
 4619              	.LEHE129:
 4620              		.loc 3 135 0 discriminator 15
 4621 238c 488D8530 		leaq	-464(%rbp), %rax
 4621      FEFFFF
 4622 2393 488D3500 		leaq	.LC3(%rip), %rsi
 4622      000000
 4623 239a 4889C7   		movq	%rax, %rdi
 4624              	.LEHB130:
 4625 239d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4625      00
 4626 23a2 4889C3   		movq	%rax, %rbx
 4627 23a5 488B8500 		movq	-512(%rbp), %rax
 4627      FEFFFF
 4628 23ac 488B00   		movq	(%rax), %rax
 4629 23af 4883C010 		addq	$16, %rax
 4630 23b3 488B00   		movq	(%rax), %rax
 4631 23b6 488B9500 		movq	-512(%rbp), %rdx
 4631      FEFFFF
 4632 23bd 4889D7   		movq	%rdx, %rdi
 4633 23c0 FFD0     		call	*%rax
 4634              	.LVL13:
 4635 23c2 4889C6   		movq	%rax, %rsi
 4636 23c5 4889DF   		movq	%rbx, %rdi
 4637 23c8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 4637      00
 4638              		.loc 3 135 0 discriminator 19
 4639 23cd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4639      00
 4640 23d2 488B18   		movq	(%rax), %rbx
 4641 23d5 488D8530 		leaq	-464(%rbp), %rax
 4641      FEFFFF
 4642 23dc 4889C7   		movq	%rax, %rdi
 4643 23df E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 4643      00
 4644              		.loc 3 135 0 discriminator 21
 4645 23e4 4889C2   		movq	%rax, %rdx
 4646 23e7 488B85E8 		movq	-536(%rbp), %rax
 4646      FDFFFF
 4647 23ee 4883C008 		addq	$8, %rax
 4648 23f2 4889C6   		movq	%rax, %rsi
 4649 23f5 4889DF   		movq	%rbx, %rdi
 4650 23f8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4650      00
 4651              	.LEHE130:
 4652              		.loc 3 135 0 discriminator 25
 4653 23fd 488D8530 		leaq	-464(%rbp), %rax
 4653      FEFFFF
 4654 2404 4889C7   		movq	%rax, %rdi
 4655              	.LEHB131:
 4656 2407 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4656      00
 4657              	.LEHE131:
 4658              	.LBE81:
 4659              		.loc 3 135 0 discriminator 26
 4660 240c E8000000 		call	__cxa_end_catch@PLT
 4660      00
 4661              	.LBE80:
 4662 2411 E9ED0000 		jmp	.L227
 4662      00
 4663              	.L247:
 4664              		.loc 3 135 0
 4665 2416 4889C7   		movq	%rax, %rdi
 4666 2419 E8000000 		call	__cxa_begin_catch@PLT
 4666      00
 4667 241e 80BDFFFD 		cmpb	$0, -513(%rbp)
 4667      FFFF00
 4668 2425 7445     		je	.L234
 4669              	.LEHB132:
 4670              		.loc 3 135 0 discriminator 28
 4671 2427 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4671      00
 4672 242c 488B18   		movq	(%rax), %rbx
 4673 242f 488B85E8 		movq	-536(%rbp), %rax
 4673      FDFFFF
 4674 2436 488D4808 		leaq	8(%rax), %rcx
 4675 243a 488D8510 		leaq	-496(%rbp), %rax
 4675      FEFFFF
 4676 2441 BA870000 		movl	$135, %edx
 4676      00
 4677 2446 4889CE   		movq	%rcx, %rsi
 4678 2449 4889C7   		movq	%rax, %rdi
 4679 244c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4679      00
 4680              		.loc 3 135 0 discriminator 33
 4681 2451 488D8510 		leaq	-496(%rbp), %rax
 4681      FEFFFF
 4682 2458 488D1500 		leaq	.LC4(%rip), %rdx
 4682      000000
 4683 245f 4889C6   		movq	%rax, %rsi
 4684 2462 4889DF   		movq	%rbx, %rdi
 4685 2465 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4685      00
 4686 246a EB43     		jmp	.L235
 4687              	.L234:
 4688              		.loc 3 135 0 discriminator 29
 4689 246c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4689      00
 4690 2471 488B18   		movq	(%rax), %rbx
 4691 2474 488B85E8 		movq	-536(%rbp), %rax
 4691      FDFFFF
 4692 247b 488D4808 		leaq	8(%rax), %rcx
 4693 247f 488D8510 		leaq	-496(%rbp), %rax
 4693      FEFFFF
 4694 2486 BA870000 		movl	$135, %edx
 4694      00
 4695 248b 4889CE   		movq	%rcx, %rsi
 4696 248e 4889C7   		movq	%rax, %rdi
 4697 2491 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4697      00
 4698              		.loc 3 135 0 discriminator 40
 4699 2496 488D8510 		leaq	-496(%rbp), %rax
 4699      FEFFFF
 4700 249d 488D1500 		leaq	.LC5(%rip), %rdx
 4700      000000
 4701 24a4 4889C6   		movq	%rax, %rsi
 4702 24a7 4889DF   		movq	%rbx, %rdi
 4703 24aa E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4703      00
 4704              	.LEHE132:
 4705              	.L235:
 4706              	.LEHB133:
 4707              		.loc 3 135 0 discriminator 43
 4708 24af E8000000 		call	__cxa_end_catch@PLT
 4708      00
 4709 24b4 EB4D     		jmp	.L227
 4710              	.L243:
 4711 24b6 4889C3   		movq	%rax, %rbx
 4712              	.LBB83:
 4713              		.loc 3 135 0
 4714 24b9 E8000000 		call	__cxa_end_catch@PLT
 4714      00
 4715 24be 4889D8   		movq	%rbx, %rax
 4716 24c1 4889C7   		movq	%rax, %rdi
 4717 24c4 E8000000 		call	_Unwind_Resume@PLT
 4717      00
 4718              	.LEHE133:
 4719              	.L245:
 4720 24c9 4889C3   		movq	%rax, %rbx
 4721              	.LBE83:
 4722              	.LBB84:
 4723              	.LBB82:
 4724 24cc 488D8530 		leaq	-464(%rbp), %rax
 4724      FEFFFF
 4725 24d3 4889C7   		movq	%rax, %rdi
 4726 24d6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 4726      00
 4727 24db EB03     		jmp	.L238
 4728              	.L244:
 4729 24dd 4889C3   		movq	%rax, %rbx
 4730              	.L238:
 4731              	.LBE82:
 4732 24e0 E8000000 		call	__cxa_end_catch@PLT
 4732      00
 4733 24e5 4889D8   		movq	%rbx, %rax
 4734 24e8 4889C7   		movq	%rax, %rdi
 4735              	.LEHB134:
 4736 24eb E8000000 		call	_Unwind_Resume@PLT
 4736      00
 4737              	.LEHE134:
 4738              	.L246:
 4739 24f0 4889C3   		movq	%rax, %rbx
 4740              	.LBE84:
 4741 24f3 E8000000 		call	__cxa_end_catch@PLT
 4741      00
 4742 24f8 4889D8   		movq	%rbx, %rax
 4743 24fb 4889C7   		movq	%rax, %rdi
 4744              	.LEHB135:
 4745 24fe E8000000 		call	_Unwind_Resume@PLT
 4745      00
 4746              	.LEHE135:
 4747              	.L227:
 4748 2503 488B45D8 		movq	-40(%rbp), %rax
 4749 2507 64483304 		xorq	%fs:40, %rax
 4749      25280000 
 4749      00
 4750 2510 7405     		je	.L240
 4751 2512 E8000000 		call	__stack_chk_fail@PLT
 4751      00
 4752              	.L240:
 4753 2517 4881C408 		addq	$520, %rsp
 4753      020000
 4754 251e 5B       		popq	%rbx
 4755 251f 415C     		popq	%r12
 4756 2521 415D     		popq	%r13
 4757 2523 5D       		popq	%rbp
 4758              		.cfi_def_cfa 7, 8
 4759 2524 C3       		ret
 4760              		.cfi_endproc
 4761              	.LFE1433:
 4762              		.section	.gcc_except_table
 4763              		.align 4
 4764              	.LLSDA1433:
 4765 0390 FF       		.byte	0xff
 4766 0391 9B       		.byte	0x9b
 4767 0392 55       		.uleb128 .LLSDATT1433-.LLSDATTD1433
 4768              	.LLSDATTD1433:
 4769 0393 01       		.byte	0x1
 4770 0394 3E       		.uleb128 .LLSDACSE1433-.LLSDACSB1433
 4771              	.LLSDACSB1433:
 4772 0395 45       		.uleb128 .LEHB125-.LFB1433
 4773 0396 05       		.uleb128 .LEHE125-.LEHB125
 4774 0397 9F01     		.uleb128 .L241-.LFB1433
 4775 0399 05       		.uleb128 0x5
 4776 039a 69       		.uleb128 .LEHB126-.LFB1433
 4777 039b 05       		.uleb128 .LEHE126-.LEHB126
 4778 039c 8201     		.uleb128 .L242-.LFB1433
 4779 039e 07       		.uleb128 0x7
 4780 039f 78       		.uleb128 .LEHB127-.LFB1433
 4781 03a0 05       		.uleb128 .LEHE127-.LEHB127
 4782 03a1 9F01     		.uleb128 .L241-.LFB1433
 4783 03a3 05       		.uleb128 0x5
 4784 03a4 C301     		.uleb128 .LEHB128-.LFB1433
 4785 03a6 8901     		.uleb128 .LEHE128-.LEHB128
 4786 03a8 9E05     		.uleb128 .L243-.LFB1433
 4787 03aa 00       		.uleb128 0
 4788 03ab EF02     		.uleb128 .LEHB129-.LFB1433
 4789 03ad 05       		.uleb128 .LEHE129-.LEHB129
 4790 03ae C505     		.uleb128 .L244-.LFB1433
 4791 03b0 00       		.uleb128 0
 4792 03b1 8503     		.uleb128 .LEHB130-.LFB1433
 4793 03b3 60       		.uleb128 .LEHE130-.LEHB130
 4794 03b4 B105     		.uleb128 .L245-.LFB1433
 4795 03b6 00       		.uleb128 0
 4796 03b7 EF03     		.uleb128 .LEHB131-.LFB1433
 4797 03b9 05       		.uleb128 .LEHE131-.LEHB131
 4798 03ba C505     		.uleb128 .L244-.LFB1433
 4799 03bc 00       		.uleb128 0
 4800 03bd 8F04     		.uleb128 .LEHB132-.LFB1433
 4801 03bf 8801     		.uleb128 .LEHE132-.LEHB132
 4802 03c1 D805     		.uleb128 .L246-.LFB1433
 4803 03c3 00       		.uleb128 0
 4804 03c4 9705     		.uleb128 .LEHB133-.LFB1433
 4805 03c6 1A       		.uleb128 .LEHE133-.LEHB133
 4806 03c7 00       		.uleb128 0
 4807 03c8 00       		.uleb128 0
 4808 03c9 D305     		.uleb128 .LEHB134-.LFB1433
 4809 03cb 05       		.uleb128 .LEHE134-.LEHB134
 4810 03cc 00       		.uleb128 0
 4811 03cd 00       		.uleb128 0
 4812 03ce E605     		.uleb128 .LEHB135-.LFB1433
 4813 03d0 05       		.uleb128 .LEHE135-.LEHB135
 4814 03d1 00       		.uleb128 0
 4815 03d2 00       		.uleb128 0
 4816              	.LLSDACSE1433:
 4817 03d3 03       		.byte	0x3
 4818 03d4 00       		.byte	0
 4819 03d5 02       		.byte	0x2
 4820 03d6 7D       		.byte	0x7d
 4821 03d7 01       		.byte	0x1
 4822 03d8 7D       		.byte	0x7d
 4823 03d9 00       		.byte	0
 4824 03da 7D       		.byte	0x7d
 4825 03db 00       		.align 4
 4826 03dc 00000000 		.long	0
 4827              	
 4828 03e0 00000000 		.long	DW.ref._ZTISt9exception-.
 4829 03e4 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 4830              	.LLSDATT1433:
 4831              		.text
 4833              		.section	.rodata
 4834              	.LC34:
 4835 06a4 6661696C 		.string	"fail.h"
 4835      2E6800
 4836              	.LC35:
 4837 06ab 4661696C 		.string	"FailedTest"
 4837      65645465 
 4837      737400
 4838              	.LC36:
 4839 06b6 65787065 		.string	"expected 1 but was 2"
 4839      63746564 
 4839      20312062 
 4839      75742077 
 4839      61732032 
 4840              	.LC37:
 4841 06cb 53756363 		.string	"SucceededTest"
 4841      65656465 
 4841      64546573 
 4841      7400
 4842 06d9 00000000 		.align 8
 4842      000000
 4843              	.LC39:
 4844 06e0 3C3F786D 		.ascii	"<?xml versio"
 4844      6C207665 
 4844      7273696F 
 4845 06ec 6E3D2231 		.string	"n=\"1.0\"?><unittest-results tests=\"2\" failedtests=\"1\" failures=\"1\" time=\"1.1\"><t
 4845      2E30223F 
 4845      3E3C756E 
 4845      69747465 
 4845      73742D72 
 4846              		.text
 4847 2525 90       		.align 2
 4849              	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv:
 4850              	.LFB1437:
 136:TestXmlTestReporter.cpp **** {
 4851              		.loc 3 136 0 is_stmt 1
 4852              		.cfi_startproc
 4853              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4854              		.cfi_lsda 0x1b,.LLSDA1437
 4855 2526 55       		pushq	%rbp
 4856              		.cfi_def_cfa_offset 16
 4857              		.cfi_offset 6, -16
 4858 2527 4889E5   		movq	%rsp, %rbp
 4859              		.cfi_def_cfa_register 6
 4860 252a 53       		pushq	%rbx
 4861 252b 4881ECB8 		subq	$184, %rsp
 4861      000000
 4862              		.cfi_offset 3, -24
 4863 2532 4889BD48 		movq	%rdi, -184(%rbp)
 4863      FFFFFF
 4864              		.loc 3 136 0
 4865 2539 64488B04 		movq	%fs:40, %rax
 4865      25280000 
 4865      00
 4866 2542 488945E8 		movq	%rax, -24(%rbp)
 4867 2546 31C0     		xorl	%eax, %eax
 137:TestXmlTestReporter.cpp ****     TestDetails const failedDetails("FailedTest", "suite", "fail.h", 1);
 4868              		.loc 3 137 0
 4869 2548 488D8560 		leaq	-160(%rbp), %rax
 4869      FFFFFF
 4870 254f 41B80100 		movl	$1, %r8d
 4870      0000
 4871 2555 488D0D00 		leaq	.LC34(%rip), %rcx
 4871      000000
 4872 255c 488D1500 		leaq	.LC7(%rip), %rdx
 4872      000000
 4873 2563 488D3500 		leaq	.LC35(%rip), %rsi
 4873      000000
 4874 256a 4889C7   		movq	%rax, %rdi
 4875              	.LEHB136:
 4876 256d E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 4876      00
 138:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(failedDetails);
 4877              		.loc 3 138 0
 4878 2572 488B8548 		movq	-184(%rbp), %rax
 4878      FFFFFF
 4879 2579 488D9078 		leaq	376(%rax), %rdx
 4879      010000
 4880 2580 488D8560 		leaq	-160(%rbp), %rax
 4880      FFFFFF
 4881 2587 4889C6   		movq	%rax, %rsi
 4882 258a 4889D7   		movq	%rdx, %rdi
 4883 258d E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 4883      00
 139:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails, "expected 1 but was 2");
 4884              		.loc 3 139 0
 4885 2592 488B8548 		movq	-184(%rbp), %rax
 4885      FFFFFF
 4886 2599 488D8878 		leaq	376(%rax), %rcx
 4886      010000
 4887 25a0 488D8560 		leaq	-160(%rbp), %rax
 4887      FFFFFF
 4888 25a7 488D1500 		leaq	.LC36(%rip), %rdx
 4888      000000
 4889 25ae 4889C6   		movq	%rax, %rsi
 4890 25b1 4889CF   		movq	%rcx, %rdi
 4891 25b4 E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 4891      00
 140:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(failedDetails, 0.1f);
 4892              		.loc 3 140 0
 4893 25b9 488B8548 		movq	-184(%rbp), %rax
 4893      FFFFFF
 4894 25c0 488D9078 		leaq	376(%rax), %rdx
 4894      010000
 4895 25c7 488D8560 		leaq	-160(%rbp), %rax
 4895      FFFFFF
 4896 25ce F30F1005 		movss	.LC10(%rip), %xmm0
 4896      00000000 
 4897 25d6 4889C6   		movq	%rax, %rsi
 4898 25d9 4889D7   		movq	%rdx, %rdi
 4899 25dc E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 4899      00
 141:TestXmlTestReporter.cpp **** 
 142:TestXmlTestReporter.cpp ****     TestDetails const succeededDetails("SucceededTest", "suite", "", 0);
 4900              		.loc 3 142 0
 4901 25e1 488D4580 		leaq	-128(%rbp), %rax
 4902 25e5 41B80000 		movl	$0, %r8d
 4902      0000
 4903 25eb 488D0D00 		leaq	.LC14(%rip), %rcx
 4903      000000
 4904 25f2 488D1500 		leaq	.LC7(%rip), %rdx
 4904      000000
 4905 25f9 488D3500 		leaq	.LC37(%rip), %rsi
 4905      000000
 4906 2600 4889C7   		movq	%rax, %rdi
 4907 2603 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 4907      00
 143:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(succeededDetails);
 4908              		.loc 3 143 0
 4909 2608 488B8548 		movq	-184(%rbp), %rax
 4909      FFFFFF
 4910 260f 488D9078 		leaq	376(%rax), %rdx
 4910      010000
 4911 2616 488D4580 		leaq	-128(%rbp), %rax
 4912 261a 4889C6   		movq	%rax, %rsi
 4913 261d 4889D7   		movq	%rdx, %rdi
 4914 2620 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 4914      00
 144:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(succeededDetails, 1.0f);
 4915              		.loc 3 144 0
 4916 2625 488B8548 		movq	-184(%rbp), %rax
 4916      FFFFFF
 4917 262c 488D9078 		leaq	376(%rax), %rdx
 4917      010000
 4918 2633 488D4580 		leaq	-128(%rbp), %rax
 4919 2637 F30F1005 		movss	.LC16(%rip), %xmm0
 4919      00000000 
 4920 263f 4889C6   		movq	%rax, %rsi
 4921 2642 4889D7   		movq	%rdx, %rdi
 4922 2645 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 4922      00
 145:TestXmlTestReporter.cpp ****     reporter.ReportSummary(2, 1, 1, 1.1f);
 4923              		.loc 3 145 0
 4924 264a 488B8548 		movq	-184(%rbp), %rax
 4924      FFFFFF
 4925 2651 48057801 		addq	$376, %rax
 4925      0000
 4926 2657 F30F1005 		movss	.LC38(%rip), %xmm0
 4926      00000000 
 4927 265f B9010000 		movl	$1, %ecx
 4927      00
 4928 2664 BA010000 		movl	$1, %edx
 4928      00
 4929 2669 BE020000 		movl	$2, %esi
 4929      00
 4930 266e 4889C7   		movq	%rax, %rdi
 4931 2671 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 4931      00
 4932              	.LEHE136:
 146:TestXmlTestReporter.cpp **** 
 147:TestXmlTestReporter.cpp ****     char const* expected =
 4933              		.loc 3 147 0
 4934 2676 488D0500 		leaq	.LC39(%rip), %rax
 4934      000000
 4935 267d 48898558 		movq	%rax, -168(%rbp)
 4935      FFFFFF
 4936              	.LEHB137:
 148:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 149:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"2\" failedtests=\"1\" failures=\"1\" time=\"1.1\">"
 150:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"FailedTest\" time=\"0.1\">"
 151:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(1) : expected 1 but was 2\"/>"
 152:TestXmlTestReporter.cpp ****         "</test>"
 153:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"SucceededTest\" time=\"1\"/>"
 154:TestXmlTestReporter.cpp ****         "</unittest-results>";
 155:TestXmlTestReporter.cpp **** 
 156:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 4937              		.loc 3 156 0
 4938 2684 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4938      00
 4939 2689 488B08   		movq	(%rax), %rcx
 4940 268c 488D45A0 		leaq	-96(%rbp), %rax
 4941 2690 BA9C0000 		movl	$156, %edx
 4941      00
 4942 2695 4889CE   		movq	%rcx, %rsi
 4943 2698 4889C7   		movq	%rax, %rdi
 4944 269b E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4944      00
 4945              		.loc 3 156 0 is_stmt 0 discriminator 2
 4946 26a0 488B9548 		movq	-184(%rbp), %rdx
 4946      FFFFFF
 4947 26a7 488D45C0 		leaq	-64(%rbp), %rax
 4948 26ab 4889D6   		movq	%rdx, %rsi
 4949 26ae 4889C7   		movq	%rax, %rdi
 4950 26b1 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 4950      00
 4951              	.LEHE137:
 4952              	.LEHB138:
 4953              		.loc 3 156 0 discriminator 4
 4954 26b6 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4954      00
 4955 26bb 488B00   		movq	(%rax), %rax
 4956 26be 488D4DA0 		leaq	-96(%rbp), %rcx
 4957 26c2 488D55C0 		leaq	-64(%rbp), %rdx
 4958 26c6 488DB558 		leaq	-168(%rbp), %rsi
 4958      FFFFFF
 4959 26cd 4889C7   		movq	%rax, %rdi
 4960 26d0 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 4960      00
 4961              	.LEHE138:
 4962              		.loc 3 156 0 discriminator 8
 4963 26d5 488D45C0 		leaq	-64(%rbp), %rax
 4964 26d9 4889C7   		movq	%rax, %rdi
 4965              	.LEHB139:
 4966 26dc E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 4966      00
 4967              	.LEHE139:
 157:TestXmlTestReporter.cpp **** }
 4968              		.loc 3 157 0 is_stmt 1
 4969 26e1 EB70     		jmp	.L248
 4970              	.L255:
 4971 26e3 4889C3   		movq	%rax, %rbx
 156:TestXmlTestReporter.cpp **** }
 4972              		.loc 3 156 0
 4973 26e6 488D45C0 		leaq	-64(%rbp), %rax
 4974 26ea 4889C7   		movq	%rax, %rdi
 4975 26ed E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 4975      00
 4976 26f2 4889D8   		movq	%rbx, %rax
 4977 26f5 EB00     		jmp	.L250
 4978              	.L254:
 4979              	.L250:
 4980 26f7 4889C7   		movq	%rax, %rdi
 4981 26fa E8000000 		call	__cxa_begin_catch@PLT
 4981      00
 4982              	.LEHB140:
 4983 26ff E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 4983      00
 4984 2704 488B18   		movq	(%rax), %rbx
 4985 2707 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 4985      00
 156:TestXmlTestReporter.cpp **** }
 4986              		.loc 3 156 0 is_stmt 0 discriminator 12
 4987 270c 488B08   		movq	(%rax), %rcx
 4988 270f 488D45A0 		leaq	-96(%rbp), %rax
 4989 2713 BA9C0000 		movl	$156, %edx
 4989      00
 4990 2718 4889CE   		movq	%rcx, %rsi
 4991 271b 4889C7   		movq	%rax, %rdi
 4992 271e E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 4992      00
 156:TestXmlTestReporter.cpp **** }
 4993              		.loc 3 156 0 discriminator 16
 4994 2723 488D45A0 		leaq	-96(%rbp), %rax
 4995 2727 488D1500 		leaq	.LC12(%rip), %rdx
 4995      000000
 4996 272e 4889C6   		movq	%rax, %rsi
 4997 2731 4889DF   		movq	%rbx, %rdi
 4998 2734 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 4998      00
 4999              	.LEHE140:
 5000              	.LEHB141:
 156:TestXmlTestReporter.cpp **** }
 5001              		.loc 3 156 0 discriminator 18
 5002 2739 E8000000 		call	__cxa_end_catch@PLT
 5002      00
 5003              	.LEHE141:
 5004              		.loc 3 157 0 is_stmt 1 discriminator 18
 5005 273e EB13     		jmp	.L248
 5006              	.L256:
 5007 2740 4889C3   		movq	%rax, %rbx
 156:TestXmlTestReporter.cpp **** }
 5008              		.loc 3 156 0
 5009 2743 E8000000 		call	__cxa_end_catch@PLT
 5009      00
 5010 2748 4889D8   		movq	%rbx, %rax
 5011 274b 4889C7   		movq	%rax, %rdi
 5012              	.LEHB142:
 5013 274e E8000000 		call	_Unwind_Resume@PLT
 5013      00
 5014              	.LEHE142:
 5015              	.L248:
 5016              		.loc 3 157 0
 5017 2753 488B45E8 		movq	-24(%rbp), %rax
 5018 2757 64483304 		xorq	%fs:40, %rax
 5018      25280000 
 5018      00
 5019 2760 7405     		je	.L253
 5020 2762 E8000000 		call	__stack_chk_fail@PLT
 5020      00
 5021              	.L253:
 5022 2767 4881C4B8 		addq	$184, %rsp
 5022      000000
 5023 276e 5B       		popq	%rbx
 5024 276f 5D       		popq	%rbp
 5025              		.cfi_def_cfa 7, 8
 5026 2770 C3       		ret
 5027              		.cfi_endproc
 5028              	.LFE1437:
 5029              		.section	.gcc_except_table
 5030              		.align 4
 5031              	.LLSDA1437:
 5032 03e8 FF       		.byte	0xff
 5033 03e9 9B       		.byte	0x9b
 5034 03ea 31       		.uleb128 .LLSDATT1437-.LLSDATTD1437
 5035              	.LLSDATTD1437:
 5036 03eb 01       		.byte	0x1
 5037 03ec 27       		.uleb128 .LLSDACSE1437-.LLSDACSB1437
 5038              	.LLSDACSB1437:
 5039 03ed 47       		.uleb128 .LEHB136-.LFB1437
 5040 03ee 8902     		.uleb128 .LEHE136-.LEHB136
 5041 03f0 00       		.uleb128 0
 5042 03f1 00       		.uleb128 0
 5043 03f2 DE02     		.uleb128 .LEHB137-.LFB1437
 5044 03f4 32       		.uleb128 .LEHE137-.LEHB137
 5045 03f5 D103     		.uleb128 .L254-.LFB1437
 5046 03f7 01       		.uleb128 0x1
 5047 03f8 9003     		.uleb128 .LEHB138-.LFB1437
 5048 03fa 1F       		.uleb128 .LEHE138-.LEHB138
 5049 03fb BD03     		.uleb128 .L255-.LFB1437
 5050 03fd 03       		.uleb128 0x3
 5051 03fe B603     		.uleb128 .LEHB139-.LFB1437
 5052 0400 05       		.uleb128 .LEHE139-.LEHB139
 5053 0401 D103     		.uleb128 .L254-.LFB1437
 5054 0403 01       		.uleb128 0x1
 5055 0404 D903     		.uleb128 .LEHB140-.LFB1437
 5056 0406 3A       		.uleb128 .LEHE140-.LEHB140
 5057 0407 9A04     		.uleb128 .L256-.LFB1437
 5058 0409 00       		.uleb128 0
 5059 040a 9304     		.uleb128 .LEHB141-.LFB1437
 5060 040c 05       		.uleb128 .LEHE141-.LEHB141
 5061 040d 00       		.uleb128 0
 5062 040e 00       		.uleb128 0
 5063 040f A804     		.uleb128 .LEHB142-.LFB1437
 5064 0411 05       		.uleb128 .LEHE142-.LEHB142
 5065 0412 00       		.uleb128 0
 5066 0413 00       		.uleb128 0
 5067              	.LLSDACSE1437:
 5068 0414 01       		.byte	0x1
 5069 0415 00       		.byte	0
 5070 0416 00       		.byte	0
 5071 0417 7D       		.byte	0x7d
 5072              		.align 4
 5073 0418 00000000 		.long	0
 5074              	
 5075              	.LLSDATT1437:
 5076              		.text
 5078 2771 90       		.align 2
 5080              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC2ERKN8UnitTest11TestDetailsE:
 5081              	.LFB1439:
 158:TestXmlTestReporter.cpp **** 
 159:TestXmlTestReporter.cpp **** TEST_FIXTURE(XmlTestReporterFixture, MultipleFailures)
 5082              		.loc 3 159 0
 5083              		.cfi_startproc
 5084 2772 55       		pushq	%rbp
 5085              		.cfi_def_cfa_offset 16
 5086              		.cfi_offset 6, -16
 5087 2773 4889E5   		movq	%rsp, %rbp
 5088              		.cfi_def_cfa_register 6
 5089 2776 4883EC10 		subq	$16, %rsp
 5090 277a 48897DF8 		movq	%rdi, -8(%rbp)
 5091 277e 488975F0 		movq	%rsi, -16(%rbp)
 5092              	.LBB85:
 5093              		.loc 3 159 0
 5094 2782 488B45F8 		movq	-8(%rbp), %rax
 5095 2786 4889C7   		movq	%rax, %rdi
 5096 2789 E872D8FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
 5096      FF
 5097 278e 488B45F8 		movq	-8(%rbp), %rax
 5098 2792 488B55F0 		movq	-16(%rbp), %rdx
 5099 2796 488990A0 		movq	%rdx, 416(%rax)
 5099      010000
 5100              	.LBE85:
 5101 279d 90       		nop
 5102 279e C9       		leave
 5103              		.cfi_def_cfa 7, 8
 5104 279f C3       		ret
 5105              		.cfi_endproc
 5106              	.LFE1439:
 5108              		.set	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE,
 5109              		.section	.rodata
 5110              	.LC40:
 5111 07ed 4D756C74 		.string	"MultipleFailures"
 5111      69706C65 
 5111      4661696C 
 5111      75726573 
 5111      00
 5112              		.text
 5113              		.align 2
 5115              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC2Ev:
 5116              	.LFB1442:
 5117              		.loc 3 159 0
 5118              		.cfi_startproc
 5119 27a0 55       		pushq	%rbp
 5120              		.cfi_def_cfa_offset 16
 5121              		.cfi_offset 6, -16
 5122 27a1 4889E5   		movq	%rsp, %rbp
 5123              		.cfi_def_cfa_register 6
 5124 27a4 53       		pushq	%rbx
 5125 27a5 4883EC18 		subq	$24, %rsp
 5126              		.cfi_offset 3, -24
 5127 27a9 48897DE8 		movq	%rdi, -24(%rbp)
 5128              	.LBB86:
 5129              		.loc 3 159 0
 5130 27ad 488B5DE8 		movq	-24(%rbp), %rbx
 5131 27b1 E8000000 		call	_ZN13UnitTestSuite12GetSuiteNameEv
 5131      00
 5132 27b6 41B89F00 		movl	$159, %r8d
 5132      0000
 5133 27bc 488D0D00 		leaq	.LC1(%rip), %rcx
 5133      000000
 5134 27c3 4889C2   		movq	%rax, %rdx
 5135 27c6 488D3500 		leaq	.LC40(%rip), %rsi
 5135      000000
 5136 27cd 4889DF   		movq	%rbx, %rdi
 5137 27d0 E8000000 		call	_ZN8UnitTest4TestC2EPKcS2_S2_i@PLT
 5137      00
 5138 27d5 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE(%rip), %rdx
 5138      000000
 5139 27dc 488B45E8 		movq	-24(%rbp), %rax
 5140 27e0 488910   		movq	%rdx, (%rax)
 5141              	.LBE86:
 5142 27e3 90       		nop
 5143 27e4 4883C418 		addq	$24, %rsp
 5144 27e8 5B       		popq	%rbx
 5145 27e9 5D       		popq	%rbp
 5146              		.cfi_def_cfa 7, 8
 5147 27ea C3       		ret
 5148              		.cfi_endproc
 5149              	.LFE1442:
 5151              		.set	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev,_ZN12_GLOBAL__N_142TestXmlT
 5152              		.local	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE
 5153              		.comm	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE,56,32
 5154              		.local	_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE
 5155              		.comm	_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE,1,1
 5156 27eb 90       		.align 2
 5158              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD2Ev:
 5159              	.LFB1446:
 5160              		.loc 3 159 0
 5161              		.cfi_startproc
 5162 27ec 55       		pushq	%rbp
 5163              		.cfi_def_cfa_offset 16
 5164              		.cfi_offset 6, -16
 5165 27ed 4889E5   		movq	%rsp, %rbp
 5166              		.cfi_def_cfa_register 6
 5167 27f0 4883EC10 		subq	$16, %rsp
 5168 27f4 48897DF8 		movq	%rdi, -8(%rbp)
 5169              	.LBB87:
 5170              		.loc 3 159 0
 5171 27f8 488B45F8 		movq	-8(%rbp), %rax
 5172 27fc 4889C7   		movq	%rax, %rdi
 5173 27ff E858D8FF 		call	_ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
 5173      FF
 5174              	.LBE87:
 5175 2804 90       		nop
 5176 2805 C9       		leave
 5177              		.cfi_def_cfa 7, 8
 5178 2806 C3       		ret
 5179              		.cfi_endproc
 5180              	.LFE1446:
 5182              		.set	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev,_ZN12_GLOBAL__N_144XmlTes
 5183 2807 90       		.align 2
 5185              	_ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv:
 5186              	.LFB1444:
 5187              		.loc 3 159 0
 5188              		.cfi_startproc
 5189              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5190              		.cfi_lsda 0x1b,.LLSDA1444
 5191 2808 55       		pushq	%rbp
 5192              		.cfi_def_cfa_offset 16
 5193              		.cfi_offset 6, -16
 5194 2809 4889E5   		movq	%rsp, %rbp
 5195              		.cfi_def_cfa_register 6
 5196 280c 4155     		pushq	%r13
 5197 280e 4154     		pushq	%r12
 5198 2810 53       		pushq	%rbx
 5199 2811 4881EC08 		subq	$520, %rsp
 5199      020000
 5200              		.cfi_offset 13, -24
 5201              		.cfi_offset 12, -32
 5202              		.cfi_offset 3, -40
 5203 2818 4889BDE8 		movq	%rdi, -536(%rbp)
 5203      FDFFFF
 5204              		.loc 3 159 0
 5205 281f 64488B04 		movq	%fs:40, %rax
 5205      25280000 
 5205      00
 5206 2828 488945D8 		movq	%rax, -40(%rbp)
 5207 282c 31C0     		xorl	%eax, %eax
 5208 282e C685FFFD 		movb	$0, -513(%rbp)
 5208      FFFF00
 5209              	.LBB88:
 5210 2835 488B85E8 		movq	-536(%rbp), %rax
 5210      FDFFFF
 5211 283c 488D5008 		leaq	8(%rax), %rdx
 5212 2840 488D8530 		leaq	-464(%rbp), %rax
 5212      FEFFFF
 5213 2847 4889D6   		movq	%rdx, %rsi
 5214 284a 4889C7   		movq	%rax, %rdi
 5215              	.LEHB143:
 5216 284d E820FFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE
 5216      FF
 5217              	.LEHE143:
 5218              		.loc 3 159 0 is_stmt 0 discriminator 1
 5219 2852 C685FFFD 		movb	$1, -513(%rbp)
 5219      FFFF01
 5220 2859 488B85E8 		movq	-536(%rbp), %rax
 5220      FDFFFF
 5221 2860 488D5008 		leaq	8(%rax), %rdx
 5222 2864 488D8530 		leaq	-464(%rbp), %rax
 5222      FEFFFF
 5223 286b 4889D6   		movq	%rdx, %rsi
 5224 286e 4889C7   		movq	%rax, %rdi
 5225              	.LEHB144:
 5226 2871 E84C1800 		call	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT
 5226      00
 5227              	.LEHE144:
 5228              		.loc 3 159 0 discriminator 3
 5229 2876 488D8530 		leaq	-464(%rbp), %rax
 5229      FEFFFF
 5230 287d 4889C7   		movq	%rax, %rdi
 5231              	.LEHB145:
 5232 2880 E867FFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
 5232      FF
 5233              	.LEHE145:
 5234              	.LBE88:
 5235              		.loc 3 159 0
 5236 2885 E9690200 		jmp	.L260
 5236      00
 5237              	.L275:
 5238 288a 4989C4   		movq	%rax, %r12
 5239 288d 4889D3   		movq	%rdx, %rbx
 5240              	.LBB89:
 5241 2890 488D8530 		leaq	-464(%rbp), %rax
 5241      FEFFFF
 5242 2897 4889C7   		movq	%rax, %rdi
 5243 289a E84DFFFF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
 5243      FF
 5244 289f 4C89E0   		movq	%r12, %rax
 5245 28a2 4889DA   		movq	%rbx, %rdx
 5246 28a5 EB00     		jmp	.L262
 5247              	.L274:
 5248              	.L262:
 5249 28a7 4883FA01 		cmpq	$1, %rdx
 5250 28ab 740F     		je	.L264
 5251 28ad 4883FA02 		cmpq	$2, %rdx
 5252 28b1 0F84A700 		je	.L265
 5252      0000
 5253 28b7 E94A0100 		jmp	.L280
 5253      00
 5254              	.L264:
 5255              	.LBE89:
 5256              	.LBB90:
 5257 28bc 4889C7   		movq	%rax, %rdi
 5258 28bf E8000000 		call	__cxa_begin_catch@PLT
 5258      00
 5259 28c4 48898508 		movq	%rax, -504(%rbp)
 5259      FEFFFF
 5260              	.LEHB146:
 5261 28cb E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5261      00
 5262 28d0 488B18   		movq	(%rax), %rbx
 5263 28d3 488B8508 		movq	-504(%rbp), %rax
 5263      FEFFFF
 5264 28da 488B00   		movq	(%rax), %rax
 5265 28dd 4883C010 		addq	$16, %rax
 5266 28e1 488B00   		movq	(%rax), %rax
 5267 28e4 488B9508 		movq	-504(%rbp), %rdx
 5267      FEFFFF
 5268 28eb 4889D7   		movq	%rdx, %rdi
 5269 28ee FFD0     		call	*%rax
 5270              	.LVL14:
 5271 28f0 4989C4   		movq	%rax, %r12
 5272 28f3 488B8508 		movq	-504(%rbp), %rax
 5272      FEFFFF
 5273 28fa 4889C7   		movq	%rax, %rdi
 5274 28fd E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 5274      00
 5275              		.loc 3 159 0 discriminator 5
 5276 2902 4189C5   		movl	%eax, %r13d
 5277 2905 488B8508 		movq	-504(%rbp), %rax
 5277      FEFFFF
 5278 290c 4889C7   		movq	%rax, %rdi
 5279 290f E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 5279      00
 5280              		.loc 3 159 0 discriminator 7
 5281 2914 4889C1   		movq	%rax, %rcx
 5282 2917 488B85E8 		movq	-536(%rbp), %rax
 5282      FDFFFF
 5283 291e 488B5008 		movq	8(%rax), %rdx
 5284 2922 488B85E8 		movq	-536(%rbp), %rax
 5284      FDFFFF
 5285 2929 488B7010 		movq	16(%rax), %rsi
 5286 292d 488D8510 		leaq	-496(%rbp), %rax
 5286      FEFFFF
 5287 2934 4589E8   		movl	%r13d, %r8d
 5288 2937 4889C7   		movq	%rax, %rdi
 5289 293a E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5289      00
 5290              		.loc 3 159 0 discriminator 11
 5291 293f 488D8510 		leaq	-496(%rbp), %rax
 5291      FEFFFF
 5292 2946 4C89E2   		movq	%r12, %rdx
 5293 2949 4889C6   		movq	%rax, %rsi
 5294 294c 4889DF   		movq	%rbx, %rdi
 5295 294f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5295      00
 5296              	.LEHE146:
 5297              		.loc 3 159 0 discriminator 13
 5298 2954 E8000000 		call	__cxa_end_catch@PLT
 5298      00
 5299              	.LBE90:
 5300 2959 E9950100 		jmp	.L260
 5300      00
 5301              	.L265:
 5302              	.LBB91:
 5303              		.loc 3 159 0
 5304 295e 4889C7   		movq	%rax, %rdi
 5305 2961 E8000000 		call	__cxa_begin_catch@PLT
 5305      00
 5306 2966 48898500 		movq	%rax, -512(%rbp)
 5306      FEFFFF
 5307              	.LBB92:
 5308 296d 488D8530 		leaq	-464(%rbp), %rax
 5308      FEFFFF
 5309 2974 4889C7   		movq	%rax, %rdi
 5310              	.LEHB147:
 5311 2977 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5311      00
 5312              	.LEHE147:
 5313              		.loc 3 159 0 discriminator 15
 5314 297c 488D8530 		leaq	-464(%rbp), %rax
 5314      FEFFFF
 5315 2983 488D3500 		leaq	.LC3(%rip), %rsi
 5315      000000
 5316 298a 4889C7   		movq	%rax, %rdi
 5317              	.LEHB148:
 5318 298d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5318      00
 5319 2992 4889C3   		movq	%rax, %rbx
 5320 2995 488B8500 		movq	-512(%rbp), %rax
 5320      FEFFFF
 5321 299c 488B00   		movq	(%rax), %rax
 5322 299f 4883C010 		addq	$16, %rax
 5323 29a3 488B00   		movq	(%rax), %rax
 5324 29a6 488B9500 		movq	-512(%rbp), %rdx
 5324      FEFFFF
 5325 29ad 4889D7   		movq	%rdx, %rdi
 5326 29b0 FFD0     		call	*%rax
 5327              	.LVL15:
 5328 29b2 4889C6   		movq	%rax, %rsi
 5329 29b5 4889DF   		movq	%rbx, %rdi
 5330 29b8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5330      00
 5331              		.loc 3 159 0 discriminator 19
 5332 29bd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5332      00
 5333 29c2 488B18   		movq	(%rax), %rbx
 5334 29c5 488D8530 		leaq	-464(%rbp), %rax
 5334      FEFFFF
 5335 29cc 4889C7   		movq	%rax, %rdi
 5336 29cf E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5336      00
 5337              		.loc 3 159 0 discriminator 21
 5338 29d4 4889C2   		movq	%rax, %rdx
 5339 29d7 488B85E8 		movq	-536(%rbp), %rax
 5339      FDFFFF
 5340 29de 4883C008 		addq	$8, %rax
 5341 29e2 4889C6   		movq	%rax, %rsi
 5342 29e5 4889DF   		movq	%rbx, %rdi
 5343 29e8 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5343      00
 5344              	.LEHE148:
 5345              		.loc 3 159 0 discriminator 25
 5346 29ed 488D8530 		leaq	-464(%rbp), %rax
 5346      FEFFFF
 5347 29f4 4889C7   		movq	%rax, %rdi
 5348              	.LEHB149:
 5349 29f7 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5349      00
 5350              	.LEHE149:
 5351              	.LBE92:
 5352              		.loc 3 159 0 discriminator 26
 5353 29fc E8000000 		call	__cxa_end_catch@PLT
 5353      00
 5354              	.LBE91:
 5355 2a01 E9ED0000 		jmp	.L260
 5355      00
 5356              	.L280:
 5357              		.loc 3 159 0
 5358 2a06 4889C7   		movq	%rax, %rdi
 5359 2a09 E8000000 		call	__cxa_begin_catch@PLT
 5359      00
 5360 2a0e 80BDFFFD 		cmpb	$0, -513(%rbp)
 5360      FFFF00
 5361 2a15 7445     		je	.L267
 5362              	.LEHB150:
 5363              		.loc 3 159 0 discriminator 28
 5364 2a17 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5364      00
 5365 2a1c 488B18   		movq	(%rax), %rbx
 5366 2a1f 488B85E8 		movq	-536(%rbp), %rax
 5366      FDFFFF
 5367 2a26 488D4808 		leaq	8(%rax), %rcx
 5368 2a2a 488D8510 		leaq	-496(%rbp), %rax
 5368      FEFFFF
 5369 2a31 BA9F0000 		movl	$159, %edx
 5369      00
 5370 2a36 4889CE   		movq	%rcx, %rsi
 5371 2a39 4889C7   		movq	%rax, %rdi
 5372 2a3c E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 5372      00
 5373              		.loc 3 159 0 discriminator 33
 5374 2a41 488D8510 		leaq	-496(%rbp), %rax
 5374      FEFFFF
 5375 2a48 488D1500 		leaq	.LC4(%rip), %rdx
 5375      000000
 5376 2a4f 4889C6   		movq	%rax, %rsi
 5377 2a52 4889DF   		movq	%rbx, %rdi
 5378 2a55 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5378      00
 5379 2a5a EB43     		jmp	.L268
 5380              	.L267:
 5381              		.loc 3 159 0 discriminator 29
 5382 2a5c E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5382      00
 5383 2a61 488B18   		movq	(%rax), %rbx
 5384 2a64 488B85E8 		movq	-536(%rbp), %rax
 5384      FDFFFF
 5385 2a6b 488D4808 		leaq	8(%rax), %rcx
 5386 2a6f 488D8510 		leaq	-496(%rbp), %rax
 5386      FEFFFF
 5387 2a76 BA9F0000 		movl	$159, %edx
 5387      00
 5388 2a7b 4889CE   		movq	%rcx, %rsi
 5389 2a7e 4889C7   		movq	%rax, %rdi
 5390 2a81 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 5390      00
 5391              		.loc 3 159 0 discriminator 40
 5392 2a86 488D8510 		leaq	-496(%rbp), %rax
 5392      FEFFFF
 5393 2a8d 488D1500 		leaq	.LC5(%rip), %rdx
 5393      000000
 5394 2a94 4889C6   		movq	%rax, %rsi
 5395 2a97 4889DF   		movq	%rbx, %rdi
 5396 2a9a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5396      00
 5397              	.LEHE150:
 5398              	.L268:
 5399              	.LEHB151:
 5400              		.loc 3 159 0 discriminator 43
 5401 2a9f E8000000 		call	__cxa_end_catch@PLT
 5401      00
 5402 2aa4 EB4D     		jmp	.L260
 5403              	.L276:
 5404 2aa6 4889C3   		movq	%rax, %rbx
 5405              	.LBB94:
 5406              		.loc 3 159 0
 5407 2aa9 E8000000 		call	__cxa_end_catch@PLT
 5407      00
 5408 2aae 4889D8   		movq	%rbx, %rax
 5409 2ab1 4889C7   		movq	%rax, %rdi
 5410 2ab4 E8000000 		call	_Unwind_Resume@PLT
 5410      00
 5411              	.LEHE151:
 5412              	.L278:
 5413 2ab9 4889C3   		movq	%rax, %rbx
 5414              	.LBE94:
 5415              	.LBB95:
 5416              	.LBB93:
 5417 2abc 488D8530 		leaq	-464(%rbp), %rax
 5417      FEFFFF
 5418 2ac3 4889C7   		movq	%rax, %rdi
 5419 2ac6 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5419      00
 5420 2acb EB03     		jmp	.L271
 5421              	.L277:
 5422 2acd 4889C3   		movq	%rax, %rbx
 5423              	.L271:
 5424              	.LBE93:
 5425 2ad0 E8000000 		call	__cxa_end_catch@PLT
 5425      00
 5426 2ad5 4889D8   		movq	%rbx, %rax
 5427 2ad8 4889C7   		movq	%rax, %rdi
 5428              	.LEHB152:
 5429 2adb E8000000 		call	_Unwind_Resume@PLT
 5429      00
 5430              	.LEHE152:
 5431              	.L279:
 5432 2ae0 4889C3   		movq	%rax, %rbx
 5433              	.LBE95:
 5434 2ae3 E8000000 		call	__cxa_end_catch@PLT
 5434      00
 5435 2ae8 4889D8   		movq	%rbx, %rax
 5436 2aeb 4889C7   		movq	%rax, %rdi
 5437              	.LEHB153:
 5438 2aee E8000000 		call	_Unwind_Resume@PLT
 5438      00
 5439              	.LEHE153:
 5440              	.L260:
 5441 2af3 488B45D8 		movq	-40(%rbp), %rax
 5442 2af7 64483304 		xorq	%fs:40, %rax
 5442      25280000 
 5442      00
 5443 2b00 7405     		je	.L273
 5444 2b02 E8000000 		call	__stack_chk_fail@PLT
 5444      00
 5445              	.L273:
 5446 2b07 4881C408 		addq	$520, %rsp
 5446      020000
 5447 2b0e 5B       		popq	%rbx
 5448 2b0f 415C     		popq	%r12
 5449 2b11 415D     		popq	%r13
 5450 2b13 5D       		popq	%rbp
 5451              		.cfi_def_cfa 7, 8
 5452 2b14 C3       		ret
 5453              		.cfi_endproc
 5454              	.LFE1444:
 5455              		.section	.gcc_except_table
 5456              		.align 4
 5457              	.LLSDA1444:
 5458 041c FF       		.byte	0xff
 5459 041d 9B       		.byte	0x9b
 5460 041e 55       		.uleb128 .LLSDATT1444-.LLSDATTD1444
 5461              	.LLSDATTD1444:
 5462 041f 01       		.byte	0x1
 5463 0420 3E       		.uleb128 .LLSDACSE1444-.LLSDACSB1444
 5464              	.LLSDACSB1444:
 5465 0421 45       		.uleb128 .LEHB143-.LFB1444
 5466 0422 05       		.uleb128 .LEHE143-.LEHB143
 5467 0423 9F01     		.uleb128 .L274-.LFB1444
 5468 0425 05       		.uleb128 0x5
 5469 0426 69       		.uleb128 .LEHB144-.LFB1444
 5470 0427 05       		.uleb128 .LEHE144-.LEHB144
 5471 0428 8201     		.uleb128 .L275-.LFB1444
 5472 042a 07       		.uleb128 0x7
 5473 042b 78       		.uleb128 .LEHB145-.LFB1444
 5474 042c 05       		.uleb128 .LEHE145-.LEHB145
 5475 042d 9F01     		.uleb128 .L274-.LFB1444
 5476 042f 05       		.uleb128 0x5
 5477 0430 C301     		.uleb128 .LEHB146-.LFB1444
 5478 0432 8901     		.uleb128 .LEHE146-.LEHB146
 5479 0434 9E05     		.uleb128 .L276-.LFB1444
 5480 0436 00       		.uleb128 0
 5481 0437 EF02     		.uleb128 .LEHB147-.LFB1444
 5482 0439 05       		.uleb128 .LEHE147-.LEHB147
 5483 043a C505     		.uleb128 .L277-.LFB1444
 5484 043c 00       		.uleb128 0
 5485 043d 8503     		.uleb128 .LEHB148-.LFB1444
 5486 043f 60       		.uleb128 .LEHE148-.LEHB148
 5487 0440 B105     		.uleb128 .L278-.LFB1444
 5488 0442 00       		.uleb128 0
 5489 0443 EF03     		.uleb128 .LEHB149-.LFB1444
 5490 0445 05       		.uleb128 .LEHE149-.LEHB149
 5491 0446 C505     		.uleb128 .L277-.LFB1444
 5492 0448 00       		.uleb128 0
 5493 0449 8F04     		.uleb128 .LEHB150-.LFB1444
 5494 044b 8801     		.uleb128 .LEHE150-.LEHB150
 5495 044d D805     		.uleb128 .L279-.LFB1444
 5496 044f 00       		.uleb128 0
 5497 0450 9705     		.uleb128 .LEHB151-.LFB1444
 5498 0452 1A       		.uleb128 .LEHE151-.LEHB151
 5499 0453 00       		.uleb128 0
 5500 0454 00       		.uleb128 0
 5501 0455 D305     		.uleb128 .LEHB152-.LFB1444
 5502 0457 05       		.uleb128 .LEHE152-.LEHB152
 5503 0458 00       		.uleb128 0
 5504 0459 00       		.uleb128 0
 5505 045a E605     		.uleb128 .LEHB153-.LFB1444
 5506 045c 05       		.uleb128 .LEHE153-.LEHB153
 5507 045d 00       		.uleb128 0
 5508 045e 00       		.uleb128 0
 5509              	.LLSDACSE1444:
 5510 045f 03       		.byte	0x3
 5511 0460 00       		.byte	0
 5512 0461 02       		.byte	0x2
 5513 0462 7D       		.byte	0x7d
 5514 0463 01       		.byte	0x1
 5515 0464 7D       		.byte	0x7d
 5516 0465 00       		.byte	0
 5517 0466 7D       		.byte	0x7d
 5518 0467 00       		.align 4
 5519 0468 00000000 		.long	0
 5520              	
 5521 046c 00000000 		.long	DW.ref._ZTISt9exception-.
 5522 0470 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 5523              	.LLSDATT1444:
 5524              		.text
 5526              		.section	.rodata
 5527              	.LC41:
 5528 07fe 65787065 		.string	"expected one but was two"
 5528      63746564 
 5528      206F6E65 
 5528      20627574 
 5528      20776173 
 5529 0817 00       		.align 8
 5530              	.LC42:
 5531 0818 3C3F786D 		.ascii	"<?xml version=\"1.0\""
 5531      6C207665 
 5531      7273696F 
 5531      6E3D2231 
 5531      2E3022
 5532 082b 3F3E3C75 		.string	"?><unittest-results tests=\"1\" failedtests=\"1\" failures=\"2\" time=\"1.1\"><test suite
 5532      6E697474 
 5532      6573742D 
 5532      72657375 
 5532      6C747320 
 5533              		.text
 5534 2b15 90       		.align 2
 5536              	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv:
 5537              	.LFB1448:
 160:TestXmlTestReporter.cpp **** {
 5538              		.loc 3 160 0 is_stmt 1
 5539              		.cfi_startproc
 5540              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5541              		.cfi_lsda 0x1b,.LLSDA1448
 5542 2b16 55       		pushq	%rbp
 5543              		.cfi_def_cfa_offset 16
 5544              		.cfi_offset 6, -16
 5545 2b17 4889E5   		movq	%rsp, %rbp
 5546              		.cfi_def_cfa_register 6
 5547 2b1a 53       		pushq	%rbx
 5548 2b1b 4881ECB8 		subq	$184, %rsp
 5548      000000
 5549              		.cfi_offset 3, -24
 5550 2b22 4889BD48 		movq	%rdi, -184(%rbp)
 5550      FFFFFF
 5551              		.loc 3 160 0
 5552 2b29 64488B04 		movq	%fs:40, %rax
 5552      25280000 
 5552      00
 5553 2b32 488945E8 		movq	%rax, -24(%rbp)
 5554 2b36 31C0     		xorl	%eax, %eax
 161:TestXmlTestReporter.cpp ****     TestDetails const failedDetails1("FailedTest", "suite", "fail.h", 1);
 5555              		.loc 3 161 0
 5556 2b38 488D8560 		leaq	-160(%rbp), %rax
 5556      FFFFFF
 5557 2b3f 41B80100 		movl	$1, %r8d
 5557      0000
 5558 2b45 488D0D00 		leaq	.LC34(%rip), %rcx
 5558      000000
 5559 2b4c 488D1500 		leaq	.LC7(%rip), %rdx
 5559      000000
 5560 2b53 488D3500 		leaq	.LC35(%rip), %rsi
 5560      000000
 5561 2b5a 4889C7   		movq	%rax, %rdi
 5562              	.LEHB154:
 5563 2b5d E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5563      00
 162:TestXmlTestReporter.cpp ****     TestDetails const failedDetails2("FailedTest", "suite", "fail.h", 31);
 5564              		.loc 3 162 0
 5565 2b62 488D4580 		leaq	-128(%rbp), %rax
 5566 2b66 41B81F00 		movl	$31, %r8d
 5566      0000
 5567 2b6c 488D0D00 		leaq	.LC34(%rip), %rcx
 5567      000000
 5568 2b73 488D1500 		leaq	.LC7(%rip), %rdx
 5568      000000
 5569 2b7a 488D3500 		leaq	.LC35(%rip), %rsi
 5569      000000
 5570 2b81 4889C7   		movq	%rax, %rdi
 5571 2b84 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5571      00
 163:TestXmlTestReporter.cpp **** 
 164:TestXmlTestReporter.cpp ****     reporter.ReportTestStart(failedDetails1);
 5572              		.loc 3 164 0
 5573 2b89 488B8548 		movq	-184(%rbp), %rax
 5573      FFFFFF
 5574 2b90 488D9078 		leaq	376(%rax), %rdx
 5574      010000
 5575 2b97 488D8560 		leaq	-160(%rbp), %rax
 5575      FFFFFF
 5576 2b9e 4889C6   		movq	%rax, %rsi
 5577 2ba1 4889D7   		movq	%rdx, %rdi
 5578 2ba4 E8000000 		call	_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE@PLT
 5578      00
 165:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails1, "expected 1 but was 2");
 5579              		.loc 3 165 0
 5580 2ba9 488B8548 		movq	-184(%rbp), %rax
 5580      FFFFFF
 5581 2bb0 488D8878 		leaq	376(%rax), %rcx
 5581      010000
 5582 2bb7 488D8560 		leaq	-160(%rbp), %rax
 5582      FFFFFF
 5583 2bbe 488D1500 		leaq	.LC36(%rip), %rdx
 5583      000000
 5584 2bc5 4889C6   		movq	%rax, %rsi
 5585 2bc8 4889CF   		movq	%rcx, %rdi
 5586 2bcb E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 5586      00
 166:TestXmlTestReporter.cpp ****     reporter.ReportFailure(failedDetails2, "expected one but was two");
 5587              		.loc 3 166 0
 5588 2bd0 488B8548 		movq	-184(%rbp), %rax
 5588      FFFFFF
 5589 2bd7 488D8878 		leaq	376(%rax), %rcx
 5589      010000
 5590 2bde 488D4580 		leaq	-128(%rbp), %rax
 5591 2be2 488D1500 		leaq	.LC41(%rip), %rdx
 5591      000000
 5592 2be9 4889C6   		movq	%rax, %rsi
 5593 2bec 4889CF   		movq	%rcx, %rdi
 5594 2bef E8000000 		call	_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc@PLT
 5594      00
 167:TestXmlTestReporter.cpp ****     reporter.ReportTestFinish(failedDetails1, 0.1f);
 5595              		.loc 3 167 0
 5596 2bf4 488B8548 		movq	-184(%rbp), %rax
 5596      FFFFFF
 5597 2bfb 488D9078 		leaq	376(%rax), %rdx
 5597      010000
 5598 2c02 488D8560 		leaq	-160(%rbp), %rax
 5598      FFFFFF
 5599 2c09 F30F1005 		movss	.LC10(%rip), %xmm0
 5599      00000000 
 5600 2c11 4889C6   		movq	%rax, %rsi
 5601 2c14 4889D7   		movq	%rdx, %rdi
 5602 2c17 E8000000 		call	_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf@PLT
 5602      00
 168:TestXmlTestReporter.cpp **** 
 169:TestXmlTestReporter.cpp ****     reporter.ReportSummary(1, 1, 2, 1.1f);
 5603              		.loc 3 169 0
 5604 2c1c 488B8548 		movq	-184(%rbp), %rax
 5604      FFFFFF
 5605 2c23 48057801 		addq	$376, %rax
 5605      0000
 5606 2c29 F30F1005 		movss	.LC38(%rip), %xmm0
 5606      00000000 
 5607 2c31 B9020000 		movl	$2, %ecx
 5607      00
 5608 2c36 BA010000 		movl	$1, %edx
 5608      00
 5609 2c3b BE010000 		movl	$1, %esi
 5609      00
 5610 2c40 4889C7   		movq	%rax, %rdi
 5611 2c43 E8000000 		call	_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif@PLT
 5611      00
 5612              	.LEHE154:
 170:TestXmlTestReporter.cpp **** 
 171:TestXmlTestReporter.cpp ****     char const* expected =
 5613              		.loc 3 171 0
 5614 2c48 488D0500 		leaq	.LC42(%rip), %rax
 5614      000000
 5615 2c4f 48898558 		movq	%rax, -168(%rbp)
 5615      FFFFFF
 5616              	.LEHB155:
 172:TestXmlTestReporter.cpp ****         "<?xml version=\"1.0\"?>"
 173:TestXmlTestReporter.cpp ****         "<unittest-results tests=\"1\" failedtests=\"1\" failures=\"2\" time=\"1.1\">"
 174:TestXmlTestReporter.cpp ****         "<test suite=\"suite\" name=\"FailedTest\" time=\"0.1\">"
 175:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(1) : expected 1 but was 2\"/>"
 176:TestXmlTestReporter.cpp ****         "<failure message=\"fail.h(31) : expected one but was two\"/>"
 177:TestXmlTestReporter.cpp ****         "</test>"
 178:TestXmlTestReporter.cpp ****         "</unittest-results>";
 179:TestXmlTestReporter.cpp **** 
 180:TestXmlTestReporter.cpp ****     CHECK_EQUAL(expected, output.str());
 5617              		.loc 3 180 0
 5618 2c56 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5618      00
 5619 2c5b 488B08   		movq	(%rax), %rcx
 5620 2c5e 488D45A0 		leaq	-96(%rbp), %rax
 5621 2c62 BAB40000 		movl	$180, %edx
 5621      00
 5622 2c67 4889CE   		movq	%rcx, %rsi
 5623 2c6a 4889C7   		movq	%rax, %rdi
 5624 2c6d E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 5624      00
 5625              		.loc 3 180 0 is_stmt 0 discriminator 2
 5626 2c72 488B9548 		movq	-184(%rbp), %rdx
 5626      FFFFFF
 5627 2c79 488D45C0 		leaq	-64(%rbp), %rax
 5628 2c7d 4889D6   		movq	%rdx, %rsi
 5629 2c80 4889C7   		movq	%rax, %rdi
 5630 2c83 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv@PLT
 5630      00
 5631              	.LEHE155:
 5632              	.LEHB156:
 5633              		.loc 3 180 0 discriminator 4
 5634 2c88 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5634      00
 5635 2c8d 488B00   		movq	(%rax), %rax
 5636 2c90 488D4DA0 		leaq	-96(%rbp), %rcx
 5637 2c94 488D55C0 		leaq	-64(%rbp), %rdx
 5638 2c98 488DB558 		leaq	-168(%rbp), %rsi
 5638      FFFFFF
 5639 2c9f 4889C7   		movq	%rax, %rdi
 5640 2ca2 E8000000 		call	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Test
 5640      00
 5641              	.LEHE156:
 5642              		.loc 3 180 0 discriminator 8
 5643 2ca7 488D45C0 		leaq	-64(%rbp), %rax
 5644 2cab 4889C7   		movq	%rax, %rdi
 5645              	.LEHB157:
 5646 2cae E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 5646      00
 5647              	.LEHE157:
 181:TestXmlTestReporter.cpp **** }
 5648              		.loc 3 181 0 is_stmt 1
 5649 2cb3 EB70     		jmp	.L281
 5650              	.L288:
 5651 2cb5 4889C3   		movq	%rax, %rbx
 180:TestXmlTestReporter.cpp **** }
 5652              		.loc 3 180 0
 5653 2cb8 488D45C0 		leaq	-64(%rbp), %rax
 5654 2cbc 4889C7   		movq	%rax, %rdi
 5655 2cbf E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 5655      00
 5656 2cc4 4889D8   		movq	%rbx, %rax
 5657 2cc7 EB00     		jmp	.L283
 5658              	.L287:
 5659              	.L283:
 5660 2cc9 4889C7   		movq	%rax, %rdi
 5661 2ccc E8000000 		call	__cxa_begin_catch@PLT
 5661      00
 5662              	.LEHB158:
 5663 2cd1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5663      00
 5664 2cd6 488B18   		movq	(%rax), %rbx
 5665 2cd9 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5665      00
 180:TestXmlTestReporter.cpp **** }
 5666              		.loc 3 180 0 is_stmt 0 discriminator 12
 5667 2cde 488B08   		movq	(%rax), %rcx
 5668 2ce1 488D45A0 		leaq	-96(%rbp), %rax
 5669 2ce5 BAB40000 		movl	$180, %edx
 5669      00
 5670 2cea 4889CE   		movq	%rcx, %rsi
 5671 2ced 4889C7   		movq	%rax, %rdi
 5672 2cf0 E8000000 		call	_ZN8UnitTest11TestDetailsC1ERKS0_i@PLT
 5672      00
 180:TestXmlTestReporter.cpp **** }
 5673              		.loc 3 180 0 discriminator 16
 5674 2cf5 488D45A0 		leaq	-96(%rbp), %rax
 5675 2cf9 488D1500 		leaq	.LC12(%rip), %rdx
 5675      000000
 5676 2d00 4889C6   		movq	%rax, %rsi
 5677 2d03 4889DF   		movq	%rbx, %rdi
 5678 2d06 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5678      00
 5679              	.LEHE158:
 5680              	.LEHB159:
 180:TestXmlTestReporter.cpp **** }
 5681              		.loc 3 180 0 discriminator 18
 5682 2d0b E8000000 		call	__cxa_end_catch@PLT
 5682      00
 5683              	.LEHE159:
 5684              		.loc 3 181 0 is_stmt 1 discriminator 18
 5685 2d10 EB13     		jmp	.L281
 5686              	.L289:
 5687 2d12 4889C3   		movq	%rax, %rbx
 180:TestXmlTestReporter.cpp **** }
 5688              		.loc 3 180 0
 5689 2d15 E8000000 		call	__cxa_end_catch@PLT
 5689      00
 5690 2d1a 4889D8   		movq	%rbx, %rax
 5691 2d1d 4889C7   		movq	%rax, %rdi
 5692              	.LEHB160:
 5693 2d20 E8000000 		call	_Unwind_Resume@PLT
 5693      00
 5694              	.LEHE160:
 5695              	.L281:
 5696              		.loc 3 181 0
 5697 2d25 488B45E8 		movq	-24(%rbp), %rax
 5698 2d29 64483304 		xorq	%fs:40, %rax
 5698      25280000 
 5698      00
 5699 2d32 7405     		je	.L286
 5700 2d34 E8000000 		call	__stack_chk_fail@PLT
 5700      00
 5701              	.L286:
 5702 2d39 4881C4B8 		addq	$184, %rsp
 5702      000000
 5703 2d40 5B       		popq	%rbx
 5704 2d41 5D       		popq	%rbp
 5705              		.cfi_def_cfa 7, 8
 5706 2d42 C3       		ret
 5707              		.cfi_endproc
 5708              	.LFE1448:
 5709              		.section	.gcc_except_table
 5710              		.align 4
 5711              	.LLSDA1448:
 5712 0474 FF       		.byte	0xff
 5713 0475 9B       		.byte	0x9b
 5714 0476 31       		.uleb128 .LLSDATT1448-.LLSDATTD1448
 5715              	.LLSDATTD1448:
 5716 0477 01       		.byte	0x1
 5717 0478 27       		.uleb128 .LLSDACSE1448-.LLSDACSB1448
 5718              	.LLSDACSB1448:
 5719 0479 47       		.uleb128 .LEHB154-.LFB1448
 5720 047a EB01     		.uleb128 .LEHE154-.LEHB154
 5721 047c 00       		.uleb128 0
 5722 047d 00       		.uleb128 0
 5723 047e C002     		.uleb128 .LEHB155-.LFB1448
 5724 0480 32       		.uleb128 .LEHE155-.LEHB155
 5725 0481 B303     		.uleb128 .L287-.LFB1448
 5726 0483 01       		.uleb128 0x1
 5727 0484 F202     		.uleb128 .LEHB156-.LFB1448
 5728 0486 1F       		.uleb128 .LEHE156-.LEHB156
 5729 0487 9F03     		.uleb128 .L288-.LFB1448
 5730 0489 03       		.uleb128 0x3
 5731 048a 9803     		.uleb128 .LEHB157-.LFB1448
 5732 048c 05       		.uleb128 .LEHE157-.LEHB157
 5733 048d B303     		.uleb128 .L287-.LFB1448
 5734 048f 01       		.uleb128 0x1
 5735 0490 BB03     		.uleb128 .LEHB158-.LFB1448
 5736 0492 3A       		.uleb128 .LEHE158-.LEHB158
 5737 0493 FC03     		.uleb128 .L289-.LFB1448
 5738 0495 00       		.uleb128 0
 5739 0496 F503     		.uleb128 .LEHB159-.LFB1448
 5740 0498 05       		.uleb128 .LEHE159-.LEHB159
 5741 0499 00       		.uleb128 0
 5742 049a 00       		.uleb128 0
 5743 049b 8A04     		.uleb128 .LEHB160-.LFB1448
 5744 049d 05       		.uleb128 .LEHE160-.LEHB160
 5745 049e 00       		.uleb128 0
 5746 049f 00       		.uleb128 0
 5747              	.LLSDACSE1448:
 5748 04a0 01       		.byte	0x1
 5749 04a1 00       		.byte	0
 5750 04a2 00       		.byte	0
 5751 04a3 7D       		.byte	0x7d
 5752              		.align 4
 5753 04a4 00000000 		.long	0
 5754              	
 5755              	.LLSDATT1448:
 5756              		.text
 5758              		.section	.rodata
 5759              	.LC43:
 5760 092c 556E6861 		.string	"Unhandled system exception"
 5760      6E646C65 
 5760      64207379 
 5760      7374656D 
 5760      20657863 
 5761              	.LC44:
 5762 0947 556E6861 		.string	"Unhandled exception: Crash!"
 5762      6E646C65 
 5762      64206578 
 5762      63657074 
 5762      696F6E3A 
 5763              		.text
 5765              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper
 5766              	.LFB1477:
 5767              		.file 4 "../ExecuteTest.h"
   1:../ExecuteTest.h **** #ifndef UNITTEST_EXECUTE_TEST_H
   2:../ExecuteTest.h **** #define UNITTEST_EXECUTE_TEST_H
   3:../ExecuteTest.h **** 
   4:../ExecuteTest.h **** #include "TestDetails.h"
   5:../ExecuteTest.h **** #include "MemoryOutStream.h"
   6:../ExecuteTest.h **** #include "AssertException.h"
   7:../ExecuteTest.h **** #include "CurrentTest.h"
   8:../ExecuteTest.h **** 
   9:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  10:../ExecuteTest.h **** 	#include "PosixUtils/SignalTranslator.h"
  11:../ExecuteTest.h **** #endif
  12:../ExecuteTest.h **** 
  13:../ExecuteTest.h **** namespace UnitTest {
  14:../ExecuteTest.h **** 
  15:../ExecuteTest.h **** template< typename T >
  16:../ExecuteTest.h **** void ExecuteTest(T& testObject, TestDetails const& details)
 5768              		.loc 4 16 0
 5769              		.cfi_startproc
 5770              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5771              		.cfi_lsda 0x1b,.LLSDA1477
 5772 2d43 55       		pushq	%rbp
 5773              		.cfi_def_cfa_offset 16
 5774              		.cfi_offset 6, -16
 5775 2d44 4889E5   		movq	%rsp, %rbp
 5776              		.cfi_def_cfa_register 6
 5777 2d47 4155     		pushq	%r13
 5778 2d49 4154     		pushq	%r12
 5779 2d4b 53       		pushq	%rbx
 5780 2d4c 4881EC58 		subq	$1624, %rsp
 5780      060000
 5781              		.cfi_offset 13, -24
 5782              		.cfi_offset 12, -32
 5783              		.cfi_offset 3, -40
 5784 2d53 4889BD98 		movq	%rdi, -1640(%rbp)
 5784      F9FFFF
 5785 2d5a 4889B590 		movq	%rsi, -1648(%rbp)
 5785      F9FFFF
 5786              		.loc 4 16 0
 5787 2d61 64488B04 		movq	%fs:40, %rax
 5787      25280000 
 5787      00
 5788 2d6a 488945D8 		movq	%rax, -40(%rbp)
 5789 2d6e 31C0     		xorl	%eax, %eax
 5790              	.LEHB161:
  17:../ExecuteTest.h **** {
  18:../ExecuteTest.h **** 	CurrentTest::Details() = &details;
 5791              		.loc 4 18 0
 5792 2d70 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 5792      00
 5793              	.LEHE161:
 5794 2d75 4889C2   		movq	%rax, %rdx
 5795 2d78 488B8590 		movq	-1648(%rbp), %rax
 5795      F9FFFF
 5796 2d7f 488902   		movq	%rax, (%rdx)
 5797              	.LBB96:
  19:../ExecuteTest.h **** 
  20:../ExecuteTest.h **** 	try
  21:../ExecuteTest.h **** 	{
  22:../ExecuteTest.h **** #ifdef UNITTEST_POSIX
  23:../ExecuteTest.h **** 		UNITTEST_THROW_SIGNALS
 5798              		.loc 4 23 0
 5799 2d82 488D8570 		leaq	-1168(%rbp), %rax
 5799      FBFFFF
 5800 2d89 4889C7   		movq	%rax, %rdi
 5801              	.LEHB162:
 5802 2d8c E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 5802      00
 5803              	.LEHE162:
 5804              		.loc 4 23 0 is_stmt 0 discriminator 1
 5805 2d91 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 5805      000000
 5806 2d98 BE010000 		movl	$1, %esi
 5806      00
 5807 2d9d 4889C7   		movq	%rax, %rdi
 5808 2da0 E8000000 		call	__sigsetjmp@PLT
 5808      00
 5809 2da5 85C0     		testl	%eax, %eax
 5810 2da7 0F95C0   		setne	%al
 5811 2daa 84C0     		testb	%al, %al
 5812 2dac 7428     		je	.L292
 5813              		.loc 4 23 0 discriminator 4
 5814 2dae BF080000 		movl	$8, %edi
 5814      00
 5815 2db3 E8000000 		call	__cxa_allocate_exception@PLT
 5815      00
 5816 2db8 488D1500 		leaq	.LC43(%rip), %rdx
 5816      000000
 5817 2dbf 488910   		movq	%rdx, (%rax)
 5818 2dc2 BA000000 		movl	$0, %edx
 5818      00
 5819 2dc7 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 5819      000000
 5820 2dce 4889C7   		movq	%rax, %rdi
 5821              	.LEHB163:
 5822 2dd1 E8000000 		call	__cxa_throw@PLT
 5822      00
 5823              	.L292:
  24:../ExecuteTest.h **** #endif
  25:../ExecuteTest.h **** 		testObject.RunImpl();
 5824              		.loc 4 25 0 is_stmt 1
 5825 2dd6 488B8598 		movq	-1640(%rbp), %rax
 5825      F9FFFF
 5826 2ddd 4889C7   		movq	%rax, %rdi
 5827 2de0 E869D6FF 		call	_ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv
 5827      FF
 5828              	.LEHE163:
  23:../ExecuteTest.h **** #endif
 5829              		.loc 4 23 0
 5830 2de5 488D8570 		leaq	-1168(%rbp), %rax
 5830      FBFFFF
 5831 2dec 4889C7   		movq	%rax, %rdi
 5832              	.LEHB164:
 5833 2def E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5833      00
 5834              	.LEHE164:
 5835              	.LBE96:
  26:../ExecuteTest.h **** 	}
  27:../ExecuteTest.h **** 	catch (AssertException const& e)
  28:../ExecuteTest.h **** 	{
  29:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(
  30:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
  31:../ExecuteTest.h **** 	}
  32:../ExecuteTest.h **** 	catch (std::exception const& e)
  33:../ExecuteTest.h **** 	{
  34:../ExecuteTest.h **** 		MemoryOutStream stream;
  35:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
  36:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
  37:../ExecuteTest.h **** 	}
  38:../ExecuteTest.h **** 	catch (...)
  39:../ExecuteTest.h **** 	{
  40:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, "Unhandled exception: Crash!");
  41:../ExecuteTest.h **** 	}
  42:../ExecuteTest.h **** }
 5836              		.loc 4 42 0
 5837 2df4 E9F10100 		jmp	.L290
 5837      00
 5838              	.L305:
 5839 2df9 4989C4   		movq	%rax, %r12
 5840 2dfc 4889D3   		movq	%rdx, %rbx
 5841              	.LBB97:
  23:../ExecuteTest.h **** #endif
 5842              		.loc 4 23 0
 5843 2dff 488D8570 		leaq	-1168(%rbp), %rax
 5843      FBFFFF
 5844 2e06 4889C7   		movq	%rax, %rdi
 5845 2e09 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 5845      00
 5846 2e0e 4C89E0   		movq	%r12, %rax
 5847 2e11 4889DA   		movq	%rbx, %rdx
 5848 2e14 EB00     		jmp	.L294
 5849              	.L304:
 5850              	.L294:
 5851 2e16 4883FA01 		cmpq	$1, %rdx
 5852 2e1a 740F     		je	.L296
 5853 2e1c 4883FA02 		cmpq	$2, %rdx
 5854 2e20 0F84A600 		je	.L297
 5854      0000
 5855 2e26 E9420100 		jmp	.L310
 5855      00
 5856              	.L296:
 5857              	.LBE97:
 5858              	.LBB98:
  27:../ExecuteTest.h **** 	{
 5859              		.loc 4 27 0
 5860 2e2b 4889C7   		movq	%rax, %rdi
 5861 2e2e E8000000 		call	__cxa_begin_catch@PLT
 5861      00
 5862 2e33 488985A8 		movq	%rax, -1624(%rbp)
 5862      F9FFFF
 5863              	.LEHB165:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5864              		.loc 4 29 0
 5865 2e3a E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5865      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5866              		.loc 4 29 0 is_stmt 0 discriminator 1
 5867 2e3f 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 5868              		.loc 4 30 0 is_stmt 1 discriminator 1
 5869 2e42 488B85A8 		movq	-1624(%rbp), %rax
 5869      F9FFFF
 5870 2e49 488B00   		movq	(%rax), %rax
 5871 2e4c 4883C010 		addq	$16, %rax
 5872 2e50 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5873              		.loc 4 29 0 discriminator 1
 5874 2e53 488B95A8 		movq	-1624(%rbp), %rdx
 5874      F9FFFF
 5875 2e5a 4889D7   		movq	%rdx, %rdi
 5876 2e5d FFD0     		call	*%rax
 5877              	.LVL16:
 5878 2e5f 4989C4   		movq	%rax, %r12
 5879 2e62 488B85A8 		movq	-1624(%rbp), %rax
 5879      F9FFFF
 5880 2e69 4889C7   		movq	%rax, %rdi
 5881 2e6c E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 5881      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5882              		.loc 4 29 0 is_stmt 0 discriminator 2
 5883 2e71 4189C5   		movl	%eax, %r13d
 5884 2e74 488B85A8 		movq	-1624(%rbp), %rax
 5884      F9FFFF
 5885 2e7b 4889C7   		movq	%rax, %rdi
 5886 2e7e E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 5886      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5887              		.loc 4 29 0 discriminator 3
 5888 2e83 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 5889              		.loc 4 30 0 is_stmt 1 discriminator 3
 5890 2e86 488B8590 		movq	-1648(%rbp), %rax
 5890      F9FFFF
 5891 2e8d 488B10   		movq	(%rax), %rdx
 5892 2e90 488B8590 		movq	-1648(%rbp), %rax
 5892      F9FFFF
 5893 2e97 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5894              		.loc 4 29 0 discriminator 3
 5895 2e9b 488D85B0 		leaq	-1616(%rbp), %rax
 5895      F9FFFF
 5896 2ea2 4589E8   		movl	%r13d, %r8d
 5897 2ea5 4889C7   		movq	%rax, %rdi
 5898 2ea8 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 5898      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 5899              		.loc 4 29 0 is_stmt 0 discriminator 5
 5900 2ead 488D85B0 		leaq	-1616(%rbp), %rax
 5900      F9FFFF
 5901 2eb4 4C89E2   		movq	%r12, %rdx
 5902 2eb7 4889C6   		movq	%rax, %rsi
 5903 2eba 4889DF   		movq	%rbx, %rdi
 5904 2ebd E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5904      00
 5905              	.LEHE165:
  27:../ExecuteTest.h **** 	{
 5906              		.loc 4 27 0 is_stmt 1 discriminator 7
 5907 2ec2 E8000000 		call	__cxa_end_catch@PLT
 5907      00
 5908              	.LBE98:
 5909              		.loc 4 42 0 discriminator 7
 5910 2ec7 E91E0100 		jmp	.L290
 5910      00
 5911              	.L297:
 5912              	.LBB99:
  32:../ExecuteTest.h **** 	{
 5913              		.loc 4 32 0
 5914 2ecc 4889C7   		movq	%rax, %rdi
 5915 2ecf E8000000 		call	__cxa_begin_catch@PLT
 5915      00
 5916 2ed4 488985A0 		movq	%rax, -1632(%rbp)
 5916      F9FFFF
 5917              	.LBB100:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5918              		.loc 4 34 0
 5919 2edb 488D85D0 		leaq	-1584(%rbp), %rax
 5919      F9FFFF
 5920 2ee2 4889C7   		movq	%rax, %rdi
 5921              	.LEHB166:
 5922 2ee5 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 5922      00
 5923              	.LEHE166:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 5924              		.loc 4 35 0
 5925 2eea 488D85D0 		leaq	-1584(%rbp), %rax
 5925      F9FFFF
 5926 2ef1 488D3500 		leaq	.LC3(%rip), %rsi
 5926      000000
 5927 2ef8 4889C7   		movq	%rax, %rdi
 5928              	.LEHB167:
 5929 2efb E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5929      00
 5930 2f00 4889C3   		movq	%rax, %rbx
 5931 2f03 488B85A0 		movq	-1632(%rbp), %rax
 5931      F9FFFF
 5932 2f0a 488B00   		movq	(%rax), %rax
 5933 2f0d 4883C010 		addq	$16, %rax
 5934 2f11 488B00   		movq	(%rax), %rax
 5935 2f14 488B95A0 		movq	-1632(%rbp), %rdx
 5935      F9FFFF
 5936 2f1b 4889D7   		movq	%rdx, %rdi
 5937 2f1e FFD0     		call	*%rax
 5938              	.LVL17:
 5939 2f20 4889C6   		movq	%rax, %rsi
 5940 2f23 4889DF   		movq	%rbx, %rdi
 5941 2f26 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5941      00
  36:../ExecuteTest.h **** 	}
 5942              		.loc 4 36 0
 5943 2f2b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5943      00
 5944 2f30 488B18   		movq	(%rax), %rbx
 5945 2f33 488D85D0 		leaq	-1584(%rbp), %rax
 5945      F9FFFF
 5946 2f3a 4889C7   		movq	%rax, %rdi
 5947 2f3d E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 5947      00
  36:../ExecuteTest.h **** 	}
 5948              		.loc 4 36 0 is_stmt 0 discriminator 1
 5949 2f42 4889C2   		movq	%rax, %rdx
 5950 2f45 488B8590 		movq	-1648(%rbp), %rax
 5950      F9FFFF
 5951 2f4c 4889C6   		movq	%rax, %rsi
 5952 2f4f 4889DF   		movq	%rbx, %rdi
 5953 2f52 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5953      00
 5954              	.LEHE167:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 5955              		.loc 4 34 0 is_stmt 1
 5956 2f57 488D85D0 		leaq	-1584(%rbp), %rax
 5956      F9FFFF
 5957 2f5e 4889C7   		movq	%rax, %rdi
 5958              	.LEHB168:
 5959 2f61 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 5959      00
 5960              	.LEHE168:
 5961              	.LBE100:
  32:../ExecuteTest.h **** 	{
 5962              		.loc 4 32 0
 5963 2f66 E8000000 		call	__cxa_end_catch@PLT
 5963      00
 5964              	.LBE99:
 5965              		.loc 4 42 0
 5966 2f6b EB7D     		jmp	.L290
 5967              	.L310:
  38:../ExecuteTest.h **** 	{
 5968              		.loc 4 38 0
 5969 2f6d 4889C7   		movq	%rax, %rdi
 5970 2f70 E8000000 		call	__cxa_begin_catch@PLT
 5970      00
 5971              	.LEHB169:
  40:../ExecuteTest.h **** 	}
 5972              		.loc 4 40 0
 5973 2f75 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 5973      00
 5974 2f7a 488B00   		movq	(%rax), %rax
 5975 2f7d 488B8D90 		movq	-1648(%rbp), %rcx
 5975      F9FFFF
 5976 2f84 488D1500 		leaq	.LC44(%rip), %rdx
 5976      000000
 5977 2f8b 4889CE   		movq	%rcx, %rsi
 5978 2f8e 4889C7   		movq	%rax, %rdi
 5979 2f91 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 5979      00
 5980              	.LEHE169:
 5981              	.LEHB170:
  38:../ExecuteTest.h **** 	{
 5982              		.loc 4 38 0
 5983 2f96 E8000000 		call	__cxa_end_catch@PLT
 5983      00
 5984              		.loc 4 42 0
 5985 2f9b EB4D     		jmp	.L290
 5986              	.L306:
 5987 2f9d 4889C3   		movq	%rax, %rbx
 5988              	.LBB102:
  27:../ExecuteTest.h **** 	{
 5989              		.loc 4 27 0
 5990 2fa0 E8000000 		call	__cxa_end_catch@PLT
 5990      00
 5991 2fa5 4889D8   		movq	%rbx, %rax
 5992 2fa8 4889C7   		movq	%rax, %rdi
 5993 2fab E8000000 		call	_Unwind_Resume@PLT
 5993      00
 5994              	.LEHE170:
 5995              	.L308:
 5996 2fb0 4889C3   		movq	%rax, %rbx
 5997              	.LBE102:
 5998              	.LBB103:
 5999              	.LBB101:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6000              		.loc 4 34 0
 6001 2fb3 488D85D0 		leaq	-1584(%rbp), %rax
 6001      F9FFFF
 6002 2fba 4889C7   		movq	%rax, %rdi
 6003 2fbd E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6003      00
 6004 2fc2 EB03     		jmp	.L301
 6005              	.L307:
 6006 2fc4 4889C3   		movq	%rax, %rbx
 6007              	.L301:
 6008              	.LBE101:
  32:../ExecuteTest.h **** 	{
 6009              		.loc 4 32 0
 6010 2fc7 E8000000 		call	__cxa_end_catch@PLT
 6010      00
 6011 2fcc 4889D8   		movq	%rbx, %rax
 6012 2fcf 4889C7   		movq	%rax, %rdi
 6013              	.LEHB171:
 6014 2fd2 E8000000 		call	_Unwind_Resume@PLT
 6014      00
 6015              	.LEHE171:
 6016              	.L309:
 6017 2fd7 4889C3   		movq	%rax, %rbx
 6018              	.LBE103:
  38:../ExecuteTest.h **** 	{
 6019              		.loc 4 38 0
 6020 2fda E8000000 		call	__cxa_end_catch@PLT
 6020      00
 6021 2fdf 4889D8   		movq	%rbx, %rax
 6022 2fe2 4889C7   		movq	%rax, %rdi
 6023              	.LEHB172:
 6024 2fe5 E8000000 		call	_Unwind_Resume@PLT
 6024      00
 6025              	.LEHE172:
 6026              	.L290:
 6027              		.loc 4 42 0
 6028 2fea 488B45D8 		movq	-40(%rbp), %rax
 6029 2fee 64483304 		xorq	%fs:40, %rax
 6029      25280000 
 6029      00
 6030 2ff7 7405     		je	.L303
 6031 2ff9 E8000000 		call	__stack_chk_fail@PLT
 6031      00
 6032              	.L303:
 6033 2ffe 4881C458 		addq	$1624, %rsp
 6033      060000
 6034 3005 5B       		popq	%rbx
 6035 3006 415C     		popq	%r12
 6036 3008 415D     		popq	%r13
 6037 300a 5D       		popq	%rbp
 6038              		.cfi_def_cfa 7, 8
 6039 300b C3       		ret
 6040              		.cfi_endproc
 6041              	.LFE1477:
 6042              		.section	.gcc_except_table
 6043              		.align 4
 6044              	.LLSDA1477:
 6045 04a8 FF       		.byte	0xff
 6046 04a9 9B       		.byte	0x9b
 6047 04aa 59       		.uleb128 .LLSDATT1477-.LLSDATTD1477
 6048              	.LLSDATTD1477:
 6049 04ab 01       		.byte	0x1
 6050 04ac 43       		.uleb128 .LLSDACSE1477-.LLSDACSB1477
 6051              	.LLSDACSB1477:
 6052 04ad 2D       		.uleb128 .LEHB161-.LFB1477
 6053 04ae 05       		.uleb128 .LEHE161-.LEHB161
 6054 04af 00       		.uleb128 0
 6055 04b0 00       		.uleb128 0
 6056 04b1 49       		.uleb128 .LEHB162-.LFB1477
 6057 04b2 05       		.uleb128 .LEHE162-.LEHB162
 6058 04b3 D301     		.uleb128 .L304-.LFB1477
 6059 04b5 05       		.uleb128 0x5
 6060 04b6 8E01     		.uleb128 .LEHB163-.LFB1477
 6061 04b8 14       		.uleb128 .LEHE163-.LEHB163
 6062 04b9 B601     		.uleb128 .L305-.LFB1477
 6063 04bb 07       		.uleb128 0x7
 6064 04bc AC01     		.uleb128 .LEHB164-.LFB1477
 6065 04be 05       		.uleb128 .LEHE164-.LEHB164
 6066 04bf D301     		.uleb128 .L304-.LFB1477
 6067 04c1 05       		.uleb128 0x5
 6068 04c2 F701     		.uleb128 .LEHB165-.LFB1477
 6069 04c4 8801     		.uleb128 .LEHE165-.LEHB165
 6070 04c6 DA04     		.uleb128 .L306-.LFB1477
 6071 04c8 00       		.uleb128 0
 6072 04c9 A203     		.uleb128 .LEHB166-.LFB1477
 6073 04cb 05       		.uleb128 .LEHE166-.LEHB166
 6074 04cc 8105     		.uleb128 .L307-.LFB1477
 6075 04ce 00       		.uleb128 0
 6076 04cf B803     		.uleb128 .LEHB167-.LFB1477
 6077 04d1 5C       		.uleb128 .LEHE167-.LEHB167
 6078 04d2 ED04     		.uleb128 .L308-.LFB1477
 6079 04d4 00       		.uleb128 0
 6080 04d5 9E04     		.uleb128 .LEHB168-.LFB1477
 6081 04d7 05       		.uleb128 .LEHE168-.LEHB168
 6082 04d8 8105     		.uleb128 .L307-.LFB1477
 6083 04da 00       		.uleb128 0
 6084 04db B204     		.uleb128 .LEHB169-.LFB1477
 6085 04dd 21       		.uleb128 .LEHE169-.LEHB169
 6086 04de 9405     		.uleb128 .L309-.LFB1477
 6087 04e0 00       		.uleb128 0
 6088 04e1 D304     		.uleb128 .LEHB170-.LFB1477
 6089 04e3 1A       		.uleb128 .LEHE170-.LEHB170
 6090 04e4 00       		.uleb128 0
 6091 04e5 00       		.uleb128 0
 6092 04e6 8F05     		.uleb128 .LEHB171-.LFB1477
 6093 04e8 05       		.uleb128 .LEHE171-.LEHB171
 6094 04e9 00       		.uleb128 0
 6095 04ea 00       		.uleb128 0
 6096 04eb A205     		.uleb128 .LEHB172-.LFB1477
 6097 04ed 05       		.uleb128 .LEHE172-.LEHB172
 6098 04ee 00       		.uleb128 0
 6099 04ef 00       		.uleb128 0
 6100              	.LLSDACSE1477:
 6101 04f0 03       		.byte	0x3
 6102 04f1 00       		.byte	0
 6103 04f2 02       		.byte	0x2
 6104 04f3 7D       		.byte	0x7d
 6105 04f4 01       		.byte	0x1
 6106 04f5 7D       		.byte	0x7d
 6107 04f6 00       		.byte	0
 6108 04f7 7D       		.byte	0x7d
 6109              		.align 4
 6110 04f8 00000000 		.long	0
 6111              	
 6112 04fc 00000000 		.long	DW.ref._ZTISt9exception-.
 6113 0500 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6114              	.LLSDATT1477:
 6115              		.text
 6117              		.section	.rodata
 6118              	.LC45:
 6119 0963 45787065 		.string	"Expected "
 6119      63746564 
 6119      2000
 6120              	.LC46:
 6121 096d 20627574 		.string	" but was "
 6121      20776173 
 6121      2000
 6122              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 6123              		.weak	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11Tes
 6125              	_ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResult
 6126              	.LFB1480:
 6127              		.file 5 "../Checks.h"
   1:../Checks.h   **** #ifndef UNITTEST_CHECKS_H
   2:../Checks.h   **** #define UNITTEST_CHECKS_H
   3:../Checks.h   **** 
   4:../Checks.h   **** #include "Config.h"
   5:../Checks.h   **** #include "TestResults.h"
   6:../Checks.h   **** #include "MemoryOutStream.h"
   7:../Checks.h   **** 
   8:../Checks.h   **** namespace UnitTest {
   9:../Checks.h   **** 
  10:../Checks.h   **** 
  11:../Checks.h   **** template< typename Value >
  12:../Checks.h   **** bool Check(Value const value)
  13:../Checks.h   **** {
  14:../Checks.h   ****     return !!value; // doing double negative to avoid silly VS warnings
  15:../Checks.h   **** }
  16:../Checks.h   **** 
  17:../Checks.h   **** 
  18:../Checks.h   **** template< typename Expected, typename Actual >
  19:../Checks.h   **** void CheckEqual(TestResults& results, Expected const& expected, Actual const& actual, TestDetails c
 6128              		.loc 5 19 0
 6129              		.cfi_startproc
 6130              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6131              		.cfi_lsda 0x1b,.LLSDA1480
 6132 0000 55       		pushq	%rbp
 6133              		.cfi_def_cfa_offset 16
 6134              		.cfi_offset 6, -16
 6135 0001 4889E5   		movq	%rsp, %rbp
 6136              		.cfi_def_cfa_register 6
 6137 0004 53       		pushq	%rbx
 6138 0005 4881ECC8 		subq	$456, %rsp
 6138      010000
 6139              		.cfi_offset 3, -24
 6140 000c 4889BD48 		movq	%rdi, -440(%rbp)
 6140      FEFFFF
 6141 0013 4889B540 		movq	%rsi, -448(%rbp)
 6141      FEFFFF
 6142 001a 48899538 		movq	%rdx, -456(%rbp)
 6142      FEFFFF
 6143 0021 48898D30 		movq	%rcx, -464(%rbp)
 6143      FEFFFF
 6144              		.loc 5 19 0
 6145 0028 64488B04 		movq	%fs:40, %rax
 6145      25280000 
 6145      00
 6146 0031 488945E8 		movq	%rax, -24(%rbp)
 6147 0035 31C0     		xorl	%eax, %eax
 6148              	.LBB104:
  20:../Checks.h   **** {
  21:../Checks.h   ****     if (!(expected == actual))
 6149              		.loc 5 21 0
 6150 0037 488B8540 		movq	-448(%rbp), %rax
 6150      FEFFFF
 6151 003e 488B00   		movq	(%rax), %rax
 6152 0041 488B9538 		movq	-456(%rbp), %rdx
 6152      FEFFFF
 6153 0048 4889D6   		movq	%rdx, %rsi
 6154 004b 4889C7   		movq	%rax, %rdi
 6155              	.LEHB173:
 6156 004e E8000000 		call	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 6156      00
 6157 0053 83F001   		xorl	$1, %eax
 6158 0056 84C0     		testb	%al, %al
 6159 0058 0F84BA00 		je	.L316
 6159      0000
 6160              	.LBB105:
  22:../Checks.h   ****     {
  23:../Checks.h   ****         UnitTest::MemoryOutStream stream;
 6161              		.loc 5 23 0
 6162 005e 488D8550 		leaq	-432(%rbp), %rax
 6162      FEFFFF
 6163 0065 4889C7   		movq	%rax, %rdi
 6164 0068 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6164      00
 6165              	.LEHE173:
  24:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 6166              		.loc 5 24 0
 6167 006d 488D8550 		leaq	-432(%rbp), %rax
 6167      FEFFFF
 6168 0074 488D3500 		leaq	.LC45(%rip), %rsi
 6168      000000
 6169 007b 4889C7   		movq	%rax, %rdi
 6170              	.LEHB174:
 6171 007e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6171      00
 6172 0083 4889C2   		movq	%rax, %rdx
 6173 0086 488B8540 		movq	-448(%rbp), %rax
 6173      FEFFFF
 6174 008d 488B00   		movq	(%rax), %rax
 6175 0090 4889C6   		movq	%rax, %rsi
 6176 0093 4889D7   		movq	%rdx, %rdi
 6177 0096 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6177      00
 6178              		.loc 5 24 0 is_stmt 0 discriminator 1
 6179 009b 488D3500 		leaq	.LC46(%rip), %rsi
 6179      000000
 6180 00a2 4889C7   		movq	%rax, %rdi
 6181 00a5 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6181      00
 6182              		.loc 5 24 0 discriminator 2
 6183 00aa 4889C2   		movq	%rax, %rdx
 6184 00ad 488B8538 		movq	-456(%rbp), %rax
 6184      FEFFFF
 6185 00b4 4889C6   		movq	%rax, %rsi
 6186 00b7 4889D7   		movq	%rdx, %rdi
 6187 00ba E8000000 		call	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5
 6187      00
  25:../Checks.h   **** 
  26:../Checks.h   ****         results.OnTestFailure(details, stream.GetText());
 6188              		.loc 5 26 0 is_stmt 1
 6189 00bf 488D8550 		leaq	-432(%rbp), %rax
 6189      FEFFFF
 6190 00c6 4889C7   		movq	%rax, %rdi
 6191 00c9 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6191      00
 6192 00ce 4889C2   		movq	%rax, %rdx
 6193 00d1 488B8D30 		movq	-464(%rbp), %rcx
 6193      FEFFFF
 6194 00d8 488B8548 		movq	-440(%rbp), %rax
 6194      FEFFFF
 6195 00df 4889CE   		movq	%rcx, %rsi
 6196 00e2 4889C7   		movq	%rax, %rdi
 6197 00e5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6197      00
 6198              	.LEHE174:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 6199              		.loc 5 23 0
 6200 00ea 488D8550 		leaq	-432(%rbp), %rax
 6200      FEFFFF
 6201 00f1 4889C7   		movq	%rax, %rdi
 6202              	.LEHB175:
 6203 00f4 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6203      00
 6204              	.LEHE175:
 6205              	.LBE105:
 6206              	.LBE104:
  27:../Checks.h   ****     }
  28:../Checks.h   **** }
 6207              		.loc 5 28 0
 6208 00f9 EB1D     		jmp	.L316
 6209              	.L315:
 6210 00fb 4889C3   		movq	%rax, %rbx
 6211              	.LBB107:
 6212              	.LBB106:
  23:../Checks.h   ****         stream << "Expected " << expected << " but was " << actual;
 6213              		.loc 5 23 0
 6214 00fe 488D8550 		leaq	-432(%rbp), %rax
 6214      FEFFFF
 6215 0105 4889C7   		movq	%rax, %rdi
 6216 0108 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6216      00
 6217 010d 4889D8   		movq	%rbx, %rax
 6218 0110 4889C7   		movq	%rax, %rdi
 6219              	.LEHB176:
 6220 0113 E8000000 		call	_Unwind_Resume@PLT
 6220      00
 6221              	.LEHE176:
 6222              	.L316:
 6223              	.LBE106:
 6224              	.LBE107:
 6225              		.loc 5 28 0
 6226 0118 90       		nop
 6227 0119 488B45E8 		movq	-24(%rbp), %rax
 6228 011d 64483304 		xorq	%fs:40, %rax
 6228      25280000 
 6228      00
 6229 0126 7405     		je	.L314
 6230 0128 E8000000 		call	__stack_chk_fail@PLT
 6230      00
 6231              	.L314:
 6232 012d 4881C4C8 		addq	$456, %rsp
 6232      010000
 6233 0134 5B       		popq	%rbx
 6234 0135 5D       		popq	%rbp
 6235              		.cfi_def_cfa 7, 8
 6236 0136 C3       		ret
 6237              		.cfi_endproc
 6238              	.LFE1480:
 6239              		.section	.gcc_except_table
 6240              	.LLSDA1480:
 6241 0504 FF       		.byte	0xff
 6242 0505 FF       		.byte	0xff
 6243 0506 01       		.byte	0x1
 6244 0507 13       		.uleb128 .LLSDACSE1480-.LLSDACSB1480
 6245              	.LLSDACSB1480:
 6246 0508 4E       		.uleb128 .LEHB173-.LFB1480
 6247 0509 1F       		.uleb128 .LEHE173-.LEHB173
 6248 050a 00       		.uleb128 0
 6249 050b 00       		.uleb128 0
 6250 050c 7E       		.uleb128 .LEHB174-.LFB1480
 6251 050d 6C       		.uleb128 .LEHE174-.LEHB174
 6252 050e FB01     		.uleb128 .L315-.LFB1480
 6253 0510 00       		.uleb128 0
 6254 0511 F401     		.uleb128 .LEHB175-.LFB1480
 6255 0513 05       		.uleb128 .LEHE175-.LEHB175
 6256 0514 00       		.uleb128 0
 6257 0515 00       		.uleb128 0
 6258 0516 9302     		.uleb128 .LEHB176-.LFB1480
 6259 0518 05       		.uleb128 .LEHE176-.LEHB176
 6260 0519 00       		.uleb128 0
 6261 051a 00       		.uleb128 0
 6262              	.LLSDACSE1480:
 6263              		.section	.text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEv
 6265              		.text
 6267              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIs
 6268              	.LFB1481:
  16:../ExecuteTest.h **** {
 6269              		.loc 4 16 0
 6270              		.cfi_startproc
 6271              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6272              		.cfi_lsda 0x1b,.LLSDA1481
 6273 300c 55       		pushq	%rbp
 6274              		.cfi_def_cfa_offset 16
 6275              		.cfi_offset 6, -16
 6276 300d 4889E5   		movq	%rsp, %rbp
 6277              		.cfi_def_cfa_register 6
 6278 3010 4155     		pushq	%r13
 6279 3012 4154     		pushq	%r12
 6280 3014 53       		pushq	%rbx
 6281 3015 4881EC58 		subq	$1624, %rsp
 6281      060000
 6282              		.cfi_offset 13, -24
 6283              		.cfi_offset 12, -32
 6284              		.cfi_offset 3, -40
 6285 301c 4889BD98 		movq	%rdi, -1640(%rbp)
 6285      F9FFFF
 6286 3023 4889B590 		movq	%rsi, -1648(%rbp)
 6286      F9FFFF
  16:../ExecuteTest.h **** {
 6287              		.loc 4 16 0
 6288 302a 64488B04 		movq	%fs:40, %rax
 6288      25280000 
 6288      00
 6289 3033 488945D8 		movq	%rax, -40(%rbp)
 6290 3037 31C0     		xorl	%eax, %eax
 6291              	.LEHB177:
  18:../ExecuteTest.h **** 
 6292              		.loc 4 18 0
 6293 3039 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 6293      00
 6294              	.LEHE177:
 6295 303e 4889C2   		movq	%rax, %rdx
 6296 3041 488B8590 		movq	-1648(%rbp), %rax
 6296      F9FFFF
 6297 3048 488902   		movq	%rax, (%rdx)
 6298              	.LBB108:
  23:../ExecuteTest.h **** #endif
 6299              		.loc 4 23 0
 6300 304b 488D8570 		leaq	-1168(%rbp), %rax
 6300      FBFFFF
 6301 3052 4889C7   		movq	%rax, %rdi
 6302              	.LEHB178:
 6303 3055 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 6303      00
 6304              	.LEHE178:
  23:../ExecuteTest.h **** #endif
 6305              		.loc 4 23 0 is_stmt 0 discriminator 1
 6306 305a 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6306      000000
 6307 3061 BE010000 		movl	$1, %esi
 6307      00
 6308 3066 4889C7   		movq	%rax, %rdi
 6309 3069 E8000000 		call	__sigsetjmp@PLT
 6309      00
 6310 306e 85C0     		testl	%eax, %eax
 6311 3070 0F95C0   		setne	%al
 6312 3073 84C0     		testb	%al, %al
 6313 3075 7428     		je	.L319
  23:../ExecuteTest.h **** #endif
 6314              		.loc 4 23 0 discriminator 4
 6315 3077 BF080000 		movl	$8, %edi
 6315      00
 6316 307c E8000000 		call	__cxa_allocate_exception@PLT
 6316      00
 6317 3081 488D1500 		leaq	.LC43(%rip), %rdx
 6317      000000
 6318 3088 488910   		movq	%rdx, (%rax)
 6319 308b BA000000 		movl	$0, %edx
 6319      00
 6320 3090 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 6320      000000
 6321 3097 4889C7   		movq	%rax, %rdi
 6322              	.LEHB179:
 6323 309a E8000000 		call	__cxa_throw@PLT
 6323      00
 6324              	.L319:
  25:../ExecuteTest.h **** 	}
 6325              		.loc 4 25 0 is_stmt 1
 6326 309f 488B8598 		movq	-1640(%rbp), %rax
 6326      F9FFFF
 6327 30a6 4889C7   		movq	%rax, %rdi
 6328 30a9 E81AD9FF 		call	_ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunIm
 6328      FF
 6329              	.LEHE179:
  23:../ExecuteTest.h **** #endif
 6330              		.loc 4 23 0
 6331 30ae 488D8570 		leaq	-1168(%rbp), %rax
 6331      FBFFFF
 6332 30b5 4889C7   		movq	%rax, %rdi
 6333              	.LEHB180:
 6334 30b8 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6334      00
 6335              	.LEHE180:
 6336              	.LBE108:
 6337              		.loc 4 42 0
 6338 30bd E9F10100 		jmp	.L317
 6338      00
 6339              	.L332:
 6340 30c2 4989C4   		movq	%rax, %r12
 6341 30c5 4889D3   		movq	%rdx, %rbx
 6342              	.LBB109:
  23:../ExecuteTest.h **** #endif
 6343              		.loc 4 23 0
 6344 30c8 488D8570 		leaq	-1168(%rbp), %rax
 6344      FBFFFF
 6345 30cf 4889C7   		movq	%rax, %rdi
 6346 30d2 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6346      00
 6347 30d7 4C89E0   		movq	%r12, %rax
 6348 30da 4889DA   		movq	%rbx, %rdx
 6349 30dd EB00     		jmp	.L321
 6350              	.L331:
 6351              	.L321:
 6352 30df 4883FA01 		cmpq	$1, %rdx
 6353 30e3 740F     		je	.L323
 6354 30e5 4883FA02 		cmpq	$2, %rdx
 6355 30e9 0F84A600 		je	.L324
 6355      0000
 6356 30ef E9420100 		jmp	.L337
 6356      00
 6357              	.L323:
 6358              	.LBE109:
 6359              	.LBB110:
  27:../ExecuteTest.h **** 	{
 6360              		.loc 4 27 0
 6361 30f4 4889C7   		movq	%rax, %rdi
 6362 30f7 E8000000 		call	__cxa_begin_catch@PLT
 6362      00
 6363 30fc 488985A8 		movq	%rax, -1624(%rbp)
 6363      F9FFFF
 6364              	.LEHB181:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6365              		.loc 4 29 0
 6366 3103 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6366      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6367              		.loc 4 29 0 is_stmt 0 discriminator 1
 6368 3108 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 6369              		.loc 4 30 0 is_stmt 1 discriminator 1
 6370 310b 488B85A8 		movq	-1624(%rbp), %rax
 6370      F9FFFF
 6371 3112 488B00   		movq	(%rax), %rax
 6372 3115 4883C010 		addq	$16, %rax
 6373 3119 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6374              		.loc 4 29 0 discriminator 1
 6375 311c 488B95A8 		movq	-1624(%rbp), %rdx
 6375      F9FFFF
 6376 3123 4889D7   		movq	%rdx, %rdi
 6377 3126 FFD0     		call	*%rax
 6378              	.LVL18:
 6379 3128 4989C4   		movq	%rax, %r12
 6380 312b 488B85A8 		movq	-1624(%rbp), %rax
 6380      F9FFFF
 6381 3132 4889C7   		movq	%rax, %rdi
 6382 3135 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 6382      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6383              		.loc 4 29 0 is_stmt 0 discriminator 2
 6384 313a 4189C5   		movl	%eax, %r13d
 6385 313d 488B85A8 		movq	-1624(%rbp), %rax
 6385      F9FFFF
 6386 3144 4889C7   		movq	%rax, %rdi
 6387 3147 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 6387      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6388              		.loc 4 29 0 discriminator 3
 6389 314c 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 6390              		.loc 4 30 0 is_stmt 1 discriminator 3
 6391 314f 488B8590 		movq	-1648(%rbp), %rax
 6391      F9FFFF
 6392 3156 488B10   		movq	(%rax), %rdx
 6393 3159 488B8590 		movq	-1648(%rbp), %rax
 6393      F9FFFF
 6394 3160 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6395              		.loc 4 29 0 discriminator 3
 6396 3164 488D85B0 		leaq	-1616(%rbp), %rax
 6396      F9FFFF
 6397 316b 4589E8   		movl	%r13d, %r8d
 6398 316e 4889C7   		movq	%rax, %rdi
 6399 3171 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 6399      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6400              		.loc 4 29 0 is_stmt 0 discriminator 5
 6401 3176 488D85B0 		leaq	-1616(%rbp), %rax
 6401      F9FFFF
 6402 317d 4C89E2   		movq	%r12, %rdx
 6403 3180 4889C6   		movq	%rax, %rsi
 6404 3183 4889DF   		movq	%rbx, %rdi
 6405 3186 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6405      00
 6406              	.LEHE181:
  27:../ExecuteTest.h **** 	{
 6407              		.loc 4 27 0 is_stmt 1 discriminator 7
 6408 318b E8000000 		call	__cxa_end_catch@PLT
 6408      00
 6409              	.LBE110:
 6410              		.loc 4 42 0 discriminator 7
 6411 3190 E91E0100 		jmp	.L317
 6411      00
 6412              	.L324:
 6413              	.LBB111:
  32:../ExecuteTest.h **** 	{
 6414              		.loc 4 32 0
 6415 3195 4889C7   		movq	%rax, %rdi
 6416 3198 E8000000 		call	__cxa_begin_catch@PLT
 6416      00
 6417 319d 488985A0 		movq	%rax, -1632(%rbp)
 6417      F9FFFF
 6418              	.LBB112:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6419              		.loc 4 34 0
 6420 31a4 488D85D0 		leaq	-1584(%rbp), %rax
 6420      F9FFFF
 6421 31ab 4889C7   		movq	%rax, %rdi
 6422              	.LEHB182:
 6423 31ae E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6423      00
 6424              	.LEHE182:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6425              		.loc 4 35 0
 6426 31b3 488D85D0 		leaq	-1584(%rbp), %rax
 6426      F9FFFF
 6427 31ba 488D3500 		leaq	.LC3(%rip), %rsi
 6427      000000
 6428 31c1 4889C7   		movq	%rax, %rdi
 6429              	.LEHB183:
 6430 31c4 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6430      00
 6431 31c9 4889C3   		movq	%rax, %rbx
 6432 31cc 488B85A0 		movq	-1632(%rbp), %rax
 6432      F9FFFF
 6433 31d3 488B00   		movq	(%rax), %rax
 6434 31d6 4883C010 		addq	$16, %rax
 6435 31da 488B00   		movq	(%rax), %rax
 6436 31dd 488B95A0 		movq	-1632(%rbp), %rdx
 6436      F9FFFF
 6437 31e4 4889D7   		movq	%rdx, %rdi
 6438 31e7 FFD0     		call	*%rax
 6439              	.LVL19:
 6440 31e9 4889C6   		movq	%rax, %rsi
 6441 31ec 4889DF   		movq	%rbx, %rdi
 6442 31ef E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6442      00
  36:../ExecuteTest.h **** 	}
 6443              		.loc 4 36 0
 6444 31f4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6444      00
 6445 31f9 488B18   		movq	(%rax), %rbx
 6446 31fc 488D85D0 		leaq	-1584(%rbp), %rax
 6446      F9FFFF
 6447 3203 4889C7   		movq	%rax, %rdi
 6448 3206 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6448      00
  36:../ExecuteTest.h **** 	}
 6449              		.loc 4 36 0 is_stmt 0 discriminator 1
 6450 320b 4889C2   		movq	%rax, %rdx
 6451 320e 488B8590 		movq	-1648(%rbp), %rax
 6451      F9FFFF
 6452 3215 4889C6   		movq	%rax, %rsi
 6453 3218 4889DF   		movq	%rbx, %rdi
 6454 321b E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6454      00
 6455              	.LEHE183:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6456              		.loc 4 34 0 is_stmt 1
 6457 3220 488D85D0 		leaq	-1584(%rbp), %rax
 6457      F9FFFF
 6458 3227 4889C7   		movq	%rax, %rdi
 6459              	.LEHB184:
 6460 322a E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6460      00
 6461              	.LEHE184:
 6462              	.LBE112:
  32:../ExecuteTest.h **** 	{
 6463              		.loc 4 32 0
 6464 322f E8000000 		call	__cxa_end_catch@PLT
 6464      00
 6465              	.LBE111:
 6466              		.loc 4 42 0
 6467 3234 EB7D     		jmp	.L317
 6468              	.L337:
  38:../ExecuteTest.h **** 	{
 6469              		.loc 4 38 0
 6470 3236 4889C7   		movq	%rax, %rdi
 6471 3239 E8000000 		call	__cxa_begin_catch@PLT
 6471      00
 6472              	.LEHB185:
  40:../ExecuteTest.h **** 	}
 6473              		.loc 4 40 0
 6474 323e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6474      00
 6475 3243 488B00   		movq	(%rax), %rax
 6476 3246 488B8D90 		movq	-1648(%rbp), %rcx
 6476      F9FFFF
 6477 324d 488D1500 		leaq	.LC44(%rip), %rdx
 6477      000000
 6478 3254 4889CE   		movq	%rcx, %rsi
 6479 3257 4889C7   		movq	%rax, %rdi
 6480 325a E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6480      00
 6481              	.LEHE185:
 6482              	.LEHB186:
  38:../ExecuteTest.h **** 	{
 6483              		.loc 4 38 0
 6484 325f E8000000 		call	__cxa_end_catch@PLT
 6484      00
 6485              		.loc 4 42 0
 6486 3264 EB4D     		jmp	.L317
 6487              	.L333:
 6488 3266 4889C3   		movq	%rax, %rbx
 6489              	.LBB114:
  27:../ExecuteTest.h **** 	{
 6490              		.loc 4 27 0
 6491 3269 E8000000 		call	__cxa_end_catch@PLT
 6491      00
 6492 326e 4889D8   		movq	%rbx, %rax
 6493 3271 4889C7   		movq	%rax, %rdi
 6494 3274 E8000000 		call	_Unwind_Resume@PLT
 6494      00
 6495              	.LEHE186:
 6496              	.L335:
 6497 3279 4889C3   		movq	%rax, %rbx
 6498              	.LBE114:
 6499              	.LBB115:
 6500              	.LBB113:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6501              		.loc 4 34 0
 6502 327c 488D85D0 		leaq	-1584(%rbp), %rax
 6502      F9FFFF
 6503 3283 4889C7   		movq	%rax, %rdi
 6504 3286 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6504      00
 6505 328b EB03     		jmp	.L328
 6506              	.L334:
 6507 328d 4889C3   		movq	%rax, %rbx
 6508              	.L328:
 6509              	.LBE113:
  32:../ExecuteTest.h **** 	{
 6510              		.loc 4 32 0
 6511 3290 E8000000 		call	__cxa_end_catch@PLT
 6511      00
 6512 3295 4889D8   		movq	%rbx, %rax
 6513 3298 4889C7   		movq	%rax, %rdi
 6514              	.LEHB187:
 6515 329b E8000000 		call	_Unwind_Resume@PLT
 6515      00
 6516              	.LEHE187:
 6517              	.L336:
 6518 32a0 4889C3   		movq	%rax, %rbx
 6519              	.LBE115:
  38:../ExecuteTest.h **** 	{
 6520              		.loc 4 38 0
 6521 32a3 E8000000 		call	__cxa_end_catch@PLT
 6521      00
 6522 32a8 4889D8   		movq	%rbx, %rax
 6523 32ab 4889C7   		movq	%rax, %rdi
 6524              	.LEHB188:
 6525 32ae E8000000 		call	_Unwind_Resume@PLT
 6525      00
 6526              	.LEHE188:
 6527              	.L317:
 6528              		.loc 4 42 0
 6529 32b3 488B45D8 		movq	-40(%rbp), %rax
 6530 32b7 64483304 		xorq	%fs:40, %rax
 6530      25280000 
 6530      00
 6531 32c0 7405     		je	.L330
 6532 32c2 E8000000 		call	__stack_chk_fail@PLT
 6532      00
 6533              	.L330:
 6534 32c7 4881C458 		addq	$1624, %rsp
 6534      060000
 6535 32ce 5B       		popq	%rbx
 6536 32cf 415C     		popq	%r12
 6537 32d1 415D     		popq	%r13
 6538 32d3 5D       		popq	%rbp
 6539              		.cfi_def_cfa 7, 8
 6540 32d4 C3       		ret
 6541              		.cfi_endproc
 6542              	.LFE1481:
 6543              		.section	.gcc_except_table
 6544 051b 00       		.align 4
 6545              	.LLSDA1481:
 6546 051c FF       		.byte	0xff
 6547 051d 9B       		.byte	0x9b
 6548 051e 59       		.uleb128 .LLSDATT1481-.LLSDATTD1481
 6549              	.LLSDATTD1481:
 6550 051f 01       		.byte	0x1
 6551 0520 43       		.uleb128 .LLSDACSE1481-.LLSDACSB1481
 6552              	.LLSDACSB1481:
 6553 0521 2D       		.uleb128 .LEHB177-.LFB1481
 6554 0522 05       		.uleb128 .LEHE177-.LEHB177
 6555 0523 00       		.uleb128 0
 6556 0524 00       		.uleb128 0
 6557 0525 49       		.uleb128 .LEHB178-.LFB1481
 6558 0526 05       		.uleb128 .LEHE178-.LEHB178
 6559 0527 D301     		.uleb128 .L331-.LFB1481
 6560 0529 05       		.uleb128 0x5
 6561 052a 8E01     		.uleb128 .LEHB179-.LFB1481
 6562 052c 14       		.uleb128 .LEHE179-.LEHB179
 6563 052d B601     		.uleb128 .L332-.LFB1481
 6564 052f 07       		.uleb128 0x7
 6565 0530 AC01     		.uleb128 .LEHB180-.LFB1481
 6566 0532 05       		.uleb128 .LEHE180-.LEHB180
 6567 0533 D301     		.uleb128 .L331-.LFB1481
 6568 0535 05       		.uleb128 0x5
 6569 0536 F701     		.uleb128 .LEHB181-.LFB1481
 6570 0538 8801     		.uleb128 .LEHE181-.LEHB181
 6571 053a DA04     		.uleb128 .L333-.LFB1481
 6572 053c 00       		.uleb128 0
 6573 053d A203     		.uleb128 .LEHB182-.LFB1481
 6574 053f 05       		.uleb128 .LEHE182-.LEHB182
 6575 0540 8105     		.uleb128 .L334-.LFB1481
 6576 0542 00       		.uleb128 0
 6577 0543 B803     		.uleb128 .LEHB183-.LFB1481
 6578 0545 5C       		.uleb128 .LEHE183-.LEHB183
 6579 0546 ED04     		.uleb128 .L335-.LFB1481
 6580 0548 00       		.uleb128 0
 6581 0549 9E04     		.uleb128 .LEHB184-.LFB1481
 6582 054b 05       		.uleb128 .LEHE184-.LEHB184
 6583 054c 8105     		.uleb128 .L334-.LFB1481
 6584 054e 00       		.uleb128 0
 6585 054f B204     		.uleb128 .LEHB185-.LFB1481
 6586 0551 21       		.uleb128 .LEHE185-.LEHB185
 6587 0552 9405     		.uleb128 .L336-.LFB1481
 6588 0554 00       		.uleb128 0
 6589 0555 D304     		.uleb128 .LEHB186-.LFB1481
 6590 0557 1A       		.uleb128 .LEHE186-.LEHB186
 6591 0558 00       		.uleb128 0
 6592 0559 00       		.uleb128 0
 6593 055a 8F05     		.uleb128 .LEHB187-.LFB1481
 6594 055c 05       		.uleb128 .LEHE187-.LEHB187
 6595 055d 00       		.uleb128 0
 6596 055e 00       		.uleb128 0
 6597 055f A205     		.uleb128 .LEHB188-.LFB1481
 6598 0561 05       		.uleb128 .LEHE188-.LEHB188
 6599 0562 00       		.uleb128 0
 6600 0563 00       		.uleb128 0
 6601              	.LLSDACSE1481:
 6602 0564 03       		.byte	0x3
 6603 0565 00       		.byte	0
 6604 0566 02       		.byte	0x2
 6605 0567 7D       		.byte	0x7d
 6606 0568 01       		.byte	0x1
 6607 0569 7D       		.byte	0x7d
 6608 056a 00       		.byte	0
 6609 056b 7D       		.byte	0x7d
 6610              		.align 4
 6611 056c 00000000 		.long	0
 6612              	
 6613 0570 00000000 		.long	DW.ref._ZTISt9exception-.
 6614 0574 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6615              	.LLSDATT1481:
 6616              		.text
 6618              		.section	.text._ZN8UnitTest5CheckIbEEbT_,"axG",@progbits,_ZN8UnitTest5CheckIbEEbT_,comdat
 6619              		.weak	_ZN8UnitTest5CheckIbEEbT_
 6621              	_ZN8UnitTest5CheckIbEEbT_:
 6622              	.LFB1483:
  12:../Checks.h   **** {
 6623              		.loc 5 12 0
 6624              		.cfi_startproc
 6625 0000 55       		pushq	%rbp
 6626              		.cfi_def_cfa_offset 16
 6627              		.cfi_offset 6, -16
 6628 0001 4889E5   		movq	%rsp, %rbp
 6629              		.cfi_def_cfa_register 6
 6630 0004 89F8     		movl	%edi, %eax
 6631 0006 8845FC   		movb	%al, -4(%rbp)
  14:../Checks.h   **** }
 6632              		.loc 5 14 0
 6633 0009 0FB645FC 		movzbl	-4(%rbp), %eax
  15:../Checks.h   **** 
 6634              		.loc 5 15 0
 6635 000d 5D       		popq	%rbp
 6636              		.cfi_def_cfa 7, 8
 6637 000e C3       		ret
 6638              		.cfi_endproc
 6639              	.LFE1483:
 6641              		.text
 6643              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperEEEv
 6644              	.LFB1484:
  16:../ExecuteTest.h **** {
 6645              		.loc 4 16 0
 6646              		.cfi_startproc
 6647              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6648              		.cfi_lsda 0x1b,.LLSDA1484
 6649 32d5 55       		pushq	%rbp
 6650              		.cfi_def_cfa_offset 16
 6651              		.cfi_offset 6, -16
 6652 32d6 4889E5   		movq	%rsp, %rbp
 6653              		.cfi_def_cfa_register 6
 6654 32d9 4155     		pushq	%r13
 6655 32db 4154     		pushq	%r12
 6656 32dd 53       		pushq	%rbx
 6657 32de 4881EC58 		subq	$1624, %rsp
 6657      060000
 6658              		.cfi_offset 13, -24
 6659              		.cfi_offset 12, -32
 6660              		.cfi_offset 3, -40
 6661 32e5 4889BD98 		movq	%rdi, -1640(%rbp)
 6661      F9FFFF
 6662 32ec 4889B590 		movq	%rsi, -1648(%rbp)
 6662      F9FFFF
  16:../ExecuteTest.h **** {
 6663              		.loc 4 16 0
 6664 32f3 64488B04 		movq	%fs:40, %rax
 6664      25280000 
 6664      00
 6665 32fc 488945D8 		movq	%rax, -40(%rbp)
 6666 3300 31C0     		xorl	%eax, %eax
 6667              	.LEHB189:
  18:../ExecuteTest.h **** 
 6668              		.loc 4 18 0
 6669 3302 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 6669      00
 6670              	.LEHE189:
 6671 3307 4889C2   		movq	%rax, %rdx
 6672 330a 488B8590 		movq	-1648(%rbp), %rax
 6672      F9FFFF
 6673 3311 488902   		movq	%rax, (%rdx)
 6674              	.LBB116:
  23:../ExecuteTest.h **** #endif
 6675              		.loc 4 23 0
 6676 3314 488D8570 		leaq	-1168(%rbp), %rax
 6676      FBFFFF
 6677 331b 4889C7   		movq	%rax, %rdi
 6678              	.LEHB190:
 6679 331e E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 6679      00
 6680              	.LEHE190:
  23:../ExecuteTest.h **** #endif
 6681              		.loc 4 23 0 is_stmt 0 discriminator 1
 6682 3323 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 6682      000000
 6683 332a BE010000 		movl	$1, %esi
 6683      00
 6684 332f 4889C7   		movq	%rax, %rdi
 6685 3332 E8000000 		call	__sigsetjmp@PLT
 6685      00
 6686 3337 85C0     		testl	%eax, %eax
 6687 3339 0F95C0   		setne	%al
 6688 333c 84C0     		testb	%al, %al
 6689 333e 7428     		je	.L342
  23:../ExecuteTest.h **** #endif
 6690              		.loc 4 23 0 discriminator 4
 6691 3340 BF080000 		movl	$8, %edi
 6691      00
 6692 3345 E8000000 		call	__cxa_allocate_exception@PLT
 6692      00
 6693 334a 488D1500 		leaq	.LC43(%rip), %rdx
 6693      000000
 6694 3351 488910   		movq	%rdx, (%rax)
 6695 3354 BA000000 		movl	$0, %edx
 6695      00
 6696 3359 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 6696      000000
 6697 3360 4889C7   		movq	%rax, %rdi
 6698              	.LEHB191:
 6699 3363 E8000000 		call	__cxa_throw@PLT
 6699      00
 6700              	.L342:
  25:../ExecuteTest.h **** 	}
 6701              		.loc 4 25 0 is_stmt 1
 6702 3368 488B8598 		movq	-1640(%rbp), %rax
 6702      F9FFFF
 6703 336f 4889C7   		movq	%rax, %rdi
 6704 3372 E8D5DCFF 		call	_ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv
 6704      FF
 6705              	.LEHE191:
  23:../ExecuteTest.h **** #endif
 6706              		.loc 4 23 0
 6707 3377 488D8570 		leaq	-1168(%rbp), %rax
 6707      FBFFFF
 6708 337e 4889C7   		movq	%rax, %rdi
 6709              	.LEHB192:
 6710 3381 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6710      00
 6711              	.LEHE192:
 6712              	.LBE116:
 6713              		.loc 4 42 0
 6714 3386 E9F10100 		jmp	.L340
 6714      00
 6715              	.L355:
 6716 338b 4989C4   		movq	%rax, %r12
 6717 338e 4889D3   		movq	%rdx, %rbx
 6718              	.LBB117:
  23:../ExecuteTest.h **** #endif
 6719              		.loc 4 23 0
 6720 3391 488D8570 		leaq	-1168(%rbp), %rax
 6720      FBFFFF
 6721 3398 4889C7   		movq	%rax, %rdi
 6722 339b E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 6722      00
 6723 33a0 4C89E0   		movq	%r12, %rax
 6724 33a3 4889DA   		movq	%rbx, %rdx
 6725 33a6 EB00     		jmp	.L344
 6726              	.L354:
 6727              	.L344:
 6728 33a8 4883FA01 		cmpq	$1, %rdx
 6729 33ac 740F     		je	.L346
 6730 33ae 4883FA02 		cmpq	$2, %rdx
 6731 33b2 0F84A600 		je	.L347
 6731      0000
 6732 33b8 E9420100 		jmp	.L360
 6732      00
 6733              	.L346:
 6734              	.LBE117:
 6735              	.LBB118:
  27:../ExecuteTest.h **** 	{
 6736              		.loc 4 27 0
 6737 33bd 4889C7   		movq	%rax, %rdi
 6738 33c0 E8000000 		call	__cxa_begin_catch@PLT
 6738      00
 6739 33c5 488985A8 		movq	%rax, -1624(%rbp)
 6739      F9FFFF
 6740              	.LEHB193:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6741              		.loc 4 29 0
 6742 33cc E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6742      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6743              		.loc 4 29 0 is_stmt 0 discriminator 1
 6744 33d1 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 6745              		.loc 4 30 0 is_stmt 1 discriminator 1
 6746 33d4 488B85A8 		movq	-1624(%rbp), %rax
 6746      F9FFFF
 6747 33db 488B00   		movq	(%rax), %rax
 6748 33de 4883C010 		addq	$16, %rax
 6749 33e2 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6750              		.loc 4 29 0 discriminator 1
 6751 33e5 488B95A8 		movq	-1624(%rbp), %rdx
 6751      F9FFFF
 6752 33ec 4889D7   		movq	%rdx, %rdi
 6753 33ef FFD0     		call	*%rax
 6754              	.LVL20:
 6755 33f1 4989C4   		movq	%rax, %r12
 6756 33f4 488B85A8 		movq	-1624(%rbp), %rax
 6756      F9FFFF
 6757 33fb 4889C7   		movq	%rax, %rdi
 6758 33fe E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 6758      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6759              		.loc 4 29 0 is_stmt 0 discriminator 2
 6760 3403 4189C5   		movl	%eax, %r13d
 6761 3406 488B85A8 		movq	-1624(%rbp), %rax
 6761      F9FFFF
 6762 340d 4889C7   		movq	%rax, %rdi
 6763 3410 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 6763      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6764              		.loc 4 29 0 discriminator 3
 6765 3415 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 6766              		.loc 4 30 0 is_stmt 1 discriminator 3
 6767 3418 488B8590 		movq	-1648(%rbp), %rax
 6767      F9FFFF
 6768 341f 488B10   		movq	(%rax), %rdx
 6769 3422 488B8590 		movq	-1648(%rbp), %rax
 6769      F9FFFF
 6770 3429 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6771              		.loc 4 29 0 discriminator 3
 6772 342d 488D85B0 		leaq	-1616(%rbp), %rax
 6772      F9FFFF
 6773 3434 4589E8   		movl	%r13d, %r8d
 6774 3437 4889C7   		movq	%rax, %rdi
 6775 343a E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 6775      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 6776              		.loc 4 29 0 is_stmt 0 discriminator 5
 6777 343f 488D85B0 		leaq	-1616(%rbp), %rax
 6777      F9FFFF
 6778 3446 4C89E2   		movq	%r12, %rdx
 6779 3449 4889C6   		movq	%rax, %rsi
 6780 344c 4889DF   		movq	%rbx, %rdi
 6781 344f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6781      00
 6782              	.LEHE193:
  27:../ExecuteTest.h **** 	{
 6783              		.loc 4 27 0 is_stmt 1 discriminator 7
 6784 3454 E8000000 		call	__cxa_end_catch@PLT
 6784      00
 6785              	.LBE118:
 6786              		.loc 4 42 0 discriminator 7
 6787 3459 E91E0100 		jmp	.L340
 6787      00
 6788              	.L347:
 6789              	.LBB119:
  32:../ExecuteTest.h **** 	{
 6790              		.loc 4 32 0
 6791 345e 4889C7   		movq	%rax, %rdi
 6792 3461 E8000000 		call	__cxa_begin_catch@PLT
 6792      00
 6793 3466 488985A0 		movq	%rax, -1632(%rbp)
 6793      F9FFFF
 6794              	.LBB120:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6795              		.loc 4 34 0
 6796 346d 488D85D0 		leaq	-1584(%rbp), %rax
 6796      F9FFFF
 6797 3474 4889C7   		movq	%rax, %rdi
 6798              	.LEHB194:
 6799 3477 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 6799      00
 6800              	.LEHE194:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 6801              		.loc 4 35 0
 6802 347c 488D85D0 		leaq	-1584(%rbp), %rax
 6802      F9FFFF
 6803 3483 488D3500 		leaq	.LC3(%rip), %rsi
 6803      000000
 6804 348a 4889C7   		movq	%rax, %rdi
 6805              	.LEHB195:
 6806 348d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6806      00
 6807 3492 4889C3   		movq	%rax, %rbx
 6808 3495 488B85A0 		movq	-1632(%rbp), %rax
 6808      F9FFFF
 6809 349c 488B00   		movq	(%rax), %rax
 6810 349f 4883C010 		addq	$16, %rax
 6811 34a3 488B00   		movq	(%rax), %rax
 6812 34a6 488B95A0 		movq	-1632(%rbp), %rdx
 6812      F9FFFF
 6813 34ad 4889D7   		movq	%rdx, %rdi
 6814 34b0 FFD0     		call	*%rax
 6815              	.LVL21:
 6816 34b2 4889C6   		movq	%rax, %rsi
 6817 34b5 4889DF   		movq	%rbx, %rdi
 6818 34b8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6818      00
  36:../ExecuteTest.h **** 	}
 6819              		.loc 4 36 0
 6820 34bd E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6820      00
 6821 34c2 488B18   		movq	(%rax), %rbx
 6822 34c5 488D85D0 		leaq	-1584(%rbp), %rax
 6822      F9FFFF
 6823 34cc 4889C7   		movq	%rax, %rdi
 6824 34cf E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 6824      00
  36:../ExecuteTest.h **** 	}
 6825              		.loc 4 36 0 is_stmt 0 discriminator 1
 6826 34d4 4889C2   		movq	%rax, %rdx
 6827 34d7 488B8590 		movq	-1648(%rbp), %rax
 6827      F9FFFF
 6828 34de 4889C6   		movq	%rax, %rsi
 6829 34e1 4889DF   		movq	%rbx, %rdi
 6830 34e4 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6830      00
 6831              	.LEHE195:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6832              		.loc 4 34 0 is_stmt 1
 6833 34e9 488D85D0 		leaq	-1584(%rbp), %rax
 6833      F9FFFF
 6834 34f0 4889C7   		movq	%rax, %rdi
 6835              	.LEHB196:
 6836 34f3 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6836      00
 6837              	.LEHE196:
 6838              	.LBE120:
  32:../ExecuteTest.h **** 	{
 6839              		.loc 4 32 0
 6840 34f8 E8000000 		call	__cxa_end_catch@PLT
 6840      00
 6841              	.LBE119:
 6842              		.loc 4 42 0
 6843 34fd EB7D     		jmp	.L340
 6844              	.L360:
  38:../ExecuteTest.h **** 	{
 6845              		.loc 4 38 0
 6846 34ff 4889C7   		movq	%rax, %rdi
 6847 3502 E8000000 		call	__cxa_begin_catch@PLT
 6847      00
 6848              	.LEHB197:
  40:../ExecuteTest.h **** 	}
 6849              		.loc 4 40 0
 6850 3507 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 6850      00
 6851 350c 488B00   		movq	(%rax), %rax
 6852 350f 488B8D90 		movq	-1648(%rbp), %rcx
 6852      F9FFFF
 6853 3516 488D1500 		leaq	.LC44(%rip), %rdx
 6853      000000
 6854 351d 4889CE   		movq	%rcx, %rsi
 6855 3520 4889C7   		movq	%rax, %rdi
 6856 3523 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 6856      00
 6857              	.LEHE197:
 6858              	.LEHB198:
  38:../ExecuteTest.h **** 	{
 6859              		.loc 4 38 0
 6860 3528 E8000000 		call	__cxa_end_catch@PLT
 6860      00
 6861              		.loc 4 42 0
 6862 352d EB4D     		jmp	.L340
 6863              	.L356:
 6864 352f 4889C3   		movq	%rax, %rbx
 6865              	.LBB122:
  27:../ExecuteTest.h **** 	{
 6866              		.loc 4 27 0
 6867 3532 E8000000 		call	__cxa_end_catch@PLT
 6867      00
 6868 3537 4889D8   		movq	%rbx, %rax
 6869 353a 4889C7   		movq	%rax, %rdi
 6870 353d E8000000 		call	_Unwind_Resume@PLT
 6870      00
 6871              	.LEHE198:
 6872              	.L358:
 6873 3542 4889C3   		movq	%rax, %rbx
 6874              	.LBE122:
 6875              	.LBB123:
 6876              	.LBB121:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 6877              		.loc 4 34 0
 6878 3545 488D85D0 		leaq	-1584(%rbp), %rax
 6878      F9FFFF
 6879 354c 4889C7   		movq	%rax, %rdi
 6880 354f E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 6880      00
 6881 3554 EB03     		jmp	.L351
 6882              	.L357:
 6883 3556 4889C3   		movq	%rax, %rbx
 6884              	.L351:
 6885              	.LBE121:
  32:../ExecuteTest.h **** 	{
 6886              		.loc 4 32 0
 6887 3559 E8000000 		call	__cxa_end_catch@PLT
 6887      00
 6888 355e 4889D8   		movq	%rbx, %rax
 6889 3561 4889C7   		movq	%rax, %rdi
 6890              	.LEHB199:
 6891 3564 E8000000 		call	_Unwind_Resume@PLT
 6891      00
 6892              	.LEHE199:
 6893              	.L359:
 6894 3569 4889C3   		movq	%rax, %rbx
 6895              	.LBE123:
  38:../ExecuteTest.h **** 	{
 6896              		.loc 4 38 0
 6897 356c E8000000 		call	__cxa_end_catch@PLT
 6897      00
 6898 3571 4889D8   		movq	%rbx, %rax
 6899 3574 4889C7   		movq	%rax, %rdi
 6900              	.LEHB200:
 6901 3577 E8000000 		call	_Unwind_Resume@PLT
 6901      00
 6902              	.LEHE200:
 6903              	.L340:
 6904              		.loc 4 42 0
 6905 357c 488B45D8 		movq	-40(%rbp), %rax
 6906 3580 64483304 		xorq	%fs:40, %rax
 6906      25280000 
 6906      00
 6907 3589 7405     		je	.L353
 6908 358b E8000000 		call	__stack_chk_fail@PLT
 6908      00
 6909              	.L353:
 6910 3590 4881C458 		addq	$1624, %rsp
 6910      060000
 6911 3597 5B       		popq	%rbx
 6912 3598 415C     		popq	%r12
 6913 359a 415D     		popq	%r13
 6914 359c 5D       		popq	%rbp
 6915              		.cfi_def_cfa 7, 8
 6916 359d C3       		ret
 6917              		.cfi_endproc
 6918              	.LFE1484:
 6919              		.section	.gcc_except_table
 6920              		.align 4
 6921              	.LLSDA1484:
 6922 0578 FF       		.byte	0xff
 6923 0579 9B       		.byte	0x9b
 6924 057a 59       		.uleb128 .LLSDATT1484-.LLSDATTD1484
 6925              	.LLSDATTD1484:
 6926 057b 01       		.byte	0x1
 6927 057c 43       		.uleb128 .LLSDACSE1484-.LLSDACSB1484
 6928              	.LLSDACSB1484:
 6929 057d 2D       		.uleb128 .LEHB189-.LFB1484
 6930 057e 05       		.uleb128 .LEHE189-.LEHB189
 6931 057f 00       		.uleb128 0
 6932 0580 00       		.uleb128 0
 6933 0581 49       		.uleb128 .LEHB190-.LFB1484
 6934 0582 05       		.uleb128 .LEHE190-.LEHB190
 6935 0583 D301     		.uleb128 .L354-.LFB1484
 6936 0585 05       		.uleb128 0x5
 6937 0586 8E01     		.uleb128 .LEHB191-.LFB1484
 6938 0588 14       		.uleb128 .LEHE191-.LEHB191
 6939 0589 B601     		.uleb128 .L355-.LFB1484
 6940 058b 07       		.uleb128 0x7
 6941 058c AC01     		.uleb128 .LEHB192-.LFB1484
 6942 058e 05       		.uleb128 .LEHE192-.LEHB192
 6943 058f D301     		.uleb128 .L354-.LFB1484
 6944 0591 05       		.uleb128 0x5
 6945 0592 F701     		.uleb128 .LEHB193-.LFB1484
 6946 0594 8801     		.uleb128 .LEHE193-.LEHB193
 6947 0596 DA04     		.uleb128 .L356-.LFB1484
 6948 0598 00       		.uleb128 0
 6949 0599 A203     		.uleb128 .LEHB194-.LFB1484
 6950 059b 05       		.uleb128 .LEHE194-.LEHB194
 6951 059c 8105     		.uleb128 .L357-.LFB1484
 6952 059e 00       		.uleb128 0
 6953 059f B803     		.uleb128 .LEHB195-.LFB1484
 6954 05a1 5C       		.uleb128 .LEHE195-.LEHB195
 6955 05a2 ED04     		.uleb128 .L358-.LFB1484
 6956 05a4 00       		.uleb128 0
 6957 05a5 9E04     		.uleb128 .LEHB196-.LFB1484
 6958 05a7 05       		.uleb128 .LEHE196-.LEHB196
 6959 05a8 8105     		.uleb128 .L357-.LFB1484
 6960 05aa 00       		.uleb128 0
 6961 05ab B204     		.uleb128 .LEHB197-.LFB1484
 6962 05ad 21       		.uleb128 .LEHE197-.LEHB197
 6963 05ae 9405     		.uleb128 .L359-.LFB1484
 6964 05b0 00       		.uleb128 0
 6965 05b1 D304     		.uleb128 .LEHB198-.LFB1484
 6966 05b3 1A       		.uleb128 .LEHE198-.LEHB198
 6967 05b4 00       		.uleb128 0
 6968 05b5 00       		.uleb128 0
 6969 05b6 8F05     		.uleb128 .LEHB199-.LFB1484
 6970 05b8 05       		.uleb128 .LEHE199-.LEHB199
 6971 05b9 00       		.uleb128 0
 6972 05ba 00       		.uleb128 0
 6973 05bb A205     		.uleb128 .LEHB200-.LFB1484
 6974 05bd 05       		.uleb128 .LEHE200-.LEHB200
 6975 05be 00       		.uleb128 0
 6976 05bf 00       		.uleb128 0
 6977              	.LLSDACSE1484:
 6978 05c0 03       		.byte	0x3
 6979 05c1 00       		.byte	0
 6980 05c2 02       		.byte	0x2
 6981 05c3 7D       		.byte	0x7d
 6982 05c4 01       		.byte	0x1
 6983 05c5 7D       		.byte	0x7d
 6984 05c6 00       		.byte	0
 6985 05c7 7D       		.byte	0x7d
 6986              		.align 4
 6987 05c8 00000000 		.long	0
 6988              	
 6989 05cc 00000000 		.long	DW.ref._ZTISt9exception-.
 6990 05d0 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 6991              	.LLSDATT1484:
 6992              		.text
 6995              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryF
 6996              	.LFB1485:
  16:../ExecuteTest.h **** {
 6997              		.loc 4 16 0
 6998              		.cfi_startproc
 6999              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7000              		.cfi_lsda 0x1b,.LLSDA1485
 7001 359e 55       		pushq	%rbp
 7002              		.cfi_def_cfa_offset 16
 7003              		.cfi_offset 6, -16
 7004 359f 4889E5   		movq	%rsp, %rbp
 7005              		.cfi_def_cfa_register 6
 7006 35a2 4155     		pushq	%r13
 7007 35a4 4154     		pushq	%r12
 7008 35a6 53       		pushq	%rbx
 7009 35a7 4881EC58 		subq	$1624, %rsp
 7009      060000
 7010              		.cfi_offset 13, -24
 7011              		.cfi_offset 12, -32
 7012              		.cfi_offset 3, -40
 7013 35ae 4889BD98 		movq	%rdi, -1640(%rbp)
 7013      F9FFFF
 7014 35b5 4889B590 		movq	%rsi, -1648(%rbp)
 7014      F9FFFF
  16:../ExecuteTest.h **** {
 7015              		.loc 4 16 0
 7016 35bc 64488B04 		movq	%fs:40, %rax
 7016      25280000 
 7016      00
 7017 35c5 488945D8 		movq	%rax, -40(%rbp)
 7018 35c9 31C0     		xorl	%eax, %eax
 7019              	.LEHB201:
  18:../ExecuteTest.h **** 
 7020              		.loc 4 18 0
 7021 35cb E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 7021      00
 7022              	.LEHE201:
 7023 35d0 4889C2   		movq	%rax, %rdx
 7024 35d3 488B8590 		movq	-1648(%rbp), %rax
 7024      F9FFFF
 7025 35da 488902   		movq	%rax, (%rdx)
 7026              	.LBB124:
  23:../ExecuteTest.h **** #endif
 7027              		.loc 4 23 0
 7028 35dd 488D8570 		leaq	-1168(%rbp), %rax
 7028      FBFFFF
 7029 35e4 4889C7   		movq	%rax, %rdi
 7030              	.LEHB202:
 7031 35e7 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 7031      00
 7032              	.LEHE202:
  23:../ExecuteTest.h **** #endif
 7033              		.loc 4 23 0 is_stmt 0 discriminator 1
 7034 35ec 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7034      000000
 7035 35f3 BE010000 		movl	$1, %esi
 7035      00
 7036 35f8 4889C7   		movq	%rax, %rdi
 7037 35fb E8000000 		call	__sigsetjmp@PLT
 7037      00
 7038 3600 85C0     		testl	%eax, %eax
 7039 3602 0F95C0   		setne	%al
 7040 3605 84C0     		testb	%al, %al
 7041 3607 7428     		je	.L363
  23:../ExecuteTest.h **** #endif
 7042              		.loc 4 23 0 discriminator 4
 7043 3609 BF080000 		movl	$8, %edi
 7043      00
 7044 360e E8000000 		call	__cxa_allocate_exception@PLT
 7044      00
 7045 3613 488D1500 		leaq	.LC43(%rip), %rdx
 7045      000000
 7046 361a 488910   		movq	%rdx, (%rax)
 7047 361d BA000000 		movl	$0, %edx
 7047      00
 7048 3622 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 7048      000000
 7049 3629 4889C7   		movq	%rax, %rdi
 7050              	.LEHB203:
 7051 362c E8000000 		call	__cxa_throw@PLT
 7051      00
 7052              	.L363:
  25:../ExecuteTest.h **** 	}
 7053              		.loc 4 25 0 is_stmt 1
 7054 3631 488B8598 		movq	-1640(%rbp), %rax
 7054      F9FFFF
 7055 3638 4889C7   		movq	%rax, %rdi
 7056 363b E8E4DEFF 		call	_ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImp
 7056      FF
 7057              	.LEHE203:
  23:../ExecuteTest.h **** #endif
 7058              		.loc 4 23 0
 7059 3640 488D8570 		leaq	-1168(%rbp), %rax
 7059      FBFFFF
 7060 3647 4889C7   		movq	%rax, %rdi
 7061              	.LEHB204:
 7062 364a E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7062      00
 7063              	.LEHE204:
 7064              	.LBE124:
 7065              		.loc 4 42 0
 7066 364f E9F10100 		jmp	.L361
 7066      00
 7067              	.L376:
 7068 3654 4989C4   		movq	%rax, %r12
 7069 3657 4889D3   		movq	%rdx, %rbx
 7070              	.LBB125:
  23:../ExecuteTest.h **** #endif
 7071              		.loc 4 23 0
 7072 365a 488D8570 		leaq	-1168(%rbp), %rax
 7072      FBFFFF
 7073 3661 4889C7   		movq	%rax, %rdi
 7074 3664 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7074      00
 7075 3669 4C89E0   		movq	%r12, %rax
 7076 366c 4889DA   		movq	%rbx, %rdx
 7077 366f EB00     		jmp	.L365
 7078              	.L375:
 7079              	.L365:
 7080 3671 4883FA01 		cmpq	$1, %rdx
 7081 3675 740F     		je	.L367
 7082 3677 4883FA02 		cmpq	$2, %rdx
 7083 367b 0F84A600 		je	.L368
 7083      0000
 7084 3681 E9420100 		jmp	.L381
 7084      00
 7085              	.L367:
 7086              	.LBE125:
 7087              	.LBB126:
  27:../ExecuteTest.h **** 	{
 7088              		.loc 4 27 0
 7089 3686 4889C7   		movq	%rax, %rdi
 7090 3689 E8000000 		call	__cxa_begin_catch@PLT
 7090      00
 7091 368e 488985A8 		movq	%rax, -1624(%rbp)
 7091      F9FFFF
 7092              	.LEHB205:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7093              		.loc 4 29 0
 7094 3695 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7094      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7095              		.loc 4 29 0 is_stmt 0 discriminator 1
 7096 369a 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 7097              		.loc 4 30 0 is_stmt 1 discriminator 1
 7098 369d 488B85A8 		movq	-1624(%rbp), %rax
 7098      F9FFFF
 7099 36a4 488B00   		movq	(%rax), %rax
 7100 36a7 4883C010 		addq	$16, %rax
 7101 36ab 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7102              		.loc 4 29 0 discriminator 1
 7103 36ae 488B95A8 		movq	-1624(%rbp), %rdx
 7103      F9FFFF
 7104 36b5 4889D7   		movq	%rdx, %rdi
 7105 36b8 FFD0     		call	*%rax
 7106              	.LVL22:
 7107 36ba 4989C4   		movq	%rax, %r12
 7108 36bd 488B85A8 		movq	-1624(%rbp), %rax
 7108      F9FFFF
 7109 36c4 4889C7   		movq	%rax, %rdi
 7110 36c7 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 7110      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7111              		.loc 4 29 0 is_stmt 0 discriminator 2
 7112 36cc 4189C5   		movl	%eax, %r13d
 7113 36cf 488B85A8 		movq	-1624(%rbp), %rax
 7113      F9FFFF
 7114 36d6 4889C7   		movq	%rax, %rdi
 7115 36d9 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 7115      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7116              		.loc 4 29 0 discriminator 3
 7117 36de 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 7118              		.loc 4 30 0 is_stmt 1 discriminator 3
 7119 36e1 488B8590 		movq	-1648(%rbp), %rax
 7119      F9FFFF
 7120 36e8 488B10   		movq	(%rax), %rdx
 7121 36eb 488B8590 		movq	-1648(%rbp), %rax
 7121      F9FFFF
 7122 36f2 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7123              		.loc 4 29 0 discriminator 3
 7124 36f6 488D85B0 		leaq	-1616(%rbp), %rax
 7124      F9FFFF
 7125 36fd 4589E8   		movl	%r13d, %r8d
 7126 3700 4889C7   		movq	%rax, %rdi
 7127 3703 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 7127      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7128              		.loc 4 29 0 is_stmt 0 discriminator 5
 7129 3708 488D85B0 		leaq	-1616(%rbp), %rax
 7129      F9FFFF
 7130 370f 4C89E2   		movq	%r12, %rdx
 7131 3712 4889C6   		movq	%rax, %rsi
 7132 3715 4889DF   		movq	%rbx, %rdi
 7133 3718 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7133      00
 7134              	.LEHE205:
  27:../ExecuteTest.h **** 	{
 7135              		.loc 4 27 0 is_stmt 1 discriminator 7
 7136 371d E8000000 		call	__cxa_end_catch@PLT
 7136      00
 7137              	.LBE126:
 7138              		.loc 4 42 0 discriminator 7
 7139 3722 E91E0100 		jmp	.L361
 7139      00
 7140              	.L368:
 7141              	.LBB127:
  32:../ExecuteTest.h **** 	{
 7142              		.loc 4 32 0
 7143 3727 4889C7   		movq	%rax, %rdi
 7144 372a E8000000 		call	__cxa_begin_catch@PLT
 7144      00
 7145 372f 488985A0 		movq	%rax, -1632(%rbp)
 7145      F9FFFF
 7146              	.LBB128:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7147              		.loc 4 34 0
 7148 3736 488D85D0 		leaq	-1584(%rbp), %rax
 7148      F9FFFF
 7149 373d 4889C7   		movq	%rax, %rdi
 7150              	.LEHB206:
 7151 3740 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7151      00
 7152              	.LEHE206:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7153              		.loc 4 35 0
 7154 3745 488D85D0 		leaq	-1584(%rbp), %rax
 7154      F9FFFF
 7155 374c 488D3500 		leaq	.LC3(%rip), %rsi
 7155      000000
 7156 3753 4889C7   		movq	%rax, %rdi
 7157              	.LEHB207:
 7158 3756 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7158      00
 7159 375b 4889C3   		movq	%rax, %rbx
 7160 375e 488B85A0 		movq	-1632(%rbp), %rax
 7160      F9FFFF
 7161 3765 488B00   		movq	(%rax), %rax
 7162 3768 4883C010 		addq	$16, %rax
 7163 376c 488B00   		movq	(%rax), %rax
 7164 376f 488B95A0 		movq	-1632(%rbp), %rdx
 7164      F9FFFF
 7165 3776 4889D7   		movq	%rdx, %rdi
 7166 3779 FFD0     		call	*%rax
 7167              	.LVL23:
 7168 377b 4889C6   		movq	%rax, %rsi
 7169 377e 4889DF   		movq	%rbx, %rdi
 7170 3781 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7170      00
  36:../ExecuteTest.h **** 	}
 7171              		.loc 4 36 0
 7172 3786 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7172      00
 7173 378b 488B18   		movq	(%rax), %rbx
 7174 378e 488D85D0 		leaq	-1584(%rbp), %rax
 7174      F9FFFF
 7175 3795 4889C7   		movq	%rax, %rdi
 7176 3798 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 7176      00
  36:../ExecuteTest.h **** 	}
 7177              		.loc 4 36 0 is_stmt 0 discriminator 1
 7178 379d 4889C2   		movq	%rax, %rdx
 7179 37a0 488B8590 		movq	-1648(%rbp), %rax
 7179      F9FFFF
 7180 37a7 4889C6   		movq	%rax, %rsi
 7181 37aa 4889DF   		movq	%rbx, %rdi
 7182 37ad E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7182      00
 7183              	.LEHE207:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7184              		.loc 4 34 0 is_stmt 1
 7185 37b2 488D85D0 		leaq	-1584(%rbp), %rax
 7185      F9FFFF
 7186 37b9 4889C7   		movq	%rax, %rdi
 7187              	.LEHB208:
 7188 37bc E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7188      00
 7189              	.LEHE208:
 7190              	.LBE128:
  32:../ExecuteTest.h **** 	{
 7191              		.loc 4 32 0
 7192 37c1 E8000000 		call	__cxa_end_catch@PLT
 7192      00
 7193              	.LBE127:
 7194              		.loc 4 42 0
 7195 37c6 EB7D     		jmp	.L361
 7196              	.L381:
  38:../ExecuteTest.h **** 	{
 7197              		.loc 4 38 0
 7198 37c8 4889C7   		movq	%rax, %rdi
 7199 37cb E8000000 		call	__cxa_begin_catch@PLT
 7199      00
 7200              	.LEHB209:
  40:../ExecuteTest.h **** 	}
 7201              		.loc 4 40 0
 7202 37d0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7202      00
 7203 37d5 488B00   		movq	(%rax), %rax
 7204 37d8 488B8D90 		movq	-1648(%rbp), %rcx
 7204      F9FFFF
 7205 37df 488D1500 		leaq	.LC44(%rip), %rdx
 7205      000000
 7206 37e6 4889CE   		movq	%rcx, %rsi
 7207 37e9 4889C7   		movq	%rax, %rdi
 7208 37ec E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7208      00
 7209              	.LEHE209:
 7210              	.LEHB210:
  38:../ExecuteTest.h **** 	{
 7211              		.loc 4 38 0
 7212 37f1 E8000000 		call	__cxa_end_catch@PLT
 7212      00
 7213              		.loc 4 42 0
 7214 37f6 EB4D     		jmp	.L361
 7215              	.L377:
 7216 37f8 4889C3   		movq	%rax, %rbx
 7217              	.LBB130:
  27:../ExecuteTest.h **** 	{
 7218              		.loc 4 27 0
 7219 37fb E8000000 		call	__cxa_end_catch@PLT
 7219      00
 7220 3800 4889D8   		movq	%rbx, %rax
 7221 3803 4889C7   		movq	%rax, %rdi
 7222 3806 E8000000 		call	_Unwind_Resume@PLT
 7222      00
 7223              	.LEHE210:
 7224              	.L379:
 7225 380b 4889C3   		movq	%rax, %rbx
 7226              	.LBE130:
 7227              	.LBB131:
 7228              	.LBB129:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7229              		.loc 4 34 0
 7230 380e 488D85D0 		leaq	-1584(%rbp), %rax
 7230      F9FFFF
 7231 3815 4889C7   		movq	%rax, %rdi
 7232 3818 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7232      00
 7233 381d EB03     		jmp	.L372
 7234              	.L378:
 7235 381f 4889C3   		movq	%rax, %rbx
 7236              	.L372:
 7237              	.LBE129:
  32:../ExecuteTest.h **** 	{
 7238              		.loc 4 32 0
 7239 3822 E8000000 		call	__cxa_end_catch@PLT
 7239      00
 7240 3827 4889D8   		movq	%rbx, %rax
 7241 382a 4889C7   		movq	%rax, %rdi
 7242              	.LEHB211:
 7243 382d E8000000 		call	_Unwind_Resume@PLT
 7243      00
 7244              	.LEHE211:
 7245              	.L380:
 7246 3832 4889C3   		movq	%rax, %rbx
 7247              	.LBE131:
  38:../ExecuteTest.h **** 	{
 7248              		.loc 4 38 0
 7249 3835 E8000000 		call	__cxa_end_catch@PLT
 7249      00
 7250 383a 4889D8   		movq	%rbx, %rax
 7251 383d 4889C7   		movq	%rax, %rdi
 7252              	.LEHB212:
 7253 3840 E8000000 		call	_Unwind_Resume@PLT
 7253      00
 7254              	.LEHE212:
 7255              	.L361:
 7256              		.loc 4 42 0
 7257 3845 488B45D8 		movq	-40(%rbp), %rax
 7258 3849 64483304 		xorq	%fs:40, %rax
 7258      25280000 
 7258      00
 7259 3852 7405     		je	.L374
 7260 3854 E8000000 		call	__stack_chk_fail@PLT
 7260      00
 7261              	.L374:
 7262 3859 4881C458 		addq	$1624, %rsp
 7262      060000
 7263 3860 5B       		popq	%rbx
 7264 3861 415C     		popq	%r12
 7265 3863 415D     		popq	%r13
 7266 3865 5D       		popq	%rbp
 7267              		.cfi_def_cfa 7, 8
 7268 3866 C3       		ret
 7269              		.cfi_endproc
 7270              	.LFE1485:
 7271              		.section	.gcc_except_table
 7272              		.align 4
 7273              	.LLSDA1485:
 7274 05d4 FF       		.byte	0xff
 7275 05d5 9B       		.byte	0x9b
 7276 05d6 59       		.uleb128 .LLSDATT1485-.LLSDATTD1485
 7277              	.LLSDATTD1485:
 7278 05d7 01       		.byte	0x1
 7279 05d8 43       		.uleb128 .LLSDACSE1485-.LLSDACSB1485
 7280              	.LLSDACSB1485:
 7281 05d9 2D       		.uleb128 .LEHB201-.LFB1485
 7282 05da 05       		.uleb128 .LEHE201-.LEHB201
 7283 05db 00       		.uleb128 0
 7284 05dc 00       		.uleb128 0
 7285 05dd 49       		.uleb128 .LEHB202-.LFB1485
 7286 05de 05       		.uleb128 .LEHE202-.LEHB202
 7287 05df D301     		.uleb128 .L375-.LFB1485
 7288 05e1 05       		.uleb128 0x5
 7289 05e2 8E01     		.uleb128 .LEHB203-.LFB1485
 7290 05e4 14       		.uleb128 .LEHE203-.LEHB203
 7291 05e5 B601     		.uleb128 .L376-.LFB1485
 7292 05e7 07       		.uleb128 0x7
 7293 05e8 AC01     		.uleb128 .LEHB204-.LFB1485
 7294 05ea 05       		.uleb128 .LEHE204-.LEHB204
 7295 05eb D301     		.uleb128 .L375-.LFB1485
 7296 05ed 05       		.uleb128 0x5
 7297 05ee F701     		.uleb128 .LEHB205-.LFB1485
 7298 05f0 8801     		.uleb128 .LEHE205-.LEHB205
 7299 05f2 DA04     		.uleb128 .L377-.LFB1485
 7300 05f4 00       		.uleb128 0
 7301 05f5 A203     		.uleb128 .LEHB206-.LFB1485
 7302 05f7 05       		.uleb128 .LEHE206-.LEHB206
 7303 05f8 8105     		.uleb128 .L378-.LFB1485
 7304 05fa 00       		.uleb128 0
 7305 05fb B803     		.uleb128 .LEHB207-.LFB1485
 7306 05fd 5C       		.uleb128 .LEHE207-.LEHB207
 7307 05fe ED04     		.uleb128 .L379-.LFB1485
 7308 0600 00       		.uleb128 0
 7309 0601 9E04     		.uleb128 .LEHB208-.LFB1485
 7310 0603 05       		.uleb128 .LEHE208-.LEHB208
 7311 0604 8105     		.uleb128 .L378-.LFB1485
 7312 0606 00       		.uleb128 0
 7313 0607 B204     		.uleb128 .LEHB209-.LFB1485
 7314 0609 21       		.uleb128 .LEHE209-.LEHB209
 7315 060a 9405     		.uleb128 .L380-.LFB1485
 7316 060c 00       		.uleb128 0
 7317 060d D304     		.uleb128 .LEHB210-.LFB1485
 7318 060f 1A       		.uleb128 .LEHE210-.LEHB210
 7319 0610 00       		.uleb128 0
 7320 0611 00       		.uleb128 0
 7321 0612 8F05     		.uleb128 .LEHB211-.LFB1485
 7322 0614 05       		.uleb128 .LEHE211-.LEHB211
 7323 0615 00       		.uleb128 0
 7324 0616 00       		.uleb128 0
 7325 0617 A205     		.uleb128 .LEHB212-.LFB1485
 7326 0619 05       		.uleb128 .LEHE212-.LEHB212
 7327 061a 00       		.uleb128 0
 7328 061b 00       		.uleb128 0
 7329              	.LLSDACSE1485:
 7330 061c 03       		.byte	0x3
 7331 061d 00       		.byte	0
 7332 061e 02       		.byte	0x2
 7333 061f 7D       		.byte	0x7d
 7334 0620 01       		.byte	0x1
 7335 0621 7D       		.byte	0x7d
 7336 0622 00       		.byte	0
 7337 0623 7D       		.byte	0x7d
 7338              		.align 4
 7339 0624 00000000 		.long	0
 7340              	
 7341 0628 00000000 		.long	DW.ref._ZTISt9exception-.
 7342 062c 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 7343              	.LLSDATT1485:
 7344              		.text
 7347              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryForma
 7348              	.LFB1486:
  16:../ExecuteTest.h **** {
 7349              		.loc 4 16 0
 7350              		.cfi_startproc
 7351              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7352              		.cfi_lsda 0x1b,.LLSDA1486
 7353 3867 55       		pushq	%rbp
 7354              		.cfi_def_cfa_offset 16
 7355              		.cfi_offset 6, -16
 7356 3868 4889E5   		movq	%rsp, %rbp
 7357              		.cfi_def_cfa_register 6
 7358 386b 4155     		pushq	%r13
 7359 386d 4154     		pushq	%r12
 7360 386f 53       		pushq	%rbx
 7361 3870 4881EC58 		subq	$1624, %rsp
 7361      060000
 7362              		.cfi_offset 13, -24
 7363              		.cfi_offset 12, -32
 7364              		.cfi_offset 3, -40
 7365 3877 4889BD98 		movq	%rdi, -1640(%rbp)
 7365      F9FFFF
 7366 387e 4889B590 		movq	%rsi, -1648(%rbp)
 7366      F9FFFF
  16:../ExecuteTest.h **** {
 7367              		.loc 4 16 0
 7368 3885 64488B04 		movq	%fs:40, %rax
 7368      25280000 
 7368      00
 7369 388e 488945D8 		movq	%rax, -40(%rbp)
 7370 3892 31C0     		xorl	%eax, %eax
 7371              	.LEHB213:
  18:../ExecuteTest.h **** 
 7372              		.loc 4 18 0
 7373 3894 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 7373      00
 7374              	.LEHE213:
 7375 3899 4889C2   		movq	%rax, %rdx
 7376 389c 488B8590 		movq	-1648(%rbp), %rax
 7376      F9FFFF
 7377 38a3 488902   		movq	%rax, (%rdx)
 7378              	.LBB132:
  23:../ExecuteTest.h **** #endif
 7379              		.loc 4 23 0
 7380 38a6 488D8570 		leaq	-1168(%rbp), %rax
 7380      FBFFFF
 7381 38ad 4889C7   		movq	%rax, %rdi
 7382              	.LEHB214:
 7383 38b0 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 7383      00
 7384              	.LEHE214:
  23:../ExecuteTest.h **** #endif
 7385              		.loc 4 23 0 is_stmt 0 discriminator 1
 7386 38b5 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7386      000000
 7387 38bc BE010000 		movl	$1, %esi
 7387      00
 7388 38c1 4889C7   		movq	%rax, %rdi
 7389 38c4 E8000000 		call	__sigsetjmp@PLT
 7389      00
 7390 38c9 85C0     		testl	%eax, %eax
 7391 38cb 0F95C0   		setne	%al
 7392 38ce 84C0     		testb	%al, %al
 7393 38d0 7428     		je	.L384
  23:../ExecuteTest.h **** #endif
 7394              		.loc 4 23 0 discriminator 4
 7395 38d2 BF080000 		movl	$8, %edi
 7395      00
 7396 38d7 E8000000 		call	__cxa_allocate_exception@PLT
 7396      00
 7397 38dc 488D1500 		leaq	.LC43(%rip), %rdx
 7397      000000
 7398 38e3 488910   		movq	%rdx, (%rax)
 7399 38e6 BA000000 		movl	$0, %edx
 7399      00
 7400 38eb 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 7400      000000
 7401 38f2 4889C7   		movq	%rax, %rdi
 7402              	.LEHB215:
 7403 38f5 E8000000 		call	__cxa_throw@PLT
 7403      00
 7404              	.L384:
  25:../ExecuteTest.h **** 	}
 7405              		.loc 4 25 0 is_stmt 1
 7406 38fa 488B8598 		movq	-1640(%rbp), %rax
 7406      F9FFFF
 7407 3901 4889C7   		movq	%rax, %rdi
 7408 3904 E84DE1FF 		call	_ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv
 7408      FF
 7409              	.LEHE215:
  23:../ExecuteTest.h **** #endif
 7410              		.loc 4 23 0
 7411 3909 488D8570 		leaq	-1168(%rbp), %rax
 7411      FBFFFF
 7412 3910 4889C7   		movq	%rax, %rdi
 7413              	.LEHB216:
 7414 3913 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7414      00
 7415              	.LEHE216:
 7416              	.LBE132:
 7417              		.loc 4 42 0
 7418 3918 E9F10100 		jmp	.L382
 7418      00
 7419              	.L397:
 7420 391d 4989C4   		movq	%rax, %r12
 7421 3920 4889D3   		movq	%rdx, %rbx
 7422              	.LBB133:
  23:../ExecuteTest.h **** #endif
 7423              		.loc 4 23 0
 7424 3923 488D8570 		leaq	-1168(%rbp), %rax
 7424      FBFFFF
 7425 392a 4889C7   		movq	%rax, %rdi
 7426 392d E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7426      00
 7427 3932 4C89E0   		movq	%r12, %rax
 7428 3935 4889DA   		movq	%rbx, %rdx
 7429 3938 EB00     		jmp	.L386
 7430              	.L396:
 7431              	.L386:
 7432 393a 4883FA01 		cmpq	$1, %rdx
 7433 393e 740F     		je	.L388
 7434 3940 4883FA02 		cmpq	$2, %rdx
 7435 3944 0F84A600 		je	.L389
 7435      0000
 7436 394a E9420100 		jmp	.L402
 7436      00
 7437              	.L388:
 7438              	.LBE133:
 7439              	.LBB134:
  27:../ExecuteTest.h **** 	{
 7440              		.loc 4 27 0
 7441 394f 4889C7   		movq	%rax, %rdi
 7442 3952 E8000000 		call	__cxa_begin_catch@PLT
 7442      00
 7443 3957 488985A8 		movq	%rax, -1624(%rbp)
 7443      F9FFFF
 7444              	.LEHB217:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7445              		.loc 4 29 0
 7446 395e E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7446      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7447              		.loc 4 29 0 is_stmt 0 discriminator 1
 7448 3963 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 7449              		.loc 4 30 0 is_stmt 1 discriminator 1
 7450 3966 488B85A8 		movq	-1624(%rbp), %rax
 7450      F9FFFF
 7451 396d 488B00   		movq	(%rax), %rax
 7452 3970 4883C010 		addq	$16, %rax
 7453 3974 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7454              		.loc 4 29 0 discriminator 1
 7455 3977 488B95A8 		movq	-1624(%rbp), %rdx
 7455      F9FFFF
 7456 397e 4889D7   		movq	%rdx, %rdi
 7457 3981 FFD0     		call	*%rax
 7458              	.LVL24:
 7459 3983 4989C4   		movq	%rax, %r12
 7460 3986 488B85A8 		movq	-1624(%rbp), %rax
 7460      F9FFFF
 7461 398d 4889C7   		movq	%rax, %rdi
 7462 3990 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 7462      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7463              		.loc 4 29 0 is_stmt 0 discriminator 2
 7464 3995 4189C5   		movl	%eax, %r13d
 7465 3998 488B85A8 		movq	-1624(%rbp), %rax
 7465      F9FFFF
 7466 399f 4889C7   		movq	%rax, %rdi
 7467 39a2 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 7467      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7468              		.loc 4 29 0 discriminator 3
 7469 39a7 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 7470              		.loc 4 30 0 is_stmt 1 discriminator 3
 7471 39aa 488B8590 		movq	-1648(%rbp), %rax
 7471      F9FFFF
 7472 39b1 488B10   		movq	(%rax), %rdx
 7473 39b4 488B8590 		movq	-1648(%rbp), %rax
 7473      F9FFFF
 7474 39bb 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7475              		.loc 4 29 0 discriminator 3
 7476 39bf 488D85B0 		leaq	-1616(%rbp), %rax
 7476      F9FFFF
 7477 39c6 4589E8   		movl	%r13d, %r8d
 7478 39c9 4889C7   		movq	%rax, %rdi
 7479 39cc E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 7479      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7480              		.loc 4 29 0 is_stmt 0 discriminator 5
 7481 39d1 488D85B0 		leaq	-1616(%rbp), %rax
 7481      F9FFFF
 7482 39d8 4C89E2   		movq	%r12, %rdx
 7483 39db 4889C6   		movq	%rax, %rsi
 7484 39de 4889DF   		movq	%rbx, %rdi
 7485 39e1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7485      00
 7486              	.LEHE217:
  27:../ExecuteTest.h **** 	{
 7487              		.loc 4 27 0 is_stmt 1 discriminator 7
 7488 39e6 E8000000 		call	__cxa_end_catch@PLT
 7488      00
 7489              	.LBE134:
 7490              		.loc 4 42 0 discriminator 7
 7491 39eb E91E0100 		jmp	.L382
 7491      00
 7492              	.L389:
 7493              	.LBB135:
  32:../ExecuteTest.h **** 	{
 7494              		.loc 4 32 0
 7495 39f0 4889C7   		movq	%rax, %rdi
 7496 39f3 E8000000 		call	__cxa_begin_catch@PLT
 7496      00
 7497 39f8 488985A0 		movq	%rax, -1632(%rbp)
 7497      F9FFFF
 7498              	.LBB136:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7499              		.loc 4 34 0
 7500 39ff 488D85D0 		leaq	-1584(%rbp), %rax
 7500      F9FFFF
 7501 3a06 4889C7   		movq	%rax, %rdi
 7502              	.LEHB218:
 7503 3a09 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7503      00
 7504              	.LEHE218:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7505              		.loc 4 35 0
 7506 3a0e 488D85D0 		leaq	-1584(%rbp), %rax
 7506      F9FFFF
 7507 3a15 488D3500 		leaq	.LC3(%rip), %rsi
 7507      000000
 7508 3a1c 4889C7   		movq	%rax, %rdi
 7509              	.LEHB219:
 7510 3a1f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7510      00
 7511 3a24 4889C3   		movq	%rax, %rbx
 7512 3a27 488B85A0 		movq	-1632(%rbp), %rax
 7512      F9FFFF
 7513 3a2e 488B00   		movq	(%rax), %rax
 7514 3a31 4883C010 		addq	$16, %rax
 7515 3a35 488B00   		movq	(%rax), %rax
 7516 3a38 488B95A0 		movq	-1632(%rbp), %rdx
 7516      F9FFFF
 7517 3a3f 4889D7   		movq	%rdx, %rdi
 7518 3a42 FFD0     		call	*%rax
 7519              	.LVL25:
 7520 3a44 4889C6   		movq	%rax, %rsi
 7521 3a47 4889DF   		movq	%rbx, %rdi
 7522 3a4a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7522      00
  36:../ExecuteTest.h **** 	}
 7523              		.loc 4 36 0
 7524 3a4f E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7524      00
 7525 3a54 488B18   		movq	(%rax), %rbx
 7526 3a57 488D85D0 		leaq	-1584(%rbp), %rax
 7526      F9FFFF
 7527 3a5e 4889C7   		movq	%rax, %rdi
 7528 3a61 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 7528      00
  36:../ExecuteTest.h **** 	}
 7529              		.loc 4 36 0 is_stmt 0 discriminator 1
 7530 3a66 4889C2   		movq	%rax, %rdx
 7531 3a69 488B8590 		movq	-1648(%rbp), %rax
 7531      F9FFFF
 7532 3a70 4889C6   		movq	%rax, %rsi
 7533 3a73 4889DF   		movq	%rbx, %rdi
 7534 3a76 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7534      00
 7535              	.LEHE219:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7536              		.loc 4 34 0 is_stmt 1
 7537 3a7b 488D85D0 		leaq	-1584(%rbp), %rax
 7537      F9FFFF
 7538 3a82 4889C7   		movq	%rax, %rdi
 7539              	.LEHB220:
 7540 3a85 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7540      00
 7541              	.LEHE220:
 7542              	.LBE136:
  32:../ExecuteTest.h **** 	{
 7543              		.loc 4 32 0
 7544 3a8a E8000000 		call	__cxa_end_catch@PLT
 7544      00
 7545              	.LBE135:
 7546              		.loc 4 42 0
 7547 3a8f EB7D     		jmp	.L382
 7548              	.L402:
  38:../ExecuteTest.h **** 	{
 7549              		.loc 4 38 0
 7550 3a91 4889C7   		movq	%rax, %rdi
 7551 3a94 E8000000 		call	__cxa_begin_catch@PLT
 7551      00
 7552              	.LEHB221:
  40:../ExecuteTest.h **** 	}
 7553              		.loc 4 40 0
 7554 3a99 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7554      00
 7555 3a9e 488B00   		movq	(%rax), %rax
 7556 3aa1 488B8D90 		movq	-1648(%rbp), %rcx
 7556      F9FFFF
 7557 3aa8 488D1500 		leaq	.LC44(%rip), %rdx
 7557      000000
 7558 3aaf 4889CE   		movq	%rcx, %rsi
 7559 3ab2 4889C7   		movq	%rax, %rdi
 7560 3ab5 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7560      00
 7561              	.LEHE221:
 7562              	.LEHB222:
  38:../ExecuteTest.h **** 	{
 7563              		.loc 4 38 0
 7564 3aba E8000000 		call	__cxa_end_catch@PLT
 7564      00
 7565              		.loc 4 42 0
 7566 3abf EB4D     		jmp	.L382
 7567              	.L398:
 7568 3ac1 4889C3   		movq	%rax, %rbx
 7569              	.LBB138:
  27:../ExecuteTest.h **** 	{
 7570              		.loc 4 27 0
 7571 3ac4 E8000000 		call	__cxa_end_catch@PLT
 7571      00
 7572 3ac9 4889D8   		movq	%rbx, %rax
 7573 3acc 4889C7   		movq	%rax, %rdi
 7574 3acf E8000000 		call	_Unwind_Resume@PLT
 7574      00
 7575              	.LEHE222:
 7576              	.L400:
 7577 3ad4 4889C3   		movq	%rax, %rbx
 7578              	.LBE138:
 7579              	.LBB139:
 7580              	.LBB137:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7581              		.loc 4 34 0
 7582 3ad7 488D85D0 		leaq	-1584(%rbp), %rax
 7582      F9FFFF
 7583 3ade 4889C7   		movq	%rax, %rdi
 7584 3ae1 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7584      00
 7585 3ae6 EB03     		jmp	.L393
 7586              	.L399:
 7587 3ae8 4889C3   		movq	%rax, %rbx
 7588              	.L393:
 7589              	.LBE137:
  32:../ExecuteTest.h **** 	{
 7590              		.loc 4 32 0
 7591 3aeb E8000000 		call	__cxa_end_catch@PLT
 7591      00
 7592 3af0 4889D8   		movq	%rbx, %rax
 7593 3af3 4889C7   		movq	%rax, %rdi
 7594              	.LEHB223:
 7595 3af6 E8000000 		call	_Unwind_Resume@PLT
 7595      00
 7596              	.LEHE223:
 7597              	.L401:
 7598 3afb 4889C3   		movq	%rax, %rbx
 7599              	.LBE139:
  38:../ExecuteTest.h **** 	{
 7600              		.loc 4 38 0
 7601 3afe E8000000 		call	__cxa_end_catch@PLT
 7601      00
 7602 3b03 4889D8   		movq	%rbx, %rax
 7603 3b06 4889C7   		movq	%rax, %rdi
 7604              	.LEHB224:
 7605 3b09 E8000000 		call	_Unwind_Resume@PLT
 7605      00
 7606              	.LEHE224:
 7607              	.L382:
 7608              		.loc 4 42 0
 7609 3b0e 488B45D8 		movq	-40(%rbp), %rax
 7610 3b12 64483304 		xorq	%fs:40, %rax
 7610      25280000 
 7610      00
 7611 3b1b 7405     		je	.L395
 7612 3b1d E8000000 		call	__stack_chk_fail@PLT
 7612      00
 7613              	.L395:
 7614 3b22 4881C458 		addq	$1624, %rsp
 7614      060000
 7615 3b29 5B       		popq	%rbx
 7616 3b2a 415C     		popq	%r12
 7617 3b2c 415D     		popq	%r13
 7618 3b2e 5D       		popq	%rbp
 7619              		.cfi_def_cfa 7, 8
 7620 3b2f C3       		ret
 7621              		.cfi_endproc
 7622              	.LFE1486:
 7623              		.section	.gcc_except_table
 7624              		.align 4
 7625              	.LLSDA1486:
 7626 0630 FF       		.byte	0xff
 7627 0631 9B       		.byte	0x9b
 7628 0632 59       		.uleb128 .LLSDATT1486-.LLSDATTD1486
 7629              	.LLSDATTD1486:
 7630 0633 01       		.byte	0x1
 7631 0634 43       		.uleb128 .LLSDACSE1486-.LLSDACSB1486
 7632              	.LLSDACSB1486:
 7633 0635 2D       		.uleb128 .LEHB213-.LFB1486
 7634 0636 05       		.uleb128 .LEHE213-.LEHB213
 7635 0637 00       		.uleb128 0
 7636 0638 00       		.uleb128 0
 7637 0639 49       		.uleb128 .LEHB214-.LFB1486
 7638 063a 05       		.uleb128 .LEHE214-.LEHB214
 7639 063b D301     		.uleb128 .L396-.LFB1486
 7640 063d 05       		.uleb128 0x5
 7641 063e 8E01     		.uleb128 .LEHB215-.LFB1486
 7642 0640 14       		.uleb128 .LEHE215-.LEHB215
 7643 0641 B601     		.uleb128 .L397-.LFB1486
 7644 0643 07       		.uleb128 0x7
 7645 0644 AC01     		.uleb128 .LEHB216-.LFB1486
 7646 0646 05       		.uleb128 .LEHE216-.LEHB216
 7647 0647 D301     		.uleb128 .L396-.LFB1486
 7648 0649 05       		.uleb128 0x5
 7649 064a F701     		.uleb128 .LEHB217-.LFB1486
 7650 064c 8801     		.uleb128 .LEHE217-.LEHB217
 7651 064e DA04     		.uleb128 .L398-.LFB1486
 7652 0650 00       		.uleb128 0
 7653 0651 A203     		.uleb128 .LEHB218-.LFB1486
 7654 0653 05       		.uleb128 .LEHE218-.LEHB218
 7655 0654 8105     		.uleb128 .L399-.LFB1486
 7656 0656 00       		.uleb128 0
 7657 0657 B803     		.uleb128 .LEHB219-.LFB1486
 7658 0659 5C       		.uleb128 .LEHE219-.LEHB219
 7659 065a ED04     		.uleb128 .L400-.LFB1486
 7660 065c 00       		.uleb128 0
 7661 065d 9E04     		.uleb128 .LEHB220-.LFB1486
 7662 065f 05       		.uleb128 .LEHE220-.LEHB220
 7663 0660 8105     		.uleb128 .L399-.LFB1486
 7664 0662 00       		.uleb128 0
 7665 0663 B204     		.uleb128 .LEHB221-.LFB1486
 7666 0665 21       		.uleb128 .LEHE221-.LEHB221
 7667 0666 9405     		.uleb128 .L401-.LFB1486
 7668 0668 00       		.uleb128 0
 7669 0669 D304     		.uleb128 .LEHB222-.LFB1486
 7670 066b 1A       		.uleb128 .LEHE222-.LEHB222
 7671 066c 00       		.uleb128 0
 7672 066d 00       		.uleb128 0
 7673 066e 8F05     		.uleb128 .LEHB223-.LFB1486
 7674 0670 05       		.uleb128 .LEHE223-.LEHB223
 7675 0671 00       		.uleb128 0
 7676 0672 00       		.uleb128 0
 7677 0673 A205     		.uleb128 .LEHB224-.LFB1486
 7678 0675 05       		.uleb128 .LEHE224-.LEHB224
 7679 0676 00       		.uleb128 0
 7680 0677 00       		.uleb128 0
 7681              	.LLSDACSE1486:
 7682 0678 03       		.byte	0x3
 7683 0679 00       		.byte	0
 7684 067a 02       		.byte	0x2
 7685 067b 7D       		.byte	0x7d
 7686 067c 01       		.byte	0x1
 7687 067d 7D       		.byte	0x7d
 7688 067e 00       		.byte	0
 7689 067f 7D       		.byte	0x7d
 7690              		.align 4
 7691 0680 00000000 		.long	0
 7692              	
 7693 0684 00000000 		.long	DW.ref._ZTISt9exception-.
 7694 0688 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 7695              	.LLSDATT1486:
 7696              		.text
 7699              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEE
 7700              	.LFB1487:
  16:../ExecuteTest.h **** {
 7701              		.loc 4 16 0
 7702              		.cfi_startproc
 7703              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7704              		.cfi_lsda 0x1b,.LLSDA1487
 7705 3b30 55       		pushq	%rbp
 7706              		.cfi_def_cfa_offset 16
 7707              		.cfi_offset 6, -16
 7708 3b31 4889E5   		movq	%rsp, %rbp
 7709              		.cfi_def_cfa_register 6
 7710 3b34 4155     		pushq	%r13
 7711 3b36 4154     		pushq	%r12
 7712 3b38 53       		pushq	%rbx
 7713 3b39 4881EC58 		subq	$1624, %rsp
 7713      060000
 7714              		.cfi_offset 13, -24
 7715              		.cfi_offset 12, -32
 7716              		.cfi_offset 3, -40
 7717 3b40 4889BD98 		movq	%rdi, -1640(%rbp)
 7717      F9FFFF
 7718 3b47 4889B590 		movq	%rsi, -1648(%rbp)
 7718      F9FFFF
  16:../ExecuteTest.h **** {
 7719              		.loc 4 16 0
 7720 3b4e 64488B04 		movq	%fs:40, %rax
 7720      25280000 
 7720      00
 7721 3b57 488945D8 		movq	%rax, -40(%rbp)
 7722 3b5b 31C0     		xorl	%eax, %eax
 7723              	.LEHB225:
  18:../ExecuteTest.h **** 
 7724              		.loc 4 18 0
 7725 3b5d E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 7725      00
 7726              	.LEHE225:
 7727 3b62 4889C2   		movq	%rax, %rdx
 7728 3b65 488B8590 		movq	-1648(%rbp), %rax
 7728      F9FFFF
 7729 3b6c 488902   		movq	%rax, (%rdx)
 7730              	.LBB140:
  23:../ExecuteTest.h **** #endif
 7731              		.loc 4 23 0
 7732 3b6f 488D8570 		leaq	-1168(%rbp), %rax
 7732      FBFFFF
 7733 3b76 4889C7   		movq	%rax, %rdi
 7734              	.LEHB226:
 7735 3b79 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 7735      00
 7736              	.LEHE226:
  23:../ExecuteTest.h **** #endif
 7737              		.loc 4 23 0 is_stmt 0 discriminator 1
 7738 3b7e 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 7738      000000
 7739 3b85 BE010000 		movl	$1, %esi
 7739      00
 7740 3b8a 4889C7   		movq	%rax, %rdi
 7741 3b8d E8000000 		call	__sigsetjmp@PLT
 7741      00
 7742 3b92 85C0     		testl	%eax, %eax
 7743 3b94 0F95C0   		setne	%al
 7744 3b97 84C0     		testb	%al, %al
 7745 3b99 7428     		je	.L405
  23:../ExecuteTest.h **** #endif
 7746              		.loc 4 23 0 discriminator 4
 7747 3b9b BF080000 		movl	$8, %edi
 7747      00
 7748 3ba0 E8000000 		call	__cxa_allocate_exception@PLT
 7748      00
 7749 3ba5 488D1500 		leaq	.LC43(%rip), %rdx
 7749      000000
 7750 3bac 488910   		movq	%rdx, (%rax)
 7751 3baf BA000000 		movl	$0, %edx
 7751      00
 7752 3bb4 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 7752      000000
 7753 3bbb 4889C7   		movq	%rax, %rdi
 7754              	.LEHB227:
 7755 3bbe E8000000 		call	__cxa_throw@PLT
 7755      00
 7756              	.L405:
  25:../ExecuteTest.h **** 	}
 7757              		.loc 4 25 0 is_stmt 1
 7758 3bc3 488B8598 		movq	-1640(%rbp), %rax
 7758      F9FFFF
 7759 3bca 4889C7   		movq	%rax, %rdi
 7760 3bcd E8DAE3FF 		call	_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv
 7760      FF
 7761              	.LEHE227:
  23:../ExecuteTest.h **** #endif
 7762              		.loc 4 23 0
 7763 3bd2 488D8570 		leaq	-1168(%rbp), %rax
 7763      FBFFFF
 7764 3bd9 4889C7   		movq	%rax, %rdi
 7765              	.LEHB228:
 7766 3bdc E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7766      00
 7767              	.LEHE228:
 7768              	.LBE140:
 7769              		.loc 4 42 0
 7770 3be1 E9F10100 		jmp	.L403
 7770      00
 7771              	.L418:
 7772 3be6 4989C4   		movq	%rax, %r12
 7773 3be9 4889D3   		movq	%rdx, %rbx
 7774              	.LBB141:
  23:../ExecuteTest.h **** #endif
 7775              		.loc 4 23 0
 7776 3bec 488D8570 		leaq	-1168(%rbp), %rax
 7776      FBFFFF
 7777 3bf3 4889C7   		movq	%rax, %rdi
 7778 3bf6 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 7778      00
 7779 3bfb 4C89E0   		movq	%r12, %rax
 7780 3bfe 4889DA   		movq	%rbx, %rdx
 7781 3c01 EB00     		jmp	.L407
 7782              	.L417:
 7783              	.L407:
 7784 3c03 4883FA01 		cmpq	$1, %rdx
 7785 3c07 740F     		je	.L409
 7786 3c09 4883FA02 		cmpq	$2, %rdx
 7787 3c0d 0F84A600 		je	.L410
 7787      0000
 7788 3c13 E9420100 		jmp	.L423
 7788      00
 7789              	.L409:
 7790              	.LBE141:
 7791              	.LBB142:
  27:../ExecuteTest.h **** 	{
 7792              		.loc 4 27 0
 7793 3c18 4889C7   		movq	%rax, %rdi
 7794 3c1b E8000000 		call	__cxa_begin_catch@PLT
 7794      00
 7795 3c20 488985A8 		movq	%rax, -1624(%rbp)
 7795      F9FFFF
 7796              	.LEHB229:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7797              		.loc 4 29 0
 7798 3c27 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7798      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7799              		.loc 4 29 0 is_stmt 0 discriminator 1
 7800 3c2c 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 7801              		.loc 4 30 0 is_stmt 1 discriminator 1
 7802 3c2f 488B85A8 		movq	-1624(%rbp), %rax
 7802      F9FFFF
 7803 3c36 488B00   		movq	(%rax), %rax
 7804 3c39 4883C010 		addq	$16, %rax
 7805 3c3d 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7806              		.loc 4 29 0 discriminator 1
 7807 3c40 488B95A8 		movq	-1624(%rbp), %rdx
 7807      F9FFFF
 7808 3c47 4889D7   		movq	%rdx, %rdi
 7809 3c4a FFD0     		call	*%rax
 7810              	.LVL26:
 7811 3c4c 4989C4   		movq	%rax, %r12
 7812 3c4f 488B85A8 		movq	-1624(%rbp), %rax
 7812      F9FFFF
 7813 3c56 4889C7   		movq	%rax, %rdi
 7814 3c59 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 7814      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7815              		.loc 4 29 0 is_stmt 0 discriminator 2
 7816 3c5e 4189C5   		movl	%eax, %r13d
 7817 3c61 488B85A8 		movq	-1624(%rbp), %rax
 7817      F9FFFF
 7818 3c68 4889C7   		movq	%rax, %rdi
 7819 3c6b E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 7819      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7820              		.loc 4 29 0 discriminator 3
 7821 3c70 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 7822              		.loc 4 30 0 is_stmt 1 discriminator 3
 7823 3c73 488B8590 		movq	-1648(%rbp), %rax
 7823      F9FFFF
 7824 3c7a 488B10   		movq	(%rax), %rdx
 7825 3c7d 488B8590 		movq	-1648(%rbp), %rax
 7825      F9FFFF
 7826 3c84 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7827              		.loc 4 29 0 discriminator 3
 7828 3c88 488D85B0 		leaq	-1616(%rbp), %rax
 7828      F9FFFF
 7829 3c8f 4589E8   		movl	%r13d, %r8d
 7830 3c92 4889C7   		movq	%rax, %rdi
 7831 3c95 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 7831      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 7832              		.loc 4 29 0 is_stmt 0 discriminator 5
 7833 3c9a 488D85B0 		leaq	-1616(%rbp), %rax
 7833      F9FFFF
 7834 3ca1 4C89E2   		movq	%r12, %rdx
 7835 3ca4 4889C6   		movq	%rax, %rsi
 7836 3ca7 4889DF   		movq	%rbx, %rdi
 7837 3caa E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7837      00
 7838              	.LEHE229:
  27:../ExecuteTest.h **** 	{
 7839              		.loc 4 27 0 is_stmt 1 discriminator 7
 7840 3caf E8000000 		call	__cxa_end_catch@PLT
 7840      00
 7841              	.LBE142:
 7842              		.loc 4 42 0 discriminator 7
 7843 3cb4 E91E0100 		jmp	.L403
 7843      00
 7844              	.L410:
 7845              	.LBB143:
  32:../ExecuteTest.h **** 	{
 7846              		.loc 4 32 0
 7847 3cb9 4889C7   		movq	%rax, %rdi
 7848 3cbc E8000000 		call	__cxa_begin_catch@PLT
 7848      00
 7849 3cc1 488985A0 		movq	%rax, -1632(%rbp)
 7849      F9FFFF
 7850              	.LBB144:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7851              		.loc 4 34 0
 7852 3cc8 488D85D0 		leaq	-1584(%rbp), %rax
 7852      F9FFFF
 7853 3ccf 4889C7   		movq	%rax, %rdi
 7854              	.LEHB230:
 7855 3cd2 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 7855      00
 7856              	.LEHE230:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 7857              		.loc 4 35 0
 7858 3cd7 488D85D0 		leaq	-1584(%rbp), %rax
 7858      F9FFFF
 7859 3cde 488D3500 		leaq	.LC3(%rip), %rsi
 7859      000000
 7860 3ce5 4889C7   		movq	%rax, %rdi
 7861              	.LEHB231:
 7862 3ce8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7862      00
 7863 3ced 4889C3   		movq	%rax, %rbx
 7864 3cf0 488B85A0 		movq	-1632(%rbp), %rax
 7864      F9FFFF
 7865 3cf7 488B00   		movq	(%rax), %rax
 7866 3cfa 4883C010 		addq	$16, %rax
 7867 3cfe 488B00   		movq	(%rax), %rax
 7868 3d01 488B95A0 		movq	-1632(%rbp), %rdx
 7868      F9FFFF
 7869 3d08 4889D7   		movq	%rdx, %rdi
 7870 3d0b FFD0     		call	*%rax
 7871              	.LVL27:
 7872 3d0d 4889C6   		movq	%rax, %rsi
 7873 3d10 4889DF   		movq	%rbx, %rdi
 7874 3d13 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7874      00
  36:../ExecuteTest.h **** 	}
 7875              		.loc 4 36 0
 7876 3d18 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7876      00
 7877 3d1d 488B18   		movq	(%rax), %rbx
 7878 3d20 488D85D0 		leaq	-1584(%rbp), %rax
 7878      F9FFFF
 7879 3d27 4889C7   		movq	%rax, %rdi
 7880 3d2a E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 7880      00
  36:../ExecuteTest.h **** 	}
 7881              		.loc 4 36 0 is_stmt 0 discriminator 1
 7882 3d2f 4889C2   		movq	%rax, %rdx
 7883 3d32 488B8590 		movq	-1648(%rbp), %rax
 7883      F9FFFF
 7884 3d39 4889C6   		movq	%rax, %rsi
 7885 3d3c 4889DF   		movq	%rbx, %rdi
 7886 3d3f E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7886      00
 7887              	.LEHE231:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7888              		.loc 4 34 0 is_stmt 1
 7889 3d44 488D85D0 		leaq	-1584(%rbp), %rax
 7889      F9FFFF
 7890 3d4b 4889C7   		movq	%rax, %rdi
 7891              	.LEHB232:
 7892 3d4e E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7892      00
 7893              	.LEHE232:
 7894              	.LBE144:
  32:../ExecuteTest.h **** 	{
 7895              		.loc 4 32 0
 7896 3d53 E8000000 		call	__cxa_end_catch@PLT
 7896      00
 7897              	.LBE143:
 7898              		.loc 4 42 0
 7899 3d58 EB7D     		jmp	.L403
 7900              	.L423:
  38:../ExecuteTest.h **** 	{
 7901              		.loc 4 38 0
 7902 3d5a 4889C7   		movq	%rax, %rdi
 7903 3d5d E8000000 		call	__cxa_begin_catch@PLT
 7903      00
 7904              	.LEHB233:
  40:../ExecuteTest.h **** 	}
 7905              		.loc 4 40 0
 7906 3d62 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 7906      00
 7907 3d67 488B00   		movq	(%rax), %rax
 7908 3d6a 488B8D90 		movq	-1648(%rbp), %rcx
 7908      F9FFFF
 7909 3d71 488D1500 		leaq	.LC44(%rip), %rdx
 7909      000000
 7910 3d78 4889CE   		movq	%rcx, %rsi
 7911 3d7b 4889C7   		movq	%rax, %rdi
 7912 3d7e E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 7912      00
 7913              	.LEHE233:
 7914              	.LEHB234:
  38:../ExecuteTest.h **** 	{
 7915              		.loc 4 38 0
 7916 3d83 E8000000 		call	__cxa_end_catch@PLT
 7916      00
 7917              		.loc 4 42 0
 7918 3d88 EB4D     		jmp	.L403
 7919              	.L419:
 7920 3d8a 4889C3   		movq	%rax, %rbx
 7921              	.LBB146:
  27:../ExecuteTest.h **** 	{
 7922              		.loc 4 27 0
 7923 3d8d E8000000 		call	__cxa_end_catch@PLT
 7923      00
 7924 3d92 4889D8   		movq	%rbx, %rax
 7925 3d95 4889C7   		movq	%rax, %rdi
 7926 3d98 E8000000 		call	_Unwind_Resume@PLT
 7926      00
 7927              	.LEHE234:
 7928              	.L421:
 7929 3d9d 4889C3   		movq	%rax, %rbx
 7930              	.LBE146:
 7931              	.LBB147:
 7932              	.LBB145:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 7933              		.loc 4 34 0
 7934 3da0 488D85D0 		leaq	-1584(%rbp), %rax
 7934      F9FFFF
 7935 3da7 4889C7   		movq	%rax, %rdi
 7936 3daa E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 7936      00
 7937 3daf EB03     		jmp	.L414
 7938              	.L420:
 7939 3db1 4889C3   		movq	%rax, %rbx
 7940              	.L414:
 7941              	.LBE145:
  32:../ExecuteTest.h **** 	{
 7942              		.loc 4 32 0
 7943 3db4 E8000000 		call	__cxa_end_catch@PLT
 7943      00
 7944 3db9 4889D8   		movq	%rbx, %rax
 7945 3dbc 4889C7   		movq	%rax, %rdi
 7946              	.LEHB235:
 7947 3dbf E8000000 		call	_Unwind_Resume@PLT
 7947      00
 7948              	.LEHE235:
 7949              	.L422:
 7950 3dc4 4889C3   		movq	%rax, %rbx
 7951              	.LBE147:
  38:../ExecuteTest.h **** 	{
 7952              		.loc 4 38 0
 7953 3dc7 E8000000 		call	__cxa_end_catch@PLT
 7953      00
 7954 3dcc 4889D8   		movq	%rbx, %rax
 7955 3dcf 4889C7   		movq	%rax, %rdi
 7956              	.LEHB236:
 7957 3dd2 E8000000 		call	_Unwind_Resume@PLT
 7957      00
 7958              	.LEHE236:
 7959              	.L403:
 7960              		.loc 4 42 0
 7961 3dd7 488B45D8 		movq	-40(%rbp), %rax
 7962 3ddb 64483304 		xorq	%fs:40, %rax
 7962      25280000 
 7962      00
 7963 3de4 7405     		je	.L416
 7964 3de6 E8000000 		call	__stack_chk_fail@PLT
 7964      00
 7965              	.L416:
 7966 3deb 4881C458 		addq	$1624, %rsp
 7966      060000
 7967 3df2 5B       		popq	%rbx
 7968 3df3 415C     		popq	%r12
 7969 3df5 415D     		popq	%r13
 7970 3df7 5D       		popq	%rbp
 7971              		.cfi_def_cfa 7, 8
 7972 3df8 C3       		ret
 7973              		.cfi_endproc
 7974              	.LFE1487:
 7975              		.section	.gcc_except_table
 7976              		.align 4
 7977              	.LLSDA1487:
 7978 068c FF       		.byte	0xff
 7979 068d 9B       		.byte	0x9b
 7980 068e 59       		.uleb128 .LLSDATT1487-.LLSDATTD1487
 7981              	.LLSDATTD1487:
 7982 068f 01       		.byte	0x1
 7983 0690 43       		.uleb128 .LLSDACSE1487-.LLSDACSB1487
 7984              	.LLSDACSB1487:
 7985 0691 2D       		.uleb128 .LEHB225-.LFB1487
 7986 0692 05       		.uleb128 .LEHE225-.LEHB225
 7987 0693 00       		.uleb128 0
 7988 0694 00       		.uleb128 0
 7989 0695 49       		.uleb128 .LEHB226-.LFB1487
 7990 0696 05       		.uleb128 .LEHE226-.LEHB226
 7991 0697 D301     		.uleb128 .L417-.LFB1487
 7992 0699 05       		.uleb128 0x5
 7993 069a 8E01     		.uleb128 .LEHB227-.LFB1487
 7994 069c 14       		.uleb128 .LEHE227-.LEHB227
 7995 069d B601     		.uleb128 .L418-.LFB1487
 7996 069f 07       		.uleb128 0x7
 7997 06a0 AC01     		.uleb128 .LEHB228-.LFB1487
 7998 06a2 05       		.uleb128 .LEHE228-.LEHB228
 7999 06a3 D301     		.uleb128 .L417-.LFB1487
 8000 06a5 05       		.uleb128 0x5
 8001 06a6 F701     		.uleb128 .LEHB229-.LFB1487
 8002 06a8 8801     		.uleb128 .LEHE229-.LEHB229
 8003 06aa DA04     		.uleb128 .L419-.LFB1487
 8004 06ac 00       		.uleb128 0
 8005 06ad A203     		.uleb128 .LEHB230-.LFB1487
 8006 06af 05       		.uleb128 .LEHE230-.LEHB230
 8007 06b0 8105     		.uleb128 .L420-.LFB1487
 8008 06b2 00       		.uleb128 0
 8009 06b3 B803     		.uleb128 .LEHB231-.LFB1487
 8010 06b5 5C       		.uleb128 .LEHE231-.LEHB231
 8011 06b6 ED04     		.uleb128 .L421-.LFB1487
 8012 06b8 00       		.uleb128 0
 8013 06b9 9E04     		.uleb128 .LEHB232-.LFB1487
 8014 06bb 05       		.uleb128 .LEHE232-.LEHB232
 8015 06bc 8105     		.uleb128 .L420-.LFB1487
 8016 06be 00       		.uleb128 0
 8017 06bf B204     		.uleb128 .LEHB233-.LFB1487
 8018 06c1 21       		.uleb128 .LEHE233-.LEHB233
 8019 06c2 9405     		.uleb128 .L422-.LFB1487
 8020 06c4 00       		.uleb128 0
 8021 06c5 D304     		.uleb128 .LEHB234-.LFB1487
 8022 06c7 1A       		.uleb128 .LEHE234-.LEHB234
 8023 06c8 00       		.uleb128 0
 8024 06c9 00       		.uleb128 0
 8025 06ca 8F05     		.uleb128 .LEHB235-.LFB1487
 8026 06cc 05       		.uleb128 .LEHE235-.LEHB235
 8027 06cd 00       		.uleb128 0
 8028 06ce 00       		.uleb128 0
 8029 06cf A205     		.uleb128 .LEHB236-.LFB1487
 8030 06d1 05       		.uleb128 .LEHE236-.LEHB236
 8031 06d2 00       		.uleb128 0
 8032 06d3 00       		.uleb128 0
 8033              	.LLSDACSE1487:
 8034 06d4 03       		.byte	0x3
 8035 06d5 00       		.byte	0
 8036 06d6 02       		.byte	0x2
 8037 06d7 7D       		.byte	0x7d
 8038 06d8 01       		.byte	0x1
 8039 06d9 7D       		.byte	0x7d
 8040 06da 00       		.byte	0
 8041 06db 7D       		.byte	0x7d
 8042              		.align 4
 8043 06dc 00000000 		.long	0
 8044              	
 8045 06e0 00000000 		.long	DW.ref._ZTISt9exception-.
 8046 06e4 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 8047              	.LLSDATT1487:
 8048              		.text
 8051              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperEEEvR
 8052              	.LFB1488:
  16:../ExecuteTest.h **** {
 8053              		.loc 4 16 0
 8054              		.cfi_startproc
 8055              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8056              		.cfi_lsda 0x1b,.LLSDA1488
 8057 3df9 55       		pushq	%rbp
 8058              		.cfi_def_cfa_offset 16
 8059              		.cfi_offset 6, -16
 8060 3dfa 4889E5   		movq	%rsp, %rbp
 8061              		.cfi_def_cfa_register 6
 8062 3dfd 4155     		pushq	%r13
 8063 3dff 4154     		pushq	%r12
 8064 3e01 53       		pushq	%rbx
 8065 3e02 4881EC58 		subq	$1624, %rsp
 8065      060000
 8066              		.cfi_offset 13, -24
 8067              		.cfi_offset 12, -32
 8068              		.cfi_offset 3, -40
 8069 3e09 4889BD98 		movq	%rdi, -1640(%rbp)
 8069      F9FFFF
 8070 3e10 4889B590 		movq	%rsi, -1648(%rbp)
 8070      F9FFFF
  16:../ExecuteTest.h **** {
 8071              		.loc 4 16 0
 8072 3e17 64488B04 		movq	%fs:40, %rax
 8072      25280000 
 8072      00
 8073 3e20 488945D8 		movq	%rax, -40(%rbp)
 8074 3e24 31C0     		xorl	%eax, %eax
 8075              	.LEHB237:
  18:../ExecuteTest.h **** 
 8076              		.loc 4 18 0
 8077 3e26 E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 8077      00
 8078              	.LEHE237:
 8079 3e2b 4889C2   		movq	%rax, %rdx
 8080 3e2e 488B8590 		movq	-1648(%rbp), %rax
 8080      F9FFFF
 8081 3e35 488902   		movq	%rax, (%rdx)
 8082              	.LBB148:
  23:../ExecuteTest.h **** #endif
 8083              		.loc 4 23 0
 8084 3e38 488D8570 		leaq	-1168(%rbp), %rax
 8084      FBFFFF
 8085 3e3f 4889C7   		movq	%rax, %rdi
 8086              	.LEHB238:
 8087 3e42 E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 8087      00
 8088              	.LEHE238:
  23:../ExecuteTest.h **** #endif
 8089              		.loc 4 23 0 is_stmt 0 discriminator 1
 8090 3e47 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 8090      000000
 8091 3e4e BE010000 		movl	$1, %esi
 8091      00
 8092 3e53 4889C7   		movq	%rax, %rdi
 8093 3e56 E8000000 		call	__sigsetjmp@PLT
 8093      00
 8094 3e5b 85C0     		testl	%eax, %eax
 8095 3e5d 0F95C0   		setne	%al
 8096 3e60 84C0     		testb	%al, %al
 8097 3e62 7428     		je	.L426
  23:../ExecuteTest.h **** #endif
 8098              		.loc 4 23 0 discriminator 4
 8099 3e64 BF080000 		movl	$8, %edi
 8099      00
 8100 3e69 E8000000 		call	__cxa_allocate_exception@PLT
 8100      00
 8101 3e6e 488D1500 		leaq	.LC43(%rip), %rdx
 8101      000000
 8102 3e75 488910   		movq	%rdx, (%rax)
 8103 3e78 BA000000 		movl	$0, %edx
 8103      00
 8104 3e7d 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 8104      000000
 8105 3e84 4889C7   		movq	%rax, %rdi
 8106              	.LEHB239:
 8107 3e87 E8000000 		call	__cxa_throw@PLT
 8107      00
 8108              	.L426:
  25:../ExecuteTest.h **** 	}
 8109              		.loc 4 25 0 is_stmt 1
 8110 3e8c 488B8598 		movq	-1640(%rbp), %rax
 8110      F9FFFF
 8111 3e93 4889C7   		movq	%rax, %rdi
 8112 3e96 E88BE6FF 		call	_ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv
 8112      FF
 8113              	.LEHE239:
  23:../ExecuteTest.h **** #endif
 8114              		.loc 4 23 0
 8115 3e9b 488D8570 		leaq	-1168(%rbp), %rax
 8115      FBFFFF
 8116 3ea2 4889C7   		movq	%rax, %rdi
 8117              	.LEHB240:
 8118 3ea5 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 8118      00
 8119              	.LEHE240:
 8120              	.LBE148:
 8121              		.loc 4 42 0
 8122 3eaa E9F10100 		jmp	.L424
 8122      00
 8123              	.L439:
 8124 3eaf 4989C4   		movq	%rax, %r12
 8125 3eb2 4889D3   		movq	%rdx, %rbx
 8126              	.LBB149:
  23:../ExecuteTest.h **** #endif
 8127              		.loc 4 23 0
 8128 3eb5 488D8570 		leaq	-1168(%rbp), %rax
 8128      FBFFFF
 8129 3ebc 4889C7   		movq	%rax, %rdi
 8130 3ebf E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 8130      00
 8131 3ec4 4C89E0   		movq	%r12, %rax
 8132 3ec7 4889DA   		movq	%rbx, %rdx
 8133 3eca EB00     		jmp	.L428
 8134              	.L438:
 8135              	.L428:
 8136 3ecc 4883FA01 		cmpq	$1, %rdx
 8137 3ed0 740F     		je	.L430
 8138 3ed2 4883FA02 		cmpq	$2, %rdx
 8139 3ed6 0F84A600 		je	.L431
 8139      0000
 8140 3edc E9420100 		jmp	.L444
 8140      00
 8141              	.L430:
 8142              	.LBE149:
 8143              	.LBB150:
  27:../ExecuteTest.h **** 	{
 8144              		.loc 4 27 0
 8145 3ee1 4889C7   		movq	%rax, %rdi
 8146 3ee4 E8000000 		call	__cxa_begin_catch@PLT
 8146      00
 8147 3ee9 488985A8 		movq	%rax, -1624(%rbp)
 8147      F9FFFF
 8148              	.LEHB241:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8149              		.loc 4 29 0
 8150 3ef0 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8150      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8151              		.loc 4 29 0 is_stmt 0 discriminator 1
 8152 3ef5 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 8153              		.loc 4 30 0 is_stmt 1 discriminator 1
 8154 3ef8 488B85A8 		movq	-1624(%rbp), %rax
 8154      F9FFFF
 8155 3eff 488B00   		movq	(%rax), %rax
 8156 3f02 4883C010 		addq	$16, %rax
 8157 3f06 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8158              		.loc 4 29 0 discriminator 1
 8159 3f09 488B95A8 		movq	-1624(%rbp), %rdx
 8159      F9FFFF
 8160 3f10 4889D7   		movq	%rdx, %rdi
 8161 3f13 FFD0     		call	*%rax
 8162              	.LVL28:
 8163 3f15 4989C4   		movq	%rax, %r12
 8164 3f18 488B85A8 		movq	-1624(%rbp), %rax
 8164      F9FFFF
 8165 3f1f 4889C7   		movq	%rax, %rdi
 8166 3f22 E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 8166      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8167              		.loc 4 29 0 is_stmt 0 discriminator 2
 8168 3f27 4189C5   		movl	%eax, %r13d
 8169 3f2a 488B85A8 		movq	-1624(%rbp), %rax
 8169      F9FFFF
 8170 3f31 4889C7   		movq	%rax, %rdi
 8171 3f34 E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 8171      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8172              		.loc 4 29 0 discriminator 3
 8173 3f39 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 8174              		.loc 4 30 0 is_stmt 1 discriminator 3
 8175 3f3c 488B8590 		movq	-1648(%rbp), %rax
 8175      F9FFFF
 8176 3f43 488B10   		movq	(%rax), %rdx
 8177 3f46 488B8590 		movq	-1648(%rbp), %rax
 8177      F9FFFF
 8178 3f4d 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8179              		.loc 4 29 0 discriminator 3
 8180 3f51 488D85B0 		leaq	-1616(%rbp), %rax
 8180      F9FFFF
 8181 3f58 4589E8   		movl	%r13d, %r8d
 8182 3f5b 4889C7   		movq	%rax, %rdi
 8183 3f5e E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 8183      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8184              		.loc 4 29 0 is_stmt 0 discriminator 5
 8185 3f63 488D85B0 		leaq	-1616(%rbp), %rax
 8185      F9FFFF
 8186 3f6a 4C89E2   		movq	%r12, %rdx
 8187 3f6d 4889C6   		movq	%rax, %rsi
 8188 3f70 4889DF   		movq	%rbx, %rdi
 8189 3f73 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8189      00
 8190              	.LEHE241:
  27:../ExecuteTest.h **** 	{
 8191              		.loc 4 27 0 is_stmt 1 discriminator 7
 8192 3f78 E8000000 		call	__cxa_end_catch@PLT
 8192      00
 8193              	.LBE150:
 8194              		.loc 4 42 0 discriminator 7
 8195 3f7d E91E0100 		jmp	.L424
 8195      00
 8196              	.L431:
 8197              	.LBB151:
  32:../ExecuteTest.h **** 	{
 8198              		.loc 4 32 0
 8199 3f82 4889C7   		movq	%rax, %rdi
 8200 3f85 E8000000 		call	__cxa_begin_catch@PLT
 8200      00
 8201 3f8a 488985A0 		movq	%rax, -1632(%rbp)
 8201      F9FFFF
 8202              	.LBB152:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8203              		.loc 4 34 0
 8204 3f91 488D85D0 		leaq	-1584(%rbp), %rax
 8204      F9FFFF
 8205 3f98 4889C7   		movq	%rax, %rdi
 8206              	.LEHB242:
 8207 3f9b E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 8207      00
 8208              	.LEHE242:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8209              		.loc 4 35 0
 8210 3fa0 488D85D0 		leaq	-1584(%rbp), %rax
 8210      F9FFFF
 8211 3fa7 488D3500 		leaq	.LC3(%rip), %rsi
 8211      000000
 8212 3fae 4889C7   		movq	%rax, %rdi
 8213              	.LEHB243:
 8214 3fb1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 8214      00
 8215 3fb6 4889C3   		movq	%rax, %rbx
 8216 3fb9 488B85A0 		movq	-1632(%rbp), %rax
 8216      F9FFFF
 8217 3fc0 488B00   		movq	(%rax), %rax
 8218 3fc3 4883C010 		addq	$16, %rax
 8219 3fc7 488B00   		movq	(%rax), %rax
 8220 3fca 488B95A0 		movq	-1632(%rbp), %rdx
 8220      F9FFFF
 8221 3fd1 4889D7   		movq	%rdx, %rdi
 8222 3fd4 FFD0     		call	*%rax
 8223              	.LVL29:
 8224 3fd6 4889C6   		movq	%rax, %rsi
 8225 3fd9 4889DF   		movq	%rbx, %rdi
 8226 3fdc E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 8226      00
  36:../ExecuteTest.h **** 	}
 8227              		.loc 4 36 0
 8228 3fe1 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8228      00
 8229 3fe6 488B18   		movq	(%rax), %rbx
 8230 3fe9 488D85D0 		leaq	-1584(%rbp), %rax
 8230      F9FFFF
 8231 3ff0 4889C7   		movq	%rax, %rdi
 8232 3ff3 E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 8232      00
  36:../ExecuteTest.h **** 	}
 8233              		.loc 4 36 0 is_stmt 0 discriminator 1
 8234 3ff8 4889C2   		movq	%rax, %rdx
 8235 3ffb 488B8590 		movq	-1648(%rbp), %rax
 8235      F9FFFF
 8236 4002 4889C6   		movq	%rax, %rsi
 8237 4005 4889DF   		movq	%rbx, %rdi
 8238 4008 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8238      00
 8239              	.LEHE243:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8240              		.loc 4 34 0 is_stmt 1
 8241 400d 488D85D0 		leaq	-1584(%rbp), %rax
 8241      F9FFFF
 8242 4014 4889C7   		movq	%rax, %rdi
 8243              	.LEHB244:
 8244 4017 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8244      00
 8245              	.LEHE244:
 8246              	.LBE152:
  32:../ExecuteTest.h **** 	{
 8247              		.loc 4 32 0
 8248 401c E8000000 		call	__cxa_end_catch@PLT
 8248      00
 8249              	.LBE151:
 8250              		.loc 4 42 0
 8251 4021 EB7D     		jmp	.L424
 8252              	.L444:
  38:../ExecuteTest.h **** 	{
 8253              		.loc 4 38 0
 8254 4023 4889C7   		movq	%rax, %rdi
 8255 4026 E8000000 		call	__cxa_begin_catch@PLT
 8255      00
 8256              	.LEHB245:
  40:../ExecuteTest.h **** 	}
 8257              		.loc 4 40 0
 8258 402b E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8258      00
 8259 4030 488B00   		movq	(%rax), %rax
 8260 4033 488B8D90 		movq	-1648(%rbp), %rcx
 8260      F9FFFF
 8261 403a 488D1500 		leaq	.LC44(%rip), %rdx
 8261      000000
 8262 4041 4889CE   		movq	%rcx, %rsi
 8263 4044 4889C7   		movq	%rax, %rdi
 8264 4047 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8264      00
 8265              	.LEHE245:
 8266              	.LEHB246:
  38:../ExecuteTest.h **** 	{
 8267              		.loc 4 38 0
 8268 404c E8000000 		call	__cxa_end_catch@PLT
 8268      00
 8269              		.loc 4 42 0
 8270 4051 EB4D     		jmp	.L424
 8271              	.L440:
 8272 4053 4889C3   		movq	%rax, %rbx
 8273              	.LBB154:
  27:../ExecuteTest.h **** 	{
 8274              		.loc 4 27 0
 8275 4056 E8000000 		call	__cxa_end_catch@PLT
 8275      00
 8276 405b 4889D8   		movq	%rbx, %rax
 8277 405e 4889C7   		movq	%rax, %rdi
 8278 4061 E8000000 		call	_Unwind_Resume@PLT
 8278      00
 8279              	.LEHE246:
 8280              	.L442:
 8281 4066 4889C3   		movq	%rax, %rbx
 8282              	.LBE154:
 8283              	.LBB155:
 8284              	.LBB153:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8285              		.loc 4 34 0
 8286 4069 488D85D0 		leaq	-1584(%rbp), %rax
 8286      F9FFFF
 8287 4070 4889C7   		movq	%rax, %rdi
 8288 4073 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8288      00
 8289 4078 EB03     		jmp	.L435
 8290              	.L441:
 8291 407a 4889C3   		movq	%rax, %rbx
 8292              	.L435:
 8293              	.LBE153:
  32:../ExecuteTest.h **** 	{
 8294              		.loc 4 32 0
 8295 407d E8000000 		call	__cxa_end_catch@PLT
 8295      00
 8296 4082 4889D8   		movq	%rbx, %rax
 8297 4085 4889C7   		movq	%rax, %rdi
 8298              	.LEHB247:
 8299 4088 E8000000 		call	_Unwind_Resume@PLT
 8299      00
 8300              	.LEHE247:
 8301              	.L443:
 8302 408d 4889C3   		movq	%rax, %rbx
 8303              	.LBE155:
  38:../ExecuteTest.h **** 	{
 8304              		.loc 4 38 0
 8305 4090 E8000000 		call	__cxa_end_catch@PLT
 8305      00
 8306 4095 4889D8   		movq	%rbx, %rax
 8307 4098 4889C7   		movq	%rax, %rdi
 8308              	.LEHB248:
 8309 409b E8000000 		call	_Unwind_Resume@PLT
 8309      00
 8310              	.LEHE248:
 8311              	.L424:
 8312              		.loc 4 42 0
 8313 40a0 488B45D8 		movq	-40(%rbp), %rax
 8314 40a4 64483304 		xorq	%fs:40, %rax
 8314      25280000 
 8314      00
 8315 40ad 7405     		je	.L437
 8316 40af E8000000 		call	__stack_chk_fail@PLT
 8316      00
 8317              	.L437:
 8318 40b4 4881C458 		addq	$1624, %rsp
 8318      060000
 8319 40bb 5B       		popq	%rbx
 8320 40bc 415C     		popq	%r12
 8321 40be 415D     		popq	%r13
 8322 40c0 5D       		popq	%rbp
 8323              		.cfi_def_cfa 7, 8
 8324 40c1 C3       		ret
 8325              		.cfi_endproc
 8326              	.LFE1488:
 8327              		.section	.gcc_except_table
 8328              		.align 4
 8329              	.LLSDA1488:
 8330 06e8 FF       		.byte	0xff
 8331 06e9 9B       		.byte	0x9b
 8332 06ea 59       		.uleb128 .LLSDATT1488-.LLSDATTD1488
 8333              	.LLSDATTD1488:
 8334 06eb 01       		.byte	0x1
 8335 06ec 43       		.uleb128 .LLSDACSE1488-.LLSDACSB1488
 8336              	.LLSDACSB1488:
 8337 06ed 2D       		.uleb128 .LEHB237-.LFB1488
 8338 06ee 05       		.uleb128 .LEHE237-.LEHB237
 8339 06ef 00       		.uleb128 0
 8340 06f0 00       		.uleb128 0
 8341 06f1 49       		.uleb128 .LEHB238-.LFB1488
 8342 06f2 05       		.uleb128 .LEHE238-.LEHB238
 8343 06f3 D301     		.uleb128 .L438-.LFB1488
 8344 06f5 05       		.uleb128 0x5
 8345 06f6 8E01     		.uleb128 .LEHB239-.LFB1488
 8346 06f8 14       		.uleb128 .LEHE239-.LEHB239
 8347 06f9 B601     		.uleb128 .L439-.LFB1488
 8348 06fb 07       		.uleb128 0x7
 8349 06fc AC01     		.uleb128 .LEHB240-.LFB1488
 8350 06fe 05       		.uleb128 .LEHE240-.LEHB240
 8351 06ff D301     		.uleb128 .L438-.LFB1488
 8352 0701 05       		.uleb128 0x5
 8353 0702 F701     		.uleb128 .LEHB241-.LFB1488
 8354 0704 8801     		.uleb128 .LEHE241-.LEHB241
 8355 0706 DA04     		.uleb128 .L440-.LFB1488
 8356 0708 00       		.uleb128 0
 8357 0709 A203     		.uleb128 .LEHB242-.LFB1488
 8358 070b 05       		.uleb128 .LEHE242-.LEHB242
 8359 070c 8105     		.uleb128 .L441-.LFB1488
 8360 070e 00       		.uleb128 0
 8361 070f B803     		.uleb128 .LEHB243-.LFB1488
 8362 0711 5C       		.uleb128 .LEHE243-.LEHB243
 8363 0712 ED04     		.uleb128 .L442-.LFB1488
 8364 0714 00       		.uleb128 0
 8365 0715 9E04     		.uleb128 .LEHB244-.LFB1488
 8366 0717 05       		.uleb128 .LEHE244-.LEHB244
 8367 0718 8105     		.uleb128 .L441-.LFB1488
 8368 071a 00       		.uleb128 0
 8369 071b B204     		.uleb128 .LEHB245-.LFB1488
 8370 071d 21       		.uleb128 .LEHE245-.LEHB245
 8371 071e 9405     		.uleb128 .L443-.LFB1488
 8372 0720 00       		.uleb128 0
 8373 0721 D304     		.uleb128 .LEHB246-.LFB1488
 8374 0723 1A       		.uleb128 .LEHE246-.LEHB246
 8375 0724 00       		.uleb128 0
 8376 0725 00       		.uleb128 0
 8377 0726 8F05     		.uleb128 .LEHB247-.LFB1488
 8378 0728 05       		.uleb128 .LEHE247-.LEHB247
 8379 0729 00       		.uleb128 0
 8380 072a 00       		.uleb128 0
 8381 072b A205     		.uleb128 .LEHB248-.LFB1488
 8382 072d 05       		.uleb128 .LEHE248-.LEHB248
 8383 072e 00       		.uleb128 0
 8384 072f 00       		.uleb128 0
 8385              	.LLSDACSE1488:
 8386 0730 03       		.byte	0x3
 8387 0731 00       		.byte	0
 8388 0732 02       		.byte	0x2
 8389 0733 7D       		.byte	0x7d
 8390 0734 01       		.byte	0x1
 8391 0735 7D       		.byte	0x7d
 8392 0736 00       		.byte	0
 8393 0737 7D       		.byte	0x7d
 8394              		.align 4
 8395 0738 00000000 		.long	0
 8396              	
 8397 073c 00000000 		.long	DW.ref._ZTISt9exception-.
 8398 0740 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 8399              	.LLSDATT1488:
 8400              		.text
 8403              	_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT_RKNS_
 8404              	.LFB1489:
  16:../ExecuteTest.h **** {
 8405              		.loc 4 16 0
 8406              		.cfi_startproc
 8407              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8408              		.cfi_lsda 0x1b,.LLSDA1489
 8409 40c2 55       		pushq	%rbp
 8410              		.cfi_def_cfa_offset 16
 8411              		.cfi_offset 6, -16
 8412 40c3 4889E5   		movq	%rsp, %rbp
 8413              		.cfi_def_cfa_register 6
 8414 40c6 4155     		pushq	%r13
 8415 40c8 4154     		pushq	%r12
 8416 40ca 53       		pushq	%rbx
 8417 40cb 4881EC58 		subq	$1624, %rsp
 8417      060000
 8418              		.cfi_offset 13, -24
 8419              		.cfi_offset 12, -32
 8420              		.cfi_offset 3, -40
 8421 40d2 4889BD98 		movq	%rdi, -1640(%rbp)
 8421      F9FFFF
 8422 40d9 4889B590 		movq	%rsi, -1648(%rbp)
 8422      F9FFFF
  16:../ExecuteTest.h **** {
 8423              		.loc 4 16 0
 8424 40e0 64488B04 		movq	%fs:40, %rax
 8424      25280000 
 8424      00
 8425 40e9 488945D8 		movq	%rax, -40(%rbp)
 8426 40ed 31C0     		xorl	%eax, %eax
 8427              	.LEHB249:
  18:../ExecuteTest.h **** 
 8428              		.loc 4 18 0
 8429 40ef E8000000 		call	_ZN8UnitTest11CurrentTest7DetailsEv@PLT
 8429      00
 8430              	.LEHE249:
 8431 40f4 4889C2   		movq	%rax, %rdx
 8432 40f7 488B8590 		movq	-1648(%rbp), %rax
 8432      F9FFFF
 8433 40fe 488902   		movq	%rax, (%rdx)
 8434              	.LBB156:
  23:../ExecuteTest.h **** #endif
 8435              		.loc 4 23 0
 8436 4101 488D8570 		leaq	-1168(%rbp), %rax
 8436      FBFFFF
 8437 4108 4889C7   		movq	%rax, %rdi
 8438              	.LEHB250:
 8439 410b E8000000 		call	_ZN8UnitTest16SignalTranslatorC1Ev@PLT
 8439      00
 8440              	.LEHE250:
  23:../ExecuteTest.h **** #endif
 8441              		.loc 4 23 0 is_stmt 0 discriminator 1
 8442 4110 488B0500 		movq	_ZN8UnitTest16SignalTranslator12s_jumpTargetE(%rip), %rax
 8442      000000
 8443 4117 BE010000 		movl	$1, %esi
 8443      00
 8444 411c 4889C7   		movq	%rax, %rdi
 8445 411f E8000000 		call	__sigsetjmp@PLT
 8445      00
 8446 4124 85C0     		testl	%eax, %eax
 8447 4126 0F95C0   		setne	%al
 8448 4129 84C0     		testb	%al, %al
 8449 412b 7428     		je	.L447
  23:../ExecuteTest.h **** #endif
 8450              		.loc 4 23 0 discriminator 4
 8451 412d BF080000 		movl	$8, %edi
 8451      00
 8452 4132 E8000000 		call	__cxa_allocate_exception@PLT
 8452      00
 8453 4137 488D1500 		leaq	.LC43(%rip), %rdx
 8453      000000
 8454 413e 488910   		movq	%rdx, (%rax)
 8455 4141 BA000000 		movl	$0, %edx
 8455      00
 8456 4146 488D3500 		leaq	_ZTIPKc(%rip), %rsi
 8456      000000
 8457 414d 4889C7   		movq	%rax, %rdi
 8458              	.LEHB251:
 8459 4150 E8000000 		call	__cxa_throw@PLT
 8459      00
 8460              	.L447:
  25:../ExecuteTest.h **** 	}
 8461              		.loc 4 25 0 is_stmt 1
 8462 4155 488B8598 		movq	-1640(%rbp), %rax
 8462      F9FFFF
 8463 415c 4889C7   		movq	%rax, %rdi
 8464 415f E8B2E9FF 		call	_ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv
 8464      FF
 8465              	.LEHE251:
  23:../ExecuteTest.h **** #endif
 8466              		.loc 4 23 0
 8467 4164 488D8570 		leaq	-1168(%rbp), %rax
 8467      FBFFFF
 8468 416b 4889C7   		movq	%rax, %rdi
 8469              	.LEHB252:
 8470 416e E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 8470      00
 8471              	.LEHE252:
 8472              	.LBE156:
 8473              		.loc 4 42 0
 8474 4173 E9F10100 		jmp	.L445
 8474      00
 8475              	.L460:
 8476 4178 4989C4   		movq	%rax, %r12
 8477 417b 4889D3   		movq	%rdx, %rbx
 8478              	.LBB157:
  23:../ExecuteTest.h **** #endif
 8479              		.loc 4 23 0
 8480 417e 488D8570 		leaq	-1168(%rbp), %rax
 8480      FBFFFF
 8481 4185 4889C7   		movq	%rax, %rdi
 8482 4188 E8000000 		call	_ZN8UnitTest16SignalTranslatorD1Ev@PLT
 8482      00
 8483 418d 4C89E0   		movq	%r12, %rax
 8484 4190 4889DA   		movq	%rbx, %rdx
 8485 4193 EB00     		jmp	.L449
 8486              	.L459:
 8487              	.L449:
 8488 4195 4883FA01 		cmpq	$1, %rdx
 8489 4199 740F     		je	.L451
 8490 419b 4883FA02 		cmpq	$2, %rdx
 8491 419f 0F84A600 		je	.L452
 8491      0000
 8492 41a5 E9420100 		jmp	.L465
 8492      00
 8493              	.L451:
 8494              	.LBE157:
 8495              	.LBB158:
  27:../ExecuteTest.h **** 	{
 8496              		.loc 4 27 0
 8497 41aa 4889C7   		movq	%rax, %rdi
 8498 41ad E8000000 		call	__cxa_begin_catch@PLT
 8498      00
 8499 41b2 488985A8 		movq	%rax, -1624(%rbp)
 8499      F9FFFF
 8500              	.LEHB253:
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8501              		.loc 4 29 0
 8502 41b9 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8502      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8503              		.loc 4 29 0 is_stmt 0 discriminator 1
 8504 41be 488B18   		movq	(%rax), %rbx
  30:../ExecuteTest.h **** 	}
 8505              		.loc 4 30 0 is_stmt 1 discriminator 1
 8506 41c1 488B85A8 		movq	-1624(%rbp), %rax
 8506      F9FFFF
 8507 41c8 488B00   		movq	(%rax), %rax
 8508 41cb 4883C010 		addq	$16, %rax
 8509 41cf 488B00   		movq	(%rax), %rax
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8510              		.loc 4 29 0 discriminator 1
 8511 41d2 488B95A8 		movq	-1624(%rbp), %rdx
 8511      F9FFFF
 8512 41d9 4889D7   		movq	%rdx, %rdi
 8513 41dc FFD0     		call	*%rax
 8514              	.LVL30:
 8515 41de 4989C4   		movq	%rax, %r12
 8516 41e1 488B85A8 		movq	-1624(%rbp), %rax
 8516      F9FFFF
 8517 41e8 4889C7   		movq	%rax, %rdi
 8518 41eb E8000000 		call	_ZNK8UnitTest15AssertException10LineNumberEv@PLT
 8518      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8519              		.loc 4 29 0 is_stmt 0 discriminator 2
 8520 41f0 4189C5   		movl	%eax, %r13d
 8521 41f3 488B85A8 		movq	-1624(%rbp), %rax
 8521      F9FFFF
 8522 41fa 4889C7   		movq	%rax, %rdi
 8523 41fd E8000000 		call	_ZNK8UnitTest15AssertException8FilenameEv@PLT
 8523      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8524              		.loc 4 29 0 discriminator 3
 8525 4202 4889C1   		movq	%rax, %rcx
  30:../ExecuteTest.h **** 	}
 8526              		.loc 4 30 0 is_stmt 1 discriminator 3
 8527 4205 488B8590 		movq	-1648(%rbp), %rax
 8527      F9FFFF
 8528 420c 488B10   		movq	(%rax), %rdx
 8529 420f 488B8590 		movq	-1648(%rbp), %rax
 8529      F9FFFF
 8530 4216 488B7008 		movq	8(%rax), %rsi
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8531              		.loc 4 29 0 discriminator 3
 8532 421a 488D85B0 		leaq	-1616(%rbp), %rax
 8532      F9FFFF
 8533 4221 4589E8   		movl	%r13d, %r8d
 8534 4224 4889C7   		movq	%rax, %rdi
 8535 4227 E8000000 		call	_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i@PLT
 8535      00
  29:../ExecuteTest.h **** 			TestDetails(details.testName, details.suiteName, e.Filename(), e.LineNumber()), e.what());
 8536              		.loc 4 29 0 is_stmt 0 discriminator 5
 8537 422c 488D85B0 		leaq	-1616(%rbp), %rax
 8537      F9FFFF
 8538 4233 4C89E2   		movq	%r12, %rdx
 8539 4236 4889C6   		movq	%rax, %rsi
 8540 4239 4889DF   		movq	%rbx, %rdi
 8541 423c E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8541      00
 8542              	.LEHE253:
  27:../ExecuteTest.h **** 	{
 8543              		.loc 4 27 0 is_stmt 1 discriminator 7
 8544 4241 E8000000 		call	__cxa_end_catch@PLT
 8544      00
 8545              	.LBE158:
 8546              		.loc 4 42 0 discriminator 7
 8547 4246 E91E0100 		jmp	.L445
 8547      00
 8548              	.L452:
 8549              	.LBB159:
  32:../ExecuteTest.h **** 	{
 8550              		.loc 4 32 0
 8551 424b 4889C7   		movq	%rax, %rdi
 8552 424e E8000000 		call	__cxa_begin_catch@PLT
 8552      00
 8553 4253 488985A0 		movq	%rax, -1632(%rbp)
 8553      F9FFFF
 8554              	.LBB160:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8555              		.loc 4 34 0
 8556 425a 488D85D0 		leaq	-1584(%rbp), %rax
 8556      F9FFFF
 8557 4261 4889C7   		movq	%rax, %rdi
 8558              	.LEHB254:
 8559 4264 E8000000 		call	_ZN8UnitTest15MemoryOutStreamC1Ev
 8559      00
 8560              	.LEHE254:
  35:../ExecuteTest.h **** 		CurrentTest::Results()->OnTestFailure(details, stream.GetText());
 8561              		.loc 4 35 0
 8562 4269 488D85D0 		leaq	-1584(%rbp), %rax
 8562      F9FFFF
 8563 4270 488D3500 		leaq	.LC3(%rip), %rsi
 8563      000000
 8564 4277 4889C7   		movq	%rax, %rdi
 8565              	.LEHB255:
 8566 427a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 8566      00
 8567 427f 4889C3   		movq	%rax, %rbx
 8568 4282 488B85A0 		movq	-1632(%rbp), %rax
 8568      F9FFFF
 8569 4289 488B00   		movq	(%rax), %rax
 8570 428c 4883C010 		addq	$16, %rax
 8571 4290 488B00   		movq	(%rax), %rax
 8572 4293 488B95A0 		movq	-1632(%rbp), %rdx
 8572      F9FFFF
 8573 429a 4889D7   		movq	%rdx, %rdi
 8574 429d FFD0     		call	*%rax
 8575              	.LVL31:
 8576 429f 4889C6   		movq	%rax, %rsi
 8577 42a2 4889DF   		movq	%rbx, %rdi
 8578 42a5 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 8578      00
  36:../ExecuteTest.h **** 	}
 8579              		.loc 4 36 0
 8580 42aa E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8580      00
 8581 42af 488B18   		movq	(%rax), %rbx
 8582 42b2 488D85D0 		leaq	-1584(%rbp), %rax
 8582      F9FFFF
 8583 42b9 4889C7   		movq	%rax, %rdi
 8584 42bc E8000000 		call	_ZNK8UnitTest15MemoryOutStream7GetTextEv@PLT
 8584      00
  36:../ExecuteTest.h **** 	}
 8585              		.loc 4 36 0 is_stmt 0 discriminator 1
 8586 42c1 4889C2   		movq	%rax, %rdx
 8587 42c4 488B8590 		movq	-1648(%rbp), %rax
 8587      F9FFFF
 8588 42cb 4889C6   		movq	%rax, %rsi
 8589 42ce 4889DF   		movq	%rbx, %rdi
 8590 42d1 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8590      00
 8591              	.LEHE255:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8592              		.loc 4 34 0 is_stmt 1
 8593 42d6 488D85D0 		leaq	-1584(%rbp), %rax
 8593      F9FFFF
 8594 42dd 4889C7   		movq	%rax, %rdi
 8595              	.LEHB256:
 8596 42e0 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8596      00
 8597              	.LEHE256:
 8598              	.LBE160:
  32:../ExecuteTest.h **** 	{
 8599              		.loc 4 32 0
 8600 42e5 E8000000 		call	__cxa_end_catch@PLT
 8600      00
 8601              	.LBE159:
 8602              		.loc 4 42 0
 8603 42ea EB7D     		jmp	.L445
 8604              	.L465:
  38:../ExecuteTest.h **** 	{
 8605              		.loc 4 38 0
 8606 42ec 4889C7   		movq	%rax, %rdi
 8607 42ef E8000000 		call	__cxa_begin_catch@PLT
 8607      00
 8608              	.LEHB257:
  40:../ExecuteTest.h **** 	}
 8609              		.loc 4 40 0
 8610 42f4 E8000000 		call	_ZN8UnitTest11CurrentTest7ResultsEv@PLT
 8610      00
 8611 42f9 488B00   		movq	(%rax), %rax
 8612 42fc 488B8D90 		movq	-1648(%rbp), %rcx
 8612      F9FFFF
 8613 4303 488D1500 		leaq	.LC44(%rip), %rdx
 8613      000000
 8614 430a 4889CE   		movq	%rcx, %rsi
 8615 430d 4889C7   		movq	%rax, %rdi
 8616 4310 E8000000 		call	_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc@PLT
 8616      00
 8617              	.LEHE257:
 8618              	.LEHB258:
  38:../ExecuteTest.h **** 	{
 8619              		.loc 4 38 0
 8620 4315 E8000000 		call	__cxa_end_catch@PLT
 8620      00
 8621              		.loc 4 42 0
 8622 431a EB4D     		jmp	.L445
 8623              	.L461:
 8624 431c 4889C3   		movq	%rax, %rbx
 8625              	.LBB162:
  27:../ExecuteTest.h **** 	{
 8626              		.loc 4 27 0
 8627 431f E8000000 		call	__cxa_end_catch@PLT
 8627      00
 8628 4324 4889D8   		movq	%rbx, %rax
 8629 4327 4889C7   		movq	%rax, %rdi
 8630 432a E8000000 		call	_Unwind_Resume@PLT
 8630      00
 8631              	.LEHE258:
 8632              	.L463:
 8633 432f 4889C3   		movq	%rax, %rbx
 8634              	.LBE162:
 8635              	.LBB163:
 8636              	.LBB161:
  34:../ExecuteTest.h **** 		stream << "Unhandled exception: " << e.what();
 8637              		.loc 4 34 0
 8638 4332 488D85D0 		leaq	-1584(%rbp), %rax
 8638      F9FFFF
 8639 4339 4889C7   		movq	%rax, %rdi
 8640 433c E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 8640      00
 8641 4341 EB03     		jmp	.L456
 8642              	.L462:
 8643 4343 4889C3   		movq	%rax, %rbx
 8644              	.L456:
 8645              	.LBE161:
  32:../ExecuteTest.h **** 	{
 8646              		.loc 4 32 0
 8647 4346 E8000000 		call	__cxa_end_catch@PLT
 8647      00
 8648 434b 4889D8   		movq	%rbx, %rax
 8649 434e 4889C7   		movq	%rax, %rdi
 8650              	.LEHB259:
 8651 4351 E8000000 		call	_Unwind_Resume@PLT
 8651      00
 8652              	.LEHE259:
 8653              	.L464:
 8654 4356 4889C3   		movq	%rax, %rbx
 8655              	.LBE163:
  38:../ExecuteTest.h **** 	{
 8656              		.loc 4 38 0
 8657 4359 E8000000 		call	__cxa_end_catch@PLT
 8657      00
 8658 435e 4889D8   		movq	%rbx, %rax
 8659 4361 4889C7   		movq	%rax, %rdi
 8660              	.LEHB260:
 8661 4364 E8000000 		call	_Unwind_Resume@PLT
 8661      00
 8662              	.LEHE260:
 8663              	.L445:
 8664              		.loc 4 42 0
 8665 4369 488B45D8 		movq	-40(%rbp), %rax
 8666 436d 64483304 		xorq	%fs:40, %rax
 8666      25280000 
 8666      00
 8667 4376 7405     		je	.L458
 8668 4378 E8000000 		call	__stack_chk_fail@PLT
 8668      00
 8669              	.L458:
 8670 437d 4881C458 		addq	$1624, %rsp
 8670      060000
 8671 4384 5B       		popq	%rbx
 8672 4385 415C     		popq	%r12
 8673 4387 415D     		popq	%r13
 8674 4389 5D       		popq	%rbp
 8675              		.cfi_def_cfa 7, 8
 8676 438a C3       		ret
 8677              		.cfi_endproc
 8678              	.LFE1489:
 8679              		.section	.gcc_except_table
 8680              		.align 4
 8681              	.LLSDA1489:
 8682 0744 FF       		.byte	0xff
 8683 0745 9B       		.byte	0x9b
 8684 0746 59       		.uleb128 .LLSDATT1489-.LLSDATTD1489
 8685              	.LLSDATTD1489:
 8686 0747 01       		.byte	0x1
 8687 0748 43       		.uleb128 .LLSDACSE1489-.LLSDACSB1489
 8688              	.LLSDACSB1489:
 8689 0749 2D       		.uleb128 .LEHB249-.LFB1489
 8690 074a 05       		.uleb128 .LEHE249-.LEHB249
 8691 074b 00       		.uleb128 0
 8692 074c 00       		.uleb128 0
 8693 074d 49       		.uleb128 .LEHB250-.LFB1489
 8694 074e 05       		.uleb128 .LEHE250-.LEHB250
 8695 074f D301     		.uleb128 .L459-.LFB1489
 8696 0751 05       		.uleb128 0x5
 8697 0752 8E01     		.uleb128 .LEHB251-.LFB1489
 8698 0754 14       		.uleb128 .LEHE251-.LEHB251
 8699 0755 B601     		.uleb128 .L460-.LFB1489
 8700 0757 07       		.uleb128 0x7
 8701 0758 AC01     		.uleb128 .LEHB252-.LFB1489
 8702 075a 05       		.uleb128 .LEHE252-.LEHB252
 8703 075b D301     		.uleb128 .L459-.LFB1489
 8704 075d 05       		.uleb128 0x5
 8705 075e F701     		.uleb128 .LEHB253-.LFB1489
 8706 0760 8801     		.uleb128 .LEHE253-.LEHB253
 8707 0762 DA04     		.uleb128 .L461-.LFB1489
 8708 0764 00       		.uleb128 0
 8709 0765 A203     		.uleb128 .LEHB254-.LFB1489
 8710 0767 05       		.uleb128 .LEHE254-.LEHB254
 8711 0768 8105     		.uleb128 .L462-.LFB1489
 8712 076a 00       		.uleb128 0
 8713 076b B803     		.uleb128 .LEHB255-.LFB1489
 8714 076d 5C       		.uleb128 .LEHE255-.LEHB255
 8715 076e ED04     		.uleb128 .L463-.LFB1489
 8716 0770 00       		.uleb128 0
 8717 0771 9E04     		.uleb128 .LEHB256-.LFB1489
 8718 0773 05       		.uleb128 .LEHE256-.LEHB256
 8719 0774 8105     		.uleb128 .L462-.LFB1489
 8720 0776 00       		.uleb128 0
 8721 0777 B204     		.uleb128 .LEHB257-.LFB1489
 8722 0779 21       		.uleb128 .LEHE257-.LEHB257
 8723 077a 9405     		.uleb128 .L464-.LFB1489
 8724 077c 00       		.uleb128 0
 8725 077d D304     		.uleb128 .LEHB258-.LFB1489
 8726 077f 1A       		.uleb128 .LEHE258-.LEHB258
 8727 0780 00       		.uleb128 0
 8728 0781 00       		.uleb128 0
 8729 0782 8F05     		.uleb128 .LEHB259-.LFB1489
 8730 0784 05       		.uleb128 .LEHE259-.LEHB259
 8731 0785 00       		.uleb128 0
 8732 0786 00       		.uleb128 0
 8733 0787 A205     		.uleb128 .LEHB260-.LFB1489
 8734 0789 05       		.uleb128 .LEHE260-.LEHB260
 8735 078a 00       		.uleb128 0
 8736 078b 00       		.uleb128 0
 8737              	.LLSDACSE1489:
 8738 078c 03       		.byte	0x3
 8739 078d 00       		.byte	0
 8740 078e 02       		.byte	0x2
 8741 078f 7D       		.byte	0x7d
 8742 0790 01       		.byte	0x1
 8743 0791 7D       		.byte	0x7d
 8744 0792 00       		.byte	0
 8745 0793 7D       		.byte	0x7d
 8746              		.align 4
 8747 0794 00000000 		.long	0
 8748              	
 8749 0798 00000000 		.long	DW.ref._ZTISt9exception-.
 8750 079c 00000000 		.long	DW.ref._ZTIN8UnitTest15AssertExceptionE-.
 8751              	.LLSDATT1489:
 8752              		.text
 8754              		.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE,"axG",
 8755              		.weak	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
 8757              	_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:
 8758              	.LFB1523:
 8759              		.file 6 "/usr/include/c++/7/bits/basic_string.h"
   1:/usr/include/c++/7/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/7/bits/basic_string.h **** 
   3:/usr/include/c++/7/bits/basic_string.h **** // Copyright (C) 1997-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/basic_string.h **** //
   5:/usr/include/c++/7/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/7/bits/basic_string.h **** 
  11:/usr/include/c++/7/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/basic_string.h **** 
  16:/usr/include/c++/7/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/basic_string.h **** 
  20:/usr/include/c++/7/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/basic_string.h **** 
  25:/usr/include/c++/7/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/7/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/7/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/7/bits/basic_string.h ****  */
  29:/usr/include/c++/7/bits/basic_string.h **** 
  30:/usr/include/c++/7/bits/basic_string.h **** //
  31:/usr/include/c++/7/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/7/bits/basic_string.h **** //
  33:/usr/include/c++/7/bits/basic_string.h **** 
  34:/usr/include/c++/7/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/7/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/7/bits/basic_string.h **** 
  37:/usr/include/c++/7/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/7/bits/basic_string.h **** 
  39:/usr/include/c++/7/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/7/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/7/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/7/bits/basic_string.h **** 
  43:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/usr/include/c++/7/bits/basic_string.h **** #include <initializer_list>
  45:/usr/include/c++/7/bits/basic_string.h **** #endif
  46:/usr/include/c++/7/bits/basic_string.h **** 
  47:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
  48:/usr/include/c++/7/bits/basic_string.h **** # include <string_view>
  49:/usr/include/c++/7/bits/basic_string.h **** #endif
  50:/usr/include/c++/7/bits/basic_string.h **** 
  51:/usr/include/c++/7/bits/basic_string.h **** 
  52:/usr/include/c++/7/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/7/bits/basic_string.h **** {
  54:/usr/include/c++/7/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/7/bits/basic_string.h **** 
  56:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:/usr/include/c++/7/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:/usr/include/c++/7/bits/basic_string.h ****   /**
  59:/usr/include/c++/7/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:/usr/include/c++/7/bits/basic_string.h ****    *
  62:/usr/include/c++/7/bits/basic_string.h ****    *  @ingroup strings
  63:/usr/include/c++/7/bits/basic_string.h ****    *  @ingroup sequences
  64:/usr/include/c++/7/bits/basic_string.h ****    *
  65:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  66:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:/usr/include/c++/7/bits/basic_string.h ****    *                   char_traits<_CharT>.
  68:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:/usr/include/c++/7/bits/basic_string.h ****    *
  70:/usr/include/c++/7/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:/usr/include/c++/7/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:/usr/include/c++/7/bits/basic_string.h ****    */
  76:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:/usr/include/c++/7/bits/basic_string.h ****     class basic_string
  78:/usr/include/c++/7/bits/basic_string.h ****     {
  79:/usr/include/c++/7/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:/usr/include/c++/7/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:/usr/include/c++/7/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:/usr/include/c++/7/bits/basic_string.h **** 
  83:/usr/include/c++/7/bits/basic_string.h ****       // Types:
  84:/usr/include/c++/7/bits/basic_string.h ****     public:
  85:/usr/include/c++/7/bits/basic_string.h ****       typedef _Traits					traits_type;
  86:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:/usr/include/c++/7/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:/usr/include/c++/7/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:/usr/include/c++/7/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:/usr/include/c++/7/bits/basic_string.h **** 							const_iterator;
  97:/usr/include/c++/7/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:/usr/include/c++/7/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:/usr/include/c++/7/bits/basic_string.h **** 
 100:/usr/include/c++/7/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:/usr/include/c++/7/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:/usr/include/c++/7/bits/basic_string.h **** 
 103:/usr/include/c++/7/bits/basic_string.h ****     private:
 104:/usr/include/c++/7/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 105:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus < 201103L
 106:/usr/include/c++/7/bits/basic_string.h ****       typedef iterator __const_iterator;
 107:/usr/include/c++/7/bits/basic_string.h **** #else
 108:/usr/include/c++/7/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 109:/usr/include/c++/7/bits/basic_string.h **** #endif
 110:/usr/include/c++/7/bits/basic_string.h **** 
 111:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
 112:/usr/include/c++/7/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 113:/usr/include/c++/7/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 114:/usr/include/c++/7/bits/basic_string.h **** 
 115:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 116:/usr/include/c++/7/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 117:/usr/include/c++/7/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 118:/usr/include/c++/7/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 119:/usr/include/c++/7/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 120:/usr/include/c++/7/bits/basic_string.h **** 	  _Res>;
 121:/usr/include/c++/7/bits/basic_string.h **** 
 122:/usr/include/c++/7/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 123:/usr/include/c++/7/bits/basic_string.h ****       static __sv_type
 124:/usr/include/c++/7/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 125:/usr/include/c++/7/bits/basic_string.h ****       { return __svt; }
 126:/usr/include/c++/7/bits/basic_string.h **** 
 127:/usr/include/c++/7/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 128:/usr/include/c++/7/bits/basic_string.h ****       // allows to add an internal constructor that does not
 129:/usr/include/c++/7/bits/basic_string.h ****       // participate in overload resolution when a string_view
 130:/usr/include/c++/7/bits/basic_string.h ****       // is provided.
 131:/usr/include/c++/7/bits/basic_string.h ****       struct __sv_wrapper
 132:/usr/include/c++/7/bits/basic_string.h ****       {
 133:/usr/include/c++/7/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 134:/usr/include/c++/7/bits/basic_string.h **** 	__sv_type _M_sv;
 135:/usr/include/c++/7/bits/basic_string.h ****       };
 136:/usr/include/c++/7/bits/basic_string.h **** #endif
 137:/usr/include/c++/7/bits/basic_string.h **** 
 138:/usr/include/c++/7/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 139:/usr/include/c++/7/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 140:/usr/include/c++/7/bits/basic_string.h ****       {
 141:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus < 201103L
 142:/usr/include/c++/7/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 143:/usr/include/c++/7/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 144:/usr/include/c++/7/bits/basic_string.h **** #else
 145:/usr/include/c++/7/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 146:/usr/include/c++/7/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 147:/usr/include/c++/7/bits/basic_string.h **** 
 148:/usr/include/c++/7/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 149:/usr/include/c++/7/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 150:/usr/include/c++/7/bits/basic_string.h **** #endif
 151:/usr/include/c++/7/bits/basic_string.h **** 
 152:/usr/include/c++/7/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 153:/usr/include/c++/7/bits/basic_string.h ****       };
 154:/usr/include/c++/7/bits/basic_string.h **** 
 155:/usr/include/c++/7/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 156:/usr/include/c++/7/bits/basic_string.h ****       size_type		_M_string_length;
 157:/usr/include/c++/7/bits/basic_string.h **** 
 158:/usr/include/c++/7/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 159:/usr/include/c++/7/bits/basic_string.h **** 
 160:/usr/include/c++/7/bits/basic_string.h ****       union
 161:/usr/include/c++/7/bits/basic_string.h ****       {
 162:/usr/include/c++/7/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 163:/usr/include/c++/7/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 164:/usr/include/c++/7/bits/basic_string.h ****       };
 165:/usr/include/c++/7/bits/basic_string.h **** 
 166:/usr/include/c++/7/bits/basic_string.h ****       void
 167:/usr/include/c++/7/bits/basic_string.h ****       _M_data(pointer __p)
 168:/usr/include/c++/7/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 169:/usr/include/c++/7/bits/basic_string.h **** 
 170:/usr/include/c++/7/bits/basic_string.h ****       void
 171:/usr/include/c++/7/bits/basic_string.h ****       _M_length(size_type __length)
 172:/usr/include/c++/7/bits/basic_string.h ****       { _M_string_length = __length; }
 173:/usr/include/c++/7/bits/basic_string.h **** 
 174:/usr/include/c++/7/bits/basic_string.h ****       pointer
 175:/usr/include/c++/7/bits/basic_string.h ****       _M_data() const
 176:/usr/include/c++/7/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 177:/usr/include/c++/7/bits/basic_string.h **** 
 178:/usr/include/c++/7/bits/basic_string.h ****       pointer
 179:/usr/include/c++/7/bits/basic_string.h ****       _M_local_data()
 180:/usr/include/c++/7/bits/basic_string.h ****       {
 181:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 182:/usr/include/c++/7/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 183:/usr/include/c++/7/bits/basic_string.h **** #else
 184:/usr/include/c++/7/bits/basic_string.h **** 	return pointer(_M_local_buf);
 185:/usr/include/c++/7/bits/basic_string.h **** #endif
 186:/usr/include/c++/7/bits/basic_string.h ****       }
 187:/usr/include/c++/7/bits/basic_string.h **** 
 188:/usr/include/c++/7/bits/basic_string.h ****       const_pointer
 189:/usr/include/c++/7/bits/basic_string.h ****       _M_local_data() const
 190:/usr/include/c++/7/bits/basic_string.h ****       {
 191:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 192:/usr/include/c++/7/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 193:/usr/include/c++/7/bits/basic_string.h **** #else
 194:/usr/include/c++/7/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 195:/usr/include/c++/7/bits/basic_string.h **** #endif
 196:/usr/include/c++/7/bits/basic_string.h ****       }
 197:/usr/include/c++/7/bits/basic_string.h **** 
 198:/usr/include/c++/7/bits/basic_string.h ****       void
 199:/usr/include/c++/7/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 200:/usr/include/c++/7/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 201:/usr/include/c++/7/bits/basic_string.h **** 
 202:/usr/include/c++/7/bits/basic_string.h ****       void
 203:/usr/include/c++/7/bits/basic_string.h ****       _M_set_length(size_type __n)
 204:/usr/include/c++/7/bits/basic_string.h ****       {
 205:/usr/include/c++/7/bits/basic_string.h **** 	_M_length(__n);
 206:/usr/include/c++/7/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 207:/usr/include/c++/7/bits/basic_string.h ****       }
 208:/usr/include/c++/7/bits/basic_string.h **** 
 209:/usr/include/c++/7/bits/basic_string.h ****       bool
 210:/usr/include/c++/7/bits/basic_string.h ****       _M_is_local() const
 211:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 212:/usr/include/c++/7/bits/basic_string.h **** 
 213:/usr/include/c++/7/bits/basic_string.h ****       // Create & Destroy
 214:/usr/include/c++/7/bits/basic_string.h ****       pointer
 215:/usr/include/c++/7/bits/basic_string.h ****       _M_create(size_type&, size_type);
 216:/usr/include/c++/7/bits/basic_string.h **** 
 217:/usr/include/c++/7/bits/basic_string.h ****       void
 218:/usr/include/c++/7/bits/basic_string.h ****       _M_dispose()
 219:/usr/include/c++/7/bits/basic_string.h ****       {
 220:/usr/include/c++/7/bits/basic_string.h **** 	if (!_M_is_local())
 221:/usr/include/c++/7/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 222:/usr/include/c++/7/bits/basic_string.h ****       }
 223:/usr/include/c++/7/bits/basic_string.h **** 
 224:/usr/include/c++/7/bits/basic_string.h ****       void
 225:/usr/include/c++/7/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 226:/usr/include/c++/7/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 227:/usr/include/c++/7/bits/basic_string.h **** 
 228:/usr/include/c++/7/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 229:/usr/include/c++/7/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 230:/usr/include/c++/7/bits/basic_string.h ****       template<typename _InIterator>
 231:/usr/include/c++/7/bits/basic_string.h ****         void
 232:/usr/include/c++/7/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 233:/usr/include/c++/7/bits/basic_string.h **** 			 std::__false_type)
 234:/usr/include/c++/7/bits/basic_string.h **** 	{
 235:/usr/include/c++/7/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 236:/usr/include/c++/7/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 237:/usr/include/c++/7/bits/basic_string.h **** 	}
 238:/usr/include/c++/7/bits/basic_string.h **** 
 239:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 240:/usr/include/c++/7/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 241:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Integer>
 242:/usr/include/c++/7/bits/basic_string.h ****         void
 243:/usr/include/c++/7/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 244:/usr/include/c++/7/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 245:/usr/include/c++/7/bits/basic_string.h **** 
 246:/usr/include/c++/7/bits/basic_string.h ****       void
 247:/usr/include/c++/7/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 248:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__req, __c); }
 249:/usr/include/c++/7/bits/basic_string.h **** 
 250:/usr/include/c++/7/bits/basic_string.h ****       template<typename _InIterator>
 251:/usr/include/c++/7/bits/basic_string.h ****         void
 252:/usr/include/c++/7/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 253:/usr/include/c++/7/bits/basic_string.h **** 	{
 254:/usr/include/c++/7/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 255:/usr/include/c++/7/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 256:/usr/include/c++/7/bits/basic_string.h ****         }
 257:/usr/include/c++/7/bits/basic_string.h **** 
 258:/usr/include/c++/7/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 259:/usr/include/c++/7/bits/basic_string.h ****       template<typename _InIterator>
 260:/usr/include/c++/7/bits/basic_string.h ****         void
 261:/usr/include/c++/7/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 262:/usr/include/c++/7/bits/basic_string.h **** 		     std::input_iterator_tag);
 263:/usr/include/c++/7/bits/basic_string.h **** 
 264:/usr/include/c++/7/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 265:/usr/include/c++/7/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 266:/usr/include/c++/7/bits/basic_string.h ****       template<typename _FwdIterator>
 267:/usr/include/c++/7/bits/basic_string.h ****         void
 268:/usr/include/c++/7/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 269:/usr/include/c++/7/bits/basic_string.h **** 		     std::forward_iterator_tag);
 270:/usr/include/c++/7/bits/basic_string.h **** 
 271:/usr/include/c++/7/bits/basic_string.h ****       void
 272:/usr/include/c++/7/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 273:/usr/include/c++/7/bits/basic_string.h **** 
 274:/usr/include/c++/7/bits/basic_string.h ****       allocator_type&
 275:/usr/include/c++/7/bits/basic_string.h ****       _M_get_allocator()
 276:/usr/include/c++/7/bits/basic_string.h ****       { return _M_dataplus; }
 277:/usr/include/c++/7/bits/basic_string.h **** 
 278:/usr/include/c++/7/bits/basic_string.h ****       const allocator_type&
 279:/usr/include/c++/7/bits/basic_string.h ****       _M_get_allocator() const
 280:/usr/include/c++/7/bits/basic_string.h ****       { return _M_dataplus; }
 281:/usr/include/c++/7/bits/basic_string.h **** 
 282:/usr/include/c++/7/bits/basic_string.h ****     private:
 283:/usr/include/c++/7/bits/basic_string.h **** 
 284:/usr/include/c++/7/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 285:/usr/include/c++/7/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 286:/usr/include/c++/7/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 287:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 288:/usr/include/c++/7/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 289:/usr/include/c++/7/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 290:/usr/include/c++/7/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 291:/usr/include/c++/7/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 292:/usr/include/c++/7/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 293:/usr/include/c++/7/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 294:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
 295:/usr/include/c++/7/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 296:/usr/include/c++/7/bits/basic_string.h **** #endif
 297:/usr/include/c++/7/bits/basic_string.h **** 
 298:/usr/include/c++/7/bits/basic_string.h ****       size_type
 299:/usr/include/c++/7/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 300:/usr/include/c++/7/bits/basic_string.h ****       {
 301:/usr/include/c++/7/bits/basic_string.h **** 	if (__pos > this->size())
 302:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 303:/usr/include/c++/7/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 304:/usr/include/c++/7/bits/basic_string.h **** 				   __s, __pos, this->size());
 305:/usr/include/c++/7/bits/basic_string.h **** 	return __pos;
 306:/usr/include/c++/7/bits/basic_string.h ****       }
 307:/usr/include/c++/7/bits/basic_string.h **** 
 308:/usr/include/c++/7/bits/basic_string.h ****       void
 309:/usr/include/c++/7/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 310:/usr/include/c++/7/bits/basic_string.h ****       {
 311:/usr/include/c++/7/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 312:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 313:/usr/include/c++/7/bits/basic_string.h ****       }
 314:/usr/include/c++/7/bits/basic_string.h **** 
 315:/usr/include/c++/7/bits/basic_string.h **** 
 316:/usr/include/c++/7/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 317:/usr/include/c++/7/bits/basic_string.h ****       size_type
 318:/usr/include/c++/7/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 319:/usr/include/c++/7/bits/basic_string.h ****       {
 320:/usr/include/c++/7/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 321:/usr/include/c++/7/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 322:/usr/include/c++/7/bits/basic_string.h ****       }
 323:/usr/include/c++/7/bits/basic_string.h **** 
 324:/usr/include/c++/7/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 325:/usr/include/c++/7/bits/basic_string.h ****       bool
 326:/usr/include/c++/7/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 327:/usr/include/c++/7/bits/basic_string.h ****       {
 328:/usr/include/c++/7/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 329:/usr/include/c++/7/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 330:/usr/include/c++/7/bits/basic_string.h ****       }
 331:/usr/include/c++/7/bits/basic_string.h **** 
 332:/usr/include/c++/7/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 333:/usr/include/c++/7/bits/basic_string.h ****       // traits_type::copy/move/assign.
 334:/usr/include/c++/7/bits/basic_string.h ****       static void
 335:/usr/include/c++/7/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 336:/usr/include/c++/7/bits/basic_string.h ****       {
 337:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
 338:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 339:/usr/include/c++/7/bits/basic_string.h **** 	else
 340:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 341:/usr/include/c++/7/bits/basic_string.h ****       }
 342:/usr/include/c++/7/bits/basic_string.h **** 
 343:/usr/include/c++/7/bits/basic_string.h ****       static void
 344:/usr/include/c++/7/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 345:/usr/include/c++/7/bits/basic_string.h ****       {
 346:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
 347:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 348:/usr/include/c++/7/bits/basic_string.h **** 	else
 349:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 350:/usr/include/c++/7/bits/basic_string.h ****       }
 351:/usr/include/c++/7/bits/basic_string.h **** 
 352:/usr/include/c++/7/bits/basic_string.h ****       static void
 353:/usr/include/c++/7/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 354:/usr/include/c++/7/bits/basic_string.h ****       {
 355:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
 356:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 357:/usr/include/c++/7/bits/basic_string.h **** 	else
 358:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 359:/usr/include/c++/7/bits/basic_string.h ****       }
 360:/usr/include/c++/7/bits/basic_string.h **** 
 361:/usr/include/c++/7/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 362:/usr/include/c++/7/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 363:/usr/include/c++/7/bits/basic_string.h ****       template<class _Iterator>
 364:/usr/include/c++/7/bits/basic_string.h ****         static void
 365:/usr/include/c++/7/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 366:/usr/include/c++/7/bits/basic_string.h ****         {
 367:/usr/include/c++/7/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 368:/usr/include/c++/7/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 369:/usr/include/c++/7/bits/basic_string.h **** 	}
 370:/usr/include/c++/7/bits/basic_string.h **** 
 371:/usr/include/c++/7/bits/basic_string.h ****       static void
 372:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 373:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 374:/usr/include/c++/7/bits/basic_string.h **** 
 375:/usr/include/c++/7/bits/basic_string.h ****       static void
 376:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 377:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 378:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 379:/usr/include/c++/7/bits/basic_string.h **** 
 380:/usr/include/c++/7/bits/basic_string.h ****       static void
 381:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 382:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 383:/usr/include/c++/7/bits/basic_string.h **** 
 384:/usr/include/c++/7/bits/basic_string.h ****       static void
 385:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 386:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 387:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 388:/usr/include/c++/7/bits/basic_string.h **** 
 389:/usr/include/c++/7/bits/basic_string.h ****       static int
 390:/usr/include/c++/7/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 391:/usr/include/c++/7/bits/basic_string.h ****       {
 392:/usr/include/c++/7/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 393:/usr/include/c++/7/bits/basic_string.h **** 
 394:/usr/include/c++/7/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 395:/usr/include/c++/7/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 396:/usr/include/c++/7/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 397:/usr/include/c++/7/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 398:/usr/include/c++/7/bits/basic_string.h **** 	else
 399:/usr/include/c++/7/bits/basic_string.h **** 	  return int(__d);
 400:/usr/include/c++/7/bits/basic_string.h ****       }
 401:/usr/include/c++/7/bits/basic_string.h **** 
 402:/usr/include/c++/7/bits/basic_string.h ****       void
 403:/usr/include/c++/7/bits/basic_string.h ****       _M_assign(const basic_string&);
 404:/usr/include/c++/7/bits/basic_string.h **** 
 405:/usr/include/c++/7/bits/basic_string.h ****       void
 406:/usr/include/c++/7/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 407:/usr/include/c++/7/bits/basic_string.h **** 		size_type __len2);
 408:/usr/include/c++/7/bits/basic_string.h **** 
 409:/usr/include/c++/7/bits/basic_string.h ****       void
 410:/usr/include/c++/7/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 411:/usr/include/c++/7/bits/basic_string.h **** 
 412:/usr/include/c++/7/bits/basic_string.h ****     public:
 413:/usr/include/c++/7/bits/basic_string.h ****       // Construct/copy/destroy:
 414:/usr/include/c++/7/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 415:/usr/include/c++/7/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 416:/usr/include/c++/7/bits/basic_string.h **** 
 417:/usr/include/c++/7/bits/basic_string.h ****       /**
 418:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 419:/usr/include/c++/7/bits/basic_string.h ****        */
 420:/usr/include/c++/7/bits/basic_string.h ****       basic_string()
 421:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 422:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 423:/usr/include/c++/7/bits/basic_string.h ****       { _M_set_length(0); }
 424:/usr/include/c++/7/bits/basic_string.h **** 
 425:/usr/include/c++/7/bits/basic_string.h ****       /**
 426:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 427:/usr/include/c++/7/bits/basic_string.h ****        */
 428:/usr/include/c++/7/bits/basic_string.h ****       explicit
 429:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 430:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 431:/usr/include/c++/7/bits/basic_string.h ****       { _M_set_length(0); }
 432:/usr/include/c++/7/bits/basic_string.h **** 
 433:/usr/include/c++/7/bits/basic_string.h ****       /**
 434:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 435:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 436:/usr/include/c++/7/bits/basic_string.h ****        */
 437:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str)
 438:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 439:/usr/include/c++/7/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 440:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 441:/usr/include/c++/7/bits/basic_string.h **** 
 442:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 443:/usr/include/c++/7/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 444:/usr/include/c++/7/bits/basic_string.h ****       /**
 445:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 446:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 447:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 448:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 449:/usr/include/c++/7/bits/basic_string.h ****        */
 450:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 451:/usr/include/c++/7/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 452:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 453:/usr/include/c++/7/bits/basic_string.h ****       {
 454:/usr/include/c++/7/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 455:/usr/include/c++/7/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 456:/usr/include/c++/7/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 457:/usr/include/c++/7/bits/basic_string.h ****       }
 458:/usr/include/c++/7/bits/basic_string.h **** 
 459:/usr/include/c++/7/bits/basic_string.h ****       /**
 460:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 461:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 462:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 463:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 464:/usr/include/c++/7/bits/basic_string.h ****        */
 465:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 466:/usr/include/c++/7/bits/basic_string.h **** 		   size_type __n)
 467:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 468:/usr/include/c++/7/bits/basic_string.h ****       {
 469:/usr/include/c++/7/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 470:/usr/include/c++/7/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 471:/usr/include/c++/7/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 472:/usr/include/c++/7/bits/basic_string.h ****       }
 473:/usr/include/c++/7/bits/basic_string.h **** 
 474:/usr/include/c++/7/bits/basic_string.h ****       /**
 475:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 476:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 477:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 478:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 479:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 480:/usr/include/c++/7/bits/basic_string.h ****        */
 481:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 482:/usr/include/c++/7/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 483:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 484:/usr/include/c++/7/bits/basic_string.h ****       {
 485:/usr/include/c++/7/bits/basic_string.h **** 	const _CharT* __start
 486:/usr/include/c++/7/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 487:/usr/include/c++/7/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 488:/usr/include/c++/7/bits/basic_string.h ****       }
 489:/usr/include/c++/7/bits/basic_string.h **** 
 490:/usr/include/c++/7/bits/basic_string.h ****       /**
 491:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 492:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source character %array.
 493:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 494:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 495:/usr/include/c++/7/bits/basic_string.h ****        *
 496:/usr/include/c++/7/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 497:/usr/include/c++/7/bits/basic_string.h ****        *  has no special meaning.
 498:/usr/include/c++/7/bits/basic_string.h ****        */
 499:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 500:/usr/include/c++/7/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 501:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 502:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 503:/usr/include/c++/7/bits/basic_string.h **** 
 504:/usr/include/c++/7/bits/basic_string.h ****       /**
 505:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 506:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source C string.
 507:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 508:/usr/include/c++/7/bits/basic_string.h ****        */
 509:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 510:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 511:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 512:/usr/include/c++/7/bits/basic_string.h **** 
 513:/usr/include/c++/7/bits/basic_string.h ****       /**
 514:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 515:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters.
 516:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Character to use.
 517:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 518:/usr/include/c++/7/bits/basic_string.h ****        */
 519:/usr/include/c++/7/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 520:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 521:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__n, __c); }
 522:/usr/include/c++/7/bits/basic_string.h **** 
 523:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 524:/usr/include/c++/7/bits/basic_string.h ****       /**
 525:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Move construct string.
 526:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 527:/usr/include/c++/7/bits/basic_string.h ****        *
 528:/usr/include/c++/7/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 529:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 530:/usr/include/c++/7/bits/basic_string.h ****        **/
 531:/usr/include/c++/7/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 532:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 533:/usr/include/c++/7/bits/basic_string.h ****       {
 534:/usr/include/c++/7/bits/basic_string.h **** 	if (__str._M_is_local())
 535:/usr/include/c++/7/bits/basic_string.h **** 	  {
 536:/usr/include/c++/7/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 537:/usr/include/c++/7/bits/basic_string.h **** 			      _S_local_capacity + 1);
 538:/usr/include/c++/7/bits/basic_string.h **** 	  }
 539:/usr/include/c++/7/bits/basic_string.h **** 	else
 540:/usr/include/c++/7/bits/basic_string.h **** 	  {
 541:/usr/include/c++/7/bits/basic_string.h **** 	    _M_data(__str._M_data());
 542:/usr/include/c++/7/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 543:/usr/include/c++/7/bits/basic_string.h **** 	  }
 544:/usr/include/c++/7/bits/basic_string.h **** 
 545:/usr/include/c++/7/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 546:/usr/include/c++/7/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 547:/usr/include/c++/7/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 548:/usr/include/c++/7/bits/basic_string.h **** 	_M_length(__str.length());
 549:/usr/include/c++/7/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 550:/usr/include/c++/7/bits/basic_string.h **** 	__str._M_set_length(0);
 551:/usr/include/c++/7/bits/basic_string.h ****       }
 552:/usr/include/c++/7/bits/basic_string.h **** 
 553:/usr/include/c++/7/bits/basic_string.h ****       /**
 554:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 555:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 556:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 557:/usr/include/c++/7/bits/basic_string.h ****        */
 558:/usr/include/c++/7/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 559:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 560:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 561:/usr/include/c++/7/bits/basic_string.h **** 
 562:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 563:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 564:/usr/include/c++/7/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 565:/usr/include/c++/7/bits/basic_string.h **** 
 566:/usr/include/c++/7/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 567:/usr/include/c++/7/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 568:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 569:/usr/include/c++/7/bits/basic_string.h ****       {
 570:/usr/include/c++/7/bits/basic_string.h **** 	if (__str._M_is_local())
 571:/usr/include/c++/7/bits/basic_string.h **** 	  {
 572:/usr/include/c++/7/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 573:/usr/include/c++/7/bits/basic_string.h **** 			      _S_local_capacity + 1);
 574:/usr/include/c++/7/bits/basic_string.h **** 	    _M_length(__str.length());
 575:/usr/include/c++/7/bits/basic_string.h **** 	    __str._M_set_length(0);
 576:/usr/include/c++/7/bits/basic_string.h **** 	  }
 577:/usr/include/c++/7/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 578:/usr/include/c++/7/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 579:/usr/include/c++/7/bits/basic_string.h **** 	  {
 580:/usr/include/c++/7/bits/basic_string.h **** 	    _M_data(__str._M_data());
 581:/usr/include/c++/7/bits/basic_string.h **** 	    _M_length(__str.length());
 582:/usr/include/c++/7/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 583:/usr/include/c++/7/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 584:/usr/include/c++/7/bits/basic_string.h **** 	    __str._M_set_length(0);
 585:/usr/include/c++/7/bits/basic_string.h **** 	  }
 586:/usr/include/c++/7/bits/basic_string.h **** 	else
 587:/usr/include/c++/7/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 588:/usr/include/c++/7/bits/basic_string.h ****       }
 589:/usr/include/c++/7/bits/basic_string.h **** 
 590:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
 591:/usr/include/c++/7/bits/basic_string.h **** 
 592:/usr/include/c++/7/bits/basic_string.h ****       /**
 593:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 594:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __beg  Start of range.
 595:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __end  End of range.
 596:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 597:/usr/include/c++/7/bits/basic_string.h ****        */
 598:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 599:/usr/include/c++/7/bits/basic_string.h ****       template<typename _InputIterator,
 600:/usr/include/c++/7/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 601:/usr/include/c++/7/bits/basic_string.h **** #else
 602:/usr/include/c++/7/bits/basic_string.h ****       template<typename _InputIterator>
 603:/usr/include/c++/7/bits/basic_string.h **** #endif
 604:/usr/include/c++/7/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 605:/usr/include/c++/7/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 606:/usr/include/c++/7/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 607:/usr/include/c++/7/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 608:/usr/include/c++/7/bits/basic_string.h **** 
 609:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
 610:/usr/include/c++/7/bits/basic_string.h ****       /**
 611:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 612:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 613:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 614:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 615:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 616:/usr/include/c++/7/bits/basic_string.h ****        */
 617:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 618:/usr/include/c++/7/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 619:/usr/include/c++/7/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 620:/usr/include/c++/7/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 621:/usr/include/c++/7/bits/basic_string.h **** 
 622:/usr/include/c++/7/bits/basic_string.h ****       /**
 623:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 624:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 625:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 626:/usr/include/c++/7/bits/basic_string.h ****        */
 627:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 628:/usr/include/c++/7/bits/basic_string.h **** 	explicit
 629:/usr/include/c++/7/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 630:/usr/include/c++/7/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 631:/usr/include/c++/7/bits/basic_string.h **** 
 632:/usr/include/c++/7/bits/basic_string.h ****       /**
 633:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 634:/usr/include/c++/7/bits/basic_string.h ****        *          wrapper.
 635:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 636:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 637:/usr/include/c++/7/bits/basic_string.h ****        */
 638:/usr/include/c++/7/bits/basic_string.h ****       explicit
 639:/usr/include/c++/7/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 640:/usr/include/c++/7/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 641:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
 642:/usr/include/c++/7/bits/basic_string.h **** 
 643:/usr/include/c++/7/bits/basic_string.h ****       /**
 644:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 645:/usr/include/c++/7/bits/basic_string.h ****        */
 646:/usr/include/c++/7/bits/basic_string.h ****       ~basic_string()
 647:/usr/include/c++/7/bits/basic_string.h ****       { _M_dispose(); }
 648:/usr/include/c++/7/bits/basic_string.h **** 
 649:/usr/include/c++/7/bits/basic_string.h ****       /**
 650:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 651:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 652:/usr/include/c++/7/bits/basic_string.h ****        */
 653:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
 654:/usr/include/c++/7/bits/basic_string.h ****       operator=(const basic_string& __str)
 655:/usr/include/c++/7/bits/basic_string.h ****       {
 656:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 657:/usr/include/c++/7/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
 658:/usr/include/c++/7/bits/basic_string.h **** 	  {
 659:/usr/include/c++/7/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
 660:/usr/include/c++/7/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
 661:/usr/include/c++/7/bits/basic_string.h **** 	      {
 662:/usr/include/c++/7/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
 663:/usr/include/c++/7/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
 664:/usr/include/c++/7/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
 665:/usr/include/c++/7/bits/basic_string.h **** 		  {
 666:/usr/include/c++/7/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 667:/usr/include/c++/7/bits/basic_string.h **** 		    _M_data(_M_local_data());
 668:/usr/include/c++/7/bits/basic_string.h **** 		    _M_set_length(0);
 669:/usr/include/c++/7/bits/basic_string.h **** 		  }
 670:/usr/include/c++/7/bits/basic_string.h **** 		else
 671:/usr/include/c++/7/bits/basic_string.h **** 		  {
 672:/usr/include/c++/7/bits/basic_string.h **** 		    const auto __len = __str.size();
 673:/usr/include/c++/7/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
 674:/usr/include/c++/7/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
 675:/usr/include/c++/7/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
 676:/usr/include/c++/7/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 677:/usr/include/c++/7/bits/basic_string.h **** 		    _M_data(__ptr);
 678:/usr/include/c++/7/bits/basic_string.h **** 		    _M_capacity(__len);
 679:/usr/include/c++/7/bits/basic_string.h **** 		    _M_set_length(__len);
 680:/usr/include/c++/7/bits/basic_string.h **** 		  }
 681:/usr/include/c++/7/bits/basic_string.h **** 	      }
 682:/usr/include/c++/7/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
 683:/usr/include/c++/7/bits/basic_string.h **** 	  }
 684:/usr/include/c++/7/bits/basic_string.h **** #endif
 685:/usr/include/c++/7/bits/basic_string.h **** 	return this->assign(__str);
 686:/usr/include/c++/7/bits/basic_string.h ****       }
 687:/usr/include/c++/7/bits/basic_string.h **** 
 688:/usr/include/c++/7/bits/basic_string.h ****       /**
 689:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 690:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 691:/usr/include/c++/7/bits/basic_string.h ****        */
 692:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
 693:/usr/include/c++/7/bits/basic_string.h ****       operator=(const _CharT* __s)
 694:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__s); }
 695:/usr/include/c++/7/bits/basic_string.h **** 
 696:/usr/include/c++/7/bits/basic_string.h ****       /**
 697:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 698:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Source character.
 699:/usr/include/c++/7/bits/basic_string.h ****        *
 700:/usr/include/c++/7/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 701:/usr/include/c++/7/bits/basic_string.h ****        *  (*this)[0] == @a c.
 702:/usr/include/c++/7/bits/basic_string.h ****        */
 703:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
 704:/usr/include/c++/7/bits/basic_string.h ****       operator=(_CharT __c)
 705:/usr/include/c++/7/bits/basic_string.h ****       {
 706:/usr/include/c++/7/bits/basic_string.h **** 	this->assign(1, __c);
 707:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
 708:/usr/include/c++/7/bits/basic_string.h ****       }
 709:/usr/include/c++/7/bits/basic_string.h **** 
 710:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 711:/usr/include/c++/7/bits/basic_string.h ****       /**
 712:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 713:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
 714:/usr/include/c++/7/bits/basic_string.h ****        *
 715:/usr/include/c++/7/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 716:/usr/include/c++/7/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 717:/usr/include/c++/7/bits/basic_string.h ****        **/
 718:/usr/include/c++/7/bits/basic_string.h ****       // PR 58265, this should be noexcept.
 719:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 720:/usr/include/c++/7/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 721:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
 722:/usr/include/c++/7/bits/basic_string.h ****       operator=(basic_string&& __str)
 723:/usr/include/c++/7/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 724:/usr/include/c++/7/bits/basic_string.h ****       {
 725:/usr/include/c++/7/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 726:/usr/include/c++/7/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 727:/usr/include/c++/7/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 728:/usr/include/c++/7/bits/basic_string.h **** 	  {
 729:/usr/include/c++/7/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 730:/usr/include/c++/7/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 731:/usr/include/c++/7/bits/basic_string.h **** 	    _M_data(_M_local_data());
 732:/usr/include/c++/7/bits/basic_string.h **** 	    _M_set_length(0);
 733:/usr/include/c++/7/bits/basic_string.h **** 	  }
 734:/usr/include/c++/7/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 735:/usr/include/c++/7/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 736:/usr/include/c++/7/bits/basic_string.h **** 
 737:/usr/include/c++/7/bits/basic_string.h **** 	if (!__str._M_is_local()
 738:/usr/include/c++/7/bits/basic_string.h **** 	    && (_Alloc_traits::_S_propagate_on_move_assign()
 739:/usr/include/c++/7/bits/basic_string.h **** 	      || _Alloc_traits::_S_always_equal()))
 740:/usr/include/c++/7/bits/basic_string.h **** 	  {
 741:/usr/include/c++/7/bits/basic_string.h **** 	    pointer __data = nullptr;
 742:/usr/include/c++/7/bits/basic_string.h **** 	    size_type __capacity;
 743:/usr/include/c++/7/bits/basic_string.h **** 	    if (!_M_is_local())
 744:/usr/include/c++/7/bits/basic_string.h **** 	      {
 745:/usr/include/c++/7/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 746:/usr/include/c++/7/bits/basic_string.h **** 		  {
 747:/usr/include/c++/7/bits/basic_string.h **** 		    __data = _M_data();
 748:/usr/include/c++/7/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 749:/usr/include/c++/7/bits/basic_string.h **** 		  }
 750:/usr/include/c++/7/bits/basic_string.h **** 		else
 751:/usr/include/c++/7/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 752:/usr/include/c++/7/bits/basic_string.h **** 	      }
 753:/usr/include/c++/7/bits/basic_string.h **** 
 754:/usr/include/c++/7/bits/basic_string.h **** 	    _M_data(__str._M_data());
 755:/usr/include/c++/7/bits/basic_string.h **** 	    _M_length(__str.length());
 756:/usr/include/c++/7/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 757:/usr/include/c++/7/bits/basic_string.h **** 	    if (__data)
 758:/usr/include/c++/7/bits/basic_string.h **** 	      {
 759:/usr/include/c++/7/bits/basic_string.h **** 		__str._M_data(__data);
 760:/usr/include/c++/7/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 761:/usr/include/c++/7/bits/basic_string.h **** 	      }
 762:/usr/include/c++/7/bits/basic_string.h **** 	    else
 763:/usr/include/c++/7/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 764:/usr/include/c++/7/bits/basic_string.h **** 	  }
 765:/usr/include/c++/7/bits/basic_string.h **** 	else
 766:/usr/include/c++/7/bits/basic_string.h **** 	    assign(__str);
 767:/usr/include/c++/7/bits/basic_string.h **** 	__str.clear();
 768:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
 769:/usr/include/c++/7/bits/basic_string.h ****       }
 770:/usr/include/c++/7/bits/basic_string.h **** 
 771:/usr/include/c++/7/bits/basic_string.h ****       /**
 772:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 773:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 774:/usr/include/c++/7/bits/basic_string.h ****        */
 775:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
 776:/usr/include/c++/7/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 777:/usr/include/c++/7/bits/basic_string.h ****       {
 778:/usr/include/c++/7/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 779:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
 780:/usr/include/c++/7/bits/basic_string.h ****       }
 781:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
 782:/usr/include/c++/7/bits/basic_string.h **** 
 783:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
 784:/usr/include/c++/7/bits/basic_string.h ****       /**
 785:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 786:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 787:/usr/include/c++/7/bits/basic_string.h ****        */
 788:/usr/include/c++/7/bits/basic_string.h ****      template<typename _Tp>
 789:/usr/include/c++/7/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 790:/usr/include/c++/7/bits/basic_string.h ****        operator=(const _Tp& __svt)
 791:/usr/include/c++/7/bits/basic_string.h ****        { return this->assign(__svt); }
 792:/usr/include/c++/7/bits/basic_string.h **** 
 793:/usr/include/c++/7/bits/basic_string.h ****       /**
 794:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 795:/usr/include/c++/7/bits/basic_string.h ****        *  @return A string_view.
 796:/usr/include/c++/7/bits/basic_string.h ****        */
 797:/usr/include/c++/7/bits/basic_string.h ****       operator __sv_type() const noexcept
 798:/usr/include/c++/7/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 799:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
 800:/usr/include/c++/7/bits/basic_string.h **** 
 801:/usr/include/c++/7/bits/basic_string.h ****       // Iterators:
 802:/usr/include/c++/7/bits/basic_string.h ****       /**
 803:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 804:/usr/include/c++/7/bits/basic_string.h ****        *  the %string.
 805:/usr/include/c++/7/bits/basic_string.h ****        */
 806:/usr/include/c++/7/bits/basic_string.h ****       iterator
 807:/usr/include/c++/7/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 808:/usr/include/c++/7/bits/basic_string.h ****       { return iterator(_M_data()); }
 809:/usr/include/c++/7/bits/basic_string.h **** 
 810:/usr/include/c++/7/bits/basic_string.h ****       /**
 811:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 812:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.
 813:/usr/include/c++/7/bits/basic_string.h ****        */
 814:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
 815:/usr/include/c++/7/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 816:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 817:/usr/include/c++/7/bits/basic_string.h **** 
 818:/usr/include/c++/7/bits/basic_string.h ****       /**
 819:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 820:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.
 821:/usr/include/c++/7/bits/basic_string.h ****        */
 822:/usr/include/c++/7/bits/basic_string.h ****       iterator
 823:/usr/include/c++/7/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 824:/usr/include/c++/7/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 825:/usr/include/c++/7/bits/basic_string.h **** 
 826:/usr/include/c++/7/bits/basic_string.h ****       /**
 827:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 828:/usr/include/c++/7/bits/basic_string.h ****        *  last character in the %string.
 829:/usr/include/c++/7/bits/basic_string.h ****        */
 830:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
 831:/usr/include/c++/7/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 832:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 833:/usr/include/c++/7/bits/basic_string.h **** 
 834:/usr/include/c++/7/bits/basic_string.h ****       /**
 835:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 836:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 837:/usr/include/c++/7/bits/basic_string.h ****        *  order.
 838:/usr/include/c++/7/bits/basic_string.h ****        */
 839:/usr/include/c++/7/bits/basic_string.h ****       reverse_iterator
 840:/usr/include/c++/7/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 841:/usr/include/c++/7/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 842:/usr/include/c++/7/bits/basic_string.h **** 
 843:/usr/include/c++/7/bits/basic_string.h ****       /**
 844:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 845:/usr/include/c++/7/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 846:/usr/include/c++/7/bits/basic_string.h ****        *  reverse element order.
 847:/usr/include/c++/7/bits/basic_string.h ****        */
 848:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
 849:/usr/include/c++/7/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 850:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 851:/usr/include/c++/7/bits/basic_string.h **** 
 852:/usr/include/c++/7/bits/basic_string.h ****       /**
 853:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 854:/usr/include/c++/7/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 855:/usr/include/c++/7/bits/basic_string.h ****        *  element order.
 856:/usr/include/c++/7/bits/basic_string.h ****        */
 857:/usr/include/c++/7/bits/basic_string.h ****       reverse_iterator
 858:/usr/include/c++/7/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 859:/usr/include/c++/7/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 860:/usr/include/c++/7/bits/basic_string.h **** 
 861:/usr/include/c++/7/bits/basic_string.h ****       /**
 862:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 863:/usr/include/c++/7/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 864:/usr/include/c++/7/bits/basic_string.h ****        *  is done in reverse element order.
 865:/usr/include/c++/7/bits/basic_string.h ****        */
 866:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
 867:/usr/include/c++/7/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 868:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 869:/usr/include/c++/7/bits/basic_string.h **** 
 870:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 871:/usr/include/c++/7/bits/basic_string.h ****       /**
 872:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 873:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.
 874:/usr/include/c++/7/bits/basic_string.h ****        */
 875:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
 876:/usr/include/c++/7/bits/basic_string.h ****       cbegin() const noexcept
 877:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 878:/usr/include/c++/7/bits/basic_string.h **** 
 879:/usr/include/c++/7/bits/basic_string.h ****       /**
 880:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 881:/usr/include/c++/7/bits/basic_string.h ****        *  last character in the %string.
 882:/usr/include/c++/7/bits/basic_string.h ****        */
 883:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
 884:/usr/include/c++/7/bits/basic_string.h ****       cend() const noexcept
 885:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 886:/usr/include/c++/7/bits/basic_string.h **** 
 887:/usr/include/c++/7/bits/basic_string.h ****       /**
 888:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 889:/usr/include/c++/7/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 890:/usr/include/c++/7/bits/basic_string.h ****        *  reverse element order.
 891:/usr/include/c++/7/bits/basic_string.h ****        */
 892:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
 893:/usr/include/c++/7/bits/basic_string.h ****       crbegin() const noexcept
 894:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 895:/usr/include/c++/7/bits/basic_string.h **** 
 896:/usr/include/c++/7/bits/basic_string.h ****       /**
 897:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:/usr/include/c++/7/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 899:/usr/include/c++/7/bits/basic_string.h ****        *  is done in reverse element order.
 900:/usr/include/c++/7/bits/basic_string.h ****        */
 901:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
 902:/usr/include/c++/7/bits/basic_string.h ****       crend() const noexcept
 903:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 904:/usr/include/c++/7/bits/basic_string.h **** #endif
 905:/usr/include/c++/7/bits/basic_string.h **** 
 906:/usr/include/c++/7/bits/basic_string.h ****     public:
 907:/usr/include/c++/7/bits/basic_string.h ****       // Capacity:
 908:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 909:/usr/include/c++/7/bits/basic_string.h ****       ///  null-termination.
 910:/usr/include/c++/7/bits/basic_string.h ****       size_type
 911:/usr/include/c++/7/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 912:/usr/include/c++/7/bits/basic_string.h ****       { return _M_string_length; }
 913:/usr/include/c++/7/bits/basic_string.h **** 
 914:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 915:/usr/include/c++/7/bits/basic_string.h ****       ///  null-termination.
 916:/usr/include/c++/7/bits/basic_string.h ****       size_type
 917:/usr/include/c++/7/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 918:/usr/include/c++/7/bits/basic_string.h ****       { return _M_string_length; }
 919:/usr/include/c++/7/bits/basic_string.h **** 
 920:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 921:/usr/include/c++/7/bits/basic_string.h ****       size_type
 922:/usr/include/c++/7/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 923:/usr/include/c++/7/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 924:/usr/include/c++/7/bits/basic_string.h **** 
 925:/usr/include/c++/7/bits/basic_string.h ****       /**
 926:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 927:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 928:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 929:/usr/include/c++/7/bits/basic_string.h ****        *
 930:/usr/include/c++/7/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 931:/usr/include/c++/7/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 932:/usr/include/c++/7/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 933:/usr/include/c++/7/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 934:/usr/include/c++/7/bits/basic_string.h ****        */
 935:/usr/include/c++/7/bits/basic_string.h ****       void
 936:/usr/include/c++/7/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 937:/usr/include/c++/7/bits/basic_string.h **** 
 938:/usr/include/c++/7/bits/basic_string.h ****       /**
 939:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 940:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 941:/usr/include/c++/7/bits/basic_string.h ****        *
 942:/usr/include/c++/7/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 943:/usr/include/c++/7/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 944:/usr/include/c++/7/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 945:/usr/include/c++/7/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 946:/usr/include/c++/7/bits/basic_string.h ****        *  setting them to 0.
 947:/usr/include/c++/7/bits/basic_string.h ****        */
 948:/usr/include/c++/7/bits/basic_string.h ****       void
 949:/usr/include/c++/7/bits/basic_string.h ****       resize(size_type __n)
 950:/usr/include/c++/7/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 951:/usr/include/c++/7/bits/basic_string.h **** 
 952:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
 953:/usr/include/c++/7/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 954:/usr/include/c++/7/bits/basic_string.h ****       void
 955:/usr/include/c++/7/bits/basic_string.h ****       shrink_to_fit() noexcept
 956:/usr/include/c++/7/bits/basic_string.h ****       {
 957:/usr/include/c++/7/bits/basic_string.h **** #if __cpp_exceptions
 958:/usr/include/c++/7/bits/basic_string.h **** 	if (capacity() > size())
 959:/usr/include/c++/7/bits/basic_string.h **** 	  {
 960:/usr/include/c++/7/bits/basic_string.h **** 	    try
 961:/usr/include/c++/7/bits/basic_string.h **** 	      { reserve(0); }
 962:/usr/include/c++/7/bits/basic_string.h **** 	    catch(...)
 963:/usr/include/c++/7/bits/basic_string.h **** 	      { }
 964:/usr/include/c++/7/bits/basic_string.h **** 	  }
 965:/usr/include/c++/7/bits/basic_string.h **** #endif
 966:/usr/include/c++/7/bits/basic_string.h ****       }
 967:/usr/include/c++/7/bits/basic_string.h **** #endif
 968:/usr/include/c++/7/bits/basic_string.h **** 
 969:/usr/include/c++/7/bits/basic_string.h ****       /**
 970:/usr/include/c++/7/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 971:/usr/include/c++/7/bits/basic_string.h ****        *  before needing to allocate more memory.
 972:/usr/include/c++/7/bits/basic_string.h ****        */
 973:/usr/include/c++/7/bits/basic_string.h ****       size_type
 974:/usr/include/c++/7/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 975:/usr/include/c++/7/bits/basic_string.h ****       {
 976:/usr/include/c++/7/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 977:/usr/include/c++/7/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 978:/usr/include/c++/7/bits/basic_string.h ****       }
 979:/usr/include/c++/7/bits/basic_string.h **** 
 980:/usr/include/c++/7/bits/basic_string.h ****       /**
 981:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 982:/usr/include/c++/7/bits/basic_string.h ****        *          characters.
 983:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 984:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 985:/usr/include/c++/7/bits/basic_string.h ****        *
 986:/usr/include/c++/7/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 987:/usr/include/c++/7/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 988:/usr/include/c++/7/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 989:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
 990:/usr/include/c++/7/bits/basic_string.h ****        *
 991:/usr/include/c++/7/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 992:/usr/include/c++/7/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 993:/usr/include/c++/7/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 994:/usr/include/c++/7/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 995:/usr/include/c++/7/bits/basic_string.h ****        *  data.
 996:/usr/include/c++/7/bits/basic_string.h ****        */
 997:/usr/include/c++/7/bits/basic_string.h ****       void
 998:/usr/include/c++/7/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 999:/usr/include/c++/7/bits/basic_string.h **** 
1000:/usr/include/c++/7/bits/basic_string.h ****       /**
1001:/usr/include/c++/7/bits/basic_string.h ****        *  Erases the string, making it empty.
1002:/usr/include/c++/7/bits/basic_string.h ****        */
1003:/usr/include/c++/7/bits/basic_string.h ****       void
1004:/usr/include/c++/7/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1005:/usr/include/c++/7/bits/basic_string.h ****       { _M_set_length(0); }
1006:/usr/include/c++/7/bits/basic_string.h **** 
1007:/usr/include/c++/7/bits/basic_string.h ****       /**
1008:/usr/include/c++/7/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1009:/usr/include/c++/7/bits/basic_string.h ****        *  <code>*this == ""</code>.
1010:/usr/include/c++/7/bits/basic_string.h ****        */
1011:/usr/include/c++/7/bits/basic_string.h ****       bool
1012:/usr/include/c++/7/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1013:/usr/include/c++/7/bits/basic_string.h ****       { return this->size() == 0; }
1014:/usr/include/c++/7/bits/basic_string.h **** 
1015:/usr/include/c++/7/bits/basic_string.h ****       // Element access:
1016:/usr/include/c++/7/bits/basic_string.h ****       /**
1017:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1018:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1019:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1020:/usr/include/c++/7/bits/basic_string.h ****        *
1021:/usr/include/c++/7/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1022:/usr/include/c++/7/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1023:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1024:/usr/include/c++/7/bits/basic_string.h ****        *  see at().)
1025:/usr/include/c++/7/bits/basic_string.h ****        */
1026:/usr/include/c++/7/bits/basic_string.h ****       const_reference
1027:/usr/include/c++/7/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1028:/usr/include/c++/7/bits/basic_string.h ****       {
1029:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1030:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__pos];
1031:/usr/include/c++/7/bits/basic_string.h ****       }
1032:/usr/include/c++/7/bits/basic_string.h **** 
1033:/usr/include/c++/7/bits/basic_string.h ****       /**
1034:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1035:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1036:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1037:/usr/include/c++/7/bits/basic_string.h ****        *
1038:/usr/include/c++/7/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1039:/usr/include/c++/7/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1040:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1041:/usr/include/c++/7/bits/basic_string.h ****        *  see at().)
1042:/usr/include/c++/7/bits/basic_string.h ****        */
1043:/usr/include/c++/7/bits/basic_string.h ****       reference
1044:/usr/include/c++/7/bits/basic_string.h ****       operator[](size_type __pos)
1045:/usr/include/c++/7/bits/basic_string.h ****       {
1046:/usr/include/c++/7/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1047:/usr/include/c++/7/bits/basic_string.h **** 	// and in C++11 mode.
1048:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1049:/usr/include/c++/7/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1050:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1051:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__pos];
1052:/usr/include/c++/7/bits/basic_string.h ****       }
1053:/usr/include/c++/7/bits/basic_string.h **** 
1054:/usr/include/c++/7/bits/basic_string.h ****       /**
1055:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1056:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n The index of the character to access.
1057:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1058:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1059:/usr/include/c++/7/bits/basic_string.h ****        *
1060:/usr/include/c++/7/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1061:/usr/include/c++/7/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1062:/usr/include/c++/7/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1063:/usr/include/c++/7/bits/basic_string.h ****        */
1064:/usr/include/c++/7/bits/basic_string.h ****       const_reference
1065:/usr/include/c++/7/bits/basic_string.h ****       at(size_type __n) const
1066:/usr/include/c++/7/bits/basic_string.h ****       {
1067:/usr/include/c++/7/bits/basic_string.h **** 	if (__n >= this->size())
1068:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1069:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1070:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu)"),
1071:/usr/include/c++/7/bits/basic_string.h **** 				   __n, this->size());
1072:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__n];
1073:/usr/include/c++/7/bits/basic_string.h ****       }
1074:/usr/include/c++/7/bits/basic_string.h **** 
1075:/usr/include/c++/7/bits/basic_string.h ****       /**
1076:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1077:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n The index of the character to access.
1078:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1079:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1080:/usr/include/c++/7/bits/basic_string.h ****        *
1081:/usr/include/c++/7/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1082:/usr/include/c++/7/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1083:/usr/include/c++/7/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1084:/usr/include/c++/7/bits/basic_string.h ****        */
1085:/usr/include/c++/7/bits/basic_string.h ****       reference
1086:/usr/include/c++/7/bits/basic_string.h ****       at(size_type __n)
1087:/usr/include/c++/7/bits/basic_string.h ****       {
1088:/usr/include/c++/7/bits/basic_string.h **** 	if (__n >= size())
1089:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1090:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1091:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu)"),
1092:/usr/include/c++/7/bits/basic_string.h **** 				   __n, this->size());
1093:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__n];
1094:/usr/include/c++/7/bits/basic_string.h ****       }
1095:/usr/include/c++/7/bits/basic_string.h **** 
1096:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1097:/usr/include/c++/7/bits/basic_string.h ****       /**
1098:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1099:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
1100:/usr/include/c++/7/bits/basic_string.h ****        */
1101:/usr/include/c++/7/bits/basic_string.h ****       reference
1102:/usr/include/c++/7/bits/basic_string.h ****       front() noexcept
1103:/usr/include/c++/7/bits/basic_string.h ****       {
1104:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1105:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](0);
1106:/usr/include/c++/7/bits/basic_string.h ****       }
1107:/usr/include/c++/7/bits/basic_string.h **** 
1108:/usr/include/c++/7/bits/basic_string.h ****       /**
1109:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1110:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
1111:/usr/include/c++/7/bits/basic_string.h ****        */
1112:/usr/include/c++/7/bits/basic_string.h ****       const_reference
1113:/usr/include/c++/7/bits/basic_string.h ****       front() const noexcept
1114:/usr/include/c++/7/bits/basic_string.h ****       {
1115:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1116:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](0);
1117:/usr/include/c++/7/bits/basic_string.h ****       }
1118:/usr/include/c++/7/bits/basic_string.h **** 
1119:/usr/include/c++/7/bits/basic_string.h ****       /**
1120:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1121:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
1122:/usr/include/c++/7/bits/basic_string.h ****        */
1123:/usr/include/c++/7/bits/basic_string.h ****       reference
1124:/usr/include/c++/7/bits/basic_string.h ****       back() noexcept
1125:/usr/include/c++/7/bits/basic_string.h ****       {
1126:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1127:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](this->size() - 1);
1128:/usr/include/c++/7/bits/basic_string.h ****       }
1129:/usr/include/c++/7/bits/basic_string.h **** 
1130:/usr/include/c++/7/bits/basic_string.h ****       /**
1131:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1132:/usr/include/c++/7/bits/basic_string.h ****        *  last element of the %string.
1133:/usr/include/c++/7/bits/basic_string.h ****        */
1134:/usr/include/c++/7/bits/basic_string.h ****       const_reference
1135:/usr/include/c++/7/bits/basic_string.h ****       back() const noexcept
1136:/usr/include/c++/7/bits/basic_string.h ****       {
1137:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1138:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](this->size() - 1);
1139:/usr/include/c++/7/bits/basic_string.h ****       }
1140:/usr/include/c++/7/bits/basic_string.h **** #endif
1141:/usr/include/c++/7/bits/basic_string.h **** 
1142:/usr/include/c++/7/bits/basic_string.h ****       // Modifiers:
1143:/usr/include/c++/7/bits/basic_string.h ****       /**
1144:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string to this string.
1145:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
1146:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1147:/usr/include/c++/7/bits/basic_string.h ****        */
1148:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1149:/usr/include/c++/7/bits/basic_string.h ****       operator+=(const basic_string& __str)
1150:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__str); }
1151:/usr/include/c++/7/bits/basic_string.h **** 
1152:/usr/include/c++/7/bits/basic_string.h ****       /**
1153:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C string.
1154:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
1155:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1156:/usr/include/c++/7/bits/basic_string.h ****        */
1157:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1158:/usr/include/c++/7/bits/basic_string.h ****       operator+=(const _CharT* __s)
1159:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__s); }
1160:/usr/include/c++/7/bits/basic_string.h **** 
1161:/usr/include/c++/7/bits/basic_string.h ****       /**
1162:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a character.
1163:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to append.
1164:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1165:/usr/include/c++/7/bits/basic_string.h ****        */
1166:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1167:/usr/include/c++/7/bits/basic_string.h ****       operator+=(_CharT __c)
1168:/usr/include/c++/7/bits/basic_string.h ****       {
1169:/usr/include/c++/7/bits/basic_string.h **** 	this->push_back(__c);
1170:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
1171:/usr/include/c++/7/bits/basic_string.h ****       }
1172:/usr/include/c++/7/bits/basic_string.h **** 
1173:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1174:/usr/include/c++/7/bits/basic_string.h ****       /**
1175:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1176:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1177:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1178:/usr/include/c++/7/bits/basic_string.h ****        */
1179:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1180:/usr/include/c++/7/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1181:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1182:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1183:/usr/include/c++/7/bits/basic_string.h **** 
1184:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
1185:/usr/include/c++/7/bits/basic_string.h ****       /**
1186:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string_view.
1187:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1188:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1189:/usr/include/c++/7/bits/basic_string.h ****        */
1190:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1191:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1192:/usr/include/c++/7/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1193:/usr/include/c++/7/bits/basic_string.h **** 	{ return this->append(__svt); }
1194:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
1195:/usr/include/c++/7/bits/basic_string.h **** 
1196:/usr/include/c++/7/bits/basic_string.h ****       /**
1197:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string to this string.
1198:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
1199:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1200:/usr/include/c++/7/bits/basic_string.h ****        */
1201:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1202:/usr/include/c++/7/bits/basic_string.h ****       append(const basic_string& __str)
1203:/usr/include/c++/7/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1204:/usr/include/c++/7/bits/basic_string.h **** 
1205:/usr/include/c++/7/bits/basic_string.h ****       /**
1206:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a substring.
1207:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
1208:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1209:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1210:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1211:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1212:/usr/include/c++/7/bits/basic_string.h ****        *
1213:/usr/include/c++/7/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1214:/usr/include/c++/7/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1215:/usr/include/c++/7/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1216:/usr/include/c++/7/bits/basic_string.h ****        *  remainder of @a __str is appended.
1217:/usr/include/c++/7/bits/basic_string.h ****        */
1218:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1219:/usr/include/c++/7/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n)
1220:/usr/include/c++/7/bits/basic_string.h ****       { return _M_append(__str._M_data()
1221:/usr/include/c++/7/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1222:/usr/include/c++/7/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1223:/usr/include/c++/7/bits/basic_string.h **** 
1224:/usr/include/c++/7/bits/basic_string.h ****       /**
1225:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C substring.
1226:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
1227:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1228:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1229:/usr/include/c++/7/bits/basic_string.h ****        */
1230:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1231:/usr/include/c++/7/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1232:/usr/include/c++/7/bits/basic_string.h ****       {
1233:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1234:/usr/include/c++/7/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1235:/usr/include/c++/7/bits/basic_string.h **** 	return _M_append(__s, __n);
1236:/usr/include/c++/7/bits/basic_string.h ****       }
1237:/usr/include/c++/7/bits/basic_string.h **** 
1238:/usr/include/c++/7/bits/basic_string.h ****       /**
1239:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C string.
1240:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
1241:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1242:/usr/include/c++/7/bits/basic_string.h ****        */
1243:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1244:/usr/include/c++/7/bits/basic_string.h ****       append(const _CharT* __s)
1245:/usr/include/c++/7/bits/basic_string.h ****       {
1246:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1247:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1248:/usr/include/c++/7/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1249:/usr/include/c++/7/bits/basic_string.h **** 	return _M_append(__s, __n);
1250:/usr/include/c++/7/bits/basic_string.h ****       }
1251:/usr/include/c++/7/bits/basic_string.h **** 
1252:/usr/include/c++/7/bits/basic_string.h ****       /**
1253:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append multiple characters.
1254:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1255:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to use.
1256:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1257:/usr/include/c++/7/bits/basic_string.h ****        *
1258:/usr/include/c++/7/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1259:/usr/include/c++/7/bits/basic_string.h ****        */
1260:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1261:/usr/include/c++/7/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1262:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1263:/usr/include/c++/7/bits/basic_string.h **** 
1264:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1265:/usr/include/c++/7/bits/basic_string.h ****       /**
1266:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1267:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1268:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1269:/usr/include/c++/7/bits/basic_string.h ****        */
1270:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1271:/usr/include/c++/7/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1272:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1273:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1274:/usr/include/c++/7/bits/basic_string.h **** 
1275:/usr/include/c++/7/bits/basic_string.h ****       /**
1276:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a range of characters.
1277:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1278:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1279:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1280:/usr/include/c++/7/bits/basic_string.h ****        *
1281:/usr/include/c++/7/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1282:/usr/include/c++/7/bits/basic_string.h ****        */
1283:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1284:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator,
1285:/usr/include/c++/7/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1286:/usr/include/c++/7/bits/basic_string.h **** #else
1287:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
1288:/usr/include/c++/7/bits/basic_string.h **** #endif
1289:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
1290:/usr/include/c++/7/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1291:/usr/include/c++/7/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1292:/usr/include/c++/7/bits/basic_string.h **** 
1293:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
1294:/usr/include/c++/7/bits/basic_string.h ****       /**
1295:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string_view.
1296:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1297:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1298:/usr/include/c++/7/bits/basic_string.h ****        */
1299:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1300:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1301:/usr/include/c++/7/bits/basic_string.h ****         append(const _Tp& __svt)
1302:/usr/include/c++/7/bits/basic_string.h ****         {
1303:/usr/include/c++/7/bits/basic_string.h ****           __sv_type __sv = __svt;
1304:/usr/include/c++/7/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1305:/usr/include/c++/7/bits/basic_string.h ****         }
1306:/usr/include/c++/7/bits/basic_string.h **** 
1307:/usr/include/c++/7/bits/basic_string.h ****       /**
1308:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1309:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1310:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1311:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1312:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1313:/usr/include/c++/7/bits/basic_string.h ****        */
1314:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1315:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1316:/usr/include/c++/7/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1317:/usr/include/c++/7/bits/basic_string.h **** 	{
1318:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1319:/usr/include/c++/7/bits/basic_string.h **** 	  return _M_append(__sv.data()
1320:/usr/include/c++/7/bits/basic_string.h **** 			   + __sv._M_check(__pos, "basic_string::append"),
1321:/usr/include/c++/7/bits/basic_string.h **** 			   __sv._M_limit(__pos, __n));
1322:/usr/include/c++/7/bits/basic_string.h **** 	}
1323:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
1324:/usr/include/c++/7/bits/basic_string.h **** 
1325:/usr/include/c++/7/bits/basic_string.h ****       /**
1326:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a single character.
1327:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to append.
1328:/usr/include/c++/7/bits/basic_string.h ****        */
1329:/usr/include/c++/7/bits/basic_string.h ****       void
1330:/usr/include/c++/7/bits/basic_string.h ****       push_back(_CharT __c)
1331:/usr/include/c++/7/bits/basic_string.h ****       {
1332:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __size = this->size();
1333:/usr/include/c++/7/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1334:/usr/include/c++/7/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1335:/usr/include/c++/7/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1336:/usr/include/c++/7/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1337:/usr/include/c++/7/bits/basic_string.h ****       }
1338:/usr/include/c++/7/bits/basic_string.h **** 
1339:/usr/include/c++/7/bits/basic_string.h ****       /**
1340:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1341:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string to use.
1342:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1343:/usr/include/c++/7/bits/basic_string.h ****        */
1344:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1345:/usr/include/c++/7/bits/basic_string.h ****       assign(const basic_string& __str)
1346:/usr/include/c++/7/bits/basic_string.h ****       {
1347:/usr/include/c++/7/bits/basic_string.h **** 	this->_M_assign(__str);
1348:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
1349:/usr/include/c++/7/bits/basic_string.h ****       }
1350:/usr/include/c++/7/bits/basic_string.h **** 
1351:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1352:/usr/include/c++/7/bits/basic_string.h ****       /**
1353:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1354:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string to use.
1355:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1356:/usr/include/c++/7/bits/basic_string.h ****        *
1357:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1358:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1359:/usr/include/c++/7/bits/basic_string.h ****        */
1360:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1361:/usr/include/c++/7/bits/basic_string.h ****       assign(basic_string&& __str)
1362:/usr/include/c++/7/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1363:/usr/include/c++/7/bits/basic_string.h ****       {
1364:/usr/include/c++/7/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1365:/usr/include/c++/7/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1366:/usr/include/c++/7/bits/basic_string.h **** 	return *this = std::move(__str);
1367:/usr/include/c++/7/bits/basic_string.h ****       }
1368:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1369:/usr/include/c++/7/bits/basic_string.h **** 
1370:/usr/include/c++/7/bits/basic_string.h ****       /**
1371:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1372:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to use.
1373:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1374:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1375:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1376:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1377:/usr/include/c++/7/bits/basic_string.h ****        *
1378:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1379:/usr/include/c++/7/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1380:/usr/include/c++/7/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1381:/usr/include/c++/7/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1382:/usr/include/c++/7/bits/basic_string.h ****        */
1383:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1384:/usr/include/c++/7/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1385:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1386:/usr/include/c++/7/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1387:/usr/include/c++/7/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1388:/usr/include/c++/7/bits/basic_string.h **** 
1389:/usr/include/c++/7/bits/basic_string.h ****       /**
1390:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1391:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to use.
1392:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1393:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1394:/usr/include/c++/7/bits/basic_string.h ****        *
1395:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1396:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1397:/usr/include/c++/7/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1398:/usr/include/c++/7/bits/basic_string.h ****        */
1399:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1400:/usr/include/c++/7/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1401:/usr/include/c++/7/bits/basic_string.h ****       {
1402:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1403:/usr/include/c++/7/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1404:/usr/include/c++/7/bits/basic_string.h ****       }
1405:/usr/include/c++/7/bits/basic_string.h **** 
1406:/usr/include/c++/7/bits/basic_string.h ****       /**
1407:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1408:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to use.
1409:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1410:/usr/include/c++/7/bits/basic_string.h ****        *
1411:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1412:/usr/include/c++/7/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1413:/usr/include/c++/7/bits/basic_string.h ****        *  function returns.
1414:/usr/include/c++/7/bits/basic_string.h ****        */
1415:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1416:/usr/include/c++/7/bits/basic_string.h ****       assign(const _CharT* __s)
1417:/usr/include/c++/7/bits/basic_string.h ****       {
1418:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1419:/usr/include/c++/7/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1420:/usr/include/c++/7/bits/basic_string.h **** 			  traits_type::length(__s));
1421:/usr/include/c++/7/bits/basic_string.h ****       }
1422:/usr/include/c++/7/bits/basic_string.h **** 
1423:/usr/include/c++/7/bits/basic_string.h ****       /**
1424:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1425:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1426:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to use.
1427:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1428:/usr/include/c++/7/bits/basic_string.h ****        *
1429:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1430:/usr/include/c++/7/bits/basic_string.h ****        *  character @a __c.
1431:/usr/include/c++/7/bits/basic_string.h ****        */
1432:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1433:/usr/include/c++/7/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1434:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1435:/usr/include/c++/7/bits/basic_string.h **** 
1436:/usr/include/c++/7/bits/basic_string.h ****       /**
1437:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1438:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1439:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1440:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1441:/usr/include/c++/7/bits/basic_string.h ****        *
1442:/usr/include/c++/7/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1443:/usr/include/c++/7/bits/basic_string.h ****       */
1444:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1445:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator,
1446:/usr/include/c++/7/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1447:/usr/include/c++/7/bits/basic_string.h **** #else
1448:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
1449:/usr/include/c++/7/bits/basic_string.h **** #endif
1450:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
1451:/usr/include/c++/7/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1452:/usr/include/c++/7/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1453:/usr/include/c++/7/bits/basic_string.h **** 
1454:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1455:/usr/include/c++/7/bits/basic_string.h ****       /**
1456:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1457:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1458:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1459:/usr/include/c++/7/bits/basic_string.h ****        */
1460:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1461:/usr/include/c++/7/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1462:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1463:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1464:/usr/include/c++/7/bits/basic_string.h **** 
1465:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
1466:/usr/include/c++/7/bits/basic_string.h ****       /**
1467:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1468:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1469:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1470:/usr/include/c++/7/bits/basic_string.h ****        */
1471:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1472:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1473:/usr/include/c++/7/bits/basic_string.h **** 	assign(const _Tp& __svt)
1474:/usr/include/c++/7/bits/basic_string.h **** 	{
1475:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1476:/usr/include/c++/7/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1477:/usr/include/c++/7/bits/basic_string.h **** 	}
1478:/usr/include/c++/7/bits/basic_string.h **** 
1479:/usr/include/c++/7/bits/basic_string.h ****       /**
1480:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1481:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1482:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1483:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1484:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1485:/usr/include/c++/7/bits/basic_string.h ****        */
1486:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1487:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1488:/usr/include/c++/7/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1489:/usr/include/c++/7/bits/basic_string.h **** 	{
1490:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1491:/usr/include/c++/7/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(), __sv.data()
1492:/usr/include/c++/7/bits/basic_string.h **** 			    + __sv._M_check(__pos, "basic_string::assign"),
1493:/usr/include/c++/7/bits/basic_string.h **** 			    __sv._M_limit(__pos, __n));
1494:/usr/include/c++/7/bits/basic_string.h **** 	}
1495:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
1496:/usr/include/c++/7/bits/basic_string.h **** 
1497:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1498:/usr/include/c++/7/bits/basic_string.h ****       /**
1499:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1500:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1501:/usr/include/c++/7/bits/basic_string.h ****        *              insert at.
1502:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1503:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
1504:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1505:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1506:/usr/include/c++/7/bits/basic_string.h ****        *
1507:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1508:/usr/include/c++/7/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1509:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1510:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1511:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1512:/usr/include/c++/7/bits/basic_string.h ****       */
1513:/usr/include/c++/7/bits/basic_string.h ****       iterator
1514:/usr/include/c++/7/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1515:/usr/include/c++/7/bits/basic_string.h ****       {
1516:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1517:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1518:/usr/include/c++/7/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1519:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1520:/usr/include/c++/7/bits/basic_string.h ****       }
1521:/usr/include/c++/7/bits/basic_string.h **** #else
1522:/usr/include/c++/7/bits/basic_string.h ****       /**
1523:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1524:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1525:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1526:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
1527:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1528:/usr/include/c++/7/bits/basic_string.h ****        *
1529:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1530:/usr/include/c++/7/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1531:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1532:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1533:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1534:/usr/include/c++/7/bits/basic_string.h ****       */
1535:/usr/include/c++/7/bits/basic_string.h ****       void
1536:/usr/include/c++/7/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1537:/usr/include/c++/7/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1538:/usr/include/c++/7/bits/basic_string.h **** #endif
1539:/usr/include/c++/7/bits/basic_string.h **** 
1540:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1541:/usr/include/c++/7/bits/basic_string.h ****       /**
1542:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1543:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1544:/usr/include/c++/7/bits/basic_string.h ****        *              insert at.
1545:/usr/include/c++/7/bits/basic_string.h ****        *  @param __beg  Start of range.
1546:/usr/include/c++/7/bits/basic_string.h ****        *  @param __end  End of range.
1547:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1548:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1549:/usr/include/c++/7/bits/basic_string.h ****        *
1550:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1551:/usr/include/c++/7/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1552:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1553:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.
1554:/usr/include/c++/7/bits/basic_string.h ****       */
1555:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator,
1556:/usr/include/c++/7/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1557:/usr/include/c++/7/bits/basic_string.h **** 	iterator
1558:/usr/include/c++/7/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1559:/usr/include/c++/7/bits/basic_string.h ****         {
1560:/usr/include/c++/7/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1561:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1562:/usr/include/c++/7/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1563:/usr/include/c++/7/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1564:/usr/include/c++/7/bits/basic_string.h **** 	}
1565:/usr/include/c++/7/bits/basic_string.h **** #else
1566:/usr/include/c++/7/bits/basic_string.h ****       /**
1567:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1568:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1569:/usr/include/c++/7/bits/basic_string.h ****        *  @param __beg  Start of range.
1570:/usr/include/c++/7/bits/basic_string.h ****        *  @param __end  End of range.
1571:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1572:/usr/include/c++/7/bits/basic_string.h ****        *
1573:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1574:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1575:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1576:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1577:/usr/include/c++/7/bits/basic_string.h ****       */
1578:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
1579:/usr/include/c++/7/bits/basic_string.h ****         void
1580:/usr/include/c++/7/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1581:/usr/include/c++/7/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1582:/usr/include/c++/7/bits/basic_string.h **** #endif
1583:/usr/include/c++/7/bits/basic_string.h **** 
1584:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1585:/usr/include/c++/7/bits/basic_string.h ****       /**
1586:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1587:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1588:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1589:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1590:/usr/include/c++/7/bits/basic_string.h ****        */
1591:/usr/include/c++/7/bits/basic_string.h ****       void
1592:/usr/include/c++/7/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1593:/usr/include/c++/7/bits/basic_string.h ****       {
1594:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1595:/usr/include/c++/7/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1596:/usr/include/c++/7/bits/basic_string.h ****       }
1597:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1598:/usr/include/c++/7/bits/basic_string.h **** 
1599:/usr/include/c++/7/bits/basic_string.h ****       /**
1600:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert value of a string.
1601:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1602:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to insert.
1603:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1604:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1605:/usr/include/c++/7/bits/basic_string.h ****        *
1606:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1607:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1608:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1609:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1610:/usr/include/c++/7/bits/basic_string.h ****       */
1611:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1612:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1613:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1614:/usr/include/c++/7/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1615:/usr/include/c++/7/bits/basic_string.h **** 
1616:/usr/include/c++/7/bits/basic_string.h ****       /**
1617:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a substring.
1618:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1619:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to insert.
1620:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1621:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1622:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1623:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1624:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1625:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1626:/usr/include/c++/7/bits/basic_string.h ****        *
1627:/usr/include/c++/7/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1628:/usr/include/c++/7/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1629:/usr/include/c++/7/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1630:/usr/include/c++/7/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1631:/usr/include/c++/7/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1632:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1633:/usr/include/c++/7/bits/basic_string.h ****       */
1634:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1635:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1636:/usr/include/c++/7/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
1637:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1638:/usr/include/c++/7/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1639:/usr/include/c++/7/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1640:/usr/include/c++/7/bits/basic_string.h **** 
1641:/usr/include/c++/7/bits/basic_string.h ****       /**
1642:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a C substring.
1643:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1644:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to insert.
1645:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1646:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1647:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1648:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1649:/usr/include/c++/7/bits/basic_string.h ****        *  string.
1650:/usr/include/c++/7/bits/basic_string.h ****        *
1651:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1652:/usr/include/c++/7/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1653:/usr/include/c++/7/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1654:/usr/include/c++/7/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1655:/usr/include/c++/7/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1656:/usr/include/c++/7/bits/basic_string.h ****       */
1657:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1658:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1659:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1660:/usr/include/c++/7/bits/basic_string.h **** 
1661:/usr/include/c++/7/bits/basic_string.h ****       /**
1662:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a C string.
1663:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1664:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to insert.
1665:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1666:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1667:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1668:/usr/include/c++/7/bits/basic_string.h ****        *  string.
1669:/usr/include/c++/7/bits/basic_string.h ****        *
1670:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1671:/usr/include/c++/7/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1672:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1673:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1674:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
1675:/usr/include/c++/7/bits/basic_string.h ****       */
1676:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1677:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1678:/usr/include/c++/7/bits/basic_string.h ****       {
1679:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1680:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1681:/usr/include/c++/7/bits/basic_string.h **** 			     traits_type::length(__s));
1682:/usr/include/c++/7/bits/basic_string.h ****       }
1683:/usr/include/c++/7/bits/basic_string.h **** 
1684:/usr/include/c++/7/bits/basic_string.h ****       /**
1685:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1686:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1687:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1688:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
1689:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1690:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1691:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1692:/usr/include/c++/7/bits/basic_string.h ****        *  string.
1693:/usr/include/c++/7/bits/basic_string.h ****        *
1694:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1695:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1696:/usr/include/c++/7/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1697:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1698:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1699:/usr/include/c++/7/bits/basic_string.h ****       */
1700:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1701:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1702:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1703:/usr/include/c++/7/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1704:/usr/include/c++/7/bits/basic_string.h **** 
1705:/usr/include/c++/7/bits/basic_string.h ****       /**
1706:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert one character.
1707:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1708:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
1709:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1710:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1711:/usr/include/c++/7/bits/basic_string.h ****        *
1712:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1713:/usr/include/c++/7/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1714:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1715:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1716:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1717:/usr/include/c++/7/bits/basic_string.h ****       */
1718:/usr/include/c++/7/bits/basic_string.h ****       iterator
1719:/usr/include/c++/7/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1720:/usr/include/c++/7/bits/basic_string.h ****       {
1721:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1722:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1723:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1724:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1725:/usr/include/c++/7/bits/basic_string.h ****       }
1726:/usr/include/c++/7/bits/basic_string.h **** 
1727:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
1728:/usr/include/c++/7/bits/basic_string.h ****       /**
1729:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a string_view.
1730:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1731:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1732:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1733:/usr/include/c++/7/bits/basic_string.h ****       */
1734:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1735:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1736:/usr/include/c++/7/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1737:/usr/include/c++/7/bits/basic_string.h **** 	{
1738:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1739:/usr/include/c++/7/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1740:/usr/include/c++/7/bits/basic_string.h **** 	}
1741:/usr/include/c++/7/bits/basic_string.h **** 
1742:/usr/include/c++/7/bits/basic_string.h ****       /**
1743:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a string_view.
1744:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1745:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
1746:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
1747:/usr/include/c++/7/bits/basic_string.h ****        *  from.
1748:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1749:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1750:/usr/include/c++/7/bits/basic_string.h ****       */
1751:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
1752:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1753:/usr/include/c++/7/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1754:/usr/include/c++/7/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1755:/usr/include/c++/7/bits/basic_string.h **** 	{
1756:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1757:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
1758:/usr/include/c++/7/bits/basic_string.h **** 			       + __sv._M_check(__pos2, "basic_string::insert"),
1759:/usr/include/c++/7/bits/basic_string.h **** 			       __sv._M_limit(__pos2, __n));
1760:/usr/include/c++/7/bits/basic_string.h **** 	}
1761:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
1762:/usr/include/c++/7/bits/basic_string.h **** 
1763:/usr/include/c++/7/bits/basic_string.h ****       /**
1764:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove characters.
1765:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1766:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1767:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1768:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1769:/usr/include/c++/7/bits/basic_string.h ****        *  string.
1770:/usr/include/c++/7/bits/basic_string.h ****        *
1771:/usr/include/c++/7/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1772:/usr/include/c++/7/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1773:/usr/include/c++/7/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1774:/usr/include/c++/7/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1775:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1776:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1777:/usr/include/c++/7/bits/basic_string.h ****       */
1778:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1779:/usr/include/c++/7/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1780:/usr/include/c++/7/bits/basic_string.h ****       {
1781:/usr/include/c++/7/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1782:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == npos)
1783:/usr/include/c++/7/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1784:/usr/include/c++/7/bits/basic_string.h **** 	else if (__n != 0)
1785:/usr/include/c++/7/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1786:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
1787:/usr/include/c++/7/bits/basic_string.h ****       }
1788:/usr/include/c++/7/bits/basic_string.h **** 
1789:/usr/include/c++/7/bits/basic_string.h ****       /**
1790:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove one character.
1791:/usr/include/c++/7/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1792:/usr/include/c++/7/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1793:/usr/include/c++/7/bits/basic_string.h ****        *
1794:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1795:/usr/include/c++/7/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1796:/usr/include/c++/7/bits/basic_string.h ****       */
1797:/usr/include/c++/7/bits/basic_string.h ****       iterator
1798:/usr/include/c++/7/bits/basic_string.h ****       erase(__const_iterator __position)
1799:/usr/include/c++/7/bits/basic_string.h ****       {
1800:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1801:/usr/include/c++/7/bits/basic_string.h **** 				 && __position < end());
1802:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1803:/usr/include/c++/7/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1804:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1805:/usr/include/c++/7/bits/basic_string.h ****       }
1806:/usr/include/c++/7/bits/basic_string.h **** 
1807:/usr/include/c++/7/bits/basic_string.h ****       /**
1808:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1809:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1810:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1811:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1812:/usr/include/c++/7/bits/basic_string.h ****        *
1813:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1814:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1815:/usr/include/c++/7/bits/basic_string.h ****       */
1816:/usr/include/c++/7/bits/basic_string.h ****       iterator
1817:/usr/include/c++/7/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1818:/usr/include/c++/7/bits/basic_string.h ****       {
1819:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1820:/usr/include/c++/7/bits/basic_string.h **** 				 && __last <= end());
1821:/usr/include/c++/7/bits/basic_string.h ****         const size_type __pos = __first - begin();
1822:/usr/include/c++/7/bits/basic_string.h **** 	if (__last == end())
1823:/usr/include/c++/7/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1824:/usr/include/c++/7/bits/basic_string.h **** 	else
1825:/usr/include/c++/7/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1826:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1827:/usr/include/c++/7/bits/basic_string.h ****       }
1828:/usr/include/c++/7/bits/basic_string.h **** 
1829:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
1830:/usr/include/c++/7/bits/basic_string.h ****       /**
1831:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove the last character.
1832:/usr/include/c++/7/bits/basic_string.h ****        *
1833:/usr/include/c++/7/bits/basic_string.h ****        *  The string must be non-empty.
1834:/usr/include/c++/7/bits/basic_string.h ****        */
1835:/usr/include/c++/7/bits/basic_string.h ****       void
1836:/usr/include/c++/7/bits/basic_string.h ****       pop_back() noexcept
1837:/usr/include/c++/7/bits/basic_string.h ****       {
1838:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1839:/usr/include/c++/7/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1840:/usr/include/c++/7/bits/basic_string.h ****       }
1841:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
1842:/usr/include/c++/7/bits/basic_string.h **** 
1843:/usr/include/c++/7/bits/basic_string.h ****       /**
1844:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1845:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1846:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1847:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to insert.
1848:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1849:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1850:/usr/include/c++/7/bits/basic_string.h ****        *  string.
1851:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1852:/usr/include/c++/7/bits/basic_string.h ****        *
1853:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1854:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1855:/usr/include/c++/7/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1856:/usr/include/c++/7/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1857:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1858:/usr/include/c++/7/bits/basic_string.h ****        *  error is thrown.
1859:/usr/include/c++/7/bits/basic_string.h ****       */
1860:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1861:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1862:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1863:/usr/include/c++/7/bits/basic_string.h **** 
1864:/usr/include/c++/7/bits/basic_string.h ****       /**
1865:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1866:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1867:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1868:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to insert.
1869:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1870:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1871:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1872:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1873:/usr/include/c++/7/bits/basic_string.h ****        *  __str.size().
1874:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1875:/usr/include/c++/7/bits/basic_string.h ****        *
1876:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1877:/usr/include/c++/7/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1878:/usr/include/c++/7/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1879:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1880:/usr/include/c++/7/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1881:/usr/include/c++/7/bits/basic_string.h ****       */
1882:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1883:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1884:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
1885:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1886:/usr/include/c++/7/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1887:/usr/include/c++/7/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1888:/usr/include/c++/7/bits/basic_string.h **** 
1889:/usr/include/c++/7/bits/basic_string.h ****       /**
1890:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1891:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1892:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1893:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to insert.
1894:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1895:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1896:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1897:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1898:/usr/include/c++/7/bits/basic_string.h ****        *
1899:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1900:/usr/include/c++/7/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1901:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1902:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1903:/usr/include/c++/7/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1904:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1905:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.
1906:/usr/include/c++/7/bits/basic_string.h ****       */
1907:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1908:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1909:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __n2)
1910:/usr/include/c++/7/bits/basic_string.h ****       {
1911:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1912:/usr/include/c++/7/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1913:/usr/include/c++/7/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1914:/usr/include/c++/7/bits/basic_string.h ****       }
1915:/usr/include/c++/7/bits/basic_string.h **** 
1916:/usr/include/c++/7/bits/basic_string.h ****       /**
1917:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1918:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1919:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1920:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to insert.
1921:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1922:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1923:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1924:/usr/include/c++/7/bits/basic_string.h ****        *
1925:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1926:/usr/include/c++/7/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1927:/usr/include/c++/7/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1928:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1929:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1930:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
1931:/usr/include/c++/7/bits/basic_string.h ****       */
1932:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1933:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1934:/usr/include/c++/7/bits/basic_string.h ****       {
1935:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1936:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1937:/usr/include/c++/7/bits/basic_string.h ****       }
1938:/usr/include/c++/7/bits/basic_string.h **** 
1939:/usr/include/c++/7/bits/basic_string.h ****       /**
1940:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1941:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1942:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1943:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1944:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to insert.
1945:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1946:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1947:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1948:/usr/include/c++/7/bits/basic_string.h ****        *
1949:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1950:/usr/include/c++/7/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1951:/usr/include/c++/7/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1952:/usr/include/c++/7/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1953:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1954:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.
1955:/usr/include/c++/7/bits/basic_string.h ****       */
1956:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1957:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1958:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1959:/usr/include/c++/7/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1960:/usr/include/c++/7/bits/basic_string.h **** 
1961:/usr/include/c++/7/bits/basic_string.h ****       /**
1962:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1963:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1964:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1965:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String value to insert.
1966:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1967:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1968:/usr/include/c++/7/bits/basic_string.h ****        *
1969:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1970:/usr/include/c++/7/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1971:/usr/include/c++/7/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1972:/usr/include/c++/7/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
1973:/usr/include/c++/7/bits/basic_string.h ****       */
1974:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1975:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1976:/usr/include/c++/7/bits/basic_string.h **** 	      const basic_string& __str)
1977:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
1978:/usr/include/c++/7/bits/basic_string.h **** 
1979:/usr/include/c++/7/bits/basic_string.h ****       /**
1980:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
1981:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1982:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1983:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string value to insert.
1984:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
1985:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
1986:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1987:/usr/include/c++/7/bits/basic_string.h ****        *
1988:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1989:/usr/include/c++/7/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1990:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1991:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1992:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
1993:/usr/include/c++/7/bits/basic_string.h ****       */
1994:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
1995:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1996:/usr/include/c++/7/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
1997:/usr/include/c++/7/bits/basic_string.h ****       {
1998:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1999:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2000:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2001:/usr/include/c++/7/bits/basic_string.h ****       }
2002:/usr/include/c++/7/bits/basic_string.h **** 
2003:/usr/include/c++/7/bits/basic_string.h ****       /**
2004:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2005:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2006:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2007:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string value to insert.
2008:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2009:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2010:/usr/include/c++/7/bits/basic_string.h ****        *
2011:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2012:/usr/include/c++/7/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2013:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2014:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2015:/usr/include/c++/7/bits/basic_string.h ****       */
2016:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2017:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2018:/usr/include/c++/7/bits/basic_string.h ****       {
2019:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2020:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2021:/usr/include/c++/7/bits/basic_string.h ****       }
2022:/usr/include/c++/7/bits/basic_string.h **** 
2023:/usr/include/c++/7/bits/basic_string.h ****       /**
2024:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2025:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2026:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2027:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2028:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to insert.
2029:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2030:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2031:/usr/include/c++/7/bits/basic_string.h ****        *
2032:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2033:/usr/include/c++/7/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2034:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2035:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2036:/usr/include/c++/7/bits/basic_string.h ****       */
2037:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2038:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2039:/usr/include/c++/7/bits/basic_string.h **** 	      _CharT __c)
2040:/usr/include/c++/7/bits/basic_string.h ****       {
2041:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2042:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2043:/usr/include/c++/7/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2044:/usr/include/c++/7/bits/basic_string.h ****       }
2045:/usr/include/c++/7/bits/basic_string.h **** 
2046:/usr/include/c++/7/bits/basic_string.h ****       /**
2047:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2048:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2049:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2050:/usr/include/c++/7/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2051:/usr/include/c++/7/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2052:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2053:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2054:/usr/include/c++/7/bits/basic_string.h ****        *
2055:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2056:/usr/include/c++/7/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2057:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2058:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2059:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
2060:/usr/include/c++/7/bits/basic_string.h ****       */
2061:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
2062:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator,
2063:/usr/include/c++/7/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2064:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
2065:/usr/include/c++/7/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2066:/usr/include/c++/7/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2067:/usr/include/c++/7/bits/basic_string.h ****         {
2068:/usr/include/c++/7/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2069:/usr/include/c++/7/bits/basic_string.h **** 				   && __i2 <= end());
2070:/usr/include/c++/7/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2071:/usr/include/c++/7/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2072:/usr/include/c++/7/bits/basic_string.h **** 					   std::__false_type());
2073:/usr/include/c++/7/bits/basic_string.h **** 	}
2074:/usr/include/c++/7/bits/basic_string.h **** #else
2075:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
2076:/usr/include/c++/7/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2077:/usr/include/c++/7/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2078:/usr/include/c++/7/bits/basic_string.h **** #else
2079:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
2080:/usr/include/c++/7/bits/basic_string.h **** #endif
2081:/usr/include/c++/7/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2082:/usr/include/c++/7/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2083:/usr/include/c++/7/bits/basic_string.h ****         {
2084:/usr/include/c++/7/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2085:/usr/include/c++/7/bits/basic_string.h **** 				   && __i2 <= end());
2086:/usr/include/c++/7/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2087:/usr/include/c++/7/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2088:/usr/include/c++/7/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2089:/usr/include/c++/7/bits/basic_string.h **** 	}
2090:/usr/include/c++/7/bits/basic_string.h **** #endif
2091:/usr/include/c++/7/bits/basic_string.h **** 
2092:/usr/include/c++/7/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2093:/usr/include/c++/7/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2094:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2095:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2096:/usr/include/c++/7/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2097:/usr/include/c++/7/bits/basic_string.h ****       {
2098:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2099:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2100:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2101:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2102:/usr/include/c++/7/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2103:/usr/include/c++/7/bits/basic_string.h ****       }
2104:/usr/include/c++/7/bits/basic_string.h **** 
2105:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2106:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2107:/usr/include/c++/7/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2108:/usr/include/c++/7/bits/basic_string.h ****       {
2109:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2110:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2111:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2112:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2113:/usr/include/c++/7/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2114:/usr/include/c++/7/bits/basic_string.h ****       }
2115:/usr/include/c++/7/bits/basic_string.h **** 
2116:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2117:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2118:/usr/include/c++/7/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2119:/usr/include/c++/7/bits/basic_string.h ****       {
2120:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2121:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2122:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2123:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2124:/usr/include/c++/7/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2125:/usr/include/c++/7/bits/basic_string.h ****       }
2126:/usr/include/c++/7/bits/basic_string.h **** 
2127:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2128:/usr/include/c++/7/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2129:/usr/include/c++/7/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2130:/usr/include/c++/7/bits/basic_string.h ****       {
2131:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2132:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= end());
2133:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2134:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2135:/usr/include/c++/7/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2136:/usr/include/c++/7/bits/basic_string.h ****       }
2137:/usr/include/c++/7/bits/basic_string.h **** 
2138:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
2139:/usr/include/c++/7/bits/basic_string.h ****       /**
2140:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2141:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2142:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2143:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2144:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2145:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2146:/usr/include/c++/7/bits/basic_string.h ****        *
2147:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2148:/usr/include/c++/7/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2149:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2150:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2151:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
2152:/usr/include/c++/7/bits/basic_string.h ****       */
2153:/usr/include/c++/7/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2154:/usr/include/c++/7/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2155:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2156:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
2157:/usr/include/c++/7/bits/basic_string.h **** 
2158:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2159:/usr/include/c++/7/bits/basic_string.h ****       /**
2160:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2161:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2162:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2163:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2164:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2165:/usr/include/c++/7/bits/basic_string.h ****       */
2166:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2167:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2168:/usr/include/c++/7/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2169:/usr/include/c++/7/bits/basic_string.h **** 	{
2170:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2171:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2172:/usr/include/c++/7/bits/basic_string.h **** 	}
2173:/usr/include/c++/7/bits/basic_string.h **** 
2174:/usr/include/c++/7/bits/basic_string.h ****       /**
2175:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2176:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2177:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2178:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2179:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2180:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2181:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2182:/usr/include/c++/7/bits/basic_string.h ****       */
2183:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2184:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2185:/usr/include/c++/7/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2186:/usr/include/c++/7/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2187:/usr/include/c++/7/bits/basic_string.h **** 	{
2188:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2189:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos1, __n1, __sv.data()
2190:/usr/include/c++/7/bits/basic_string.h **** 			       + __sv._M_check(__pos2, "basic_string::replace"),
2191:/usr/include/c++/7/bits/basic_string.h **** 			       __sv._M_limit(__pos2, __n2));
2192:/usr/include/c++/7/bits/basic_string.h **** 	}
2193:/usr/include/c++/7/bits/basic_string.h **** 
2194:/usr/include/c++/7/bits/basic_string.h ****       /**
2195:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2196:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2197:/usr/include/c++/7/bits/basic_string.h ****           to replace at.
2198:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2199:/usr/include/c++/7/bits/basic_string.h ****           for the replace.
2200:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2201:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
2202:/usr/include/c++/7/bits/basic_string.h ****       */
2203:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2204:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2205:/usr/include/c++/7/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2206:/usr/include/c++/7/bits/basic_string.h **** 	{
2207:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2208:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2209:/usr/include/c++/7/bits/basic_string.h **** 	}
2210:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2211:/usr/include/c++/7/bits/basic_string.h **** 
2212:/usr/include/c++/7/bits/basic_string.h ****     private:
2213:/usr/include/c++/7/bits/basic_string.h ****       template<class _Integer>
2214:/usr/include/c++/7/bits/basic_string.h **** 	basic_string&
2215:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2216:/usr/include/c++/7/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2217:/usr/include/c++/7/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2218:/usr/include/c++/7/bits/basic_string.h **** 
2219:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
2220:/usr/include/c++/7/bits/basic_string.h **** 	basic_string&
2221:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2222:/usr/include/c++/7/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2223:/usr/include/c++/7/bits/basic_string.h **** 			    __false_type);
2224:/usr/include/c++/7/bits/basic_string.h **** 
2225:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2226:/usr/include/c++/7/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2227:/usr/include/c++/7/bits/basic_string.h **** 		     _CharT __c);
2228:/usr/include/c++/7/bits/basic_string.h **** 
2229:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2230:/usr/include/c++/7/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2231:/usr/include/c++/7/bits/basic_string.h **** 		 const size_type __len2);
2232:/usr/include/c++/7/bits/basic_string.h **** 
2233:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
2234:/usr/include/c++/7/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2235:/usr/include/c++/7/bits/basic_string.h **** 
2236:/usr/include/c++/7/bits/basic_string.h ****     public:
2237:/usr/include/c++/7/bits/basic_string.h **** 
2238:/usr/include/c++/7/bits/basic_string.h ****       /**
2239:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2240:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2241:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2242:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2243:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Number of characters actually copied
2244:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2245:/usr/include/c++/7/bits/basic_string.h ****        *
2246:/usr/include/c++/7/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2247:/usr/include/c++/7/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2248:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.
2249:/usr/include/c++/7/bits/basic_string.h ****       */
2250:/usr/include/c++/7/bits/basic_string.h ****       size_type
2251:/usr/include/c++/7/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2252:/usr/include/c++/7/bits/basic_string.h **** 
2253:/usr/include/c++/7/bits/basic_string.h ****       /**
2254:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2255:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String to swap with.
2256:/usr/include/c++/7/bits/basic_string.h ****        *
2257:/usr/include/c++/7/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2258:/usr/include/c++/7/bits/basic_string.h ****        *  time.
2259:/usr/include/c++/7/bits/basic_string.h ****       */
2260:/usr/include/c++/7/bits/basic_string.h ****       void
2261:/usr/include/c++/7/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2262:/usr/include/c++/7/bits/basic_string.h **** 
2263:/usr/include/c++/7/bits/basic_string.h ****       // String operations:
2264:/usr/include/c++/7/bits/basic_string.h ****       /**
2265:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2266:/usr/include/c++/7/bits/basic_string.h ****        *
2267:/usr/include/c++/7/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2268:/usr/include/c++/7/bits/basic_string.h ****        *  happen.
2269:/usr/include/c++/7/bits/basic_string.h ****       */
2270:/usr/include/c++/7/bits/basic_string.h ****       const _CharT*
2271:/usr/include/c++/7/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2272:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
2273:/usr/include/c++/7/bits/basic_string.h **** 
2274:/usr/include/c++/7/bits/basic_string.h ****       /**
2275:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2276:/usr/include/c++/7/bits/basic_string.h ****        *
2277:/usr/include/c++/7/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2278:/usr/include/c++/7/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2279:/usr/include/c++/7/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2280:/usr/include/c++/7/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2281:/usr/include/c++/7/bits/basic_string.h ****       */
2282:/usr/include/c++/7/bits/basic_string.h ****       const _CharT*
2283:/usr/include/c++/7/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2284:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
2285:/usr/include/c++/7/bits/basic_string.h **** 
2286:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2287:/usr/include/c++/7/bits/basic_string.h ****       /**
2288:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2289:/usr/include/c++/7/bits/basic_string.h ****        *
2290:/usr/include/c++/7/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2291:/usr/include/c++/7/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2292:/usr/include/c++/7/bits/basic_string.h ****       */
2293:/usr/include/c++/7/bits/basic_string.h ****       _CharT*
2294:/usr/include/c++/7/bits/basic_string.h ****       data() noexcept
2295:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
2296:/usr/include/c++/7/bits/basic_string.h **** #endif
2297:/usr/include/c++/7/bits/basic_string.h **** 
2298:/usr/include/c++/7/bits/basic_string.h ****       /**
2299:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2300:/usr/include/c++/7/bits/basic_string.h ****       */
2301:/usr/include/c++/7/bits/basic_string.h ****       allocator_type
2302:/usr/include/c++/7/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2303:/usr/include/c++/7/bits/basic_string.h ****       { return _M_get_allocator(); }
2304:/usr/include/c++/7/bits/basic_string.h **** 
2305:/usr/include/c++/7/bits/basic_string.h ****       /**
2306:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2307:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
2308:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2309:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2310:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2311:/usr/include/c++/7/bits/basic_string.h ****        *
2312:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2313:/usr/include/c++/7/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2314:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2315:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2316:/usr/include/c++/7/bits/basic_string.h ****       */
2317:/usr/include/c++/7/bits/basic_string.h ****       size_type
2318:/usr/include/c++/7/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2319:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2320:/usr/include/c++/7/bits/basic_string.h **** 
2321:/usr/include/c++/7/bits/basic_string.h ****       /**
2322:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a string.
2323:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to locate.
2324:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2325:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2326:/usr/include/c++/7/bits/basic_string.h ****        *
2327:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2328:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2329:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns npos.
2330:/usr/include/c++/7/bits/basic_string.h ****       */
2331:/usr/include/c++/7/bits/basic_string.h ****       size_type
2332:/usr/include/c++/7/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2333:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2334:/usr/include/c++/7/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2335:/usr/include/c++/7/bits/basic_string.h **** 
2336:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2337:/usr/include/c++/7/bits/basic_string.h ****       /**
2338:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2339:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2340:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2341:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2342:/usr/include/c++/7/bits/basic_string.h ****       */
2343:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2344:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2345:/usr/include/c++/7/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2346:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2347:/usr/include/c++/7/bits/basic_string.h **** 	{
2348:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2349:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2350:/usr/include/c++/7/bits/basic_string.h **** 	}
2351:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2352:/usr/include/c++/7/bits/basic_string.h **** 
2353:/usr/include/c++/7/bits/basic_string.h ****       /**
2354:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a C string.
2355:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
2356:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2357:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2358:/usr/include/c++/7/bits/basic_string.h ****        *
2359:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2360:/usr/include/c++/7/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2361:/usr/include/c++/7/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2362:/usr/include/c++/7/bits/basic_string.h ****       */
2363:/usr/include/c++/7/bits/basic_string.h ****       size_type
2364:/usr/include/c++/7/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2365:/usr/include/c++/7/bits/basic_string.h ****       {
2366:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2367:/usr/include/c++/7/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2368:/usr/include/c++/7/bits/basic_string.h ****       }
2369:/usr/include/c++/7/bits/basic_string.h **** 
2370:/usr/include/c++/7/bits/basic_string.h ****       /**
2371:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character.
2372:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
2373:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2374:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2375:/usr/include/c++/7/bits/basic_string.h ****        *
2376:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2377:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2378:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
2379:/usr/include/c++/7/bits/basic_string.h ****       */
2380:/usr/include/c++/7/bits/basic_string.h ****       size_type
2381:/usr/include/c++/7/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2382:/usr/include/c++/7/bits/basic_string.h **** 
2383:/usr/include/c++/7/bits/basic_string.h ****       /**
2384:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a string.
2385:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to locate.
2386:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2387:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2388:/usr/include/c++/7/bits/basic_string.h ****        *
2389:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2390:/usr/include/c++/7/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2391:/usr/include/c++/7/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2392:/usr/include/c++/7/bits/basic_string.h ****       */
2393:/usr/include/c++/7/bits/basic_string.h ****       size_type
2394:/usr/include/c++/7/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2395:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2396:/usr/include/c++/7/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2397:/usr/include/c++/7/bits/basic_string.h **** 
2398:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2399:/usr/include/c++/7/bits/basic_string.h ****       /**
2400:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2401:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2402:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2403:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2404:/usr/include/c++/7/bits/basic_string.h ****       */
2405:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2406:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2407:/usr/include/c++/7/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2408:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2409:/usr/include/c++/7/bits/basic_string.h **** 	{
2410:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2411:/usr/include/c++/7/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2412:/usr/include/c++/7/bits/basic_string.h **** 	}
2413:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2414:/usr/include/c++/7/bits/basic_string.h **** 
2415:/usr/include/c++/7/bits/basic_string.h ****       /**
2416:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2417:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
2418:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2419:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2420:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2421:/usr/include/c++/7/bits/basic_string.h ****        *
2422:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2423:/usr/include/c++/7/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2424:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2425:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2426:/usr/include/c++/7/bits/basic_string.h ****       */
2427:/usr/include/c++/7/bits/basic_string.h ****       size_type
2428:/usr/include/c++/7/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2429:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2430:/usr/include/c++/7/bits/basic_string.h **** 
2431:/usr/include/c++/7/bits/basic_string.h ****       /**
2432:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2433:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
2434:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2435:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2436:/usr/include/c++/7/bits/basic_string.h ****        *
2437:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2438:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2439:/usr/include/c++/7/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2440:/usr/include/c++/7/bits/basic_string.h ****       */
2441:/usr/include/c++/7/bits/basic_string.h ****       size_type
2442:/usr/include/c++/7/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2443:/usr/include/c++/7/bits/basic_string.h ****       {
2444:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2445:/usr/include/c++/7/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2446:/usr/include/c++/7/bits/basic_string.h ****       }
2447:/usr/include/c++/7/bits/basic_string.h **** 
2448:/usr/include/c++/7/bits/basic_string.h ****       /**
2449:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character.
2450:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
2451:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2452:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2453:/usr/include/c++/7/bits/basic_string.h ****        *
2454:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2455:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2456:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
2457:/usr/include/c++/7/bits/basic_string.h ****       */
2458:/usr/include/c++/7/bits/basic_string.h ****       size_type
2459:/usr/include/c++/7/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2460:/usr/include/c++/7/bits/basic_string.h **** 
2461:/usr/include/c++/7/bits/basic_string.h ****       /**
2462:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2463:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2464:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2465:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2466:/usr/include/c++/7/bits/basic_string.h ****        *
2467:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2468:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2469:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2470:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2471:/usr/include/c++/7/bits/basic_string.h ****       */
2472:/usr/include/c++/7/bits/basic_string.h ****       size_type
2473:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2474:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2475:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2476:/usr/include/c++/7/bits/basic_string.h **** 
2477:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2478:/usr/include/c++/7/bits/basic_string.h ****       /**
2479:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2480:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2481:/usr/include/c++/7/bits/basic_string.h ****        *                characters to locate.
2482:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2483:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2484:/usr/include/c++/7/bits/basic_string.h ****       */
2485:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2486:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2487:/usr/include/c++/7/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2488:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2489:/usr/include/c++/7/bits/basic_string.h **** 	{
2490:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2491:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2492:/usr/include/c++/7/bits/basic_string.h **** 	}
2493:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2494:/usr/include/c++/7/bits/basic_string.h **** 
2495:/usr/include/c++/7/bits/basic_string.h ****       /**
2496:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2497:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2498:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2499:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2500:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2501:/usr/include/c++/7/bits/basic_string.h ****        *
2502:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2503:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2504:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2505:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
2506:/usr/include/c++/7/bits/basic_string.h ****       */
2507:/usr/include/c++/7/bits/basic_string.h ****       size_type
2508:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2509:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2510:/usr/include/c++/7/bits/basic_string.h **** 
2511:/usr/include/c++/7/bits/basic_string.h ****       /**
2512:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2513:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2514:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2515:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2516:/usr/include/c++/7/bits/basic_string.h ****        *
2517:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2518:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2519:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2520:/usr/include/c++/7/bits/basic_string.h ****       */
2521:/usr/include/c++/7/bits/basic_string.h ****       size_type
2522:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2523:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2524:/usr/include/c++/7/bits/basic_string.h ****       {
2525:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2526:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2527:/usr/include/c++/7/bits/basic_string.h ****       }
2528:/usr/include/c++/7/bits/basic_string.h **** 
2529:/usr/include/c++/7/bits/basic_string.h ****       /**
2530:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character.
2531:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
2532:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2533:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2534:/usr/include/c++/7/bits/basic_string.h ****        *
2535:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2536:/usr/include/c++/7/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2537:/usr/include/c++/7/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2538:/usr/include/c++/7/bits/basic_string.h ****        *
2539:/usr/include/c++/7/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2540:/usr/include/c++/7/bits/basic_string.h ****       */
2541:/usr/include/c++/7/bits/basic_string.h ****       size_type
2542:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2543:/usr/include/c++/7/bits/basic_string.h ****       { return this->find(__c, __pos); }
2544:/usr/include/c++/7/bits/basic_string.h **** 
2545:/usr/include/c++/7/bits/basic_string.h ****       /**
2546:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2547:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2548:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2549:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2550:/usr/include/c++/7/bits/basic_string.h ****        *
2551:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2552:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2553:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2554:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2555:/usr/include/c++/7/bits/basic_string.h ****       */
2556:/usr/include/c++/7/bits/basic_string.h ****       size_type
2557:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2558:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2559:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2560:/usr/include/c++/7/bits/basic_string.h **** 
2561:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2562:/usr/include/c++/7/bits/basic_string.h ****       /**
2563:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2564:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2565:/usr/include/c++/7/bits/basic_string.h ****        *                characters to locate.
2566:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2567:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2568:/usr/include/c++/7/bits/basic_string.h ****       */
2569:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2570:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2571:/usr/include/c++/7/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2572:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2573:/usr/include/c++/7/bits/basic_string.h **** 	{
2574:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2575:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2576:/usr/include/c++/7/bits/basic_string.h **** 	}
2577:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2578:/usr/include/c++/7/bits/basic_string.h **** 
2579:/usr/include/c++/7/bits/basic_string.h ****       /**
2580:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2581:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2582:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2583:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2584:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2585:/usr/include/c++/7/bits/basic_string.h ****        *
2586:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2587:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2588:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2589:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
2590:/usr/include/c++/7/bits/basic_string.h ****       */
2591:/usr/include/c++/7/bits/basic_string.h ****       size_type
2592:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2593:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2594:/usr/include/c++/7/bits/basic_string.h **** 
2595:/usr/include/c++/7/bits/basic_string.h ****       /**
2596:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2597:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2598:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2599:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2600:/usr/include/c++/7/bits/basic_string.h ****        *
2601:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2602:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2603:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2604:/usr/include/c++/7/bits/basic_string.h ****       */
2605:/usr/include/c++/7/bits/basic_string.h ****       size_type
2606:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2607:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2608:/usr/include/c++/7/bits/basic_string.h ****       {
2609:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2610:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2611:/usr/include/c++/7/bits/basic_string.h ****       }
2612:/usr/include/c++/7/bits/basic_string.h **** 
2613:/usr/include/c++/7/bits/basic_string.h ****       /**
2614:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character.
2615:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
2616:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2617:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2618:/usr/include/c++/7/bits/basic_string.h ****        *
2619:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2620:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2621:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
2622:/usr/include/c++/7/bits/basic_string.h ****        *
2623:/usr/include/c++/7/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2624:/usr/include/c++/7/bits/basic_string.h ****       */
2625:/usr/include/c++/7/bits/basic_string.h ****       size_type
2626:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2627:/usr/include/c++/7/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2628:/usr/include/c++/7/bits/basic_string.h **** 
2629:/usr/include/c++/7/bits/basic_string.h ****       /**
2630:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2631:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2632:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2633:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2634:/usr/include/c++/7/bits/basic_string.h ****        *
2635:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2636:/usr/include/c++/7/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2637:/usr/include/c++/7/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2638:/usr/include/c++/7/bits/basic_string.h ****       */
2639:/usr/include/c++/7/bits/basic_string.h ****       size_type
2640:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2641:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2642:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2643:/usr/include/c++/7/bits/basic_string.h **** 
2644:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2645:/usr/include/c++/7/bits/basic_string.h ****       /**
2646:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2647:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2648:/usr/include/c++/7/bits/basic_string.h ****        *                characters to avoid.
2649:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2650:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2651:/usr/include/c++/7/bits/basic_string.h ****        */
2652:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2653:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2654:/usr/include/c++/7/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2655:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2656:/usr/include/c++/7/bits/basic_string.h **** 	{
2657:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2658:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2659:/usr/include/c++/7/bits/basic_string.h **** 	}
2660:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2661:/usr/include/c++/7/bits/basic_string.h **** 
2662:/usr/include/c++/7/bits/basic_string.h ****       /**
2663:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2664:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2665:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2666:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2667:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2668:/usr/include/c++/7/bits/basic_string.h ****        *
2669:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2670:/usr/include/c++/7/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2671:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2672:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
2673:/usr/include/c++/7/bits/basic_string.h ****       */
2674:/usr/include/c++/7/bits/basic_string.h ****       size_type
2675:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2676:/usr/include/c++/7/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2677:/usr/include/c++/7/bits/basic_string.h **** 
2678:/usr/include/c++/7/bits/basic_string.h ****       /**
2679:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2680:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2681:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2682:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2683:/usr/include/c++/7/bits/basic_string.h ****        *
2684:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2685:/usr/include/c++/7/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2686:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2687:/usr/include/c++/7/bits/basic_string.h ****       */
2688:/usr/include/c++/7/bits/basic_string.h ****       size_type
2689:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2690:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2691:/usr/include/c++/7/bits/basic_string.h ****       {
2692:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2693:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2694:/usr/include/c++/7/bits/basic_string.h ****       }
2695:/usr/include/c++/7/bits/basic_string.h **** 
2696:/usr/include/c++/7/bits/basic_string.h ****       /**
2697:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a different character.
2698:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to avoid.
2699:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2700:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
2701:/usr/include/c++/7/bits/basic_string.h ****        *
2702:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2703:/usr/include/c++/7/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2704:/usr/include/c++/7/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2705:/usr/include/c++/7/bits/basic_string.h ****       */
2706:/usr/include/c++/7/bits/basic_string.h ****       size_type
2707:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2708:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2709:/usr/include/c++/7/bits/basic_string.h **** 
2710:/usr/include/c++/7/bits/basic_string.h ****       /**
2711:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2712:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2713:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2714:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2715:/usr/include/c++/7/bits/basic_string.h ****        *
2716:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2717:/usr/include/c++/7/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2718:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2719:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2720:/usr/include/c++/7/bits/basic_string.h ****       */
2721:/usr/include/c++/7/bits/basic_string.h ****       size_type
2722:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2723:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2724:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2725:/usr/include/c++/7/bits/basic_string.h **** 
2726:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2727:/usr/include/c++/7/bits/basic_string.h ****       /**
2728:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2729:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2730:/usr/include/c++/7/bits/basic_string.h ****        *                characters to avoid.
2731:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2732:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2733:/usr/include/c++/7/bits/basic_string.h ****        */
2734:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2735:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2736:/usr/include/c++/7/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2737:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2738:/usr/include/c++/7/bits/basic_string.h **** 	{
2739:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2740:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2741:/usr/include/c++/7/bits/basic_string.h **** 	}
2742:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2743:/usr/include/c++/7/bits/basic_string.h **** 
2744:/usr/include/c++/7/bits/basic_string.h ****       /**
2745:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2746:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2747:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2748:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2749:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2750:/usr/include/c++/7/bits/basic_string.h ****        *
2751:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2752:/usr/include/c++/7/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2753:/usr/include/c++/7/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2754:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
2755:/usr/include/c++/7/bits/basic_string.h ****       */
2756:/usr/include/c++/7/bits/basic_string.h ****       size_type
2757:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2758:/usr/include/c++/7/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2759:/usr/include/c++/7/bits/basic_string.h ****       /**
2760:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2761:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2762:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2763:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2764:/usr/include/c++/7/bits/basic_string.h ****        *
2765:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2766:/usr/include/c++/7/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2767:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2768:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
2769:/usr/include/c++/7/bits/basic_string.h ****       */
2770:/usr/include/c++/7/bits/basic_string.h ****       size_type
2771:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2772:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2773:/usr/include/c++/7/bits/basic_string.h ****       {
2774:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2775:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2776:/usr/include/c++/7/bits/basic_string.h ****       }
2777:/usr/include/c++/7/bits/basic_string.h **** 
2778:/usr/include/c++/7/bits/basic_string.h ****       /**
2779:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2780:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to avoid.
2781:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2782:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
2783:/usr/include/c++/7/bits/basic_string.h ****        *
2784:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2785:/usr/include/c++/7/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2786:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
2787:/usr/include/c++/7/bits/basic_string.h ****       */
2788:/usr/include/c++/7/bits/basic_string.h ****       size_type
2789:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2790:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2791:/usr/include/c++/7/bits/basic_string.h **** 
2792:/usr/include/c++/7/bits/basic_string.h ****       /**
2793:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Get a substring.
2794:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2795:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2796:/usr/include/c++/7/bits/basic_string.h ****        *  @return  The new string.
2797:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2798:/usr/include/c++/7/bits/basic_string.h ****        *
2799:/usr/include/c++/7/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2800:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2801:/usr/include/c++/7/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2802:/usr/include/c++/7/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2803:/usr/include/c++/7/bits/basic_string.h ****       */
2804:/usr/include/c++/7/bits/basic_string.h ****       basic_string
2805:/usr/include/c++/7/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2806:/usr/include/c++/7/bits/basic_string.h ****       { return basic_string(*this,
2807:/usr/include/c++/7/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2808:/usr/include/c++/7/bits/basic_string.h **** 
2809:/usr/include/c++/7/bits/basic_string.h ****       /**
2810:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string.
2811:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
2812:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2813:/usr/include/c++/7/bits/basic_string.h ****        *
2814:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2815:/usr/include/c++/7/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2816:/usr/include/c++/7/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2817:/usr/include/c++/7/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2818:/usr/include/c++/7/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2819:/usr/include/c++/7/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2820:/usr/include/c++/7/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2821:/usr/include/c++/7/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2822:/usr/include/c++/7/bits/basic_string.h ****       */
2823:/usr/include/c++/7/bits/basic_string.h ****       int
2824:/usr/include/c++/7/bits/basic_string.h ****       compare(const basic_string& __str) const
2825:/usr/include/c++/7/bits/basic_string.h ****       {
2826:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __size = this->size();
2827:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __osize = __str.size();
2828:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2829:/usr/include/c++/7/bits/basic_string.h **** 
2830:/usr/include/c++/7/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2831:/usr/include/c++/7/bits/basic_string.h **** 	if (!__r)
2832:/usr/include/c++/7/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2833:/usr/include/c++/7/bits/basic_string.h **** 	return __r;
2834:/usr/include/c++/7/bits/basic_string.h ****       }
2835:/usr/include/c++/7/bits/basic_string.h **** 
2836:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
2837:/usr/include/c++/7/bits/basic_string.h ****       /**
2838:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2839:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2840:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2841:/usr/include/c++/7/bits/basic_string.h ****        */
2842:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2843:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
2844:/usr/include/c++/7/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2845:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2846:/usr/include/c++/7/bits/basic_string.h **** 	{
2847:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2848:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __size = this->size();
2849:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2850:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2851:/usr/include/c++/7/bits/basic_string.h **** 
2852:/usr/include/c++/7/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2853:/usr/include/c++/7/bits/basic_string.h **** 	  if (!__r)
2854:/usr/include/c++/7/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2855:/usr/include/c++/7/bits/basic_string.h **** 	  return __r;
2856:/usr/include/c++/7/bits/basic_string.h **** 	}
2857:/usr/include/c++/7/bits/basic_string.h **** 
2858:/usr/include/c++/7/bits/basic_string.h ****       /**
2859:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2860:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2861:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2862:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2863:/usr/include/c++/7/bits/basic_string.h ****        *                against.
2864:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2865:/usr/include/c++/7/bits/basic_string.h ****        */
2866:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2867:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
2868:/usr/include/c++/7/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2869:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2870:/usr/include/c++/7/bits/basic_string.h **** 	{
2871:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2872:/usr/include/c++/7/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2873:/usr/include/c++/7/bits/basic_string.h **** 	}
2874:/usr/include/c++/7/bits/basic_string.h **** 
2875:/usr/include/c++/7/bits/basic_string.h ****       /**
2876:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2877:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2878:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2879:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2880:/usr/include/c++/7/bits/basic_string.h ****        *                against.
2881:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2882:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2883:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2884:/usr/include/c++/7/bits/basic_string.h ****        */
2885:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
2886:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
2887:/usr/include/c++/7/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2888:/usr/include/c++/7/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2889:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2890:/usr/include/c++/7/bits/basic_string.h **** 	{
2891:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2892:/usr/include/c++/7/bits/basic_string.h **** 	  return __sv_type(*this)
2893:/usr/include/c++/7/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2894:/usr/include/c++/7/bits/basic_string.h **** 	}
2895:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
2896:/usr/include/c++/7/bits/basic_string.h **** 
2897:/usr/include/c++/7/bits/basic_string.h ****       /**
2898:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2899:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2900:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2901:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
2902:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2903:/usr/include/c++/7/bits/basic_string.h ****        *
2904:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2905:/usr/include/c++/7/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2906:/usr/include/c++/7/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2907:/usr/include/c++/7/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2908:/usr/include/c++/7/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2909:/usr/include/c++/7/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2910:/usr/include/c++/7/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2911:/usr/include/c++/7/bits/basic_string.h ****        *  strings by calling
2912:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2913:/usr/include/c++/7/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2914:/usr/include/c++/7/bits/basic_string.h ****        *  the shorter one is ordered first.
2915:/usr/include/c++/7/bits/basic_string.h ****       */
2916:/usr/include/c++/7/bits/basic_string.h ****       int
2917:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2918:/usr/include/c++/7/bits/basic_string.h **** 
2919:/usr/include/c++/7/bits/basic_string.h ****       /**
2920:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2921:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2922:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2923:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
2924:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2925:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2926:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2927:/usr/include/c++/7/bits/basic_string.h ****        *
2928:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2929:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2930:/usr/include/c++/7/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2931:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2932:/usr/include/c++/7/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2933:/usr/include/c++/7/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2934:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2935:/usr/include/c++/7/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2936:/usr/include/c++/7/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2937:/usr/include/c++/7/bits/basic_string.h ****        *  calling
2938:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2939:/usr/include/c++/7/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2940:/usr/include/c++/7/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2941:/usr/include/c++/7/bits/basic_string.h ****       */
2942:/usr/include/c++/7/bits/basic_string.h ****       int
2943:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2944:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2945:/usr/include/c++/7/bits/basic_string.h **** 
2946:/usr/include/c++/7/bits/basic_string.h ****       /**
2947:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a C string.
2948:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to compare against.
2949:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2950:/usr/include/c++/7/bits/basic_string.h ****        *
2951:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2952:/usr/include/c++/7/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2953:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2954:/usr/include/c++/7/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2955:/usr/include/c++/7/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2956:/usr/include/c++/7/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2957:/usr/include/c++/7/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2958:/usr/include/c++/7/bits/basic_string.h ****        *  ordered first.
2959:/usr/include/c++/7/bits/basic_string.h ****       */
2960:/usr/include/c++/7/bits/basic_string.h ****       int
2961:/usr/include/c++/7/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2962:/usr/include/c++/7/bits/basic_string.h **** 
2963:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2964:/usr/include/c++/7/bits/basic_string.h ****       // 5 String::compare specification questionable
2965:/usr/include/c++/7/bits/basic_string.h ****       /**
2966:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2967:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2968:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2969:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to compare against.
2970:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2971:/usr/include/c++/7/bits/basic_string.h ****        *
2972:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2973:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2974:/usr/include/c++/7/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2975:/usr/include/c++/7/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2976:/usr/include/c++/7/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2977:/usr/include/c++/7/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
2978:/usr/include/c++/7/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
2979:/usr/include/c++/7/bits/basic_string.h ****        *  function then compares the two string by calling
2980:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2981:/usr/include/c++/7/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2982:/usr/include/c++/7/bits/basic_string.h ****        *  one is ordered first.
2983:/usr/include/c++/7/bits/basic_string.h ****       */
2984:/usr/include/c++/7/bits/basic_string.h ****       int
2985:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2986:/usr/include/c++/7/bits/basic_string.h **** 
2987:/usr/include/c++/7/bits/basic_string.h ****       /**
2988:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
2989:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2990:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2991:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  character %array to compare against.
2992:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
2993:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2994:/usr/include/c++/7/bits/basic_string.h ****        *
2995:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2996:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2997:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
2998:/usr/include/c++/7/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2999:/usr/include/c++/7/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3000:/usr/include/c++/7/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3001:/usr/include/c++/7/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3002:/usr/include/c++/7/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3003:/usr/include/c++/7/bits/basic_string.h ****        *  function then compares the two strings by calling
3004:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3005:/usr/include/c++/7/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3006:/usr/include/c++/7/bits/basic_string.h ****        *  one is ordered first.
3007:/usr/include/c++/7/bits/basic_string.h ****        *
3008:/usr/include/c++/7/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3009:/usr/include/c++/7/bits/basic_string.h ****        *  no special meaning.
3010:/usr/include/c++/7/bits/basic_string.h ****       */
3011:/usr/include/c++/7/bits/basic_string.h ****       int
3012:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3013:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __n2) const;
3014:/usr/include/c++/7/bits/basic_string.h **** 
3015:/usr/include/c++/7/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3016:/usr/include/c++/7/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3017:/usr/include/c++/7/bits/basic_string.h ****     };
3018:/usr/include/c++/7/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3019:/usr/include/c++/7/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3020:/usr/include/c++/7/bits/basic_string.h ****   // Reference-counted COW string implentation
3021:/usr/include/c++/7/bits/basic_string.h **** 
3022:/usr/include/c++/7/bits/basic_string.h ****   /**
3023:/usr/include/c++/7/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3024:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3025:/usr/include/c++/7/bits/basic_string.h ****    *
3026:/usr/include/c++/7/bits/basic_string.h ****    *  @ingroup strings
3027:/usr/include/c++/7/bits/basic_string.h ****    *  @ingroup sequences
3028:/usr/include/c++/7/bits/basic_string.h ****    *
3029:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3030:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3031:/usr/include/c++/7/bits/basic_string.h ****    *                   char_traits<_CharT>.
3032:/usr/include/c++/7/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3033:/usr/include/c++/7/bits/basic_string.h ****    *
3034:/usr/include/c++/7/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3035:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3036:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3037:/usr/include/c++/7/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3038:/usr/include/c++/7/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3039:/usr/include/c++/7/bits/basic_string.h ****    *
3040:/usr/include/c++/7/bits/basic_string.h ****    *  @doctodo
3041:/usr/include/c++/7/bits/basic_string.h ****    *
3042:/usr/include/c++/7/bits/basic_string.h ****    *
3043:/usr/include/c++/7/bits/basic_string.h ****    *  Documentation?  What's that?
3044:/usr/include/c++/7/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3045:/usr/include/c++/7/bits/basic_string.h ****    *
3046:/usr/include/c++/7/bits/basic_string.h ****    *  A string looks like this:
3047:/usr/include/c++/7/bits/basic_string.h ****    *
3048:/usr/include/c++/7/bits/basic_string.h ****    *  @code
3049:/usr/include/c++/7/bits/basic_string.h ****    *                                        [_Rep]
3050:/usr/include/c++/7/bits/basic_string.h ****    *                                        _M_length
3051:/usr/include/c++/7/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3052:/usr/include/c++/7/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3053:/usr/include/c++/7/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3054:/usr/include/c++/7/bits/basic_string.h ****    *  @endcode
3055:/usr/include/c++/7/bits/basic_string.h ****    *
3056:/usr/include/c++/7/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3057:/usr/include/c++/7/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3058:/usr/include/c++/7/bits/basic_string.h ****    *  pointer to the header.
3059:/usr/include/c++/7/bits/basic_string.h ****    *
3060:/usr/include/c++/7/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3061:/usr/include/c++/7/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3062:/usr/include/c++/7/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3063:/usr/include/c++/7/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3064:/usr/include/c++/7/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3065:/usr/include/c++/7/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3066:/usr/include/c++/7/bits/basic_string.h ****    *  object at the front.
3067:/usr/include/c++/7/bits/basic_string.h ****    *
3068:/usr/include/c++/7/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3069:/usr/include/c++/7/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3070:/usr/include/c++/7/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3071:/usr/include/c++/7/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3072:/usr/include/c++/7/bits/basic_string.h ****    *  string length.)
3073:/usr/include/c++/7/bits/basic_string.h ****    *
3074:/usr/include/c++/7/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3075:/usr/include/c++/7/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3076:/usr/include/c++/7/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3077:/usr/include/c++/7/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3078:/usr/include/c++/7/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3079:/usr/include/c++/7/bits/basic_string.h ****    *
3080:/usr/include/c++/7/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3081:/usr/include/c++/7/bits/basic_string.h ****    *  for a C++ string implementation.
3082:/usr/include/c++/7/bits/basic_string.h ****   */
3083:/usr/include/c++/7/bits/basic_string.h ****   // 21.3  Template class basic_string
3084:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3085:/usr/include/c++/7/bits/basic_string.h ****     class basic_string
3086:/usr/include/c++/7/bits/basic_string.h ****     {
3087:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
3088:/usr/include/c++/7/bits/basic_string.h **** 
3089:/usr/include/c++/7/bits/basic_string.h ****       // Types:
3090:/usr/include/c++/7/bits/basic_string.h ****     public:
3091:/usr/include/c++/7/bits/basic_string.h ****       typedef _Traits					    traits_type;
3092:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3093:/usr/include/c++/7/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3094:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3095:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3096:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3097:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3098:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
3099:/usr/include/c++/7/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
3100:/usr/include/c++/7/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3101:/usr/include/c++/7/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3102:/usr/include/c++/7/bits/basic_string.h ****                                                             const_iterator;
3103:/usr/include/c++/7/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3104:/usr/include/c++/7/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3105:/usr/include/c++/7/bits/basic_string.h **** 
3106:/usr/include/c++/7/bits/basic_string.h ****     private:
3107:/usr/include/c++/7/bits/basic_string.h ****       // _Rep: string representation
3108:/usr/include/c++/7/bits/basic_string.h ****       //   Invariants:
3109:/usr/include/c++/7/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3110:/usr/include/c++/7/bits/basic_string.h ****       //      must be kept null-terminated.
3111:/usr/include/c++/7/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3112:/usr/include/c++/7/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3113:/usr/include/c++/7/bits/basic_string.h ****       //   3. _M_refcount has three states:
3114:/usr/include/c++/7/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3115:/usr/include/c++/7/bits/basic_string.h ****       //       0: one reference, non-const.
3116:/usr/include/c++/7/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3117:/usr/include/c++/7/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3118:/usr/include/c++/7/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3119:/usr/include/c++/7/bits/basic_string.h ****       //      empty string representation needs no constructor.
3120:/usr/include/c++/7/bits/basic_string.h **** 
3121:/usr/include/c++/7/bits/basic_string.h ****       struct _Rep_base
3122:/usr/include/c++/7/bits/basic_string.h ****       {
3123:/usr/include/c++/7/bits/basic_string.h **** 	size_type		_M_length;
3124:/usr/include/c++/7/bits/basic_string.h **** 	size_type		_M_capacity;
3125:/usr/include/c++/7/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3126:/usr/include/c++/7/bits/basic_string.h ****       };
3127:/usr/include/c++/7/bits/basic_string.h **** 
3128:/usr/include/c++/7/bits/basic_string.h ****       struct _Rep : _Rep_base
3129:/usr/include/c++/7/bits/basic_string.h ****       {
3130:/usr/include/c++/7/bits/basic_string.h **** 	// Types:
3131:/usr/include/c++/7/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
3132:/usr/include/c++/7/bits/basic_string.h **** 
3133:/usr/include/c++/7/bits/basic_string.h **** 	// (Public) Data members:
3134:/usr/include/c++/7/bits/basic_string.h **** 
3135:/usr/include/c++/7/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3136:/usr/include/c++/7/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3137:/usr/include/c++/7/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3138:/usr/include/c++/7/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3139:/usr/include/c++/7/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3140:/usr/include/c++/7/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3141:/usr/include/c++/7/bits/basic_string.h **** 	// look like this:
3142:/usr/include/c++/7/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3143:/usr/include/c++/7/bits/basic_string.h **** 	// Solving for m:
3144:/usr/include/c++/7/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3145:/usr/include/c++/7/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3146:/usr/include/c++/7/bits/basic_string.h **** 	static const size_type	_S_max_size;
3147:/usr/include/c++/7/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3148:/usr/include/c++/7/bits/basic_string.h **** 
3149:/usr/include/c++/7/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3150:/usr/include/c++/7/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3151:/usr/include/c++/7/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3152:/usr/include/c++/7/bits/basic_string.h **** 
3153:/usr/include/c++/7/bits/basic_string.h ****         static _Rep&
3154:/usr/include/c++/7/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3155:/usr/include/c++/7/bits/basic_string.h ****         { 
3156:/usr/include/c++/7/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3157:/usr/include/c++/7/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3158:/usr/include/c++/7/bits/basic_string.h **** 	  // be reasonably safe in this case.
3159:/usr/include/c++/7/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3160:/usr/include/c++/7/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3161:/usr/include/c++/7/bits/basic_string.h **** 	}
3162:/usr/include/c++/7/bits/basic_string.h **** 
3163:/usr/include/c++/7/bits/basic_string.h ****         bool
3164:/usr/include/c++/7/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3165:/usr/include/c++/7/bits/basic_string.h ****         {
3166:/usr/include/c++/7/bits/basic_string.h **** #if defined(__GTHREADS)
3167:/usr/include/c++/7/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3168:/usr/include/c++/7/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3169:/usr/include/c++/7/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3170:/usr/include/c++/7/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3171:/usr/include/c++/7/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3172:/usr/include/c++/7/bits/basic_string.h **** #else
3173:/usr/include/c++/7/bits/basic_string.h ****           return this->_M_refcount < 0;
3174:/usr/include/c++/7/bits/basic_string.h **** #endif
3175:/usr/include/c++/7/bits/basic_string.h ****         }
3176:/usr/include/c++/7/bits/basic_string.h **** 
3177:/usr/include/c++/7/bits/basic_string.h ****         bool
3178:/usr/include/c++/7/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3179:/usr/include/c++/7/bits/basic_string.h **** 	{
3180:/usr/include/c++/7/bits/basic_string.h **** #if defined(__GTHREADS)
3181:/usr/include/c++/7/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3182:/usr/include/c++/7/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3183:/usr/include/c++/7/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3184:/usr/include/c++/7/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3185:/usr/include/c++/7/bits/basic_string.h ****           // _M_dispose.
3186:/usr/include/c++/7/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3187:/usr/include/c++/7/bits/basic_string.h **** #else
3188:/usr/include/c++/7/bits/basic_string.h ****           return this->_M_refcount > 0;
3189:/usr/include/c++/7/bits/basic_string.h **** #endif
3190:/usr/include/c++/7/bits/basic_string.h ****         }
3191:/usr/include/c++/7/bits/basic_string.h **** 
3192:/usr/include/c++/7/bits/basic_string.h ****         void
3193:/usr/include/c++/7/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3194:/usr/include/c++/7/bits/basic_string.h ****         { this->_M_refcount = -1; }
3195:/usr/include/c++/7/bits/basic_string.h **** 
3196:/usr/include/c++/7/bits/basic_string.h ****         void
3197:/usr/include/c++/7/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3198:/usr/include/c++/7/bits/basic_string.h ****         { this->_M_refcount = 0; }
3199:/usr/include/c++/7/bits/basic_string.h **** 
3200:/usr/include/c++/7/bits/basic_string.h **** 	void
3201:/usr/include/c++/7/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3202:/usr/include/c++/7/bits/basic_string.h **** 	{
3203:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3204:/usr/include/c++/7/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3205:/usr/include/c++/7/bits/basic_string.h **** #endif
3206:/usr/include/c++/7/bits/basic_string.h **** 	    {
3207:/usr/include/c++/7/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3208:/usr/include/c++/7/bits/basic_string.h **** 	      this->_M_length = __n;
3209:/usr/include/c++/7/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3210:/usr/include/c++/7/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3211:/usr/include/c++/7/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3212:/usr/include/c++/7/bits/basic_string.h **** 	    }
3213:/usr/include/c++/7/bits/basic_string.h **** 	}
3214:/usr/include/c++/7/bits/basic_string.h **** 
3215:/usr/include/c++/7/bits/basic_string.h **** 	_CharT*
3216:/usr/include/c++/7/bits/basic_string.h **** 	_M_refdata() throw()
3217:/usr/include/c++/7/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3218:/usr/include/c++/7/bits/basic_string.h **** 
3219:/usr/include/c++/7/bits/basic_string.h **** 	_CharT*
3220:/usr/include/c++/7/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3221:/usr/include/c++/7/bits/basic_string.h **** 	{
3222:/usr/include/c++/7/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3223:/usr/include/c++/7/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3224:/usr/include/c++/7/bits/basic_string.h **** 	}
3225:/usr/include/c++/7/bits/basic_string.h **** 
3226:/usr/include/c++/7/bits/basic_string.h **** 	// Create & Destroy
3227:/usr/include/c++/7/bits/basic_string.h **** 	static _Rep*
3228:/usr/include/c++/7/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3229:/usr/include/c++/7/bits/basic_string.h **** 
3230:/usr/include/c++/7/bits/basic_string.h **** 	void
3231:/usr/include/c++/7/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3232:/usr/include/c++/7/bits/basic_string.h **** 	{
3233:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3234:/usr/include/c++/7/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3235:/usr/include/c++/7/bits/basic_string.h **** #endif
3236:/usr/include/c++/7/bits/basic_string.h **** 	    {
3237:/usr/include/c++/7/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3238:/usr/include/c++/7/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3239:/usr/include/c++/7/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3240:/usr/include/c++/7/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3241:/usr/include/c++/7/bits/basic_string.h ****               //   the last decrement that will delete the object.
3242:/usr/include/c++/7/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3243:/usr/include/c++/7/bits/basic_string.h ****               //   all the previous decrements.
3244:/usr/include/c++/7/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3245:/usr/include/c++/7/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3246:/usr/include/c++/7/bits/basic_string.h ****               //   the object is not shared anymore.
3247:/usr/include/c++/7/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3248:/usr/include/c++/7/bits/basic_string.h **** 							 -1) <= 0)
3249:/usr/include/c++/7/bits/basic_string.h **** 		{
3250:/usr/include/c++/7/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3251:/usr/include/c++/7/bits/basic_string.h **** 		  _M_destroy(__a);
3252:/usr/include/c++/7/bits/basic_string.h **** 		}
3253:/usr/include/c++/7/bits/basic_string.h **** 	    }
3254:/usr/include/c++/7/bits/basic_string.h **** 	}  // XXX MT
3255:/usr/include/c++/7/bits/basic_string.h **** 
3256:/usr/include/c++/7/bits/basic_string.h **** 	void
3257:/usr/include/c++/7/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3258:/usr/include/c++/7/bits/basic_string.h **** 
3259:/usr/include/c++/7/bits/basic_string.h **** 	_CharT*
3260:/usr/include/c++/7/bits/basic_string.h **** 	_M_refcopy() throw()
3261:/usr/include/c++/7/bits/basic_string.h **** 	{
3262:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3263:/usr/include/c++/7/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3264:/usr/include/c++/7/bits/basic_string.h **** #endif
3265:/usr/include/c++/7/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3266:/usr/include/c++/7/bits/basic_string.h **** 	  return _M_refdata();
3267:/usr/include/c++/7/bits/basic_string.h **** 	}  // XXX MT
3268:/usr/include/c++/7/bits/basic_string.h **** 
3269:/usr/include/c++/7/bits/basic_string.h **** 	_CharT*
3270:/usr/include/c++/7/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3271:/usr/include/c++/7/bits/basic_string.h ****       };
3272:/usr/include/c++/7/bits/basic_string.h **** 
3273:/usr/include/c++/7/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3274:/usr/include/c++/7/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3275:/usr/include/c++/7/bits/basic_string.h ****       {
3276:/usr/include/c++/7/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3277:/usr/include/c++/7/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3278:/usr/include/c++/7/bits/basic_string.h **** 
3279:/usr/include/c++/7/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3280:/usr/include/c++/7/bits/basic_string.h ****       };
3281:/usr/include/c++/7/bits/basic_string.h **** 
3282:/usr/include/c++/7/bits/basic_string.h ****     public:
3283:/usr/include/c++/7/bits/basic_string.h ****       // Data Members (public):
3284:/usr/include/c++/7/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3285:/usr/include/c++/7/bits/basic_string.h ****       // size that the allocator can hold.
3286:/usr/include/c++/7/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3287:/usr/include/c++/7/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3288:/usr/include/c++/7/bits/basic_string.h **** 
3289:/usr/include/c++/7/bits/basic_string.h ****     private:
3290:/usr/include/c++/7/bits/basic_string.h ****       // Data Members (private):
3291:/usr/include/c++/7/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3292:/usr/include/c++/7/bits/basic_string.h **** 
3293:/usr/include/c++/7/bits/basic_string.h ****       _CharT*
3294:/usr/include/c++/7/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3295:/usr/include/c++/7/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3296:/usr/include/c++/7/bits/basic_string.h **** 
3297:/usr/include/c++/7/bits/basic_string.h ****       _CharT*
3298:/usr/include/c++/7/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3299:/usr/include/c++/7/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3300:/usr/include/c++/7/bits/basic_string.h **** 
3301:/usr/include/c++/7/bits/basic_string.h ****       _Rep*
3302:/usr/include/c++/7/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3303:/usr/include/c++/7/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3304:/usr/include/c++/7/bits/basic_string.h **** 
3305:/usr/include/c++/7/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3306:/usr/include/c++/7/bits/basic_string.h ****       // but they do not call _M_leak.
3307:/usr/include/c++/7/bits/basic_string.h ****       iterator
3308:/usr/include/c++/7/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3309:/usr/include/c++/7/bits/basic_string.h ****       { return iterator(_M_data()); }
3310:/usr/include/c++/7/bits/basic_string.h **** 
3311:/usr/include/c++/7/bits/basic_string.h ****       iterator
3312:/usr/include/c++/7/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3313:/usr/include/c++/7/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3314:/usr/include/c++/7/bits/basic_string.h **** 
3315:/usr/include/c++/7/bits/basic_string.h ****       void
3316:/usr/include/c++/7/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3317:/usr/include/c++/7/bits/basic_string.h ****       {
3318:/usr/include/c++/7/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3319:/usr/include/c++/7/bits/basic_string.h **** 	  _M_leak_hard();
3320:/usr/include/c++/7/bits/basic_string.h ****       }
3321:/usr/include/c++/7/bits/basic_string.h **** 
3322:/usr/include/c++/7/bits/basic_string.h ****       size_type
3323:/usr/include/c++/7/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3324:/usr/include/c++/7/bits/basic_string.h ****       {
3325:/usr/include/c++/7/bits/basic_string.h **** 	if (__pos > this->size())
3326:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3327:/usr/include/c++/7/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3328:/usr/include/c++/7/bits/basic_string.h **** 				   __s, __pos, this->size());
3329:/usr/include/c++/7/bits/basic_string.h **** 	return __pos;
3330:/usr/include/c++/7/bits/basic_string.h ****       }
3331:/usr/include/c++/7/bits/basic_string.h **** 
3332:/usr/include/c++/7/bits/basic_string.h ****       void
3333:/usr/include/c++/7/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3334:/usr/include/c++/7/bits/basic_string.h ****       {
3335:/usr/include/c++/7/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3336:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3337:/usr/include/c++/7/bits/basic_string.h ****       }
3338:/usr/include/c++/7/bits/basic_string.h **** 
3339:/usr/include/c++/7/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3340:/usr/include/c++/7/bits/basic_string.h ****       size_type
3341:/usr/include/c++/7/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3342:/usr/include/c++/7/bits/basic_string.h ****       {
3343:/usr/include/c++/7/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3344:/usr/include/c++/7/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3345:/usr/include/c++/7/bits/basic_string.h ****       }
3346:/usr/include/c++/7/bits/basic_string.h **** 
3347:/usr/include/c++/7/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3348:/usr/include/c++/7/bits/basic_string.h ****       bool
3349:/usr/include/c++/7/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3350:/usr/include/c++/7/bits/basic_string.h ****       {
3351:/usr/include/c++/7/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3352:/usr/include/c++/7/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3353:/usr/include/c++/7/bits/basic_string.h ****       }
3354:/usr/include/c++/7/bits/basic_string.h **** 
3355:/usr/include/c++/7/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3356:/usr/include/c++/7/bits/basic_string.h ****       // traits_type::copy/move/assign.
3357:/usr/include/c++/7/bits/basic_string.h ****       static void
3358:/usr/include/c++/7/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3359:/usr/include/c++/7/bits/basic_string.h ****       {
3360:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
3361:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3362:/usr/include/c++/7/bits/basic_string.h **** 	else
3363:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3364:/usr/include/c++/7/bits/basic_string.h ****       }
3365:/usr/include/c++/7/bits/basic_string.h **** 
3366:/usr/include/c++/7/bits/basic_string.h ****       static void
3367:/usr/include/c++/7/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3368:/usr/include/c++/7/bits/basic_string.h ****       {
3369:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
3370:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3371:/usr/include/c++/7/bits/basic_string.h **** 	else
3372:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3373:/usr/include/c++/7/bits/basic_string.h ****       }
3374:/usr/include/c++/7/bits/basic_string.h **** 
3375:/usr/include/c++/7/bits/basic_string.h ****       static void
3376:/usr/include/c++/7/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3377:/usr/include/c++/7/bits/basic_string.h ****       {
3378:/usr/include/c++/7/bits/basic_string.h **** 	if (__n == 1)
3379:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3380:/usr/include/c++/7/bits/basic_string.h **** 	else
3381:/usr/include/c++/7/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3382:/usr/include/c++/7/bits/basic_string.h ****       }
3383:/usr/include/c++/7/bits/basic_string.h **** 
3384:/usr/include/c++/7/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3385:/usr/include/c++/7/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3386:/usr/include/c++/7/bits/basic_string.h ****       template<class _Iterator>
3387:/usr/include/c++/7/bits/basic_string.h ****         static void
3388:/usr/include/c++/7/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3389:/usr/include/c++/7/bits/basic_string.h ****         {
3390:/usr/include/c++/7/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3391:/usr/include/c++/7/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3392:/usr/include/c++/7/bits/basic_string.h **** 	}
3393:/usr/include/c++/7/bits/basic_string.h **** 
3394:/usr/include/c++/7/bits/basic_string.h ****       static void
3395:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3396:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3397:/usr/include/c++/7/bits/basic_string.h **** 
3398:/usr/include/c++/7/bits/basic_string.h ****       static void
3399:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3400:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3401:/usr/include/c++/7/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3402:/usr/include/c++/7/bits/basic_string.h **** 
3403:/usr/include/c++/7/bits/basic_string.h ****       static void
3404:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3405:/usr/include/c++/7/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3406:/usr/include/c++/7/bits/basic_string.h **** 
3407:/usr/include/c++/7/bits/basic_string.h ****       static void
3408:/usr/include/c++/7/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3409:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3410:/usr/include/c++/7/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3411:/usr/include/c++/7/bits/basic_string.h **** 
3412:/usr/include/c++/7/bits/basic_string.h ****       static int
3413:/usr/include/c++/7/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3414:/usr/include/c++/7/bits/basic_string.h ****       {
3415:/usr/include/c++/7/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3416:/usr/include/c++/7/bits/basic_string.h **** 
3417:/usr/include/c++/7/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3418:/usr/include/c++/7/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3419:/usr/include/c++/7/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3420:/usr/include/c++/7/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3421:/usr/include/c++/7/bits/basic_string.h **** 	else
3422:/usr/include/c++/7/bits/basic_string.h **** 	  return int(__d);
3423:/usr/include/c++/7/bits/basic_string.h ****       }
3424:/usr/include/c++/7/bits/basic_string.h **** 
3425:/usr/include/c++/7/bits/basic_string.h ****       void
3426:/usr/include/c++/7/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3427:/usr/include/c++/7/bits/basic_string.h **** 
3428:/usr/include/c++/7/bits/basic_string.h ****       void
3429:/usr/include/c++/7/bits/basic_string.h ****       _M_leak_hard();
3430:/usr/include/c++/7/bits/basic_string.h **** 
3431:/usr/include/c++/7/bits/basic_string.h ****       static _Rep&
3432:/usr/include/c++/7/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3433:/usr/include/c++/7/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3434:/usr/include/c++/7/bits/basic_string.h **** 
3435:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
3436:/usr/include/c++/7/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3437:/usr/include/c++/7/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3438:/usr/include/c++/7/bits/basic_string.h **** 
3439:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3440:/usr/include/c++/7/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3441:/usr/include/c++/7/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3442:/usr/include/c++/7/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3443:/usr/include/c++/7/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3444:/usr/include/c++/7/bits/basic_string.h **** 	  _Res>;
3445:/usr/include/c++/7/bits/basic_string.h **** 
3446:/usr/include/c++/7/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3447:/usr/include/c++/7/bits/basic_string.h ****       static __sv_type
3448:/usr/include/c++/7/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3449:/usr/include/c++/7/bits/basic_string.h ****       { return __svt; }
3450:/usr/include/c++/7/bits/basic_string.h **** 
3451:/usr/include/c++/7/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3452:/usr/include/c++/7/bits/basic_string.h ****       // allows to add an internal constructor that does not
3453:/usr/include/c++/7/bits/basic_string.h ****       // participate in overload resolution when a string_view
3454:/usr/include/c++/7/bits/basic_string.h ****       // is provided.
3455:/usr/include/c++/7/bits/basic_string.h ****       struct __sv_wrapper
3456:/usr/include/c++/7/bits/basic_string.h ****       {
3457:/usr/include/c++/7/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3458:/usr/include/c++/7/bits/basic_string.h **** 	__sv_type _M_sv;
3459:/usr/include/c++/7/bits/basic_string.h ****       };
3460:/usr/include/c++/7/bits/basic_string.h **** #endif
3461:/usr/include/c++/7/bits/basic_string.h **** 
3462:/usr/include/c++/7/bits/basic_string.h ****     public:
3463:/usr/include/c++/7/bits/basic_string.h ****       // Construct/copy/destroy:
3464:/usr/include/c++/7/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3465:/usr/include/c++/7/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3466:/usr/include/c++/7/bits/basic_string.h **** 
3467:/usr/include/c++/7/bits/basic_string.h ****       /**
3468:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3469:/usr/include/c++/7/bits/basic_string.h ****        */
3470:/usr/include/c++/7/bits/basic_string.h ****       basic_string()
3471:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3472:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
3473:/usr/include/c++/7/bits/basic_string.h **** #else
3474:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
3475:/usr/include/c++/7/bits/basic_string.h **** #endif
3476:/usr/include/c++/7/bits/basic_string.h **** 
3477:/usr/include/c++/7/bits/basic_string.h ****       /**
3478:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3479:/usr/include/c++/7/bits/basic_string.h ****        */
3480:/usr/include/c++/7/bits/basic_string.h ****       explicit
3481:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _Alloc& __a);
3482:/usr/include/c++/7/bits/basic_string.h **** 
3483:/usr/include/c++/7/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3484:/usr/include/c++/7/bits/basic_string.h ****       /**
3485:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3486:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3487:/usr/include/c++/7/bits/basic_string.h ****        */
3488:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str);
3489:/usr/include/c++/7/bits/basic_string.h **** 
3490:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3491:/usr/include/c++/7/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3492:/usr/include/c++/7/bits/basic_string.h ****       /**
3493:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3494:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3495:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3496:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3497:/usr/include/c++/7/bits/basic_string.h ****        */
3498:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3499:/usr/include/c++/7/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3500:/usr/include/c++/7/bits/basic_string.h **** 
3501:/usr/include/c++/7/bits/basic_string.h ****       /**
3502:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3503:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3504:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3505:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3506:/usr/include/c++/7/bits/basic_string.h ****        */
3507:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3508:/usr/include/c++/7/bits/basic_string.h **** 		   size_type __n);
3509:/usr/include/c++/7/bits/basic_string.h ****       /**
3510:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3511:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3512:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3513:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3514:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3515:/usr/include/c++/7/bits/basic_string.h ****        */
3516:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3517:/usr/include/c++/7/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3518:/usr/include/c++/7/bits/basic_string.h **** 
3519:/usr/include/c++/7/bits/basic_string.h ****       /**
3520:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3521:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source character %array.
3522:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3523:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3524:/usr/include/c++/7/bits/basic_string.h ****        *
3525:/usr/include/c++/7/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3526:/usr/include/c++/7/bits/basic_string.h ****        *  has no special meaning.
3527:/usr/include/c++/7/bits/basic_string.h ****        */
3528:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3529:/usr/include/c++/7/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3530:/usr/include/c++/7/bits/basic_string.h ****       /**
3531:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3532:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source C string.
3533:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3534:/usr/include/c++/7/bits/basic_string.h ****        */
3535:/usr/include/c++/7/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
3536:/usr/include/c++/7/bits/basic_string.h ****       /**
3537:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3538:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters.
3539:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Character to use.
3540:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3541:/usr/include/c++/7/bits/basic_string.h ****        */
3542:/usr/include/c++/7/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3543:/usr/include/c++/7/bits/basic_string.h **** 
3544:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
3545:/usr/include/c++/7/bits/basic_string.h ****       /**
3546:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Move construct string.
3547:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3548:/usr/include/c++/7/bits/basic_string.h ****        *
3549:/usr/include/c++/7/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3550:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3551:/usr/include/c++/7/bits/basic_string.h ****        **/
3552:/usr/include/c++/7/bits/basic_string.h ****       basic_string(basic_string&& __str)
3553:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3554:/usr/include/c++/7/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3555:/usr/include/c++/7/bits/basic_string.h **** #endif
3556:/usr/include/c++/7/bits/basic_string.h ****       : _M_dataplus(__str._M_dataplus)
3557:/usr/include/c++/7/bits/basic_string.h ****       {
3558:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3559:/usr/include/c++/7/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3560:/usr/include/c++/7/bits/basic_string.h **** #else
3561:/usr/include/c++/7/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3562:/usr/include/c++/7/bits/basic_string.h **** #endif
3563:/usr/include/c++/7/bits/basic_string.h ****       }
3564:/usr/include/c++/7/bits/basic_string.h **** 
3565:/usr/include/c++/7/bits/basic_string.h ****       /**
3566:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3567:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3568:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3569:/usr/include/c++/7/bits/basic_string.h ****        */
3570:/usr/include/c++/7/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3571:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
3572:/usr/include/c++/7/bits/basic_string.h **** 
3573:/usr/include/c++/7/bits/basic_string.h ****       /**
3574:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3575:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __beg  Start of range.
3576:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __end  End of range.
3577:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3578:/usr/include/c++/7/bits/basic_string.h ****        */
3579:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
3580:/usr/include/c++/7/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3581:/usr/include/c++/7/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
3582:/usr/include/c++/7/bits/basic_string.h **** 
3583:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
3584:/usr/include/c++/7/bits/basic_string.h ****       /**
3585:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3586:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3587:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3588:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3589:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3590:/usr/include/c++/7/bits/basic_string.h ****        */
3591:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3592:/usr/include/c++/7/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3593:/usr/include/c++/7/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3594:/usr/include/c++/7/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3595:/usr/include/c++/7/bits/basic_string.h **** 
3596:/usr/include/c++/7/bits/basic_string.h ****       /**
3597:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3598:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3599:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3600:/usr/include/c++/7/bits/basic_string.h ****        */
3601:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3602:/usr/include/c++/7/bits/basic_string.h **** 	explicit
3603:/usr/include/c++/7/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3604:/usr/include/c++/7/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3605:/usr/include/c++/7/bits/basic_string.h **** 
3606:/usr/include/c++/7/bits/basic_string.h ****       /**
3607:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3608:/usr/include/c++/7/bits/basic_string.h ****        *          wrapper.
3609:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3610:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3611:/usr/include/c++/7/bits/basic_string.h ****        */
3612:/usr/include/c++/7/bits/basic_string.h ****       explicit
3613:/usr/include/c++/7/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3614:/usr/include/c++/7/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3615:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
3616:/usr/include/c++/7/bits/basic_string.h **** 
3617:/usr/include/c++/7/bits/basic_string.h ****       /**
3618:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3619:/usr/include/c++/7/bits/basic_string.h ****        */
3620:/usr/include/c++/7/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3621:/usr/include/c++/7/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3622:/usr/include/c++/7/bits/basic_string.h **** 
3623:/usr/include/c++/7/bits/basic_string.h ****       /**
3624:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3625:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3626:/usr/include/c++/7/bits/basic_string.h ****        */
3627:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
3628:/usr/include/c++/7/bits/basic_string.h ****       operator=(const basic_string& __str) 
3629:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__str); }
3630:/usr/include/c++/7/bits/basic_string.h **** 
3631:/usr/include/c++/7/bits/basic_string.h ****       /**
3632:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3633:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3634:/usr/include/c++/7/bits/basic_string.h ****        */
3635:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
3636:/usr/include/c++/7/bits/basic_string.h ****       operator=(const _CharT* __s) 
3637:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__s); }
3638:/usr/include/c++/7/bits/basic_string.h **** 
3639:/usr/include/c++/7/bits/basic_string.h ****       /**
3640:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3641:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Source character.
3642:/usr/include/c++/7/bits/basic_string.h ****        *
3643:/usr/include/c++/7/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3644:/usr/include/c++/7/bits/basic_string.h ****        *  (*this)[0] == @a c.
3645:/usr/include/c++/7/bits/basic_string.h ****        */
3646:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
3647:/usr/include/c++/7/bits/basic_string.h ****       operator=(_CharT __c) 
3648:/usr/include/c++/7/bits/basic_string.h ****       { 
3649:/usr/include/c++/7/bits/basic_string.h **** 	this->assign(1, __c); 
3650:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
3651:/usr/include/c++/7/bits/basic_string.h ****       }
3652:/usr/include/c++/7/bits/basic_string.h **** 
3653:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
3654:/usr/include/c++/7/bits/basic_string.h ****       /**
3655:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3656:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string.
3657:/usr/include/c++/7/bits/basic_string.h ****        *
3658:/usr/include/c++/7/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3659:/usr/include/c++/7/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3660:/usr/include/c++/7/bits/basic_string.h ****        **/
3661:/usr/include/c++/7/bits/basic_string.h ****       // PR 58265, this should be noexcept.
3662:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
3663:/usr/include/c++/7/bits/basic_string.h ****       operator=(basic_string&& __str)
3664:/usr/include/c++/7/bits/basic_string.h ****       {
3665:/usr/include/c++/7/bits/basic_string.h **** 	// NB: DR 1204.
3666:/usr/include/c++/7/bits/basic_string.h **** 	this->swap(__str);
3667:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
3668:/usr/include/c++/7/bits/basic_string.h ****       }
3669:/usr/include/c++/7/bits/basic_string.h **** 
3670:/usr/include/c++/7/bits/basic_string.h ****       /**
3671:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3672:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3673:/usr/include/c++/7/bits/basic_string.h ****        */
3674:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
3675:/usr/include/c++/7/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3676:/usr/include/c++/7/bits/basic_string.h ****       {
3677:/usr/include/c++/7/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3678:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
3679:/usr/include/c++/7/bits/basic_string.h ****       }
3680:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
3681:/usr/include/c++/7/bits/basic_string.h **** 
3682:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
3683:/usr/include/c++/7/bits/basic_string.h ****       /**
3684:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3685:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3686:/usr/include/c++/7/bits/basic_string.h ****        */
3687:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
3688:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3689:/usr/include/c++/7/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3690:/usr/include/c++/7/bits/basic_string.h **** 	{ return this->assign(__svt); }
3691:/usr/include/c++/7/bits/basic_string.h **** 
3692:/usr/include/c++/7/bits/basic_string.h ****       /**
3693:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3694:/usr/include/c++/7/bits/basic_string.h ****        *  @return A string_view.
3695:/usr/include/c++/7/bits/basic_string.h ****        */
3696:/usr/include/c++/7/bits/basic_string.h ****       operator __sv_type() const noexcept
3697:/usr/include/c++/7/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3698:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
3699:/usr/include/c++/7/bits/basic_string.h **** 
3700:/usr/include/c++/7/bits/basic_string.h ****       // Iterators:
3701:/usr/include/c++/7/bits/basic_string.h ****       /**
3702:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3703:/usr/include/c++/7/bits/basic_string.h ****        *  the %string.  Unshares the string.
3704:/usr/include/c++/7/bits/basic_string.h ****        */
3705:/usr/include/c++/7/bits/basic_string.h ****       iterator
3706:/usr/include/c++/7/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3707:/usr/include/c++/7/bits/basic_string.h ****       {
3708:/usr/include/c++/7/bits/basic_string.h **** 	_M_leak();
3709:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data());
3710:/usr/include/c++/7/bits/basic_string.h ****       }
3711:/usr/include/c++/7/bits/basic_string.h **** 
3712:/usr/include/c++/7/bits/basic_string.h ****       /**
3713:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3714:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.
3715:/usr/include/c++/7/bits/basic_string.h ****        */
3716:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
3717:/usr/include/c++/7/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3718:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3719:/usr/include/c++/7/bits/basic_string.h **** 
3720:/usr/include/c++/7/bits/basic_string.h ****       /**
3721:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3722:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3723:/usr/include/c++/7/bits/basic_string.h ****        */
3724:/usr/include/c++/7/bits/basic_string.h ****       iterator
3725:/usr/include/c++/7/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3726:/usr/include/c++/7/bits/basic_string.h ****       {
3727:/usr/include/c++/7/bits/basic_string.h **** 	_M_leak();
3728:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3729:/usr/include/c++/7/bits/basic_string.h ****       }
3730:/usr/include/c++/7/bits/basic_string.h **** 
3731:/usr/include/c++/7/bits/basic_string.h ****       /**
3732:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3733:/usr/include/c++/7/bits/basic_string.h ****        *  last character in the %string.
3734:/usr/include/c++/7/bits/basic_string.h ****        */
3735:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
3736:/usr/include/c++/7/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3737:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3738:/usr/include/c++/7/bits/basic_string.h **** 
3739:/usr/include/c++/7/bits/basic_string.h ****       /**
3740:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3741:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3742:/usr/include/c++/7/bits/basic_string.h ****        *  order.  Unshares the string.
3743:/usr/include/c++/7/bits/basic_string.h ****        */
3744:/usr/include/c++/7/bits/basic_string.h ****       reverse_iterator
3745:/usr/include/c++/7/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3746:/usr/include/c++/7/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3747:/usr/include/c++/7/bits/basic_string.h **** 
3748:/usr/include/c++/7/bits/basic_string.h ****       /**
3749:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3750:/usr/include/c++/7/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3751:/usr/include/c++/7/bits/basic_string.h ****        *  reverse element order.
3752:/usr/include/c++/7/bits/basic_string.h ****        */
3753:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
3754:/usr/include/c++/7/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3755:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3756:/usr/include/c++/7/bits/basic_string.h **** 
3757:/usr/include/c++/7/bits/basic_string.h ****       /**
3758:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3759:/usr/include/c++/7/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3760:/usr/include/c++/7/bits/basic_string.h ****        *  element order.  Unshares the string.
3761:/usr/include/c++/7/bits/basic_string.h ****        */
3762:/usr/include/c++/7/bits/basic_string.h ****       reverse_iterator
3763:/usr/include/c++/7/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3764:/usr/include/c++/7/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3765:/usr/include/c++/7/bits/basic_string.h **** 
3766:/usr/include/c++/7/bits/basic_string.h ****       /**
3767:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3768:/usr/include/c++/7/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3769:/usr/include/c++/7/bits/basic_string.h ****        *  is done in reverse element order.
3770:/usr/include/c++/7/bits/basic_string.h ****        */
3771:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
3772:/usr/include/c++/7/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3773:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3774:/usr/include/c++/7/bits/basic_string.h **** 
3775:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
3776:/usr/include/c++/7/bits/basic_string.h ****       /**
3777:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3778:/usr/include/c++/7/bits/basic_string.h ****        *  character in the %string.
3779:/usr/include/c++/7/bits/basic_string.h ****        */
3780:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
3781:/usr/include/c++/7/bits/basic_string.h ****       cbegin() const noexcept
3782:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3783:/usr/include/c++/7/bits/basic_string.h **** 
3784:/usr/include/c++/7/bits/basic_string.h ****       /**
3785:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3786:/usr/include/c++/7/bits/basic_string.h ****        *  last character in the %string.
3787:/usr/include/c++/7/bits/basic_string.h ****        */
3788:/usr/include/c++/7/bits/basic_string.h ****       const_iterator
3789:/usr/include/c++/7/bits/basic_string.h ****       cend() const noexcept
3790:/usr/include/c++/7/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3791:/usr/include/c++/7/bits/basic_string.h **** 
3792:/usr/include/c++/7/bits/basic_string.h ****       /**
3793:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3794:/usr/include/c++/7/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3795:/usr/include/c++/7/bits/basic_string.h ****        *  reverse element order.
3796:/usr/include/c++/7/bits/basic_string.h ****        */
3797:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
3798:/usr/include/c++/7/bits/basic_string.h ****       crbegin() const noexcept
3799:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3800:/usr/include/c++/7/bits/basic_string.h **** 
3801:/usr/include/c++/7/bits/basic_string.h ****       /**
3802:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3803:/usr/include/c++/7/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3804:/usr/include/c++/7/bits/basic_string.h ****        *  is done in reverse element order.
3805:/usr/include/c++/7/bits/basic_string.h ****        */
3806:/usr/include/c++/7/bits/basic_string.h ****       const_reverse_iterator
3807:/usr/include/c++/7/bits/basic_string.h ****       crend() const noexcept
3808:/usr/include/c++/7/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3809:/usr/include/c++/7/bits/basic_string.h **** #endif
3810:/usr/include/c++/7/bits/basic_string.h **** 
3811:/usr/include/c++/7/bits/basic_string.h ****     public:
3812:/usr/include/c++/7/bits/basic_string.h ****       // Capacity:
3813:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3814:/usr/include/c++/7/bits/basic_string.h ****       ///  null-termination.
3815:/usr/include/c++/7/bits/basic_string.h ****       size_type
3816:/usr/include/c++/7/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3817:/usr/include/c++/7/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3818:/usr/include/c++/7/bits/basic_string.h **** 
3819:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3820:/usr/include/c++/7/bits/basic_string.h ****       ///  null-termination.
3821:/usr/include/c++/7/bits/basic_string.h ****       size_type
3822:/usr/include/c++/7/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3823:/usr/include/c++/7/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3824:/usr/include/c++/7/bits/basic_string.h **** 
3825:/usr/include/c++/7/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3826:/usr/include/c++/7/bits/basic_string.h ****       size_type
3827:/usr/include/c++/7/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3828:/usr/include/c++/7/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3829:/usr/include/c++/7/bits/basic_string.h **** 
3830:/usr/include/c++/7/bits/basic_string.h ****       /**
3831:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3832:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3833:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3834:/usr/include/c++/7/bits/basic_string.h ****        *
3835:/usr/include/c++/7/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3836:/usr/include/c++/7/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3837:/usr/include/c++/7/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3838:/usr/include/c++/7/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3839:/usr/include/c++/7/bits/basic_string.h ****        */
3840:/usr/include/c++/7/bits/basic_string.h ****       void
3841:/usr/include/c++/7/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3842:/usr/include/c++/7/bits/basic_string.h **** 
3843:/usr/include/c++/7/bits/basic_string.h ****       /**
3844:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3845:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3846:/usr/include/c++/7/bits/basic_string.h ****        *
3847:/usr/include/c++/7/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3848:/usr/include/c++/7/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3849:/usr/include/c++/7/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3850:/usr/include/c++/7/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3851:/usr/include/c++/7/bits/basic_string.h ****        *  setting them to 0.
3852:/usr/include/c++/7/bits/basic_string.h ****        */
3853:/usr/include/c++/7/bits/basic_string.h ****       void
3854:/usr/include/c++/7/bits/basic_string.h ****       resize(size_type __n)
3855:/usr/include/c++/7/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3856:/usr/include/c++/7/bits/basic_string.h **** 
3857:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
3858:/usr/include/c++/7/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3859:/usr/include/c++/7/bits/basic_string.h ****       void
3860:/usr/include/c++/7/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3861:/usr/include/c++/7/bits/basic_string.h ****       {
3862:/usr/include/c++/7/bits/basic_string.h **** #if __cpp_exceptions
3863:/usr/include/c++/7/bits/basic_string.h **** 	if (capacity() > size())
3864:/usr/include/c++/7/bits/basic_string.h **** 	  {
3865:/usr/include/c++/7/bits/basic_string.h **** 	    try
3866:/usr/include/c++/7/bits/basic_string.h **** 	      { reserve(0); }
3867:/usr/include/c++/7/bits/basic_string.h **** 	    catch(...)
3868:/usr/include/c++/7/bits/basic_string.h **** 	      { }
3869:/usr/include/c++/7/bits/basic_string.h **** 	  }
3870:/usr/include/c++/7/bits/basic_string.h **** #endif
3871:/usr/include/c++/7/bits/basic_string.h ****       }
3872:/usr/include/c++/7/bits/basic_string.h **** #endif
3873:/usr/include/c++/7/bits/basic_string.h **** 
3874:/usr/include/c++/7/bits/basic_string.h ****       /**
3875:/usr/include/c++/7/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3876:/usr/include/c++/7/bits/basic_string.h ****        *  before needing to allocate more memory.
3877:/usr/include/c++/7/bits/basic_string.h ****        */
3878:/usr/include/c++/7/bits/basic_string.h ****       size_type
3879:/usr/include/c++/7/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3880:/usr/include/c++/7/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3881:/usr/include/c++/7/bits/basic_string.h **** 
3882:/usr/include/c++/7/bits/basic_string.h ****       /**
3883:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3884:/usr/include/c++/7/bits/basic_string.h ****        *          characters.
3885:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3886:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3887:/usr/include/c++/7/bits/basic_string.h ****        *
3888:/usr/include/c++/7/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3889:/usr/include/c++/7/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3890:/usr/include/c++/7/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3891:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
3892:/usr/include/c++/7/bits/basic_string.h ****        *
3893:/usr/include/c++/7/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3894:/usr/include/c++/7/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3895:/usr/include/c++/7/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3896:/usr/include/c++/7/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3897:/usr/include/c++/7/bits/basic_string.h ****        *  data.
3898:/usr/include/c++/7/bits/basic_string.h ****        */
3899:/usr/include/c++/7/bits/basic_string.h ****       void
3900:/usr/include/c++/7/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3901:/usr/include/c++/7/bits/basic_string.h **** 
3902:/usr/include/c++/7/bits/basic_string.h ****       /**
3903:/usr/include/c++/7/bits/basic_string.h ****        *  Erases the string, making it empty.
3904:/usr/include/c++/7/bits/basic_string.h ****        */
3905:/usr/include/c++/7/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3906:/usr/include/c++/7/bits/basic_string.h ****       void
3907:/usr/include/c++/7/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
3908:/usr/include/c++/7/bits/basic_string.h ****       {
3909:/usr/include/c++/7/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
3910:/usr/include/c++/7/bits/basic_string.h **** 	  {
3911:/usr/include/c++/7/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
3912:/usr/include/c++/7/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
3913:/usr/include/c++/7/bits/basic_string.h **** 	  }
3914:/usr/include/c++/7/bits/basic_string.h **** 	else
3915:/usr/include/c++/7/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
3916:/usr/include/c++/7/bits/basic_string.h ****       }
3917:/usr/include/c++/7/bits/basic_string.h **** #else
3918:/usr/include/c++/7/bits/basic_string.h ****       // PR 56166: this should not throw.
3919:/usr/include/c++/7/bits/basic_string.h ****       void
3920:/usr/include/c++/7/bits/basic_string.h ****       clear()
3921:/usr/include/c++/7/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
3922:/usr/include/c++/7/bits/basic_string.h **** #endif
3923:/usr/include/c++/7/bits/basic_string.h **** 
3924:/usr/include/c++/7/bits/basic_string.h ****       /**
3925:/usr/include/c++/7/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
3926:/usr/include/c++/7/bits/basic_string.h ****        *  <code>*this == ""</code>.
3927:/usr/include/c++/7/bits/basic_string.h ****        */
3928:/usr/include/c++/7/bits/basic_string.h ****       bool
3929:/usr/include/c++/7/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
3930:/usr/include/c++/7/bits/basic_string.h ****       { return this->size() == 0; }
3931:/usr/include/c++/7/bits/basic_string.h **** 
3932:/usr/include/c++/7/bits/basic_string.h ****       // Element access:
3933:/usr/include/c++/7/bits/basic_string.h ****       /**
3934:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3935:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3936:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
3937:/usr/include/c++/7/bits/basic_string.h ****        *
3938:/usr/include/c++/7/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3939:/usr/include/c++/7/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3940:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3941:/usr/include/c++/7/bits/basic_string.h ****        *  see at().)
3942:/usr/include/c++/7/bits/basic_string.h ****        */
3943:/usr/include/c++/7/bits/basic_string.h ****       const_reference
3944:/usr/include/c++/7/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
3945:/usr/include/c++/7/bits/basic_string.h ****       {
3946:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
3947:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__pos];
3948:/usr/include/c++/7/bits/basic_string.h ****       }
3949:/usr/include/c++/7/bits/basic_string.h **** 
3950:/usr/include/c++/7/bits/basic_string.h ****       /**
3951:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3952:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3953:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3954:/usr/include/c++/7/bits/basic_string.h ****        *
3955:/usr/include/c++/7/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3956:/usr/include/c++/7/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3957:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3958:/usr/include/c++/7/bits/basic_string.h ****        *  see at().)  Unshares the string.
3959:/usr/include/c++/7/bits/basic_string.h ****        */
3960:/usr/include/c++/7/bits/basic_string.h ****       reference
3961:/usr/include/c++/7/bits/basic_string.h ****       operator[](size_type __pos)
3962:/usr/include/c++/7/bits/basic_string.h ****       {
3963:/usr/include/c++/7/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
3964:/usr/include/c++/7/bits/basic_string.h **** 	// and in C++11 mode.
3965:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
3966:/usr/include/c++/7/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
3967:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
3968:/usr/include/c++/7/bits/basic_string.h **** 	_M_leak();
3969:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__pos];
3970:/usr/include/c++/7/bits/basic_string.h ****       }
3971:/usr/include/c++/7/bits/basic_string.h **** 
3972:/usr/include/c++/7/bits/basic_string.h ****       /**
3973:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3974:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n The index of the character to access.
3975:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
3976:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3977:/usr/include/c++/7/bits/basic_string.h ****        *
3978:/usr/include/c++/7/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
3979:/usr/include/c++/7/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
3980:/usr/include/c++/7/bits/basic_string.h ****        *  throws out_of_range if the check fails.
3981:/usr/include/c++/7/bits/basic_string.h ****        */
3982:/usr/include/c++/7/bits/basic_string.h ****       const_reference
3983:/usr/include/c++/7/bits/basic_string.h ****       at(size_type __n) const
3984:/usr/include/c++/7/bits/basic_string.h ****       {
3985:/usr/include/c++/7/bits/basic_string.h **** 	if (__n >= this->size())
3986:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3987:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
3988:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu)"),
3989:/usr/include/c++/7/bits/basic_string.h **** 				   __n, this->size());
3990:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__n];
3991:/usr/include/c++/7/bits/basic_string.h ****       }
3992:/usr/include/c++/7/bits/basic_string.h **** 
3993:/usr/include/c++/7/bits/basic_string.h ****       /**
3994:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3995:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n The index of the character to access.
3996:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3997:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3998:/usr/include/c++/7/bits/basic_string.h ****        *
3999:/usr/include/c++/7/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4000:/usr/include/c++/7/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4001:/usr/include/c++/7/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4002:/usr/include/c++/7/bits/basic_string.h ****        *  unsharing the string.
4003:/usr/include/c++/7/bits/basic_string.h ****        */
4004:/usr/include/c++/7/bits/basic_string.h ****       reference
4005:/usr/include/c++/7/bits/basic_string.h ****       at(size_type __n)
4006:/usr/include/c++/7/bits/basic_string.h ****       {
4007:/usr/include/c++/7/bits/basic_string.h **** 	if (__n >= size())
4008:/usr/include/c++/7/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4009:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4010:/usr/include/c++/7/bits/basic_string.h **** 				       "(which is %zu)"),
4011:/usr/include/c++/7/bits/basic_string.h **** 				   __n, this->size());
4012:/usr/include/c++/7/bits/basic_string.h **** 	_M_leak();
4013:/usr/include/c++/7/bits/basic_string.h **** 	return _M_data()[__n];
4014:/usr/include/c++/7/bits/basic_string.h ****       }
4015:/usr/include/c++/7/bits/basic_string.h **** 
4016:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4017:/usr/include/c++/7/bits/basic_string.h ****       /**
4018:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4019:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
4020:/usr/include/c++/7/bits/basic_string.h ****        */
4021:/usr/include/c++/7/bits/basic_string.h ****       reference
4022:/usr/include/c++/7/bits/basic_string.h ****       front()
4023:/usr/include/c++/7/bits/basic_string.h ****       {
4024:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4025:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](0);
4026:/usr/include/c++/7/bits/basic_string.h ****       }
4027:/usr/include/c++/7/bits/basic_string.h **** 
4028:/usr/include/c++/7/bits/basic_string.h ****       /**
4029:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4030:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
4031:/usr/include/c++/7/bits/basic_string.h ****        */
4032:/usr/include/c++/7/bits/basic_string.h ****       const_reference
4033:/usr/include/c++/7/bits/basic_string.h ****       front() const noexcept
4034:/usr/include/c++/7/bits/basic_string.h ****       {
4035:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4036:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](0);
4037:/usr/include/c++/7/bits/basic_string.h ****       }
4038:/usr/include/c++/7/bits/basic_string.h **** 
4039:/usr/include/c++/7/bits/basic_string.h ****       /**
4040:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4041:/usr/include/c++/7/bits/basic_string.h ****        *  element of the %string.
4042:/usr/include/c++/7/bits/basic_string.h ****        */
4043:/usr/include/c++/7/bits/basic_string.h ****       reference
4044:/usr/include/c++/7/bits/basic_string.h ****       back()
4045:/usr/include/c++/7/bits/basic_string.h ****       {
4046:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4047:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](this->size() - 1);
4048:/usr/include/c++/7/bits/basic_string.h ****       }
4049:/usr/include/c++/7/bits/basic_string.h **** 
4050:/usr/include/c++/7/bits/basic_string.h ****       /**
4051:/usr/include/c++/7/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4052:/usr/include/c++/7/bits/basic_string.h ****        *  last element of the %string.
4053:/usr/include/c++/7/bits/basic_string.h ****        */
4054:/usr/include/c++/7/bits/basic_string.h ****       const_reference
4055:/usr/include/c++/7/bits/basic_string.h ****       back() const noexcept
4056:/usr/include/c++/7/bits/basic_string.h ****       {
4057:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4058:/usr/include/c++/7/bits/basic_string.h **** 	return operator[](this->size() - 1);
4059:/usr/include/c++/7/bits/basic_string.h ****       }
4060:/usr/include/c++/7/bits/basic_string.h **** #endif
4061:/usr/include/c++/7/bits/basic_string.h **** 
4062:/usr/include/c++/7/bits/basic_string.h ****       // Modifiers:
4063:/usr/include/c++/7/bits/basic_string.h ****       /**
4064:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string to this string.
4065:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
4066:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4067:/usr/include/c++/7/bits/basic_string.h ****        */
4068:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4069:/usr/include/c++/7/bits/basic_string.h ****       operator+=(const basic_string& __str)
4070:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__str); }
4071:/usr/include/c++/7/bits/basic_string.h **** 
4072:/usr/include/c++/7/bits/basic_string.h ****       /**
4073:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C string.
4074:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
4075:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4076:/usr/include/c++/7/bits/basic_string.h ****        */
4077:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4078:/usr/include/c++/7/bits/basic_string.h ****       operator+=(const _CharT* __s)
4079:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__s); }
4080:/usr/include/c++/7/bits/basic_string.h **** 
4081:/usr/include/c++/7/bits/basic_string.h ****       /**
4082:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a character.
4083:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to append.
4084:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4085:/usr/include/c++/7/bits/basic_string.h ****        */
4086:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4087:/usr/include/c++/7/bits/basic_string.h ****       operator+=(_CharT __c)
4088:/usr/include/c++/7/bits/basic_string.h ****       { 
4089:/usr/include/c++/7/bits/basic_string.h **** 	this->push_back(__c);
4090:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
4091:/usr/include/c++/7/bits/basic_string.h ****       }
4092:/usr/include/c++/7/bits/basic_string.h **** 
4093:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4094:/usr/include/c++/7/bits/basic_string.h ****       /**
4095:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4096:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4097:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4098:/usr/include/c++/7/bits/basic_string.h ****        */
4099:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4100:/usr/include/c++/7/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4101:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4102:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4103:/usr/include/c++/7/bits/basic_string.h **** 
4104:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
4105:/usr/include/c++/7/bits/basic_string.h ****       /**
4106:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string_view.
4107:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4108:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4109:/usr/include/c++/7/bits/basic_string.h ****        */
4110:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4111:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4112:/usr/include/c++/7/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4113:/usr/include/c++/7/bits/basic_string.h **** 	{ return this->append(__svt); }
4114:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
4115:/usr/include/c++/7/bits/basic_string.h **** 
4116:/usr/include/c++/7/bits/basic_string.h ****       /**
4117:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string to this string.
4118:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
4119:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4120:/usr/include/c++/7/bits/basic_string.h ****        */
4121:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4122:/usr/include/c++/7/bits/basic_string.h ****       append(const basic_string& __str);
4123:/usr/include/c++/7/bits/basic_string.h **** 
4124:/usr/include/c++/7/bits/basic_string.h ****       /**
4125:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a substring.
4126:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to append.
4127:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4128:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4129:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4130:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4131:/usr/include/c++/7/bits/basic_string.h ****        *
4132:/usr/include/c++/7/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4133:/usr/include/c++/7/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4134:/usr/include/c++/7/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4135:/usr/include/c++/7/bits/basic_string.h ****        *  remainder of @a __str is appended.
4136:/usr/include/c++/7/bits/basic_string.h ****        */
4137:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4138:/usr/include/c++/7/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
4139:/usr/include/c++/7/bits/basic_string.h **** 
4140:/usr/include/c++/7/bits/basic_string.h ****       /**
4141:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C substring.
4142:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
4143:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4144:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4145:/usr/include/c++/7/bits/basic_string.h ****        */
4146:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4147:/usr/include/c++/7/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4148:/usr/include/c++/7/bits/basic_string.h **** 
4149:/usr/include/c++/7/bits/basic_string.h ****       /**
4150:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a C string.
4151:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to append.
4152:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4153:/usr/include/c++/7/bits/basic_string.h ****        */
4154:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4155:/usr/include/c++/7/bits/basic_string.h ****       append(const _CharT* __s)
4156:/usr/include/c++/7/bits/basic_string.h ****       {
4157:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4158:/usr/include/c++/7/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4159:/usr/include/c++/7/bits/basic_string.h ****       }
4160:/usr/include/c++/7/bits/basic_string.h **** 
4161:/usr/include/c++/7/bits/basic_string.h ****       /**
4162:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append multiple characters.
4163:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4164:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to use.
4165:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4166:/usr/include/c++/7/bits/basic_string.h ****        *
4167:/usr/include/c++/7/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4168:/usr/include/c++/7/bits/basic_string.h ****        */
4169:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4170:/usr/include/c++/7/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4171:/usr/include/c++/7/bits/basic_string.h **** 
4172:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4173:/usr/include/c++/7/bits/basic_string.h ****       /**
4174:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4175:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4176:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4177:/usr/include/c++/7/bits/basic_string.h ****        */
4178:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4179:/usr/include/c++/7/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4180:/usr/include/c++/7/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4181:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4182:/usr/include/c++/7/bits/basic_string.h **** 
4183:/usr/include/c++/7/bits/basic_string.h ****       /**
4184:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a range of characters.
4185:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4186:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4187:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4188:/usr/include/c++/7/bits/basic_string.h ****        *
4189:/usr/include/c++/7/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4190:/usr/include/c++/7/bits/basic_string.h ****        */
4191:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
4192:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
4193:/usr/include/c++/7/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4194:/usr/include/c++/7/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4195:/usr/include/c++/7/bits/basic_string.h **** 
4196:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
4197:/usr/include/c++/7/bits/basic_string.h ****       /**
4198:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a string_view.
4199:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4200:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4201:/usr/include/c++/7/bits/basic_string.h ****        */
4202:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4203:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4204:/usr/include/c++/7/bits/basic_string.h **** 	append(const _Tp& __svt)
4205:/usr/include/c++/7/bits/basic_string.h **** 	{
4206:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4207:/usr/include/c++/7/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4208:/usr/include/c++/7/bits/basic_string.h **** 	}
4209:/usr/include/c++/7/bits/basic_string.h **** 
4210:/usr/include/c++/7/bits/basic_string.h ****       /**
4211:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4212:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4213:/usr/include/c++/7/bits/basic_string.h ****        *               from.
4214:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4215:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4216:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4217:/usr/include/c++/7/bits/basic_string.h ****        */
4218:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4219:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4220:/usr/include/c++/7/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4221:/usr/include/c++/7/bits/basic_string.h **** 	{
4222:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4223:/usr/include/c++/7/bits/basic_string.h **** 	  return append(__sv.data()
4224:/usr/include/c++/7/bits/basic_string.h **** 			+ __sv._M_check(__pos, "basic_string::append"),
4225:/usr/include/c++/7/bits/basic_string.h **** 			__sv._M_limit(__pos, __n));
4226:/usr/include/c++/7/bits/basic_string.h **** 	}
4227:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
4228:/usr/include/c++/7/bits/basic_string.h **** 
4229:/usr/include/c++/7/bits/basic_string.h ****       /**
4230:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Append a single character.
4231:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to append.
4232:/usr/include/c++/7/bits/basic_string.h ****        */
4233:/usr/include/c++/7/bits/basic_string.h ****       void
4234:/usr/include/c++/7/bits/basic_string.h ****       push_back(_CharT __c)
4235:/usr/include/c++/7/bits/basic_string.h ****       { 
4236:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4237:/usr/include/c++/7/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4238:/usr/include/c++/7/bits/basic_string.h **** 	  this->reserve(__len);
4239:/usr/include/c++/7/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4240:/usr/include/c++/7/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4241:/usr/include/c++/7/bits/basic_string.h ****       }
4242:/usr/include/c++/7/bits/basic_string.h **** 
4243:/usr/include/c++/7/bits/basic_string.h ****       /**
4244:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4245:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string to use.
4246:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4247:/usr/include/c++/7/bits/basic_string.h ****        */
4248:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4249:/usr/include/c++/7/bits/basic_string.h ****       assign(const basic_string& __str);
4250:/usr/include/c++/7/bits/basic_string.h **** 
4251:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4252:/usr/include/c++/7/bits/basic_string.h ****       /**
4253:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4254:/usr/include/c++/7/bits/basic_string.h ****        *  @param  __str  Source string to use.
4255:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4256:/usr/include/c++/7/bits/basic_string.h ****        *
4257:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4258:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4259:/usr/include/c++/7/bits/basic_string.h ****        */
4260:/usr/include/c++/7/bits/basic_string.h ****       // PR 58265, this should be noexcept.
4261:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4262:/usr/include/c++/7/bits/basic_string.h ****       assign(basic_string&& __str)
4263:/usr/include/c++/7/bits/basic_string.h ****       {
4264:/usr/include/c++/7/bits/basic_string.h **** 	this->swap(__str);
4265:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
4266:/usr/include/c++/7/bits/basic_string.h ****       }
4267:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4268:/usr/include/c++/7/bits/basic_string.h **** 
4269:/usr/include/c++/7/bits/basic_string.h ****       /**
4270:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4271:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to use.
4272:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4273:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4274:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4275:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4276:/usr/include/c++/7/bits/basic_string.h ****        *
4277:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4278:/usr/include/c++/7/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4279:/usr/include/c++/7/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4280:/usr/include/c++/7/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4281:/usr/include/c++/7/bits/basic_string.h ****        */
4282:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4283:/usr/include/c++/7/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
4284:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__str._M_data()
4285:/usr/include/c++/7/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4286:/usr/include/c++/7/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4287:/usr/include/c++/7/bits/basic_string.h **** 
4288:/usr/include/c++/7/bits/basic_string.h ****       /**
4289:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4290:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to use.
4291:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4292:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4293:/usr/include/c++/7/bits/basic_string.h ****        *
4294:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4295:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4296:/usr/include/c++/7/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4297:/usr/include/c++/7/bits/basic_string.h ****        */
4298:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4299:/usr/include/c++/7/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4300:/usr/include/c++/7/bits/basic_string.h **** 
4301:/usr/include/c++/7/bits/basic_string.h ****       /**
4302:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4303:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to use.
4304:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4305:/usr/include/c++/7/bits/basic_string.h ****        *
4306:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4307:/usr/include/c++/7/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4308:/usr/include/c++/7/bits/basic_string.h ****        *  function returns.
4309:/usr/include/c++/7/bits/basic_string.h ****        */
4310:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4311:/usr/include/c++/7/bits/basic_string.h ****       assign(const _CharT* __s)
4312:/usr/include/c++/7/bits/basic_string.h ****       {
4313:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4314:/usr/include/c++/7/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4315:/usr/include/c++/7/bits/basic_string.h ****       }
4316:/usr/include/c++/7/bits/basic_string.h **** 
4317:/usr/include/c++/7/bits/basic_string.h ****       /**
4318:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4319:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4320:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to use.
4321:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4322:/usr/include/c++/7/bits/basic_string.h ****        *
4323:/usr/include/c++/7/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4324:/usr/include/c++/7/bits/basic_string.h ****        *  character @a __c.
4325:/usr/include/c++/7/bits/basic_string.h ****        */
4326:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4327:/usr/include/c++/7/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4328:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4329:/usr/include/c++/7/bits/basic_string.h **** 
4330:/usr/include/c++/7/bits/basic_string.h ****       /**
4331:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4332:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4333:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4334:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4335:/usr/include/c++/7/bits/basic_string.h ****        *
4336:/usr/include/c++/7/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4337:/usr/include/c++/7/bits/basic_string.h ****       */
4338:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
4339:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
4340:/usr/include/c++/7/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4341:/usr/include/c++/7/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4342:/usr/include/c++/7/bits/basic_string.h **** 
4343:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4344:/usr/include/c++/7/bits/basic_string.h ****       /**
4345:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4346:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4347:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4348:/usr/include/c++/7/bits/basic_string.h ****        */
4349:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4350:/usr/include/c++/7/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4351:/usr/include/c++/7/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4352:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4353:/usr/include/c++/7/bits/basic_string.h **** 
4354:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
4355:/usr/include/c++/7/bits/basic_string.h ****       /**
4356:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4357:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4358:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4359:/usr/include/c++/7/bits/basic_string.h ****        */
4360:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4361:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4362:/usr/include/c++/7/bits/basic_string.h **** 	assign(const _Tp& __svt)
4363:/usr/include/c++/7/bits/basic_string.h **** 	{
4364:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4365:/usr/include/c++/7/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4366:/usr/include/c++/7/bits/basic_string.h **** 	}
4367:/usr/include/c++/7/bits/basic_string.h **** 
4368:/usr/include/c++/7/bits/basic_string.h ****       /**
4369:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4370:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4371:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4372:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4373:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4374:/usr/include/c++/7/bits/basic_string.h ****        */
4375:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4376:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4377:/usr/include/c++/7/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4378:/usr/include/c++/7/bits/basic_string.h **** 	{
4379:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4380:/usr/include/c++/7/bits/basic_string.h **** 	  return assign(__sv.data()
4381:/usr/include/c++/7/bits/basic_string.h **** 			+ __sv._M_check(__pos, "basic_string::assign"),
4382:/usr/include/c++/7/bits/basic_string.h **** 			__sv._M_limit(__pos, __n));
4383:/usr/include/c++/7/bits/basic_string.h **** 	}
4384:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
4385:/usr/include/c++/7/bits/basic_string.h **** 
4386:/usr/include/c++/7/bits/basic_string.h ****       /**
4387:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4388:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4389:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4390:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
4391:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4392:/usr/include/c++/7/bits/basic_string.h ****        *
4393:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4394:/usr/include/c++/7/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4395:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4396:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4397:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4398:/usr/include/c++/7/bits/basic_string.h ****       */
4399:/usr/include/c++/7/bits/basic_string.h ****       void
4400:/usr/include/c++/7/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4401:/usr/include/c++/7/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4402:/usr/include/c++/7/bits/basic_string.h **** 
4403:/usr/include/c++/7/bits/basic_string.h ****       /**
4404:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4405:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4406:/usr/include/c++/7/bits/basic_string.h ****        *  @param __beg  Start of range.
4407:/usr/include/c++/7/bits/basic_string.h ****        *  @param __end  End of range.
4408:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4409:/usr/include/c++/7/bits/basic_string.h ****        *
4410:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4411:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4412:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4413:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4414:/usr/include/c++/7/bits/basic_string.h ****       */
4415:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
4416:/usr/include/c++/7/bits/basic_string.h ****         void
4417:/usr/include/c++/7/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4418:/usr/include/c++/7/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4419:/usr/include/c++/7/bits/basic_string.h **** 
4420:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4421:/usr/include/c++/7/bits/basic_string.h ****       /**
4422:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4423:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4424:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4425:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4426:/usr/include/c++/7/bits/basic_string.h ****        */
4427:/usr/include/c++/7/bits/basic_string.h ****       void
4428:/usr/include/c++/7/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4429:/usr/include/c++/7/bits/basic_string.h ****       {
4430:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4431:/usr/include/c++/7/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4432:/usr/include/c++/7/bits/basic_string.h ****       }
4433:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4434:/usr/include/c++/7/bits/basic_string.h **** 
4435:/usr/include/c++/7/bits/basic_string.h ****       /**
4436:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert value of a string.
4437:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4438:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to insert.
4439:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4440:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4441:/usr/include/c++/7/bits/basic_string.h ****        *
4442:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4443:/usr/include/c++/7/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4444:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4445:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4446:/usr/include/c++/7/bits/basic_string.h ****       */
4447:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4448:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4449:/usr/include/c++/7/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4450:/usr/include/c++/7/bits/basic_string.h **** 
4451:/usr/include/c++/7/bits/basic_string.h ****       /**
4452:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a substring.
4453:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4454:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  The string to insert.
4455:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4456:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4457:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4458:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4459:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4460:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4461:/usr/include/c++/7/bits/basic_string.h ****        *
4462:/usr/include/c++/7/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4463:/usr/include/c++/7/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4464:/usr/include/c++/7/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4465:/usr/include/c++/7/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4466:/usr/include/c++/7/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4467:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4468:/usr/include/c++/7/bits/basic_string.h ****       */
4469:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4470:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4471:/usr/include/c++/7/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
4472:/usr/include/c++/7/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4473:/usr/include/c++/7/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4474:/usr/include/c++/7/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4475:/usr/include/c++/7/bits/basic_string.h **** 
4476:/usr/include/c++/7/bits/basic_string.h ****       /**
4477:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a C substring.
4478:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4479:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to insert.
4480:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4481:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4482:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4483:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4484:/usr/include/c++/7/bits/basic_string.h ****        *  string.
4485:/usr/include/c++/7/bits/basic_string.h ****        *
4486:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4487:/usr/include/c++/7/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4488:/usr/include/c++/7/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4489:/usr/include/c++/7/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4490:/usr/include/c++/7/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4491:/usr/include/c++/7/bits/basic_string.h ****       */
4492:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4493:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4494:/usr/include/c++/7/bits/basic_string.h **** 
4495:/usr/include/c++/7/bits/basic_string.h ****       /**
4496:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a C string.
4497:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4498:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  The C string to insert.
4499:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4500:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4501:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4502:/usr/include/c++/7/bits/basic_string.h ****        *  string.
4503:/usr/include/c++/7/bits/basic_string.h ****        *
4504:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4505:/usr/include/c++/7/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4506:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4507:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4508:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
4509:/usr/include/c++/7/bits/basic_string.h ****       */
4510:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4511:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4512:/usr/include/c++/7/bits/basic_string.h ****       {
4513:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4514:/usr/include/c++/7/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4515:/usr/include/c++/7/bits/basic_string.h ****       }
4516:/usr/include/c++/7/bits/basic_string.h **** 
4517:/usr/include/c++/7/bits/basic_string.h ****       /**
4518:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4519:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4520:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4521:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
4522:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4523:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4524:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4525:/usr/include/c++/7/bits/basic_string.h ****        *  string.
4526:/usr/include/c++/7/bits/basic_string.h ****        *
4527:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4528:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4529:/usr/include/c++/7/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4530:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4531:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4532:/usr/include/c++/7/bits/basic_string.h ****       */
4533:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4534:/usr/include/c++/7/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4535:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4536:/usr/include/c++/7/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4537:/usr/include/c++/7/bits/basic_string.h **** 
4538:/usr/include/c++/7/bits/basic_string.h ****       /**
4539:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert one character.
4540:/usr/include/c++/7/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4541:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  The character to insert.
4542:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4543:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4544:/usr/include/c++/7/bits/basic_string.h ****        *
4545:/usr/include/c++/7/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4546:/usr/include/c++/7/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4547:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4548:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4549:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4550:/usr/include/c++/7/bits/basic_string.h ****       */
4551:/usr/include/c++/7/bits/basic_string.h ****       iterator
4552:/usr/include/c++/7/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4553:/usr/include/c++/7/bits/basic_string.h ****       {
4554:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4555:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4556:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4557:/usr/include/c++/7/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4558:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4559:/usr/include/c++/7/bits/basic_string.h ****       }
4560:/usr/include/c++/7/bits/basic_string.h **** 
4561:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
4562:/usr/include/c++/7/bits/basic_string.h ****       /**
4563:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a string_view.
4564:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4565:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4566:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4567:/usr/include/c++/7/bits/basic_string.h ****       */
4568:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4569:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4570:/usr/include/c++/7/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4571:/usr/include/c++/7/bits/basic_string.h **** 	{
4572:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4573:/usr/include/c++/7/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4574:/usr/include/c++/7/bits/basic_string.h **** 	}
4575:/usr/include/c++/7/bits/basic_string.h **** 
4576:/usr/include/c++/7/bits/basic_string.h ****       /**
4577:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Insert a string_view.
4578:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4579:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4580:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
4581:/usr/include/c++/7/bits/basic_string.h ****        *  from.
4582:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4583:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4584:/usr/include/c++/7/bits/basic_string.h ****       */
4585:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4586:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4587:/usr/include/c++/7/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4588:/usr/include/c++/7/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4589:/usr/include/c++/7/bits/basic_string.h **** 	{
4590:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4591:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4592:/usr/include/c++/7/bits/basic_string.h **** 			       + __sv._M_check(__pos2, "basic_string::insert"),
4593:/usr/include/c++/7/bits/basic_string.h **** 			       __sv._M_limit(__pos2, __n));
4594:/usr/include/c++/7/bits/basic_string.h **** 	}
4595:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
4596:/usr/include/c++/7/bits/basic_string.h **** 
4597:/usr/include/c++/7/bits/basic_string.h ****       /**
4598:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove characters.
4599:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4600:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4601:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4602:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4603:/usr/include/c++/7/bits/basic_string.h ****        *  string.
4604:/usr/include/c++/7/bits/basic_string.h ****        *
4605:/usr/include/c++/7/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4606:/usr/include/c++/7/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4607:/usr/include/c++/7/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4608:/usr/include/c++/7/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4609:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4610:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4611:/usr/include/c++/7/bits/basic_string.h ****       */
4612:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4613:/usr/include/c++/7/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4614:/usr/include/c++/7/bits/basic_string.h ****       { 
4615:/usr/include/c++/7/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4616:/usr/include/c++/7/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4617:/usr/include/c++/7/bits/basic_string.h **** 	return *this;
4618:/usr/include/c++/7/bits/basic_string.h ****       }
4619:/usr/include/c++/7/bits/basic_string.h **** 
4620:/usr/include/c++/7/bits/basic_string.h ****       /**
4621:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove one character.
4622:/usr/include/c++/7/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4623:/usr/include/c++/7/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4624:/usr/include/c++/7/bits/basic_string.h ****        *
4625:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4626:/usr/include/c++/7/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4627:/usr/include/c++/7/bits/basic_string.h ****       */
4628:/usr/include/c++/7/bits/basic_string.h ****       iterator
4629:/usr/include/c++/7/bits/basic_string.h ****       erase(iterator __position)
4630:/usr/include/c++/7/bits/basic_string.h ****       {
4631:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4632:/usr/include/c++/7/bits/basic_string.h **** 				 && __position < _M_iend());
4633:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4634:/usr/include/c++/7/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4635:/usr/include/c++/7/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4636:/usr/include/c++/7/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4637:/usr/include/c++/7/bits/basic_string.h ****       }
4638:/usr/include/c++/7/bits/basic_string.h **** 
4639:/usr/include/c++/7/bits/basic_string.h ****       /**
4640:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4641:/usr/include/c++/7/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4642:/usr/include/c++/7/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4643:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4644:/usr/include/c++/7/bits/basic_string.h ****        *
4645:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4646:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4647:/usr/include/c++/7/bits/basic_string.h ****       */
4648:/usr/include/c++/7/bits/basic_string.h ****       iterator
4649:/usr/include/c++/7/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4650:/usr/include/c++/7/bits/basic_string.h ****  
4651:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4652:/usr/include/c++/7/bits/basic_string.h ****       /**
4653:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Remove the last character.
4654:/usr/include/c++/7/bits/basic_string.h ****        *
4655:/usr/include/c++/7/bits/basic_string.h ****        *  The string must be non-empty.
4656:/usr/include/c++/7/bits/basic_string.h ****        */
4657:/usr/include/c++/7/bits/basic_string.h ****       void
4658:/usr/include/c++/7/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4659:/usr/include/c++/7/bits/basic_string.h ****       {
4660:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4661:/usr/include/c++/7/bits/basic_string.h **** 	erase(size() - 1, 1);
4662:/usr/include/c++/7/bits/basic_string.h ****       }
4663:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4664:/usr/include/c++/7/bits/basic_string.h **** 
4665:/usr/include/c++/7/bits/basic_string.h ****       /**
4666:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4667:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4668:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4669:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to insert.
4670:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4671:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4672:/usr/include/c++/7/bits/basic_string.h ****        *  string.
4673:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4674:/usr/include/c++/7/bits/basic_string.h ****        *
4675:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4676:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4677:/usr/include/c++/7/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4678:/usr/include/c++/7/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4679:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4680:/usr/include/c++/7/bits/basic_string.h ****        *  error is thrown.
4681:/usr/include/c++/7/bits/basic_string.h ****       */
4682:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4683:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4684:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4685:/usr/include/c++/7/bits/basic_string.h **** 
4686:/usr/include/c++/7/bits/basic_string.h ****       /**
4687:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4688:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4689:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4690:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to insert.
4691:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4692:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4693:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4694:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4695:/usr/include/c++/7/bits/basic_string.h ****        *  __str.size().
4696:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4697:/usr/include/c++/7/bits/basic_string.h ****        *
4698:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4699:/usr/include/c++/7/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4700:/usr/include/c++/7/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4701:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4702:/usr/include/c++/7/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4703:/usr/include/c++/7/bits/basic_string.h ****       */
4704:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4705:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4706:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
4707:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4708:/usr/include/c++/7/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4709:/usr/include/c++/7/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4710:/usr/include/c++/7/bits/basic_string.h **** 
4711:/usr/include/c++/7/bits/basic_string.h ****       /**
4712:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4713:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4714:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4715:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to insert.
4716:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4717:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4718:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4719:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4720:/usr/include/c++/7/bits/basic_string.h ****        *
4721:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4722:/usr/include/c++/7/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4723:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4724:/usr/include/c++/7/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4725:/usr/include/c++/7/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4726:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4727:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.
4728:/usr/include/c++/7/bits/basic_string.h ****       */
4729:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4730:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4731:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __n2);
4732:/usr/include/c++/7/bits/basic_string.h **** 
4733:/usr/include/c++/7/bits/basic_string.h ****       /**
4734:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4735:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4736:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4737:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to insert.
4738:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4739:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4740:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4741:/usr/include/c++/7/bits/basic_string.h ****        *
4742:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4743:/usr/include/c++/7/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4744:/usr/include/c++/7/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4745:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4746:/usr/include/c++/7/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4747:/usr/include/c++/7/bits/basic_string.h ****        *  change if an error is thrown.
4748:/usr/include/c++/7/bits/basic_string.h ****       */
4749:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4750:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4751:/usr/include/c++/7/bits/basic_string.h ****       {
4752:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4753:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4754:/usr/include/c++/7/bits/basic_string.h ****       }
4755:/usr/include/c++/7/bits/basic_string.h **** 
4756:/usr/include/c++/7/bits/basic_string.h ****       /**
4757:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4758:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4759:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4760:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4761:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to insert.
4762:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4763:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4764:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4765:/usr/include/c++/7/bits/basic_string.h ****        *
4766:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4767:/usr/include/c++/7/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4768:/usr/include/c++/7/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4769:/usr/include/c++/7/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4770:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4771:/usr/include/c++/7/bits/basic_string.h ****        *  is thrown.
4772:/usr/include/c++/7/bits/basic_string.h ****       */
4773:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4774:/usr/include/c++/7/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4775:/usr/include/c++/7/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4776:/usr/include/c++/7/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4777:/usr/include/c++/7/bits/basic_string.h **** 
4778:/usr/include/c++/7/bits/basic_string.h ****       /**
4779:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4780:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4781:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4782:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String value to insert.
4783:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4784:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4785:/usr/include/c++/7/bits/basic_string.h ****        *
4786:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4787:/usr/include/c++/7/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4788:/usr/include/c++/7/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4789:/usr/include/c++/7/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4790:/usr/include/c++/7/bits/basic_string.h ****       */
4791:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4792:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4793:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4794:/usr/include/c++/7/bits/basic_string.h **** 
4795:/usr/include/c++/7/bits/basic_string.h ****       /**
4796:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4797:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4798:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4799:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string value to insert.
4800:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4801:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4802:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4803:/usr/include/c++/7/bits/basic_string.h ****        *
4804:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4805:/usr/include/c++/7/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4806:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4807:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4808:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
4809:/usr/include/c++/7/bits/basic_string.h ****       */
4810:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4811:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4812:/usr/include/c++/7/bits/basic_string.h ****       {
4813:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4814:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4815:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4816:/usr/include/c++/7/bits/basic_string.h ****       }
4817:/usr/include/c++/7/bits/basic_string.h **** 
4818:/usr/include/c++/7/bits/basic_string.h ****       /**
4819:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4820:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4821:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4822:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string value to insert.
4823:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4824:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4825:/usr/include/c++/7/bits/basic_string.h ****        *
4826:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4827:/usr/include/c++/7/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4828:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4829:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4830:/usr/include/c++/7/bits/basic_string.h ****       */
4831:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4832:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4833:/usr/include/c++/7/bits/basic_string.h ****       {
4834:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4835:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4836:/usr/include/c++/7/bits/basic_string.h ****       }
4837:/usr/include/c++/7/bits/basic_string.h **** 
4838:/usr/include/c++/7/bits/basic_string.h ****       /**
4839:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4840:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4841:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4842:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4843:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to insert.
4844:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4845:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4846:/usr/include/c++/7/bits/basic_string.h ****        *
4847:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4848:/usr/include/c++/7/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4849:/usr/include/c++/7/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4850:/usr/include/c++/7/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4851:/usr/include/c++/7/bits/basic_string.h ****       */
4852:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4853:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4854:/usr/include/c++/7/bits/basic_string.h ****       {
4855:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4856:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4857:/usr/include/c++/7/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4858:/usr/include/c++/7/bits/basic_string.h ****       }
4859:/usr/include/c++/7/bits/basic_string.h **** 
4860:/usr/include/c++/7/bits/basic_string.h ****       /**
4861:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4862:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4863:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4864:/usr/include/c++/7/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4865:/usr/include/c++/7/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4866:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4867:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4868:/usr/include/c++/7/bits/basic_string.h ****        *
4869:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4870:/usr/include/c++/7/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4871:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4872:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4873:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
4874:/usr/include/c++/7/bits/basic_string.h ****       */
4875:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
4876:/usr/include/c++/7/bits/basic_string.h ****         basic_string&
4877:/usr/include/c++/7/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4878:/usr/include/c++/7/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4879:/usr/include/c++/7/bits/basic_string.h ****         {
4880:/usr/include/c++/7/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4881:/usr/include/c++/7/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4882:/usr/include/c++/7/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4883:/usr/include/c++/7/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4884:/usr/include/c++/7/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4885:/usr/include/c++/7/bits/basic_string.h **** 	}
4886:/usr/include/c++/7/bits/basic_string.h **** 
4887:/usr/include/c++/7/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4888:/usr/include/c++/7/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4889:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4890:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4891:/usr/include/c++/7/bits/basic_string.h ****       {
4892:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4893:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4894:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4895:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4896:/usr/include/c++/7/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4897:/usr/include/c++/7/bits/basic_string.h ****       }
4898:/usr/include/c++/7/bits/basic_string.h **** 
4899:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4900:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4901:/usr/include/c++/7/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4902:/usr/include/c++/7/bits/basic_string.h ****       {
4903:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4904:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4905:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4906:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4907:/usr/include/c++/7/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4908:/usr/include/c++/7/bits/basic_string.h ****       }
4909:/usr/include/c++/7/bits/basic_string.h **** 
4910:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4911:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4912:/usr/include/c++/7/bits/basic_string.h ****       {
4913:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4914:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4915:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4916:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4917:/usr/include/c++/7/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4918:/usr/include/c++/7/bits/basic_string.h ****       }
4919:/usr/include/c++/7/bits/basic_string.h **** 
4920:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
4921:/usr/include/c++/7/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4922:/usr/include/c++/7/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
4923:/usr/include/c++/7/bits/basic_string.h ****       {
4924:/usr/include/c++/7/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4925:/usr/include/c++/7/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4926:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4927:/usr/include/c++/7/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4928:/usr/include/c++/7/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4929:/usr/include/c++/7/bits/basic_string.h ****       }
4930:/usr/include/c++/7/bits/basic_string.h **** 
4931:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
4932:/usr/include/c++/7/bits/basic_string.h ****       /**
4933:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
4934:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4935:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4936:/usr/include/c++/7/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4937:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4938:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4939:/usr/include/c++/7/bits/basic_string.h ****        *
4940:/usr/include/c++/7/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4941:/usr/include/c++/7/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4942:/usr/include/c++/7/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4943:/usr/include/c++/7/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4944:/usr/include/c++/7/bits/basic_string.h ****        *  thrown.
4945:/usr/include/c++/7/bits/basic_string.h ****       */
4946:/usr/include/c++/7/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
4947:/usr/include/c++/7/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
4948:/usr/include/c++/7/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
4949:/usr/include/c++/7/bits/basic_string.h **** #endif // C++11
4950:/usr/include/c++/7/bits/basic_string.h **** 
4951:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
4952:/usr/include/c++/7/bits/basic_string.h ****       /**
4953:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
4954:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  The position to replace at.
4955:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
4956:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4957:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4958:/usr/include/c++/7/bits/basic_string.h ****       */
4959:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4960:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4961:/usr/include/c++/7/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
4962:/usr/include/c++/7/bits/basic_string.h **** 	{
4963:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4964:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
4965:/usr/include/c++/7/bits/basic_string.h **** 	}
4966:/usr/include/c++/7/bits/basic_string.h **** 
4967:/usr/include/c++/7/bits/basic_string.h ****       /**
4968:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
4969:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
4970:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
4971:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
4972:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
4973:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
4974:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4975:/usr/include/c++/7/bits/basic_string.h ****       */
4976:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4977:/usr/include/c++/7/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4978:/usr/include/c++/7/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
4979:/usr/include/c++/7/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
4980:/usr/include/c++/7/bits/basic_string.h **** 	{
4981:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4982:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
4983:/usr/include/c++/7/bits/basic_string.h **** 	      __sv.data() + __sv._M_check(__pos2, "basic_string::replace"),
4984:/usr/include/c++/7/bits/basic_string.h **** 	      __sv._M_limit(__pos2, __n2));
4985:/usr/include/c++/7/bits/basic_string.h **** 	}
4986:/usr/include/c++/7/bits/basic_string.h **** 
4987:/usr/include/c++/7/bits/basic_string.h ****       /**
4988:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
4989:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
4990:/usr/include/c++/7/bits/basic_string.h ****           to replace at.
4991:/usr/include/c++/7/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
4992:/usr/include/c++/7/bits/basic_string.h ****           for the replace.
4993:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
4994:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Reference to this string.
4995:/usr/include/c++/7/bits/basic_string.h ****       */
4996:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
4997:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4998:/usr/include/c++/7/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
4999:/usr/include/c++/7/bits/basic_string.h **** 	{
5000:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5001:/usr/include/c++/7/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5002:/usr/include/c++/7/bits/basic_string.h **** 	}
5003:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5004:/usr/include/c++/7/bits/basic_string.h **** 
5005:/usr/include/c++/7/bits/basic_string.h ****     private:
5006:/usr/include/c++/7/bits/basic_string.h ****       template<class _Integer>
5007:/usr/include/c++/7/bits/basic_string.h **** 	basic_string&
5008:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5009:/usr/include/c++/7/bits/basic_string.h **** 			    _Integer __val, __true_type)
5010:/usr/include/c++/7/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5011:/usr/include/c++/7/bits/basic_string.h **** 
5012:/usr/include/c++/7/bits/basic_string.h ****       template<class _InputIterator>
5013:/usr/include/c++/7/bits/basic_string.h **** 	basic_string&
5014:/usr/include/c++/7/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5015:/usr/include/c++/7/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5016:/usr/include/c++/7/bits/basic_string.h **** 
5017:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
5018:/usr/include/c++/7/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5019:/usr/include/c++/7/bits/basic_string.h **** 		     _CharT __c);
5020:/usr/include/c++/7/bits/basic_string.h **** 
5021:/usr/include/c++/7/bits/basic_string.h ****       basic_string&
5022:/usr/include/c++/7/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5023:/usr/include/c++/7/bits/basic_string.h **** 		      size_type __n2);
5024:/usr/include/c++/7/bits/basic_string.h **** 
5025:/usr/include/c++/7/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5026:/usr/include/c++/7/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5027:/usr/include/c++/7/bits/basic_string.h ****       template<class _InIterator>
5028:/usr/include/c++/7/bits/basic_string.h ****         static _CharT*
5029:/usr/include/c++/7/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5030:/usr/include/c++/7/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5031:/usr/include/c++/7/bits/basic_string.h **** 	{
5032:/usr/include/c++/7/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5033:/usr/include/c++/7/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5034:/usr/include/c++/7/bits/basic_string.h **** 	}
5035:/usr/include/c++/7/bits/basic_string.h **** 
5036:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5037:/usr/include/c++/7/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5038:/usr/include/c++/7/bits/basic_string.h ****       template<class _Integer>
5039:/usr/include/c++/7/bits/basic_string.h ****         static _CharT*
5040:/usr/include/c++/7/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5041:/usr/include/c++/7/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5042:/usr/include/c++/7/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5043:/usr/include/c++/7/bits/basic_string.h **** 				    __end, __a); }
5044:/usr/include/c++/7/bits/basic_string.h **** 
5045:/usr/include/c++/7/bits/basic_string.h ****       static _CharT*
5046:/usr/include/c++/7/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5047:/usr/include/c++/7/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5048:/usr/include/c++/7/bits/basic_string.h **** 
5049:/usr/include/c++/7/bits/basic_string.h ****       template<class _InIterator>
5050:/usr/include/c++/7/bits/basic_string.h ****         static _CharT*
5051:/usr/include/c++/7/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5052:/usr/include/c++/7/bits/basic_string.h **** 	{
5053:/usr/include/c++/7/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5054:/usr/include/c++/7/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5055:/usr/include/c++/7/bits/basic_string.h ****         }
5056:/usr/include/c++/7/bits/basic_string.h **** 
5057:/usr/include/c++/7/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5058:/usr/include/c++/7/bits/basic_string.h ****       template<class _InIterator>
5059:/usr/include/c++/7/bits/basic_string.h ****         static _CharT*
5060:/usr/include/c++/7/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5061:/usr/include/c++/7/bits/basic_string.h **** 		      input_iterator_tag);
5062:/usr/include/c++/7/bits/basic_string.h **** 
5063:/usr/include/c++/7/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5064:/usr/include/c++/7/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5065:/usr/include/c++/7/bits/basic_string.h ****       template<class _FwdIterator>
5066:/usr/include/c++/7/bits/basic_string.h ****         static _CharT*
5067:/usr/include/c++/7/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5068:/usr/include/c++/7/bits/basic_string.h **** 		     forward_iterator_tag);
5069:/usr/include/c++/7/bits/basic_string.h **** 
5070:/usr/include/c++/7/bits/basic_string.h ****       static _CharT*
5071:/usr/include/c++/7/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5072:/usr/include/c++/7/bits/basic_string.h **** 
5073:/usr/include/c++/7/bits/basic_string.h ****     public:
5074:/usr/include/c++/7/bits/basic_string.h **** 
5075:/usr/include/c++/7/bits/basic_string.h ****       /**
5076:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5077:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5078:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5079:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5080:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Number of characters actually copied
5081:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5082:/usr/include/c++/7/bits/basic_string.h ****        *
5083:/usr/include/c++/7/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5084:/usr/include/c++/7/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5085:/usr/include/c++/7/bits/basic_string.h ****        *  out_of_range is thrown.
5086:/usr/include/c++/7/bits/basic_string.h ****       */
5087:/usr/include/c++/7/bits/basic_string.h ****       size_type
5088:/usr/include/c++/7/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5089:/usr/include/c++/7/bits/basic_string.h **** 
5090:/usr/include/c++/7/bits/basic_string.h ****       /**
5091:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5092:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String to swap with.
5093:/usr/include/c++/7/bits/basic_string.h ****        *
5094:/usr/include/c++/7/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5095:/usr/include/c++/7/bits/basic_string.h ****        *  time.
5096:/usr/include/c++/7/bits/basic_string.h ****       */
5097:/usr/include/c++/7/bits/basic_string.h ****       // PR 58265, this should be noexcept.
5098:/usr/include/c++/7/bits/basic_string.h ****       void
5099:/usr/include/c++/7/bits/basic_string.h ****       swap(basic_string& __s);
5100:/usr/include/c++/7/bits/basic_string.h **** 
5101:/usr/include/c++/7/bits/basic_string.h ****       // String operations:
5102:/usr/include/c++/7/bits/basic_string.h ****       /**
5103:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5104:/usr/include/c++/7/bits/basic_string.h ****        *
5105:/usr/include/c++/7/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5106:/usr/include/c++/7/bits/basic_string.h ****        *  happen.
5107:/usr/include/c++/7/bits/basic_string.h ****       */
5108:/usr/include/c++/7/bits/basic_string.h ****       const _CharT*
5109:/usr/include/c++/7/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5110:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
5111:/usr/include/c++/7/bits/basic_string.h **** 
5112:/usr/include/c++/7/bits/basic_string.h ****       /**
5113:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5114:/usr/include/c++/7/bits/basic_string.h ****        *
5115:/usr/include/c++/7/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5116:/usr/include/c++/7/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5117:/usr/include/c++/7/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5118:/usr/include/c++/7/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5119:/usr/include/c++/7/bits/basic_string.h ****       */
5120:/usr/include/c++/7/bits/basic_string.h ****       const _CharT*
5121:/usr/include/c++/7/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5122:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
5123:/usr/include/c++/7/bits/basic_string.h **** 
5124:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5125:/usr/include/c++/7/bits/basic_string.h ****       /**
5126:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5127:/usr/include/c++/7/bits/basic_string.h ****        *
5128:/usr/include/c++/7/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5129:/usr/include/c++/7/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5130:/usr/include/c++/7/bits/basic_string.h ****       */
5131:/usr/include/c++/7/bits/basic_string.h ****       _CharT*
5132:/usr/include/c++/7/bits/basic_string.h ****       data() noexcept
5133:/usr/include/c++/7/bits/basic_string.h ****       { return _M_data(); }
5134:/usr/include/c++/7/bits/basic_string.h **** #endif
5135:/usr/include/c++/7/bits/basic_string.h **** 
5136:/usr/include/c++/7/bits/basic_string.h ****       /**
5137:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5138:/usr/include/c++/7/bits/basic_string.h ****       */
5139:/usr/include/c++/7/bits/basic_string.h ****       allocator_type
5140:/usr/include/c++/7/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5141:/usr/include/c++/7/bits/basic_string.h ****       { return _M_dataplus; }
5142:/usr/include/c++/7/bits/basic_string.h **** 
5143:/usr/include/c++/7/bits/basic_string.h ****       /**
5144:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5145:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
5146:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5147:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5148:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5149:/usr/include/c++/7/bits/basic_string.h ****        *
5150:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5151:/usr/include/c++/7/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5152:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5153:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5154:/usr/include/c++/7/bits/basic_string.h ****       */
5155:/usr/include/c++/7/bits/basic_string.h ****       size_type
5156:/usr/include/c++/7/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5157:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5158:/usr/include/c++/7/bits/basic_string.h **** 
5159:/usr/include/c++/7/bits/basic_string.h ****       /**
5160:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a string.
5161:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to locate.
5162:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5163:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5164:/usr/include/c++/7/bits/basic_string.h ****        *
5165:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5166:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5167:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns npos.
5168:/usr/include/c++/7/bits/basic_string.h ****       */
5169:/usr/include/c++/7/bits/basic_string.h ****       size_type
5170:/usr/include/c++/7/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5171:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5172:/usr/include/c++/7/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5173:/usr/include/c++/7/bits/basic_string.h **** 
5174:/usr/include/c++/7/bits/basic_string.h ****       /**
5175:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a C string.
5176:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
5177:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5178:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5179:/usr/include/c++/7/bits/basic_string.h ****        *
5180:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5181:/usr/include/c++/7/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5182:/usr/include/c++/7/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5183:/usr/include/c++/7/bits/basic_string.h ****       */
5184:/usr/include/c++/7/bits/basic_string.h ****       size_type
5185:/usr/include/c++/7/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5186:/usr/include/c++/7/bits/basic_string.h ****       {
5187:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5188:/usr/include/c++/7/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5189:/usr/include/c++/7/bits/basic_string.h ****       }
5190:/usr/include/c++/7/bits/basic_string.h **** 
5191:/usr/include/c++/7/bits/basic_string.h ****       /**
5192:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character.
5193:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
5194:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5195:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5196:/usr/include/c++/7/bits/basic_string.h ****        *
5197:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5198:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5199:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
5200:/usr/include/c++/7/bits/basic_string.h ****       */
5201:/usr/include/c++/7/bits/basic_string.h ****       size_type
5202:/usr/include/c++/7/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5203:/usr/include/c++/7/bits/basic_string.h **** 
5204:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5205:/usr/include/c++/7/bits/basic_string.h ****       /**
5206:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5207:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5208:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5209:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5210:/usr/include/c++/7/bits/basic_string.h ****       */
5211:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5212:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5213:/usr/include/c++/7/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5214:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5215:/usr/include/c++/7/bits/basic_string.h **** 	{
5216:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5217:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5218:/usr/include/c++/7/bits/basic_string.h **** 	}
5219:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5220:/usr/include/c++/7/bits/basic_string.h **** 
5221:/usr/include/c++/7/bits/basic_string.h ****       /**
5222:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a string.
5223:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to locate.
5224:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5225:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5226:/usr/include/c++/7/bits/basic_string.h ****        *
5227:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5228:/usr/include/c++/7/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5229:/usr/include/c++/7/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5230:/usr/include/c++/7/bits/basic_string.h ****       */
5231:/usr/include/c++/7/bits/basic_string.h ****       size_type
5232:/usr/include/c++/7/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5233:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5234:/usr/include/c++/7/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5235:/usr/include/c++/7/bits/basic_string.h **** 
5236:/usr/include/c++/7/bits/basic_string.h ****       /**
5237:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5238:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
5239:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5240:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5241:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5242:/usr/include/c++/7/bits/basic_string.h ****        *
5243:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5244:/usr/include/c++/7/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5245:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5246:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5247:/usr/include/c++/7/bits/basic_string.h ****       */
5248:/usr/include/c++/7/bits/basic_string.h ****       size_type
5249:/usr/include/c++/7/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5250:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5251:/usr/include/c++/7/bits/basic_string.h **** 
5252:/usr/include/c++/7/bits/basic_string.h ****       /**
5253:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5254:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to locate.
5255:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5256:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5257:/usr/include/c++/7/bits/basic_string.h ****        *
5258:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5259:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5260:/usr/include/c++/7/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5261:/usr/include/c++/7/bits/basic_string.h ****       */
5262:/usr/include/c++/7/bits/basic_string.h ****       size_type
5263:/usr/include/c++/7/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5264:/usr/include/c++/7/bits/basic_string.h ****       {
5265:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5266:/usr/include/c++/7/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5267:/usr/include/c++/7/bits/basic_string.h ****       }
5268:/usr/include/c++/7/bits/basic_string.h **** 
5269:/usr/include/c++/7/bits/basic_string.h ****       /**
5270:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character.
5271:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
5272:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5273:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5274:/usr/include/c++/7/bits/basic_string.h ****        *
5275:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5276:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5277:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
5278:/usr/include/c++/7/bits/basic_string.h ****       */
5279:/usr/include/c++/7/bits/basic_string.h ****       size_type
5280:/usr/include/c++/7/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5281:/usr/include/c++/7/bits/basic_string.h **** 
5282:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5283:/usr/include/c++/7/bits/basic_string.h ****       /**
5284:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5285:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5286:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5287:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5288:/usr/include/c++/7/bits/basic_string.h ****       */
5289:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5290:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5291:/usr/include/c++/7/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5292:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5293:/usr/include/c++/7/bits/basic_string.h **** 	{
5294:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5295:/usr/include/c++/7/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5296:/usr/include/c++/7/bits/basic_string.h **** 	}
5297:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5298:/usr/include/c++/7/bits/basic_string.h **** 
5299:/usr/include/c++/7/bits/basic_string.h ****       /**
5300:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5301:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5302:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5303:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5304:/usr/include/c++/7/bits/basic_string.h ****        *
5305:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5306:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5307:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5308:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5309:/usr/include/c++/7/bits/basic_string.h ****       */
5310:/usr/include/c++/7/bits/basic_string.h ****       size_type
5311:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5312:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5313:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5314:/usr/include/c++/7/bits/basic_string.h **** 
5315:/usr/include/c++/7/bits/basic_string.h ****       /**
5316:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5317:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5318:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5319:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5320:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5321:/usr/include/c++/7/bits/basic_string.h ****        *
5322:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5323:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5324:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5325:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
5326:/usr/include/c++/7/bits/basic_string.h ****       */
5327:/usr/include/c++/7/bits/basic_string.h ****       size_type
5328:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5329:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5330:/usr/include/c++/7/bits/basic_string.h **** 
5331:/usr/include/c++/7/bits/basic_string.h ****       /**
5332:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5333:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5334:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5335:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5336:/usr/include/c++/7/bits/basic_string.h ****        *
5337:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5338:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5339:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5340:/usr/include/c++/7/bits/basic_string.h ****       */
5341:/usr/include/c++/7/bits/basic_string.h ****       size_type
5342:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5343:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5344:/usr/include/c++/7/bits/basic_string.h ****       {
5345:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5346:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5347:/usr/include/c++/7/bits/basic_string.h ****       }
5348:/usr/include/c++/7/bits/basic_string.h **** 
5349:/usr/include/c++/7/bits/basic_string.h ****       /**
5350:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character.
5351:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
5352:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5353:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5354:/usr/include/c++/7/bits/basic_string.h ****        *
5355:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5356:/usr/include/c++/7/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5357:/usr/include/c++/7/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5358:/usr/include/c++/7/bits/basic_string.h ****        *
5359:/usr/include/c++/7/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5360:/usr/include/c++/7/bits/basic_string.h ****       */
5361:/usr/include/c++/7/bits/basic_string.h ****       size_type
5362:/usr/include/c++/7/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5363:/usr/include/c++/7/bits/basic_string.h ****       { return this->find(__c, __pos); }
5364:/usr/include/c++/7/bits/basic_string.h **** 
5365:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5366:/usr/include/c++/7/bits/basic_string.h ****       /**
5367:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5368:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5369:/usr/include/c++/7/bits/basic_string.h ****        *                characters to locate.
5370:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5371:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5372:/usr/include/c++/7/bits/basic_string.h ****       */
5373:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5374:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5375:/usr/include/c++/7/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5376:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5377:/usr/include/c++/7/bits/basic_string.h **** 	{
5378:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5379:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5380:/usr/include/c++/7/bits/basic_string.h **** 	}
5381:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5382:/usr/include/c++/7/bits/basic_string.h **** 
5383:/usr/include/c++/7/bits/basic_string.h ****       /**
5384:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5385:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5386:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5387:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5388:/usr/include/c++/7/bits/basic_string.h ****        *
5389:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5390:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5391:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5392:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5393:/usr/include/c++/7/bits/basic_string.h ****       */
5394:/usr/include/c++/7/bits/basic_string.h ****       size_type
5395:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5396:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5397:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5398:/usr/include/c++/7/bits/basic_string.h **** 
5399:/usr/include/c++/7/bits/basic_string.h ****       /**
5400:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5401:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5402:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5403:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5404:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5405:/usr/include/c++/7/bits/basic_string.h ****        *
5406:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5407:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5408:/usr/include/c++/7/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5409:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
5410:/usr/include/c++/7/bits/basic_string.h ****       */
5411:/usr/include/c++/7/bits/basic_string.h ****       size_type
5412:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5413:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5414:/usr/include/c++/7/bits/basic_string.h **** 
5415:/usr/include/c++/7/bits/basic_string.h ****       /**
5416:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5417:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5418:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5419:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5420:/usr/include/c++/7/bits/basic_string.h ****        *
5421:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5422:/usr/include/c++/7/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5423:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5424:/usr/include/c++/7/bits/basic_string.h ****       */
5425:/usr/include/c++/7/bits/basic_string.h ****       size_type
5426:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5427:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5428:/usr/include/c++/7/bits/basic_string.h ****       {
5429:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5430:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5431:/usr/include/c++/7/bits/basic_string.h ****       }
5432:/usr/include/c++/7/bits/basic_string.h **** 
5433:/usr/include/c++/7/bits/basic_string.h ****       /**
5434:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character.
5435:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to locate.
5436:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5437:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5438:/usr/include/c++/7/bits/basic_string.h ****        *
5439:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5440:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5441:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
5442:/usr/include/c++/7/bits/basic_string.h ****        *
5443:/usr/include/c++/7/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5444:/usr/include/c++/7/bits/basic_string.h ****       */
5445:/usr/include/c++/7/bits/basic_string.h ****       size_type
5446:/usr/include/c++/7/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5447:/usr/include/c++/7/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5448:/usr/include/c++/7/bits/basic_string.h **** 
5449:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5450:/usr/include/c++/7/bits/basic_string.h ****       /**
5451:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5452:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5453:/usr/include/c++/7/bits/basic_string.h ****        *                characters to locate.
5454:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5455:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5456:/usr/include/c++/7/bits/basic_string.h ****       */
5457:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5458:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5459:/usr/include/c++/7/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5460:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5461:/usr/include/c++/7/bits/basic_string.h **** 	{
5462:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5463:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5464:/usr/include/c++/7/bits/basic_string.h **** 	}
5465:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5466:/usr/include/c++/7/bits/basic_string.h **** 
5467:/usr/include/c++/7/bits/basic_string.h ****       /**
5468:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5469:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5470:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5471:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5472:/usr/include/c++/7/bits/basic_string.h ****        *
5473:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5474:/usr/include/c++/7/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5475:/usr/include/c++/7/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5476:/usr/include/c++/7/bits/basic_string.h ****       */
5477:/usr/include/c++/7/bits/basic_string.h ****       size_type
5478:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5479:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5480:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5481:/usr/include/c++/7/bits/basic_string.h **** 
5482:/usr/include/c++/7/bits/basic_string.h ****       /**
5483:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5484:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5485:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5486:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5487:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5488:/usr/include/c++/7/bits/basic_string.h ****        *
5489:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5490:/usr/include/c++/7/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5491:/usr/include/c++/7/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5492:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
5493:/usr/include/c++/7/bits/basic_string.h ****       */
5494:/usr/include/c++/7/bits/basic_string.h ****       size_type
5495:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5496:/usr/include/c++/7/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5497:/usr/include/c++/7/bits/basic_string.h **** 
5498:/usr/include/c++/7/bits/basic_string.h ****       /**
5499:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5500:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5501:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5502:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5503:/usr/include/c++/7/bits/basic_string.h ****        *
5504:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5505:/usr/include/c++/7/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5506:/usr/include/c++/7/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5507:/usr/include/c++/7/bits/basic_string.h ****       */
5508:/usr/include/c++/7/bits/basic_string.h ****       size_type
5509:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5510:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5511:/usr/include/c++/7/bits/basic_string.h ****       {
5512:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5513:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5514:/usr/include/c++/7/bits/basic_string.h ****       }
5515:/usr/include/c++/7/bits/basic_string.h **** 
5516:/usr/include/c++/7/bits/basic_string.h ****       /**
5517:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a different character.
5518:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to avoid.
5519:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5520:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5521:/usr/include/c++/7/bits/basic_string.h ****        *
5522:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5523:/usr/include/c++/7/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5524:/usr/include/c++/7/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5525:/usr/include/c++/7/bits/basic_string.h ****       */
5526:/usr/include/c++/7/bits/basic_string.h ****       size_type
5527:/usr/include/c++/7/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5528:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5529:/usr/include/c++/7/bits/basic_string.h **** 
5530:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5531:/usr/include/c++/7/bits/basic_string.h ****       /**
5532:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5533:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5534:/usr/include/c++/7/bits/basic_string.h ****        *                characters to avoid.
5535:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5536:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of first occurrence.
5537:/usr/include/c++/7/bits/basic_string.h ****        */
5538:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5539:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5540:/usr/include/c++/7/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5541:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5542:/usr/include/c++/7/bits/basic_string.h **** 	{
5543:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5544:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5545:/usr/include/c++/7/bits/basic_string.h **** 	}
5546:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5547:/usr/include/c++/7/bits/basic_string.h **** 
5548:/usr/include/c++/7/bits/basic_string.h ****       /**
5549:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5550:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5551:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5552:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5553:/usr/include/c++/7/bits/basic_string.h ****        *
5554:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5555:/usr/include/c++/7/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5556:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5557:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5558:/usr/include/c++/7/bits/basic_string.h ****       */
5559:/usr/include/c++/7/bits/basic_string.h ****       size_type
5560:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5561:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5562:/usr/include/c++/7/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5563:/usr/include/c++/7/bits/basic_string.h **** 
5564:/usr/include/c++/7/bits/basic_string.h ****       /**
5565:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5566:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5567:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5568:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5569:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5570:/usr/include/c++/7/bits/basic_string.h ****        *
5571:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5572:/usr/include/c++/7/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5573:/usr/include/c++/7/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5574:/usr/include/c++/7/bits/basic_string.h ****        *  returns npos.
5575:/usr/include/c++/7/bits/basic_string.h ****       */
5576:/usr/include/c++/7/bits/basic_string.h ****       size_type
5577:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5578:/usr/include/c++/7/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5579:/usr/include/c++/7/bits/basic_string.h ****       /**
5580:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5581:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5582:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5583:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5584:/usr/include/c++/7/bits/basic_string.h ****        *
5585:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5586:/usr/include/c++/7/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5587:/usr/include/c++/7/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5588:/usr/include/c++/7/bits/basic_string.h ****        *  npos.
5589:/usr/include/c++/7/bits/basic_string.h ****       */
5590:/usr/include/c++/7/bits/basic_string.h ****       size_type
5591:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5592:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5593:/usr/include/c++/7/bits/basic_string.h ****       {
5594:/usr/include/c++/7/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5595:/usr/include/c++/7/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5596:/usr/include/c++/7/bits/basic_string.h ****       }
5597:/usr/include/c++/7/bits/basic_string.h **** 
5598:/usr/include/c++/7/bits/basic_string.h ****       /**
5599:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5600:/usr/include/c++/7/bits/basic_string.h ****        *  @param __c  Character to avoid.
5601:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5602:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5603:/usr/include/c++/7/bits/basic_string.h ****        *
5604:/usr/include/c++/7/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5605:/usr/include/c++/7/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5606:/usr/include/c++/7/bits/basic_string.h ****        *  found.  If not found, returns npos.
5607:/usr/include/c++/7/bits/basic_string.h ****       */
5608:/usr/include/c++/7/bits/basic_string.h ****       size_type
5609:/usr/include/c++/7/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5610:/usr/include/c++/7/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5611:/usr/include/c++/7/bits/basic_string.h **** 
5612:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5613:/usr/include/c++/7/bits/basic_string.h ****       /**
5614:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5615:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5616:/usr/include/c++/7/bits/basic_string.h ****        *                characters to avoid.
5617:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5618:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Index of last occurrence.
5619:/usr/include/c++/7/bits/basic_string.h ****        */
5620:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5621:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5622:/usr/include/c++/7/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5623:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5624:/usr/include/c++/7/bits/basic_string.h **** 	{
5625:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5626:/usr/include/c++/7/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5627:/usr/include/c++/7/bits/basic_string.h **** 	}
5628:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5629:/usr/include/c++/7/bits/basic_string.h **** 
5630:/usr/include/c++/7/bits/basic_string.h ****       /**
5631:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Get a substring.
5632:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5633:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5634:/usr/include/c++/7/bits/basic_string.h ****        *  @return  The new string.
5635:/usr/include/c++/7/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5636:/usr/include/c++/7/bits/basic_string.h ****        *
5637:/usr/include/c++/7/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5638:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5639:/usr/include/c++/7/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5640:/usr/include/c++/7/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5641:/usr/include/c++/7/bits/basic_string.h ****       */
5642:/usr/include/c++/7/bits/basic_string.h ****       basic_string
5643:/usr/include/c++/7/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5644:/usr/include/c++/7/bits/basic_string.h ****       { return basic_string(*this,
5645:/usr/include/c++/7/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5646:/usr/include/c++/7/bits/basic_string.h **** 
5647:/usr/include/c++/7/bits/basic_string.h ****       /**
5648:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string.
5649:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
5650:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5651:/usr/include/c++/7/bits/basic_string.h ****        *
5652:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5653:/usr/include/c++/7/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5654:/usr/include/c++/7/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5655:/usr/include/c++/7/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5656:/usr/include/c++/7/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5657:/usr/include/c++/7/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5658:/usr/include/c++/7/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5659:/usr/include/c++/7/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5660:/usr/include/c++/7/bits/basic_string.h ****       */
5661:/usr/include/c++/7/bits/basic_string.h ****       int
5662:/usr/include/c++/7/bits/basic_string.h ****       compare(const basic_string& __str) const
5663:/usr/include/c++/7/bits/basic_string.h ****       {
5664:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __size = this->size();
5665:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __osize = __str.size();
5666:/usr/include/c++/7/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5667:/usr/include/c++/7/bits/basic_string.h **** 
5668:/usr/include/c++/7/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5669:/usr/include/c++/7/bits/basic_string.h **** 	if (!__r)
5670:/usr/include/c++/7/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5671:/usr/include/c++/7/bits/basic_string.h **** 	return __r;
5672:/usr/include/c++/7/bits/basic_string.h ****       }
5673:/usr/include/c++/7/bits/basic_string.h **** 
5674:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus > 201402L
5675:/usr/include/c++/7/bits/basic_string.h ****       /**
5676:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5677:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5678:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5679:/usr/include/c++/7/bits/basic_string.h ****        */
5680:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5681:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
5682:/usr/include/c++/7/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5683:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5684:/usr/include/c++/7/bits/basic_string.h **** 	{
5685:/usr/include/c++/7/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5686:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __size = this->size();
5687:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5688:/usr/include/c++/7/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5689:/usr/include/c++/7/bits/basic_string.h **** 
5690:/usr/include/c++/7/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5691:/usr/include/c++/7/bits/basic_string.h **** 	  if (!__r)
5692:/usr/include/c++/7/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5693:/usr/include/c++/7/bits/basic_string.h **** 	  return __r;
5694:/usr/include/c++/7/bits/basic_string.h **** 	}
5695:/usr/include/c++/7/bits/basic_string.h **** 
5696:/usr/include/c++/7/bits/basic_string.h ****       /**
5697:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5698:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5699:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5700:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5701:/usr/include/c++/7/bits/basic_string.h ****        *                against.
5702:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5703:/usr/include/c++/7/bits/basic_string.h ****        */
5704:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5705:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
5706:/usr/include/c++/7/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5707:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5708:/usr/include/c++/7/bits/basic_string.h **** 	{
5709:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5710:/usr/include/c++/7/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5711:/usr/include/c++/7/bits/basic_string.h **** 	}
5712:/usr/include/c++/7/bits/basic_string.h **** 
5713:/usr/include/c++/7/bits/basic_string.h ****       /**
5714:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5715:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5716:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5717:/usr/include/c++/7/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5718:/usr/include/c++/7/bits/basic_string.h ****        *                 against.
5719:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5720:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5721:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5722:/usr/include/c++/7/bits/basic_string.h ****        */
5723:/usr/include/c++/7/bits/basic_string.h ****       template<typename _Tp>
5724:/usr/include/c++/7/bits/basic_string.h **** 	_If_sv<_Tp, int>
5725:/usr/include/c++/7/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5726:/usr/include/c++/7/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5727:/usr/include/c++/7/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5728:/usr/include/c++/7/bits/basic_string.h **** 	{
5729:/usr/include/c++/7/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5730:/usr/include/c++/7/bits/basic_string.h **** 	  return __sv_type(*this)
5731:/usr/include/c++/7/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5732:/usr/include/c++/7/bits/basic_string.h **** 	}
5733:/usr/include/c++/7/bits/basic_string.h **** #endif // C++17
5734:/usr/include/c++/7/bits/basic_string.h **** 
5735:/usr/include/c++/7/bits/basic_string.h ****       /**
5736:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5737:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5738:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5739:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
5740:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5741:/usr/include/c++/7/bits/basic_string.h ****        *
5742:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5743:/usr/include/c++/7/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5744:/usr/include/c++/7/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5745:/usr/include/c++/7/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5746:/usr/include/c++/7/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5747:/usr/include/c++/7/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5748:/usr/include/c++/7/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5749:/usr/include/c++/7/bits/basic_string.h ****        *  strings by calling
5750:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5751:/usr/include/c++/7/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5752:/usr/include/c++/7/bits/basic_string.h ****        *  the shorter one is ordered first.
5753:/usr/include/c++/7/bits/basic_string.h ****       */
5754:/usr/include/c++/7/bits/basic_string.h ****       int
5755:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5756:/usr/include/c++/7/bits/basic_string.h **** 
5757:/usr/include/c++/7/bits/basic_string.h ****       /**
5758:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5759:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5760:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5761:/usr/include/c++/7/bits/basic_string.h ****        *  @param __str  String to compare against.
5762:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5763:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5764:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5765:/usr/include/c++/7/bits/basic_string.h ****        *
5766:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5767:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5768:/usr/include/c++/7/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5769:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5770:/usr/include/c++/7/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5771:/usr/include/c++/7/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5772:/usr/include/c++/7/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5773:/usr/include/c++/7/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5774:/usr/include/c++/7/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5775:/usr/include/c++/7/bits/basic_string.h ****        *  calling
5776:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5777:/usr/include/c++/7/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5778:/usr/include/c++/7/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5779:/usr/include/c++/7/bits/basic_string.h ****       */
5780:/usr/include/c++/7/bits/basic_string.h ****       int
5781:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5782:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
5783:/usr/include/c++/7/bits/basic_string.h **** 
5784:/usr/include/c++/7/bits/basic_string.h ****       /**
5785:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare to a C string.
5786:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to compare against.
5787:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5788:/usr/include/c++/7/bits/basic_string.h ****        *
5789:/usr/include/c++/7/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5790:/usr/include/c++/7/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5791:/usr/include/c++/7/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5792:/usr/include/c++/7/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5793:/usr/include/c++/7/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5794:/usr/include/c++/7/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5795:/usr/include/c++/7/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5796:/usr/include/c++/7/bits/basic_string.h ****        *  ordered first.
5797:/usr/include/c++/7/bits/basic_string.h ****       */
5798:/usr/include/c++/7/bits/basic_string.h ****       int
5799:/usr/include/c++/7/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5800:/usr/include/c++/7/bits/basic_string.h **** 
5801:/usr/include/c++/7/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5802:/usr/include/c++/7/bits/basic_string.h ****       // 5 String::compare specification questionable
5803:/usr/include/c++/7/bits/basic_string.h ****       /**
5804:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5805:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5806:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5807:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  C string to compare against.
5808:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5809:/usr/include/c++/7/bits/basic_string.h ****        *
5810:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5811:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5812:/usr/include/c++/7/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5813:/usr/include/c++/7/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5814:/usr/include/c++/7/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5815:/usr/include/c++/7/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5816:/usr/include/c++/7/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5817:/usr/include/c++/7/bits/basic_string.h ****        *  function then compares the two string by calling
5818:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5819:/usr/include/c++/7/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5820:/usr/include/c++/7/bits/basic_string.h ****        *  one is ordered first.
5821:/usr/include/c++/7/bits/basic_string.h ****       */
5822:/usr/include/c++/7/bits/basic_string.h ****       int
5823:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5824:/usr/include/c++/7/bits/basic_string.h **** 
5825:/usr/include/c++/7/bits/basic_string.h ****       /**
5826:/usr/include/c++/7/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5827:/usr/include/c++/7/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5828:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5829:/usr/include/c++/7/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5830:/usr/include/c++/7/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5831:/usr/include/c++/7/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5832:/usr/include/c++/7/bits/basic_string.h ****        *
5833:/usr/include/c++/7/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5834:/usr/include/c++/7/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5835:/usr/include/c++/7/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5836:/usr/include/c++/7/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5837:/usr/include/c++/7/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5838:/usr/include/c++/7/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5839:/usr/include/c++/7/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5840:/usr/include/c++/7/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5841:/usr/include/c++/7/bits/basic_string.h ****        *  function then compares the two strings by calling
5842:/usr/include/c++/7/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5843:/usr/include/c++/7/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5844:/usr/include/c++/7/bits/basic_string.h ****        *  one is ordered first.
5845:/usr/include/c++/7/bits/basic_string.h ****        *
5846:/usr/include/c++/7/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5847:/usr/include/c++/7/bits/basic_string.h ****        *  no special meaning.
5848:/usr/include/c++/7/bits/basic_string.h ****       */
5849:/usr/include/c++/7/bits/basic_string.h ****       int
5850:/usr/include/c++/7/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5851:/usr/include/c++/7/bits/basic_string.h **** 	      size_type __n2) const;
5852:/usr/include/c++/7/bits/basic_string.h **** 
5853:/usr/include/c++/7/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5854:/usr/include/c++/7/bits/basic_string.h ****       friend void
5855:/usr/include/c++/7/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5856:/usr/include/c++/7/bits/basic_string.h **** 					    void* exc);
5857:/usr/include/c++/7/bits/basic_string.h ****       friend const char*
5858:/usr/include/c++/7/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5859:/usr/include/c++/7/bits/basic_string.h ****       friend void
5860:/usr/include/c++/7/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5861:/usr/include/c++/7/bits/basic_string.h ****       friend void
5862:/usr/include/c++/7/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5863:/usr/include/c++/7/bits/basic_string.h **** # endif
5864:/usr/include/c++/7/bits/basic_string.h ****   };
5865:/usr/include/c++/7/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5866:/usr/include/c++/7/bits/basic_string.h **** 
5867:/usr/include/c++/7/bits/basic_string.h ****   // operator+
5868:/usr/include/c++/7/bits/basic_string.h ****   /**
5869:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Concatenate two strings.
5870:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5871:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Last string.
5872:/usr/include/c++/7/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
5873:/usr/include/c++/7/bits/basic_string.h ****    */
5874:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5875:/usr/include/c++/7/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
5876:/usr/include/c++/7/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5877:/usr/include/c++/7/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5878:/usr/include/c++/7/bits/basic_string.h ****     {
5879:/usr/include/c++/7/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
5880:/usr/include/c++/7/bits/basic_string.h ****       __str.append(__rhs);
5881:/usr/include/c++/7/bits/basic_string.h ****       return __str;
5882:/usr/include/c++/7/bits/basic_string.h ****     }
5883:/usr/include/c++/7/bits/basic_string.h **** 
5884:/usr/include/c++/7/bits/basic_string.h ****   /**
5885:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
5886:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5887:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Last string.
5888:/usr/include/c++/7/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
5889:/usr/include/c++/7/bits/basic_string.h ****    */
5890:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5891:/usr/include/c++/7/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
5892:/usr/include/c++/7/bits/basic_string.h ****     operator+(const _CharT* __lhs,
5893:/usr/include/c++/7/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
5894:/usr/include/c++/7/bits/basic_string.h **** 
5895:/usr/include/c++/7/bits/basic_string.h ****   /**
5896:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Concatenate character and string.
5897:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5898:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Last string.
5899:/usr/include/c++/7/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
5900:/usr/include/c++/7/bits/basic_string.h ****    */
5901:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5902:/usr/include/c++/7/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
5903:/usr/include/c++/7/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
5904:/usr/include/c++/7/bits/basic_string.h **** 
5905:/usr/include/c++/7/bits/basic_string.h ****   /**
5906:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
5907:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5908:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Last string.
5909:/usr/include/c++/7/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
5910:/usr/include/c++/7/bits/basic_string.h ****    */
5911:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5912:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5913:/usr/include/c++/7/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5914:/usr/include/c++/7/bits/basic_string.h **** 	      const _CharT* __rhs)
5915:/usr/include/c++/7/bits/basic_string.h ****     {
5916:/usr/include/c++/7/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
5917:/usr/include/c++/7/bits/basic_string.h ****       __str.append(__rhs);
5918:/usr/include/c++/7/bits/basic_string.h ****       return __str;
5919:/usr/include/c++/7/bits/basic_string.h ****     }
5920:/usr/include/c++/7/bits/basic_string.h **** 
5921:/usr/include/c++/7/bits/basic_string.h ****   /**
5922:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Concatenate string and character.
5923:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5924:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Last string.
5925:/usr/include/c++/7/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
5926:/usr/include/c++/7/bits/basic_string.h ****    */
5927:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5928:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5929:/usr/include/c++/7/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
5930:/usr/include/c++/7/bits/basic_string.h ****     {
5931:/usr/include/c++/7/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
5932:/usr/include/c++/7/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
5933:/usr/include/c++/7/bits/basic_string.h ****       __string_type __str(__lhs);
5934:/usr/include/c++/7/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
5935:/usr/include/c++/7/bits/basic_string.h ****       return __str;
5936:/usr/include/c++/7/bits/basic_string.h ****     }
5937:/usr/include/c++/7/bits/basic_string.h **** 
5938:/usr/include/c++/7/bits/basic_string.h **** #if __cplusplus >= 201103L
5939:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5940:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5941:/usr/include/c++/7/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5942:/usr/include/c++/7/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5943:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
5944:/usr/include/c++/7/bits/basic_string.h **** 
5945:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5946:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5947:/usr/include/c++/7/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5948:/usr/include/c++/7/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5949:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
5950:/usr/include/c++/7/bits/basic_string.h **** 
5951:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5952:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5953:/usr/include/c++/7/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5954:/usr/include/c++/7/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5955:/usr/include/c++/7/bits/basic_string.h ****     {
5956:/usr/include/c++/7/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
5957:/usr/include/c++/7/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
5958:/usr/include/c++/7/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
5959:/usr/include/c++/7/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
5960:/usr/include/c++/7/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
5961:/usr/include/c++/7/bits/basic_string.h ****     }
5962:/usr/include/c++/7/bits/basic_string.h **** 
5963:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5964:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5965:/usr/include/c++/7/bits/basic_string.h ****     operator+(const _CharT* __lhs,
5966:/usr/include/c++/7/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5967:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
5968:/usr/include/c++/7/bits/basic_string.h **** 
5969:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5970:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5971:/usr/include/c++/7/bits/basic_string.h ****     operator+(_CharT __lhs,
5972:/usr/include/c++/7/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
5973:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
5974:/usr/include/c++/7/bits/basic_string.h **** 
5975:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5976:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5977:/usr/include/c++/7/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5978:/usr/include/c++/7/bits/basic_string.h **** 	      const _CharT* __rhs)
5979:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
5980:/usr/include/c++/7/bits/basic_string.h **** 
5981:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5982:/usr/include/c++/7/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
5983:/usr/include/c++/7/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
5984:/usr/include/c++/7/bits/basic_string.h **** 	      _CharT __rhs)
5985:/usr/include/c++/7/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
5986:/usr/include/c++/7/bits/basic_string.h **** #endif
5987:/usr/include/c++/7/bits/basic_string.h **** 
5988:/usr/include/c++/7/bits/basic_string.h ****   // operator ==
5989:/usr/include/c++/7/bits/basic_string.h ****   /**
5990:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
5991:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  First string.
5992:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  Second string.
5993:/usr/include/c++/7/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
5994:/usr/include/c++/7/bits/basic_string.h ****    */
5995:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
5996:/usr/include/c++/7/bits/basic_string.h ****     inline bool
5997:/usr/include/c++/7/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
5998:/usr/include/c++/7/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
5999:/usr/include/c++/7/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6000:/usr/include/c++/7/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6001:/usr/include/c++/7/bits/basic_string.h **** 
6002:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT>
6003:/usr/include/c++/7/bits/basic_string.h ****     inline
6004:/usr/include/c++/7/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6005:/usr/include/c++/7/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6006:/usr/include/c++/7/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6007:/usr/include/c++/7/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6008:/usr/include/c++/7/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6009:/usr/include/c++/7/bits/basic_string.h **** 						    __lhs.size())); }
6010:/usr/include/c++/7/bits/basic_string.h **** 
6011:/usr/include/c++/7/bits/basic_string.h ****   /**
6012:/usr/include/c++/7/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6013:/usr/include/c++/7/bits/basic_string.h ****    *  @param __lhs  C string.
6014:/usr/include/c++/7/bits/basic_string.h ****    *  @param __rhs  String.
6015:/usr/include/c++/7/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6016:/usr/include/c++/7/bits/basic_string.h ****    */
6017:/usr/include/c++/7/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6018:/usr/include/c++/7/bits/basic_string.h ****     inline bool
6019:/usr/include/c++/7/bits/basic_string.h ****     operator==(const _CharT* __lhs,
 8760              		.loc 6 6019 0
 8761              		.cfi_startproc
 8762 0000 55       		pushq	%rbp
 8763              		.cfi_def_cfa_offset 16
 8764              		.cfi_offset 6, -16
 8765 0001 4889E5   		movq	%rsp, %rbp
 8766              		.cfi_def_cfa_register 6
 8767 0004 4883EC10 		subq	$16, %rsp
 8768 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8769 000c 488975F0 		movq	%rsi, -16(%rbp)
6020:/usr/include/c++/7/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6021:/usr/include/c++/7/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
 8770              		.loc 6 6021 0
 8771 0010 488B55F8 		movq	-8(%rbp), %rdx
 8772 0014 488B45F0 		movq	-16(%rbp), %rax
 8773 0018 4889D6   		movq	%rdx, %rsi
 8774 001b 4889C7   		movq	%rax, %rdi
 8775 001e E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@PLT
 8775      00
 8776 0023 85C0     		testl	%eax, %eax
 8777 0025 0F94C0   		sete	%al
 8778 0028 C9       		leave
 8779              		.cfi_def_cfa 7, 8
 8780 0029 C3       		ret
 8781              		.cfi_endproc
 8782              	.LFE1523:
 8784              		.section	.data.rel.ro.local,"aw",@progbits
 8785              		.align 8
 8788              	_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 8789 0000 00000000 		.quad	0
 8789      00000000 
 8790 0008 00000000 		.quad	_ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
 8790      00000000 
 8791 0010 00000000 		.quad	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
 8791      00000000 
 8792 0018 00000000 		.quad	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev
 8792      00000000 
 8793 0020 00000000 		.quad	_ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv
 8793      00000000 
 8794              		.text
 8795 438b 90       		.align 2
 8797              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD2Ev:
 8798              	.LFB1574:
 159:TestXmlTestReporter.cpp **** {
 8799              		.loc 3 159 0
 8800              		.cfi_startproc
 8801 438c 55       		pushq	%rbp
 8802              		.cfi_def_cfa_offset 16
 8803              		.cfi_offset 6, -16
 8804 438d 4889E5   		movq	%rsp, %rbp
 8805              		.cfi_def_cfa_register 6
 8806 4390 4883EC10 		subq	$16, %rsp
 8807 4394 48897DF8 		movq	%rdi, -8(%rbp)
 8808              	.LBB164:
 159:TestXmlTestReporter.cpp **** {
 8809              		.loc 3 159 0
 8810 4398 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE(%rip), %rdx
 8810      000000
 8811 439f 488B45F8 		movq	-8(%rbp), %rax
 8812 43a3 488910   		movq	%rdx, (%rax)
 8813 43a6 488B45F8 		movq	-8(%rbp), %rax
 8814 43aa 4889C7   		movq	%rax, %rdi
 8815 43ad E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8815      00
 8816              	.LBE164:
 8817 43b2 90       		nop
 8818 43b3 C9       		leave
 8819              		.cfi_def_cfa 7, 8
 8820 43b4 C3       		ret
 8821              		.cfi_endproc
 8822              	.LFE1574:
 8824              		.set	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev,_ZN12_GLOBAL__N_142TestXmlT
 8825 43b5 90       		.align 2
 8827              	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev:
 8828              	.LFB1576:
 159:TestXmlTestReporter.cpp **** {
 8829              		.loc 3 159 0
 8830              		.cfi_startproc
 8831              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8832              		.cfi_lsda 0x1b,.LLSDA1576
 8833 43b6 55       		pushq	%rbp
 8834              		.cfi_def_cfa_offset 16
 8835              		.cfi_offset 6, -16
 8836 43b7 4889E5   		movq	%rsp, %rbp
 8837              		.cfi_def_cfa_register 6
 8838 43ba 53       		pushq	%rbx
 8839 43bb 4883EC18 		subq	$24, %rsp
 8840              		.cfi_offset 3, -24
 8841 43bf 48897DE8 		movq	%rdi, -24(%rbp)
 159:TestXmlTestReporter.cpp **** {
 8842              		.loc 3 159 0
 8843 43c3 488B45E8 		movq	-24(%rbp), %rax
 8844 43c7 4889C7   		movq	%rax, %rdi
 8845              	.LEHB261:
 8846 43ca E8BDFFFF 		call	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
 8846      FF
 8847              	.LEHE261:
 159:TestXmlTestReporter.cpp **** {
 8848              		.loc 3 159 0 is_stmt 0 discriminator 2
 8849 43cf 488B45E8 		movq	-24(%rbp), %rax
 8850 43d3 4889C7   		movq	%rax, %rdi
 8851 43d6 E8000000 		call	_ZdlPv@PLT
 8851      00
 8852 43db EB1A     		jmp	.L472
 8853              	.L471:
 8854 43dd 4889C3   		movq	%rax, %rbx
 159:TestXmlTestReporter.cpp **** {
 8855              		.loc 3 159 0
 8856 43e0 488B45E8 		movq	-24(%rbp), %rax
 8857 43e4 4889C7   		movq	%rax, %rdi
 8858 43e7 E8000000 		call	_ZdlPv@PLT
 8858      00
 8859 43ec 4889D8   		movq	%rbx, %rax
 8860 43ef 4889C7   		movq	%rax, %rdi
 8861              	.LEHB262:
 8862 43f2 E8000000 		call	_Unwind_Resume@PLT
 8862      00
 8863              	.LEHE262:
 8864              	.L472:
 8865 43f7 4883C418 		addq	$24, %rsp
 8866 43fb 5B       		popq	%rbx
 8867 43fc 5D       		popq	%rbp
 8868              		.cfi_def_cfa 7, 8
 8869 43fd C3       		ret
 8870              		.cfi_endproc
 8871              	.LFE1576:
 8872              		.section	.gcc_except_table
 8873              	.LLSDA1576:
 8874 07a0 FF       		.byte	0xff
 8875 07a1 FF       		.byte	0xff
 8876 07a2 01       		.byte	0x1
 8877 07a3 08       		.uleb128 .LLSDACSE1576-.LLSDACSB1576
 8878              	.LLSDACSB1576:
 8879 07a4 14       		.uleb128 .LEHB261-.LFB1576
 8880 07a5 05       		.uleb128 .LEHE261-.LEHB261
 8881 07a6 27       		.uleb128 .L471-.LFB1576
 8882 07a7 00       		.uleb128 0
 8883 07a8 3C       		.uleb128 .LEHB262-.LFB1576
 8884 07a9 05       		.uleb128 .LEHE262-.LEHB262
 8885 07aa 00       		.uleb128 0
 8886 07ab 00       		.uleb128 0
 8887              	.LLSDACSE1576:
 8888              		.text
 8890              		.section	.data.rel.ro.local
 8891              		.align 8
 8894              	_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 8895 0028 00000000 		.quad	0
 8895      00000000 
 8896 0030 00000000 		.quad	_ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
 8896      00000000 
 8897 0038 00000000 		.quad	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
 8897      00000000 
 8898 0040 00000000 		.quad	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev
 8898      00000000 
 8899 0048 00000000 		.quad	_ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv
 8899      00000000 
 8900              		.text
 8901              		.align 2
 8903              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD2Ev:
 8904              	.LFB1578:
 135:TestXmlTestReporter.cpp **** {
 8905              		.loc 3 135 0 is_stmt 1
 8906              		.cfi_startproc
 8907 43fe 55       		pushq	%rbp
 8908              		.cfi_def_cfa_offset 16
 8909              		.cfi_offset 6, -16
 8910 43ff 4889E5   		movq	%rsp, %rbp
 8911              		.cfi_def_cfa_register 6
 8912 4402 4883EC10 		subq	$16, %rsp
 8913 4406 48897DF8 		movq	%rdi, -8(%rbp)
 8914              	.LBB165:
 135:TestXmlTestReporter.cpp **** {
 8915              		.loc 3 135 0
 8916 440a 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE(%rip), %rdx
 8916      000000
 8917 4411 488B45F8 		movq	-8(%rbp), %rax
 8918 4415 488910   		movq	%rdx, (%rax)
 8919 4418 488B45F8 		movq	-8(%rbp), %rax
 8920 441c 4889C7   		movq	%rax, %rdi
 8921 441f E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 8921      00
 8922              	.LBE165:
 8923 4424 90       		nop
 8924 4425 C9       		leave
 8925              		.cfi_def_cfa 7, 8
 8926 4426 C3       		ret
 8927              		.cfi_endproc
 8928              	.LFE1578:
 8930              		.set	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev,_ZN12_GLOBAL__N_149T
 8931 4427 90       		.align 2
 8933              	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev:
 8934              	.LFB1580:
 135:TestXmlTestReporter.cpp **** {
 8935              		.loc 3 135 0
 8936              		.cfi_startproc
 8937              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8938              		.cfi_lsda 0x1b,.LLSDA1580
 8939 4428 55       		pushq	%rbp
 8940              		.cfi_def_cfa_offset 16
 8941              		.cfi_offset 6, -16
 8942 4429 4889E5   		movq	%rsp, %rbp
 8943              		.cfi_def_cfa_register 6
 8944 442c 53       		pushq	%rbx
 8945 442d 4883EC18 		subq	$24, %rsp
 8946              		.cfi_offset 3, -24
 8947 4431 48897DE8 		movq	%rdi, -24(%rbp)
 135:TestXmlTestReporter.cpp **** {
 8948              		.loc 3 135 0
 8949 4435 488B45E8 		movq	-24(%rbp), %rax
 8950 4439 4889C7   		movq	%rax, %rdi
 8951              	.LEHB263:
 8952 443c E8BDFFFF 		call	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
 8952      FF
 8953              	.LEHE263:
 135:TestXmlTestReporter.cpp **** {
 8954              		.loc 3 135 0 is_stmt 0 discriminator 2
 8955 4441 488B45E8 		movq	-24(%rbp), %rax
 8956 4445 4889C7   		movq	%rax, %rdi
 8957 4448 E8000000 		call	_ZdlPv@PLT
 8957      00
 8958 444d EB1A     		jmp	.L477
 8959              	.L476:
 8960 444f 4889C3   		movq	%rax, %rbx
 135:TestXmlTestReporter.cpp **** {
 8961              		.loc 3 135 0
 8962 4452 488B45E8 		movq	-24(%rbp), %rax
 8963 4456 4889C7   		movq	%rax, %rdi
 8964 4459 E8000000 		call	_ZdlPv@PLT
 8964      00
 8965 445e 4889D8   		movq	%rbx, %rax
 8966 4461 4889C7   		movq	%rax, %rdi
 8967              	.LEHB264:
 8968 4464 E8000000 		call	_Unwind_Resume@PLT
 8968      00
 8969              	.LEHE264:
 8970              	.L477:
 8971 4469 4883C418 		addq	$24, %rsp
 8972 446d 5B       		popq	%rbx
 8973 446e 5D       		popq	%rbp
 8974              		.cfi_def_cfa 7, 8
 8975 446f C3       		ret
 8976              		.cfi_endproc
 8977              	.LFE1580:
 8978              		.section	.gcc_except_table
 8979              	.LLSDA1580:
 8980 07ac FF       		.byte	0xff
 8981 07ad FF       		.byte	0xff
 8982 07ae 01       		.byte	0x1
 8983 07af 08       		.uleb128 .LLSDACSE1580-.LLSDACSB1580
 8984              	.LLSDACSB1580:
 8985 07b0 14       		.uleb128 .LEHB263-.LFB1580
 8986 07b1 05       		.uleb128 .LEHE263-.LEHB263
 8987 07b2 27       		.uleb128 .L476-.LFB1580
 8988 07b3 00       		.uleb128 0
 8989 07b4 3C       		.uleb128 .LEHB264-.LFB1580
 8990 07b5 05       		.uleb128 .LEHE264-.LEHB264
 8991 07b6 00       		.uleb128 0
 8992 07b7 00       		.uleb128 0
 8993              	.LLSDACSE1580:
 8994              		.text
 8996              		.section	.data.rel.ro.local
 8997              		.align 8
 9000              	_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 9001 0050 00000000 		.quad	0
 9001      00000000 
 9002 0058 00000000 		.quad	_ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 9002      00000000 
 9003 0060 00000000 		.quad	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
 9003      00000000 
 9004 0068 00000000 		.quad	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev
 9004      00000000 
 9005 0070 00000000 		.quad	_ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv
 9005      00000000 
 9006              		.text
 9007              		.align 2
 9009              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD2Ev:
 9010              	.LFB1582:
 115:TestXmlTestReporter.cpp **** {
 9011              		.loc 3 115 0 is_stmt 1
 9012              		.cfi_startproc
 9013 4470 55       		pushq	%rbp
 9014              		.cfi_def_cfa_offset 16
 9015              		.cfi_offset 6, -16
 9016 4471 4889E5   		movq	%rsp, %rbp
 9017              		.cfi_def_cfa_register 6
 9018 4474 4883EC10 		subq	$16, %rsp
 9019 4478 48897DF8 		movq	%rdi, -8(%rbp)
 9020              	.LBB166:
 115:TestXmlTestReporter.cpp **** {
 9021              		.loc 3 115 0
 9022 447c 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE(%rip), %rdx
 9022      000000
 9023 4483 488B45F8 		movq	-8(%rbp), %rax
 9024 4487 488910   		movq	%rdx, (%rax)
 9025 448a 488B45F8 		movq	-8(%rbp), %rax
 9026 448e 4889C7   		movq	%rax, %rdi
 9027 4491 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9027      00
 9028              	.LBE166:
 9029 4496 90       		nop
 9030 4497 C9       		leave
 9031              		.cfi_def_cfa 7, 8
 9032 4498 C3       		ret
 9033              		.cfi_endproc
 9034              	.LFE1582:
 9036              		.set	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev,_ZN12_GLOBAL__N_1
 9037 4499 90       		.align 2
 9039              	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev:
 9040              	.LFB1584:
 115:TestXmlTestReporter.cpp **** {
 9041              		.loc 3 115 0
 9042              		.cfi_startproc
 9043              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9044              		.cfi_lsda 0x1b,.LLSDA1584
 9045 449a 55       		pushq	%rbp
 9046              		.cfi_def_cfa_offset 16
 9047              		.cfi_offset 6, -16
 9048 449b 4889E5   		movq	%rsp, %rbp
 9049              		.cfi_def_cfa_register 6
 9050 449e 53       		pushq	%rbx
 9051 449f 4883EC18 		subq	$24, %rsp
 9052              		.cfi_offset 3, -24
 9053 44a3 48897DE8 		movq	%rdi, -24(%rbp)
 115:TestXmlTestReporter.cpp **** {
 9054              		.loc 3 115 0
 9055 44a7 488B45E8 		movq	-24(%rbp), %rax
 9056 44ab 4889C7   		movq	%rax, %rdi
 9057              	.LEHB265:
 9058 44ae E8BDFFFF 		call	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
 9058      FF
 9059              	.LEHE265:
 115:TestXmlTestReporter.cpp **** {
 9060              		.loc 3 115 0 is_stmt 0 discriminator 2
 9061 44b3 488B45E8 		movq	-24(%rbp), %rax
 9062 44b7 4889C7   		movq	%rax, %rdi
 9063 44ba E8000000 		call	_ZdlPv@PLT
 9063      00
 9064 44bf EB1A     		jmp	.L482
 9065              	.L481:
 9066 44c1 4889C3   		movq	%rax, %rbx
 115:TestXmlTestReporter.cpp **** {
 9067              		.loc 3 115 0
 9068 44c4 488B45E8 		movq	-24(%rbp), %rax
 9069 44c8 4889C7   		movq	%rax, %rdi
 9070 44cb E8000000 		call	_ZdlPv@PLT
 9070      00
 9071 44d0 4889D8   		movq	%rbx, %rax
 9072 44d3 4889C7   		movq	%rax, %rdi
 9073              	.LEHB266:
 9074 44d6 E8000000 		call	_Unwind_Resume@PLT
 9074      00
 9075              	.LEHE266:
 9076              	.L482:
 9077 44db 4883C418 		addq	$24, %rsp
 9078 44df 5B       		popq	%rbx
 9079 44e0 5D       		popq	%rbp
 9080              		.cfi_def_cfa 7, 8
 9081 44e1 C3       		ret
 9082              		.cfi_endproc
 9083              	.LFE1584:
 9084              		.section	.gcc_except_table
 9085              	.LLSDA1584:
 9086 07b8 FF       		.byte	0xff
 9087 07b9 FF       		.byte	0xff
 9088 07ba 01       		.byte	0x1
 9089 07bb 08       		.uleb128 .LLSDACSE1584-.LLSDACSB1584
 9090              	.LLSDACSB1584:
 9091 07bc 14       		.uleb128 .LEHB265-.LFB1584
 9092 07bd 05       		.uleb128 .LEHE265-.LEHB265
 9093 07be 27       		.uleb128 .L481-.LFB1584
 9094 07bf 00       		.uleb128 0
 9095 07c0 3C       		.uleb128 .LEHB266-.LFB1584
 9096 07c1 05       		.uleb128 .LEHE266-.LEHB266
 9097 07c2 00       		.uleb128 0
 9098 07c3 00       		.uleb128 0
 9099              	.LLSDACSE1584:
 9100              		.text
 9102              		.section	.data.rel.ro.local
 9103              		.align 8
 9106              	_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 9107 0078 00000000 		.quad	0
 9107      00000000 
 9108 0080 00000000 		.quad	_ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 9108      00000000 
 9109 0088 00000000 		.quad	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
 9109      00000000 
 9110 0090 00000000 		.quad	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev
 9110      00000000 
 9111 0098 00000000 		.quad	_ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv
 9111      00000000 
 9112              		.text
 9113              		.align 2
 9115              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD2Ev:
 9116              	.LFB1586:
  96:TestXmlTestReporter.cpp **** {
 9117              		.loc 3 96 0 is_stmt 1
 9118              		.cfi_startproc
 9119 44e2 55       		pushq	%rbp
 9120              		.cfi_def_cfa_offset 16
 9121              		.cfi_offset 6, -16
 9122 44e3 4889E5   		movq	%rsp, %rbp
 9123              		.cfi_def_cfa_register 6
 9124 44e6 4883EC10 		subq	$16, %rsp
 9125 44ea 48897DF8 		movq	%rdi, -8(%rbp)
 9126              	.LBB167:
  96:TestXmlTestReporter.cpp **** {
 9127              		.loc 3 96 0
 9128 44ee 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE(%rip),
 9128      000000
 9129 44f5 488B45F8 		movq	-8(%rbp), %rax
 9130 44f9 488910   		movq	%rdx, (%rax)
 9131 44fc 488B45F8 		movq	-8(%rbp), %rax
 9132 4500 4889C7   		movq	%rax, %rdi
 9133 4503 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9133      00
 9134              	.LBE167:
 9135 4508 90       		nop
 9136 4509 C9       		leave
 9137              		.cfi_def_cfa 7, 8
 9138 450a C3       		ret
 9139              		.cfi_endproc
 9140              	.LFE1586:
 9142              		.set	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev,_ZN12_GL
 9143 450b 90       		.align 2
 9145              	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev:
 9146              	.LFB1588:
  96:TestXmlTestReporter.cpp **** {
 9147              		.loc 3 96 0
 9148              		.cfi_startproc
 9149              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9150              		.cfi_lsda 0x1b,.LLSDA1588
 9151 450c 55       		pushq	%rbp
 9152              		.cfi_def_cfa_offset 16
 9153              		.cfi_offset 6, -16
 9154 450d 4889E5   		movq	%rsp, %rbp
 9155              		.cfi_def_cfa_register 6
 9156 4510 53       		pushq	%rbx
 9157 4511 4883EC18 		subq	$24, %rsp
 9158              		.cfi_offset 3, -24
 9159 4515 48897DE8 		movq	%rdi, -24(%rbp)
  96:TestXmlTestReporter.cpp **** {
 9160              		.loc 3 96 0
 9161 4519 488B45E8 		movq	-24(%rbp), %rax
 9162 451d 4889C7   		movq	%rax, %rdi
 9163              	.LEHB267:
 9164 4520 E8BDFFFF 		call	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
 9164      FF
 9165              	.LEHE267:
  96:TestXmlTestReporter.cpp **** {
 9166              		.loc 3 96 0 is_stmt 0 discriminator 2
 9167 4525 488B45E8 		movq	-24(%rbp), %rax
 9168 4529 4889C7   		movq	%rax, %rdi
 9169 452c E8000000 		call	_ZdlPv@PLT
 9169      00
 9170 4531 EB1A     		jmp	.L487
 9171              	.L486:
 9172 4533 4889C3   		movq	%rax, %rbx
  96:TestXmlTestReporter.cpp **** {
 9173              		.loc 3 96 0
 9174 4536 488B45E8 		movq	-24(%rbp), %rax
 9175 453a 4889C7   		movq	%rax, %rdi
 9176 453d E8000000 		call	_ZdlPv@PLT
 9176      00
 9177 4542 4889D8   		movq	%rbx, %rax
 9178 4545 4889C7   		movq	%rax, %rdi
 9179              	.LEHB268:
 9180 4548 E8000000 		call	_Unwind_Resume@PLT
 9180      00
 9181              	.LEHE268:
 9182              	.L487:
 9183 454d 4883C418 		addq	$24, %rsp
 9184 4551 5B       		popq	%rbx
 9185 4552 5D       		popq	%rbp
 9186              		.cfi_def_cfa 7, 8
 9187 4553 C3       		ret
 9188              		.cfi_endproc
 9189              	.LFE1588:
 9190              		.section	.gcc_except_table
 9191              	.LLSDA1588:
 9192 07c4 FF       		.byte	0xff
 9193 07c5 FF       		.byte	0xff
 9194 07c6 01       		.byte	0x1
 9195 07c7 08       		.uleb128 .LLSDACSE1588-.LLSDACSB1588
 9196              	.LLSDACSB1588:
 9197 07c8 14       		.uleb128 .LEHB267-.LFB1588
 9198 07c9 05       		.uleb128 .LEHE267-.LEHB267
 9199 07ca 27       		.uleb128 .L486-.LFB1588
 9200 07cb 00       		.uleb128 0
 9201 07cc 3C       		.uleb128 .LEHB268-.LFB1588
 9202 07cd 05       		.uleb128 .LEHE268-.LEHB268
 9203 07ce 00       		.uleb128 0
 9204 07cf 00       		.uleb128 0
 9205              	.LLSDACSE1588:
 9206              		.text
 9208              		.section	.data.rel.ro.local
 9209              		.align 8
 9212              	_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 9213 00a0 00000000 		.quad	0
 9213      00000000 
 9214 00a8 00000000 		.quad	_ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 9214      00000000 
 9215 00b0 00000000 		.quad	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
 9215      00000000 
 9216 00b8 00000000 		.quad	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev
 9216      00000000 
 9217 00c0 00000000 		.quad	_ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImp
 9217      00000000 
 9218              		.text
 9219              		.align 2
 9221              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD2Ev:
 9222              	.LFB1590:
  80:TestXmlTestReporter.cpp **** {
 9223              		.loc 3 80 0 is_stmt 1
 9224              		.cfi_startproc
 9225 4554 55       		pushq	%rbp
 9226              		.cfi_def_cfa_offset 16
 9227              		.cfi_offset 6, -16
 9228 4555 4889E5   		movq	%rsp, %rbp
 9229              		.cfi_def_cfa_register 6
 9230 4558 4883EC10 		subq	$16, %rsp
 9231 455c 48897DF8 		movq	%rdi, -8(%rbp)
 9232              	.LBB168:
  80:TestXmlTestReporter.cpp **** {
 9233              		.loc 3 80 0
 9234 4560 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE(%r
 9234      000000
 9235 4567 488B45F8 		movq	-8(%rbp), %rax
 9236 456b 488910   		movq	%rdx, (%rax)
 9237 456e 488B45F8 		movq	-8(%rbp), %rax
 9238 4572 4889C7   		movq	%rax, %rdi
 9239 4575 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9239      00
 9240              	.LBE168:
 9241 457a 90       		nop
 9242 457b C9       		leave
 9243              		.cfi_def_cfa 7, 8
 9244 457c C3       		ret
 9245              		.cfi_endproc
 9246              	.LFE1590:
 9248              		.set	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev,_ZN1
 9249 457d 90       		.align 2
 9251              	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev:
 9252              	.LFB1592:
  80:TestXmlTestReporter.cpp **** {
 9253              		.loc 3 80 0
 9254              		.cfi_startproc
 9255              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9256              		.cfi_lsda 0x1b,.LLSDA1592
 9257 457e 55       		pushq	%rbp
 9258              		.cfi_def_cfa_offset 16
 9259              		.cfi_offset 6, -16
 9260 457f 4889E5   		movq	%rsp, %rbp
 9261              		.cfi_def_cfa_register 6
 9262 4582 53       		pushq	%rbx
 9263 4583 4883EC18 		subq	$24, %rsp
 9264              		.cfi_offset 3, -24
 9265 4587 48897DE8 		movq	%rdi, -24(%rbp)
  80:TestXmlTestReporter.cpp **** {
 9266              		.loc 3 80 0
 9267 458b 488B45E8 		movq	-24(%rbp), %rax
 9268 458f 4889C7   		movq	%rax, %rdi
 9269              	.LEHB269:
 9270 4592 E8BDFFFF 		call	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
 9270      FF
 9271              	.LEHE269:
  80:TestXmlTestReporter.cpp **** {
 9272              		.loc 3 80 0 is_stmt 0 discriminator 2
 9273 4597 488B45E8 		movq	-24(%rbp), %rax
 9274 459b 4889C7   		movq	%rax, %rdi
 9275 459e E8000000 		call	_ZdlPv@PLT
 9275      00
 9276 45a3 EB1A     		jmp	.L492
 9277              	.L491:
 9278 45a5 4889C3   		movq	%rax, %rbx
  80:TestXmlTestReporter.cpp **** {
 9279              		.loc 3 80 0
 9280 45a8 488B45E8 		movq	-24(%rbp), %rax
 9281 45ac 4889C7   		movq	%rax, %rdi
 9282 45af E8000000 		call	_ZdlPv@PLT
 9282      00
 9283 45b4 4889D8   		movq	%rbx, %rax
 9284 45b7 4889C7   		movq	%rax, %rdi
 9285              	.LEHB270:
 9286 45ba E8000000 		call	_Unwind_Resume@PLT
 9286      00
 9287              	.LEHE270:
 9288              	.L492:
 9289 45bf 4883C418 		addq	$24, %rsp
 9290 45c3 5B       		popq	%rbx
 9291 45c4 5D       		popq	%rbp
 9292              		.cfi_def_cfa 7, 8
 9293 45c5 C3       		ret
 9294              		.cfi_endproc
 9295              	.LFE1592:
 9296              		.section	.gcc_except_table
 9297              	.LLSDA1592:
 9298 07d0 FF       		.byte	0xff
 9299 07d1 FF       		.byte	0xff
 9300 07d2 01       		.byte	0x1
 9301 07d3 08       		.uleb128 .LLSDACSE1592-.LLSDACSB1592
 9302              	.LLSDACSB1592:
 9303 07d4 14       		.uleb128 .LEHB269-.LFB1592
 9304 07d5 05       		.uleb128 .LEHE269-.LEHB269
 9305 07d6 27       		.uleb128 .L491-.LFB1592
 9306 07d7 00       		.uleb128 0
 9307 07d8 3C       		.uleb128 .LEHB270-.LFB1592
 9308 07d9 05       		.uleb128 .LEHE270-.LEHB270
 9309 07da 00       		.uleb128 0
 9310 07db 00       		.uleb128 0
 9311              	.LLSDACSE1592:
 9312              		.text
 9314              		.section	.data.rel.ro.local
 9315              		.align 8
 9318              	_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 9319 00c8 00000000 		.quad	0
 9319      00000000 
 9320 00d0 00000000 		.quad	_ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
 9320      00000000 
 9321 00d8 00000000 		.quad	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
 9321      00000000 
 9322 00e0 00000000 		.quad	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev
 9322      00000000 
 9323 00e8 00000000 		.quad	_ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv
 9323      00000000 
 9324              		.text
 9325              		.align 2
 9327              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD2Ev:
 9328              	.LFB1594:
  68:TestXmlTestReporter.cpp **** {
 9329              		.loc 3 68 0 is_stmt 1
 9330              		.cfi_startproc
 9331 45c6 55       		pushq	%rbp
 9332              		.cfi_def_cfa_offset 16
 9333              		.cfi_offset 6, -16
 9334 45c7 4889E5   		movq	%rsp, %rbp
 9335              		.cfi_def_cfa_register 6
 9336 45ca 4883EC10 		subq	$16, %rsp
 9337 45ce 48897DF8 		movq	%rdi, -8(%rbp)
 9338              	.LBB169:
  68:TestXmlTestReporter.cpp **** {
 9339              		.loc 3 68 0
 9340 45d2 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE(%rip), %rdx
 9340      000000
 9341 45d9 488B45F8 		movq	-8(%rbp), %rax
 9342 45dd 488910   		movq	%rdx, (%rax)
 9343 45e0 488B45F8 		movq	-8(%rbp), %rax
 9344 45e4 4889C7   		movq	%rax, %rdi
 9345 45e7 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9345      00
 9346              	.LBE169:
 9347 45ec 90       		nop
 9348 45ed C9       		leave
 9349              		.cfi_def_cfa 7, 8
 9350 45ee C3       		ret
 9351              		.cfi_endproc
 9352              	.LFE1594:
 9354              		.set	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev,_ZN12_GLOBAL__N_150
 9355 45ef 90       		.align 2
 9357              	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev:
 9358              	.LFB1596:
  68:TestXmlTestReporter.cpp **** {
 9359              		.loc 3 68 0
 9360              		.cfi_startproc
 9361              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9362              		.cfi_lsda 0x1b,.LLSDA1596
 9363 45f0 55       		pushq	%rbp
 9364              		.cfi_def_cfa_offset 16
 9365              		.cfi_offset 6, -16
 9366 45f1 4889E5   		movq	%rsp, %rbp
 9367              		.cfi_def_cfa_register 6
 9368 45f4 53       		pushq	%rbx
 9369 45f5 4883EC18 		subq	$24, %rsp
 9370              		.cfi_offset 3, -24
 9371 45f9 48897DE8 		movq	%rdi, -24(%rbp)
  68:TestXmlTestReporter.cpp **** {
 9372              		.loc 3 68 0
 9373 45fd 488B45E8 		movq	-24(%rbp), %rax
 9374 4601 4889C7   		movq	%rax, %rdi
 9375              	.LEHB271:
 9376 4604 E8BDFFFF 		call	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
 9376      FF
 9377              	.LEHE271:
  68:TestXmlTestReporter.cpp **** {
 9378              		.loc 3 68 0 is_stmt 0 discriminator 2
 9379 4609 488B45E8 		movq	-24(%rbp), %rax
 9380 460d 4889C7   		movq	%rax, %rdi
 9381 4610 E8000000 		call	_ZdlPv@PLT
 9381      00
 9382 4615 EB1A     		jmp	.L497
 9383              	.L496:
 9384 4617 4889C3   		movq	%rax, %rbx
  68:TestXmlTestReporter.cpp **** {
 9385              		.loc 3 68 0
 9386 461a 488B45E8 		movq	-24(%rbp), %rax
 9387 461e 4889C7   		movq	%rax, %rdi
 9388 4621 E8000000 		call	_ZdlPv@PLT
 9388      00
 9389 4626 4889D8   		movq	%rbx, %rax
 9390 4629 4889C7   		movq	%rax, %rdi
 9391              	.LEHB272:
 9392 462c E8000000 		call	_Unwind_Resume@PLT
 9392      00
 9393              	.LEHE272:
 9394              	.L497:
 9395 4631 4883C418 		addq	$24, %rsp
 9396 4635 5B       		popq	%rbx
 9397 4636 5D       		popq	%rbp
 9398              		.cfi_def_cfa 7, 8
 9399 4637 C3       		ret
 9400              		.cfi_endproc
 9401              	.LFE1596:
 9402              		.section	.gcc_except_table
 9403              	.LLSDA1596:
 9404 07dc FF       		.byte	0xff
 9405 07dd FF       		.byte	0xff
 9406 07de 01       		.byte	0x1
 9407 07df 08       		.uleb128 .LLSDACSE1596-.LLSDACSB1596
 9408              	.LLSDACSB1596:
 9409 07e0 14       		.uleb128 .LEHB271-.LFB1596
 9410 07e1 05       		.uleb128 .LEHE271-.LEHB271
 9411 07e2 27       		.uleb128 .L496-.LFB1596
 9412 07e3 00       		.uleb128 0
 9413 07e4 3C       		.uleb128 .LEHB272-.LFB1596
 9414 07e5 05       		.uleb128 .LEHE272-.LEHB272
 9415 07e6 00       		.uleb128 0
 9416 07e7 00       		.uleb128 0
 9417              	.LLSDACSE1596:
 9418              		.text
 9420              		.section	.data.rel.ro.local
 9421              		.align 8
 9424              	_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 9425 00f0 00000000 		.quad	0
 9425      00000000 
 9426 00f8 00000000 		.quad	_ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 9426      00000000 
 9427 0100 00000000 		.quad	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
 9427      00000000 
 9428 0108 00000000 		.quad	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev
 9428      00000000 
 9429 0110 00000000 		.quad	_ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunIm
 9429      00000000 
 9430              		.text
 9431              		.align 2
 9433              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD2Ev:
 9434              	.LFB1598:
  55:TestXmlTestReporter.cpp **** {
 9435              		.loc 3 55 0 is_stmt 1
 9436              		.cfi_startproc
 9437 4638 55       		pushq	%rbp
 9438              		.cfi_def_cfa_offset 16
 9439              		.cfi_offset 6, -16
 9440 4639 4889E5   		movq	%rsp, %rbp
 9441              		.cfi_def_cfa_register 6
 9442 463c 4883EC10 		subq	$16, %rsp
 9443 4640 48897DF8 		movq	%rdi, -8(%rbp)
 9444              	.LBB170:
  55:TestXmlTestReporter.cpp **** {
 9445              		.loc 3 55 0
 9446 4644 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE(%
 9446      000000
 9447 464b 488B45F8 		movq	-8(%rbp), %rax
 9448 464f 488910   		movq	%rdx, (%rax)
 9449 4652 488B45F8 		movq	-8(%rbp), %rax
 9450 4656 4889C7   		movq	%rax, %rdi
 9451 4659 E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9451      00
 9452              	.LBE170:
 9453 465e 90       		nop
 9454 465f C9       		leave
 9455              		.cfi_def_cfa 7, 8
 9456 4660 C3       		ret
 9457              		.cfi_endproc
 9458              	.LFE1598:
 9460              		.set	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev,_ZN
 9461 4661 90       		.align 2
 9463              	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev:
 9464              	.LFB1600:
  55:TestXmlTestReporter.cpp **** {
 9465              		.loc 3 55 0
 9466              		.cfi_startproc
 9467              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9468              		.cfi_lsda 0x1b,.LLSDA1600
 9469 4662 55       		pushq	%rbp
 9470              		.cfi_def_cfa_offset 16
 9471              		.cfi_offset 6, -16
 9472 4663 4889E5   		movq	%rsp, %rbp
 9473              		.cfi_def_cfa_register 6
 9474 4666 53       		pushq	%rbx
 9475 4667 4883EC18 		subq	$24, %rsp
 9476              		.cfi_offset 3, -24
 9477 466b 48897DE8 		movq	%rdi, -24(%rbp)
  55:TestXmlTestReporter.cpp **** {
 9478              		.loc 3 55 0
 9479 466f 488B45E8 		movq	-24(%rbp), %rax
 9480 4673 4889C7   		movq	%rax, %rdi
 9481              	.LEHB273:
 9482 4676 E8BDFFFF 		call	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
 9482      FF
 9483              	.LEHE273:
  55:TestXmlTestReporter.cpp **** {
 9484              		.loc 3 55 0 is_stmt 0 discriminator 2
 9485 467b 488B45E8 		movq	-24(%rbp), %rax
 9486 467f 4889C7   		movq	%rax, %rdi
 9487 4682 E8000000 		call	_ZdlPv@PLT
 9487      00
 9488 4687 EB1A     		jmp	.L502
 9489              	.L501:
 9490 4689 4889C3   		movq	%rax, %rbx
  55:TestXmlTestReporter.cpp **** {
 9491              		.loc 3 55 0
 9492 468c 488B45E8 		movq	-24(%rbp), %rax
 9493 4690 4889C7   		movq	%rax, %rdi
 9494 4693 E8000000 		call	_ZdlPv@PLT
 9494      00
 9495 4698 4889D8   		movq	%rbx, %rax
 9496 469b 4889C7   		movq	%rax, %rdi
 9497              	.LEHB274:
 9498 469e E8000000 		call	_Unwind_Resume@PLT
 9498      00
 9499              	.LEHE274:
 9500              	.L502:
 9501 46a3 4883C418 		addq	$24, %rsp
 9502 46a7 5B       		popq	%rbx
 9503 46a8 5D       		popq	%rbp
 9504              		.cfi_def_cfa 7, 8
 9505 46a9 C3       		ret
 9506              		.cfi_endproc
 9507              	.LFE1600:
 9508              		.section	.gcc_except_table
 9509              	.LLSDA1600:
 9510 07e8 FF       		.byte	0xff
 9511 07e9 FF       		.byte	0xff
 9512 07ea 01       		.byte	0x1
 9513 07eb 08       		.uleb128 .LLSDACSE1600-.LLSDACSB1600
 9514              	.LLSDACSB1600:
 9515 07ec 14       		.uleb128 .LEHB273-.LFB1600
 9516 07ed 05       		.uleb128 .LEHE273-.LEHB273
 9517 07ee 27       		.uleb128 .L501-.LFB1600
 9518 07ef 00       		.uleb128 0
 9519 07f0 3C       		.uleb128 .LEHB274-.LFB1600
 9520 07f1 05       		.uleb128 .LEHE274-.LEHB274
 9521 07f2 00       		.uleb128 0
 9522 07f3 00       		.uleb128 0
 9523              	.LLSDACSE1600:
 9524              		.text
 9526              		.section	.data.rel.ro.local
 9527              		.align 8
 9530              	_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 9531 0118 00000000 		.quad	0
 9531      00000000 
 9532 0120 00000000 		.quad	_ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
 9532      00000000 
 9533 0128 00000000 		.quad	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
 9533      00000000 
 9534 0130 00000000 		.quad	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev
 9534      00000000 
 9535 0138 00000000 		.quad	_ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv
 9535      00000000 
 9536              		.text
 9537              		.align 2
 9539              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD2Ev:
 9540              	.LFB1602:
  34:TestXmlTestReporter.cpp **** {
 9541              		.loc 3 34 0 is_stmt 1
 9542              		.cfi_startproc
 9543 46aa 55       		pushq	%rbp
 9544              		.cfi_def_cfa_offset 16
 9545              		.cfi_offset 6, -16
 9546 46ab 4889E5   		movq	%rsp, %rbp
 9547              		.cfi_def_cfa_register 6
 9548 46ae 4883EC10 		subq	$16, %rsp
 9549 46b2 48897DF8 		movq	%rdi, -8(%rbp)
 9550              	.LBB171:
  34:TestXmlTestReporter.cpp **** {
 9551              		.loc 3 34 0
 9552 46b6 488D1500 		leaq	16+_ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE(%rip), %rdx
 9552      000000
 9553 46bd 488B45F8 		movq	-8(%rbp), %rax
 9554 46c1 488910   		movq	%rdx, (%rax)
 9555 46c4 488B45F8 		movq	-8(%rbp), %rax
 9556 46c8 4889C7   		movq	%rax, %rdi
 9557 46cb E8000000 		call	_ZN8UnitTest4TestD2Ev@PLT
 9557      00
 9558              	.LBE171:
 9559 46d0 90       		nop
 9560 46d1 C9       		leave
 9561              		.cfi_def_cfa 7, 8
 9562 46d2 C3       		ret
 9563              		.cfi_endproc
 9564              	.LFE1602:
 9566              		.set	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev,_ZN12_GLOBAL__N
 9567 46d3 90       		.align 2
 9569              	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev:
 9570              	.LFB1604:
  34:TestXmlTestReporter.cpp **** {
 9571              		.loc 3 34 0
 9572              		.cfi_startproc
 9573              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9574              		.cfi_lsda 0x1b,.LLSDA1604
 9575 46d4 55       		pushq	%rbp
 9576              		.cfi_def_cfa_offset 16
 9577              		.cfi_offset 6, -16
 9578 46d5 4889E5   		movq	%rsp, %rbp
 9579              		.cfi_def_cfa_register 6
 9580 46d8 53       		pushq	%rbx
 9581 46d9 4883EC18 		subq	$24, %rsp
 9582              		.cfi_offset 3, -24
 9583 46dd 48897DE8 		movq	%rdi, -24(%rbp)
  34:TestXmlTestReporter.cpp **** {
 9584              		.loc 3 34 0
 9585 46e1 488B45E8 		movq	-24(%rbp), %rax
 9586 46e5 4889C7   		movq	%rax, %rdi
 9587              	.LEHB275:
 9588 46e8 E8BDFFFF 		call	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
 9588      FF
 9589              	.LEHE275:
  34:TestXmlTestReporter.cpp **** {
 9590              		.loc 3 34 0 is_stmt 0 discriminator 2
 9591 46ed 488B45E8 		movq	-24(%rbp), %rax
 9592 46f1 4889C7   		movq	%rax, %rdi
 9593 46f4 E8000000 		call	_ZdlPv@PLT
 9593      00
 9594 46f9 EB1A     		jmp	.L507
 9595              	.L506:
 9596 46fb 4889C3   		movq	%rax, %rbx
  34:TestXmlTestReporter.cpp **** {
 9597              		.loc 3 34 0
 9598 46fe 488B45E8 		movq	-24(%rbp), %rax
 9599 4702 4889C7   		movq	%rax, %rdi
 9600 4705 E8000000 		call	_ZdlPv@PLT
 9600      00
 9601 470a 4889D8   		movq	%rbx, %rax
 9602 470d 4889C7   		movq	%rax, %rdi
 9603              	.LEHB276:
 9604 4710 E8000000 		call	_Unwind_Resume@PLT
 9604      00
 9605              	.LEHE276:
 9606              	.L507:
 9607 4715 4883C418 		addq	$24, %rsp
 9608 4719 5B       		popq	%rbx
 9609 471a 5D       		popq	%rbp
 9610              		.cfi_def_cfa 7, 8
 9611 471b C3       		ret
 9612              		.cfi_endproc
 9613              	.LFE1604:
 9614              		.section	.gcc_except_table
 9615              	.LLSDA1604:
 9616 07f4 FF       		.byte	0xff
 9617 07f5 FF       		.byte	0xff
 9618 07f6 01       		.byte	0x1
 9619 07f7 08       		.uleb128 .LLSDACSE1604-.LLSDACSB1604
 9620              	.LLSDACSB1604:
 9621 07f8 14       		.uleb128 .LEHB275-.LFB1604
 9622 07f9 05       		.uleb128 .LEHE275-.LEHB275
 9623 07fa 27       		.uleb128 .L506-.LFB1604
 9624 07fb 00       		.uleb128 0
 9625 07fc 3C       		.uleb128 .LEHB276-.LFB1604
 9626 07fd 05       		.uleb128 .LEHE276-.LEHB276
 9627 07fe 00       		.uleb128 0
 9628 07ff 00       		.uleb128 0
 9629              	.LLSDACSE1604:
 9630              		.text
 9632              		.weak	_ZTVN8UnitTest15MemoryOutStreamE
 9633              		.section	.data.rel.ro.local._ZTVN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTVN8UnitTest15Memor
 9634              		.align 8
 9637              	_ZTVN8UnitTest15MemoryOutStreamE:
 9638 0000 90000000 		.quad	144
 9638      00000000 
 9639 0008 00000000 		.quad	0
 9639      00000000 
 9640 0010 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9640      00000000 
 9641 0018 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD1Ev
 9641      00000000 
 9642 0020 00000000 		.quad	_ZN8UnitTest15MemoryOutStreamD0Ev
 9642      00000000 
 9643 0028 70FFFFFF 		.quad	-144
 9643      FFFFFFFF 
 9644 0030 70FFFFFF 		.quad	-144
 9644      FFFFFFFF 
 9645 0038 00000000 		.quad	_ZTIN8UnitTest15MemoryOutStreamE
 9645      00000000 
 9646 0040 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9646      00000000 
 9647 0048 00000000 		.quad	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9647      00000000 
 9648              		.weak	_ZTTN8UnitTest15MemoryOutStreamE
 9649              		.section	.data.rel.ro.local._ZTTN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTVN8UnitTest15Memor
 9650              		.align 8
 9653              	_ZTTN8UnitTest15MemoryOutStreamE:
 9654 0000 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+24
 9654      00000000 
 9655 0008 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9655      00000000 
 9656 0010 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+24
 9656      00000000 
 9657 0018 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_So+64
 9657      00000000 
 9658 0020 00000000 		.quad	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9658      00000000 
 9659 0028 00000000 		.quad	_ZTVN8UnitTest15MemoryOutStreamE+64
 9659      00000000 
 9660              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIc
 9661              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE
 9662              		.section	.data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char
 9663              		.align 8
 9666              	_ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:
 9667 0000 90000000 		.quad	144
 9667      00000000 
 9668 0008 00000000 		.quad	0
 9668      00000000 
 9669 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9669      00000000 
 9670 0018 00000000 		.quad	0
 9670      00000000 
 9671 0020 00000000 		.quad	0
 9671      00000000 
 9672 0028 70FFFFFF 		.quad	-144
 9672      FFFFFFFF 
 9673 0030 70FFFFFF 		.quad	-144
 9673      FFFFFFFF 
 9674 0038 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 9674      00000000 
 9675 0040 00000000 		.quad	0
 9675      00000000 
 9676 0048 00000000 		.quad	0
 9676      00000000 
 9677              		.hidden	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9678              		.weak	_ZTCN8UnitTest15MemoryOutStreamE0_So
 9679              		.section	.data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_So,"awG",@progbits,_ZTVN8UnitTest15MemoryO
 9680              		.align 8
 9683              	_ZTCN8UnitTest15MemoryOutStreamE0_So:
 9684 0000 90000000 		.quad	144
 9684      00000000 
 9685 0008 00000000 		.quad	0
 9685      00000000 
 9686 0010 00000000 		.quad	_ZTISo
 9686      00000000 
 9687 0018 00000000 		.quad	0
 9687      00000000 
 9688 0020 00000000 		.quad	0
 9688      00000000 
 9689 0028 70FFFFFF 		.quad	-144
 9689      FFFFFFFF 
 9690 0030 70FFFFFF 		.quad	-144
 9690      FFFFFFFF 
 9691 0038 00000000 		.quad	_ZTISo
 9691      00000000 
 9692 0040 00000000 		.quad	0
 9692      00000000 
 9693 0048 00000000 		.quad	0
 9693      00000000 
 9694              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9695              		.align 2
 9696              		.weak	_ZN8UnitTest15MemoryOutStreamD1Ev
 9698              	_ZN8UnitTest15MemoryOutStreamD1Ev:
 9699              	.LFB1607:
  13:../MemoryOutStream.h **** {
 9700              		.loc 2 13 0 is_stmt 1
 9701              		.cfi_startproc
 9702              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9703              		.cfi_lsda 0x1b,.LLSDA1607
 9704 0000 55       		pushq	%rbp
 9705              		.cfi_def_cfa_offset 16
 9706              		.cfi_offset 6, -16
 9707 0001 4889E5   		movq	%rsp, %rbp
 9708              		.cfi_def_cfa_register 6
 9709 0004 53       		pushq	%rbx
 9710 0005 4883EC18 		subq	$24, %rsp
 9711              		.cfi_offset 3, -24
 9712 0009 48897DE8 		movq	%rdi, -24(%rbp)
 9713              	.LBB172:
  13:../MemoryOutStream.h **** {
 9714              		.loc 2 13 0
 9715 000d 488D1500 		leaq	24+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rdx
 9715      000000
 9716 0014 488B45E8 		movq	-24(%rbp), %rax
 9717 0018 488910   		movq	%rdx, (%rax)
 9718 001b 488B45E8 		movq	-24(%rbp), %rax
 9719 001f 488D9090 		leaq	144(%rax), %rdx
 9719      000000
 9720 0026 488D0500 		leaq	64+_ZTVN8UnitTest15MemoryOutStreamE(%rip), %rax
 9720      000000
 9721 002d 488902   		movq	%rax, (%rdx)
 9722 0030 488B45E8 		movq	-24(%rbp), %rax
 9723 0034 4883C070 		addq	$112, %rax
 9724 0038 4889C7   		movq	%rax, %rdi
 9725              	.LEHB277:
 9726 003b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 9726      00
 9727              	.LEHE277:
  13:../MemoryOutStream.h **** {
 9728              		.loc 2 13 0 is_stmt 0 discriminator 2
 9729 0040 488B45E8 		movq	-24(%rbp), %rax
 9730 0044 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
 9730      000000
 9731 004b 4889D6   		movq	%rdx, %rsi
 9732 004e 4889C7   		movq	%rax, %rdi
 9733              	.LEHB278:
 9734 0051 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
 9734      00
 9735              	.LEHE278:
  13:../MemoryOutStream.h **** {
 9736              		.loc 2 13 0 discriminator 4
 9737 0056 488B45E8 		movq	-24(%rbp), %rax
 9738 005a 48059000 		addq	$144, %rax
 9738      0000
 9739 0060 4889C7   		movq	%rax, %rdi
 9740              	.LEHB279:
 9741 0063 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 9741      00
 9742              	.LEHE279:
 9743              	.LBE172:
 9744 0068 EB3B     		jmp	.L513
 9745              	.L511:
 9746 006a 4889C3   		movq	%rax, %rbx
 9747              	.LBB173:
  13:../MemoryOutStream.h **** {
 9748              		.loc 2 13 0
 9749 006d 488B45E8 		movq	-24(%rbp), %rax
 9750 0071 488D1500 		leaq	8+_ZTTN8UnitTest15MemoryOutStreamE(%rip), %rdx
 9750      000000
 9751 0078 4889D6   		movq	%rdx, %rsi
 9752 007b 4889C7   		movq	%rax, %rdi
 9753 007e E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev@PLT
 9753      00
 9754 0083 EB03     		jmp	.L510
 9755              	.L512:
 9756 0085 4889C3   		movq	%rax, %rbx
 9757              	.L510:
  13:../MemoryOutStream.h **** {
 9758              		.loc 2 13 0 discriminator 3
 9759 0088 488B45E8 		movq	-24(%rbp), %rax
 9760 008c 48059000 		addq	$144, %rax
 9760      0000
 9761 0092 4889C7   		movq	%rax, %rdi
 9762 0095 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev@PLT
 9762      00
 9763 009a 4889D8   		movq	%rbx, %rax
 9764 009d 4889C7   		movq	%rax, %rdi
 9765              	.LEHB280:
 9766 00a0 E8000000 		call	_Unwind_Resume@PLT
 9766      00
 9767              	.LEHE280:
 9768              	.L513:
 9769              	.LBE173:
  13:../MemoryOutStream.h **** {
 9770              		.loc 2 13 0
 9771 00a5 4883C418 		addq	$24, %rsp
 9772 00a9 5B       		popq	%rbx
 9773 00aa 5D       		popq	%rbp
 9774              		.cfi_def_cfa 7, 8
 9775 00ab C3       		ret
 9776              		.cfi_endproc
 9777              	.LFE1607:
 9778              		.section	.gcc_except_table
 9779              	.LLSDA1607:
 9780 0800 FF       		.byte	0xff
 9781 0801 FF       		.byte	0xff
 9782 0802 01       		.byte	0x1
 9783 0803 12       		.uleb128 .LLSDACSE1607-.LLSDACSB1607
 9784              	.LLSDACSB1607:
 9785 0804 3B       		.uleb128 .LEHB277-.LFB1607
 9786 0805 05       		.uleb128 .LEHE277-.LEHB277
 9787 0806 6A       		.uleb128 .L511-.LFB1607
 9788 0807 00       		.uleb128 0
 9789 0808 51       		.uleb128 .LEHB278-.LFB1607
 9790 0809 05       		.uleb128 .LEHE278-.LEHB278
 9791 080a 8501     		.uleb128 .L512-.LFB1607
 9792 080c 00       		.uleb128 0
 9793 080d 63       		.uleb128 .LEHB279-.LFB1607
 9794 080e 05       		.uleb128 .LEHE279-.LEHB279
 9795 080f 00       		.uleb128 0
 9796 0810 00       		.uleb128 0
 9797 0811 A001     		.uleb128 .LEHB280-.LFB1607
 9798 0813 05       		.uleb128 .LEHE280-.LEHB280
 9799 0814 00       		.uleb128 0
 9800 0815 00       		.uleb128 0
 9801              	.LLSDACSE1607:
 9802              		.section	.text._ZN8UnitTest15MemoryOutStreamD1Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD1Ev
 9804              		.set	.LTHUNK0,_ZN8UnitTest15MemoryOutStreamD1Ev
 9805              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
 9807              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev:
 9808              	.LFB1673:
  13:../MemoryOutStream.h **** {
 9809              		.loc 2 13 0 is_stmt 1
 9810              		.cfi_startproc
 9811 00ac 4C8B17   		movq	(%rdi), %r10
 9812 00af 49037AE8 		addq	-24(%r10), %rdi
 9813 00b3 E948FFFF 		jmp	.LTHUNK0
 9813      FF
 9814              		.cfi_endproc
 9815              	.LFE1673:
 9817              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 9818              		.align 2
 9819              		.weak	_ZN8UnitTest15MemoryOutStreamD0Ev
 9821              	_ZN8UnitTest15MemoryOutStreamD0Ev:
 9822              	.LFB1608:
  13:../MemoryOutStream.h **** {
 9823              		.loc 2 13 0
 9824              		.cfi_startproc
 9825              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9826              		.cfi_lsda 0x1b,.LLSDA1608
 9827 0000 55       		pushq	%rbp
 9828              		.cfi_def_cfa_offset 16
 9829              		.cfi_offset 6, -16
 9830 0001 4889E5   		movq	%rsp, %rbp
 9831              		.cfi_def_cfa_register 6
 9832 0004 53       		pushq	%rbx
 9833 0005 4883EC18 		subq	$24, %rsp
 9834              		.cfi_offset 3, -24
 9835 0009 48897DE8 		movq	%rdi, -24(%rbp)
  13:../MemoryOutStream.h **** {
 9836              		.loc 2 13 0
 9837 000d 488B45E8 		movq	-24(%rbp), %rax
 9838 0011 4889C7   		movq	%rax, %rdi
 9839              	.LEHB281:
 9840 0014 E8000000 		call	_ZN8UnitTest15MemoryOutStreamD1Ev
 9840      00
 9841              	.LEHE281:
  13:../MemoryOutStream.h **** {
 9842              		.loc 2 13 0 is_stmt 0 discriminator 2
 9843 0019 488B45E8 		movq	-24(%rbp), %rax
 9844 001d 4889C7   		movq	%rax, %rdi
 9845 0020 E8000000 		call	_ZdlPv@PLT
 9845      00
 9846 0025 EB1A     		jmp	.L517
 9847              	.L516:
 9848 0027 4889C3   		movq	%rax, %rbx
  13:../MemoryOutStream.h **** {
 9849              		.loc 2 13 0
 9850 002a 488B45E8 		movq	-24(%rbp), %rax
 9851 002e 4889C7   		movq	%rax, %rdi
 9852 0031 E8000000 		call	_ZdlPv@PLT
 9852      00
 9853 0036 4889D8   		movq	%rbx, %rax
 9854 0039 4889C7   		movq	%rax, %rdi
 9855              	.LEHB282:
 9856 003c E8000000 		call	_Unwind_Resume@PLT
 9856      00
 9857              	.LEHE282:
 9858              	.L517:
 9859 0041 4883C418 		addq	$24, %rsp
 9860 0045 5B       		popq	%rbx
 9861 0046 5D       		popq	%rbp
 9862              		.cfi_def_cfa 7, 8
 9863 0047 C3       		ret
 9864              		.cfi_endproc
 9865              	.LFE1608:
 9866              		.section	.gcc_except_table
 9867              	.LLSDA1608:
 9868 0816 FF       		.byte	0xff
 9869 0817 FF       		.byte	0xff
 9870 0818 01       		.byte	0x1
 9871 0819 08       		.uleb128 .LLSDACSE1608-.LLSDACSB1608
 9872              	.LLSDACSB1608:
 9873 081a 14       		.uleb128 .LEHB281-.LFB1608
 9874 081b 05       		.uleb128 .LEHE281-.LEHB281
 9875 081c 27       		.uleb128 .L516-.LFB1608
 9876 081d 00       		.uleb128 0
 9877 081e 3C       		.uleb128 .LEHB282-.LFB1608
 9878 081f 05       		.uleb128 .LEHE282-.LEHB282
 9879 0820 00       		.uleb128 0
 9880 0821 00       		.uleb128 0
 9881              	.LLSDACSE1608:
 9882              		.section	.text._ZN8UnitTest15MemoryOutStreamD0Ev,"axG",@progbits,_ZN8UnitTest15MemoryOutStreamD0Ev
 9884              		.set	.LTHUNK1,_ZN8UnitTest15MemoryOutStreamD0Ev
 9885              		.weak	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
 9887              	_ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev:
 9888              	.LFB1674:
  13:../MemoryOutStream.h **** {
 9889              		.loc 2 13 0 is_stmt 1
 9890              		.cfi_startproc
 9891 0048 4C8B17   		movq	(%rdi), %r10
 9892 004b 49037AE8 		addq	-24(%r10), %rdi
 9893 004f EBAF     		jmp	.LTHUNK1
 9894              		.cfi_endproc
 9895              	.LFE1674:
 9897              		.section	.rodata
 9898 0977 00000000 		.align 32
 9898      00000000 
 9898      00
 9901              	_ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 9902 0980 2A4E3132 		.string	"*N12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE"
 9902      5F474C4F 
 9902      42414C5F 
 9902      5F4E5F31 
 9902      34325465 
 9903              		.section	.data.rel.ro,"aw",@progbits
 9904              		.align 8
 9907              	_ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE:
 9908 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9908      00000000 
 9909 0008 00000000 		.quad	_ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
 9909      00000000 
 9910 0010 00000000 		.quad	_ZTIN8UnitTest4TestE
 9910      00000000 
 9911              		.section	.rodata
 9912 09be 0000     		.align 32
 9915              	_ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 9916 09c0 2A4E3132 		.string	"*N12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE"
 9916      5F474C4F 
 9916      42414C5F 
 9916      5F4E5F31 
 9916      34395465 
 9917              		.section	.data.rel.ro
 9918              		.align 8
 9921              	_ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE:
 9922 0018 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9922      00000000 
 9923 0020 00000000 		.quad	_ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
 9923      00000000 
 9924 0028 00000000 		.quad	_ZTIN8UnitTest4TestE
 9924      00000000 
 9925              		.section	.rodata
 9926 0a05 00000000 		.align 32
 9926      00000000 
 9926      00000000 
 9926      00000000 
 9926      00000000 
 9929              	_ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 9930 0a20 2A4E3132 		.string	"*N12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE"
 9930      5F474C4F 
 9930      42414C5F 
 9930      5F4E5F31 
 9930      35325465 
 9931              		.section	.data.rel.ro
 9932              		.align 8
 9935              	_ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE:
 9936 0030 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9936      00000000 
 9937 0038 00000000 		.quad	_ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
 9937      00000000 
 9938 0040 00000000 		.quad	_ZTIN8UnitTest4TestE
 9938      00000000 
 9939              		.section	.rodata
 9940 0a68 00000000 		.align 32
 9940      00000000 
 9940      00000000 
 9940      00000000 
 9940      00000000 
 9943              	_ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 9944 0a80 2A4E3132 		.string	"*N12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE"
 9944      5F474C4F 
 9944      42414C5F 
 9944      5F4E5F31 
 9944      36315465 
 9945              		.section	.data.rel.ro
 9946              		.align 8
 9949              	_ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE:
 9950 0048 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9950      00000000 
 9951 0050 00000000 		.quad	_ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
 9951      00000000 
 9952 0058 00000000 		.quad	_ZTIN8UnitTest4TestE
 9952      00000000 
 9953              		.section	.rodata
 9954 0ad1 00000000 		.align 32
 9954      00000000 
 9954      00000000 
 9954      000000
 9957              	_ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 9958 0ae0 2A4E3132 		.string	"*N12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE"
 9958      5F474C4F 
 9958      42414C5F 
 9958      5F4E5F31 
 9958      36355465 
 9959              		.section	.data.rel.ro
 9960              		.align 8
 9963              	_ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE:
 9964 0060 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9964      00000000 
 9965 0068 00000000 		.quad	_ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
 9965      00000000 
 9966 0070 00000000 		.quad	_ZTIN8UnitTest4TestE
 9966      00000000 
 9967              		.section	.rodata
 9968 0b35 00000000 		.align 32
 9968      00000000 
 9968      000000
 9971              	_ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 9972 0b40 2A4E3132 		.string	"*N12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE"
 9972      5F474C4F 
 9972      42414C5F 
 9972      5F4E5F31 
 9972      35305465 
 9973              		.section	.data.rel.ro
 9974              		.align 8
 9977              	_ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE:
 9978 0078 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9978      00000000 
 9979 0080 00000000 		.quad	_ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
 9979      00000000 
 9980 0088 00000000 		.quad	_ZTIN8UnitTest4TestE
 9980      00000000 
 9981              		.section	.rodata
 9982 0b86 00000000 		.align 32
 9982      00000000 
 9982      00000000 
 9982      00000000 
 9982      00000000 
 9985              	_ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 9986 0ba0 2A4E3132 		.string	"*N12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE"
 9986      5F474C4F 
 9986      42414C5F 
 9986      5F4E5F31 
 9986      36365465 
 9987              		.section	.data.rel.ro
 9988              		.align 8
 9991              	_ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE:
 9992 0090 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 9992      00000000 
 9993 0098 00000000 		.quad	_ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
 9993      00000000 
 9994 00a0 00000000 		.quad	_ZTIN8UnitTest4TestE
 9994      00000000 
 9995              		.section	.rodata
 9996 0bf6 00000000 		.align 32
 9996      00000000 
 9996      0000
 9999              	_ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 10000 0c00 2A4E3132 		.string	"*N12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE"
 10000      5F474C4F 
 10000      42414C5F 
 10000      5F4E5F31 
 10000      35345465 
 10001              		.section	.data.rel.ro
 10002              		.align 8
 10005              	_ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE:
 10006 00a8 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10006      00000000 
 10007 00b0 00000000 		.quad	_ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
 10007      00000000 
 10008 00b8 00000000 		.quad	_ZTIN8UnitTest4TestE
 10008      00000000 
 10009              		.weak	_ZTIN8UnitTest15MemoryOutStreamE
 10010              		.section	.data.rel.ro._ZTIN8UnitTest15MemoryOutStreamE,"awG",@progbits,_ZTIN8UnitTest15MemoryOutSt
 10011              		.align 8
 10014              	_ZTIN8UnitTest15MemoryOutStreamE:
 10015 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 10015      00000000 
 10016 0008 00000000 		.quad	_ZTSN8UnitTest15MemoryOutStreamE
 10016      00000000 
 10017 0010 00000000 		.quad	_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
 10017      00000000 
 10018              		.weak	_ZTSN8UnitTest15MemoryOutStreamE
 10019              		.section	.rodata._ZTSN8UnitTest15MemoryOutStreamE,"aG",@progbits,_ZTSN8UnitTest15MemoryOutStreamE,
 10020              		.align 16
 10023              	_ZTSN8UnitTest15MemoryOutStreamE:
 10024 0000 4E38556E 		.string	"N8UnitTest15MemoryOutStreamE"
 10024      69745465 
 10024      73743135 
 10024      4D656D6F 
 10024      72794F75 
 10025              		.text
 10027              	_Z41__static_initialization_and_destruction_0ii:
 10028              	.LFB1609:
 182:TestXmlTestReporter.cpp **** 
 183:TestXmlTestReporter.cpp **** }
 10029              		.loc 3 183 0
 10030              		.cfi_startproc
 10031 471c 55       		pushq	%rbp
 10032              		.cfi_def_cfa_offset 16
 10033              		.cfi_offset 6, -16
 10034 471d 4889E5   		movq	%rsp, %rbp
 10035              		.cfi_def_cfa_register 6
 10036 4720 4883EC10 		subq	$16, %rsp
 10037 4724 897DFC   		movl	%edi, -4(%rbp)
 10038 4727 8975F8   		movl	%esi, -8(%rbp)
 10039              		.loc 3 183 0
 10040 472a 837DFC01 		cmpl	$1, -4(%rbp)
 10041 472e 0F851502 		jne	.L520
 10041      0000
 10042              		.loc 3 183 0 is_stmt 0 discriminator 1
 10043 4734 817DF8FF 		cmpl	$65535, -8(%rbp)
 10043      FF0000
 10044 473b 0F850802 		jne	.L520
 10044      0000
  34:TestXmlTestReporter.cpp **** {
 10045              		.loc 3 34 0 is_stmt 1
 10046 4741 488D3D00 		leaq	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE(%rip), %rd
 10046      000000
 10047 4748 E88BB9FF 		call	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev
 10047      FF
 10048 474d 488D1500 		leaq	__dso_handle(%rip), %rdx
 10048      000000
 10049 4754 488D3500 		leaq	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE(%rip), %rs
 10049      000000
 10050 475b 488D3D48 		leaq	_ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev(%rip), %rdi
 10050      FFFFFF
 10051 4762 E8000000 		call	__cxa_atexit@PLT
 10051      00
 10052 4767 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10052      00
 10053 476c 488D1500 		leaq	_ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE(%rip), %rd
 10053      000000
 10054 4773 4889C6   		movq	%rax, %rsi
 10055 4776 488D3D00 		leaq	_ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE(%rip), %rdi
 10055      000000
 10056 477d E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10056      00
  55:TestXmlTestReporter.cpp **** {
 10057              		.loc 3 55 0
 10058 4782 488D3D00 		leaq	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstance
 10058      000000
 10059 4789 E8C4BEFF 		call	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev
 10059      FF
 10060 478e 488D1500 		leaq	__dso_handle(%rip), %rdx
 10060      000000
 10061 4795 488D3500 		leaq	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstance
 10061      000000
 10062 479c 488D3D95 		leaq	_ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev(%ri
 10062      FEFFFF
 10063 47a3 E8000000 		call	__cxa_atexit@PLT
 10063      00
 10064 47a8 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10064      00
 10065 47ad 488D1500 		leaq	_ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstance
 10065      000000
 10066 47b4 4889C6   		movq	%rax, %rsi
 10067 47b7 488D3D00 		leaq	_ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE(%rip)
 10067      000000
 10068 47be E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10068      00
  68:TestXmlTestReporter.cpp **** {
 10069              		.loc 3 68 0
 10070 47c3 488D3D00 		leaq	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE(%rip), %rdi
 10070      000000
 10071 47ca E807C5FF 		call	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev
 10071      FF
 10072 47cf 488D1500 		leaq	__dso_handle(%rip), %rdx
 10072      000000
 10073 47d6 488D3500 		leaq	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE(%rip), %rsi
 10073      000000
 10074 47dd 488D3DE2 		leaq	_ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev(%rip), %rdi
 10074      FDFFFF
 10075 47e4 E8000000 		call	__cxa_atexit@PLT
 10075      00
 10076 47e9 E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10076      00
 10077 47ee 488D1500 		leaq	_ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE(%rip), %rdx
 10077      000000
 10078 47f5 4889C6   		movq	%rax, %rsi
 10079 47f8 488D3D00 		leaq	_ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE(%rip), %rdi
 10079      000000
 10080 47ff E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10080      00
  80:TestXmlTestReporter.cpp **** {
 10081              		.loc 3 80 0
 10082 4804 488D3D00 		leaq	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanceE
 10082      000000
 10083 480b E89EC9FF 		call	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev
 10083      FF
 10084 4810 488D1500 		leaq	__dso_handle(%rip), %rdx
 10084      000000
 10085 4817 488D3500 		leaq	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanceE
 10085      000000
 10086 481e 488D3D2F 		leaq	_ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev(%rip
 10086      FDFFFF
 10087 4825 E8000000 		call	__cxa_atexit@PLT
 10087      00
 10088 482a E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10088      00
 10089 482f 488D1500 		leaq	_ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanceE
 10089      000000
 10090 4836 4889C6   		movq	%rax, %rsi
 10091 4839 488D3D00 		leaq	_ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE(%rip),
 10091      000000
 10092 4840 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10092      00
  96:TestXmlTestReporter.cpp **** {
 10093              		.loc 3 96 0
 10094 4845 488D3D00 		leaq	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE(%ri
 10094      000000
 10095 484c E88FCEFF 		call	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev
 10095      FF
 10096 4851 488D1500 		leaq	__dso_handle(%rip), %rdx
 10096      000000
 10097 4858 488D3500 		leaq	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE(%ri
 10097      000000
 10098 485f 488D3D7C 		leaq	_ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev(%rip), %
 10098      FCFFFF
 10099 4866 E8000000 		call	__cxa_atexit@PLT
 10099      00
 10100 486b E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10100      00
 10101 4870 488D1500 		leaq	_ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE(%ri
 10101      000000
 10102 4877 4889C6   		movq	%rax, %rsi
 10103 487a 488D3D00 		leaq	_ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE(%rip), %rd
 10103      000000
 10104 4881 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10104      00
 115:TestXmlTestReporter.cpp **** {
 10105              		.loc 3 115 0
 10106 4886 488D3D00 		leaq	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE(%rip), %rdi
 10106      000000
 10107 488d E8A4D3FF 		call	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev
 10107      FF
 10108 4892 488D1500 		leaq	__dso_handle(%rip), %rdx
 10108      000000
 10109 4899 488D3500 		leaq	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE(%rip), %rsi
 10109      000000
 10110 48a0 488D3DC9 		leaq	_ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev(%rip), %rdi
 10110      FBFFFF
 10111 48a7 E8000000 		call	__cxa_atexit@PLT
 10111      00
 10112 48ac E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10112      00
 10113 48b1 488D1500 		leaq	_ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE(%rip), %rdx
 10113      000000
 10114 48b8 4889C6   		movq	%rax, %rsi
 10115 48bb 488D3D00 		leaq	_ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE(%rip), %rdi
 10115      000000
 10116 48c2 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10116      00
 135:TestXmlTestReporter.cpp **** {
 10117              		.loc 3 135 0
 10118 48c7 488D3D00 		leaq	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE(%rip), %rdi
 10118      000000
 10119 48ce E8DDD8FF 		call	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev
 10119      FF
 10120 48d3 488D1500 		leaq	__dso_handle(%rip), %rdx
 10120      000000
 10121 48da 488D3500 		leaq	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE(%rip), %rsi
 10121      000000
 10122 48e1 488D3D16 		leaq	_ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev(%rip), %rdi
 10122      FBFFFF
 10123 48e8 E8000000 		call	__cxa_atexit@PLT
 10123      00
 10124 48ed E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10124      00
 10125 48f2 488D1500 		leaq	_ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE(%rip), %rdx
 10125      000000
 10126 48f9 4889C6   		movq	%rax, %rsi
 10127 48fc 488D3D00 		leaq	_ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE(%rip), %rdi
 10127      000000
 10128 4903 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10128      00
 159:TestXmlTestReporter.cpp **** {
 10129              		.loc 3 159 0
 10130 4908 488D3D00 		leaq	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE(%rip), %rdi
 10130      000000
 10131 490f E88CDEFF 		call	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev
 10131      FF
 10132 4914 488D1500 		leaq	__dso_handle(%rip), %rdx
 10132      000000
 10133 491b 488D3500 		leaq	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE(%rip), %rsi
 10133      000000
 10134 4922 488D3D63 		leaq	_ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev(%rip), %rdi
 10134      FAFFFF
 10135 4929 E8000000 		call	__cxa_atexit@PLT
 10135      00
 10136 492e E8000000 		call	_ZN8UnitTest4Test11GetTestListEv@PLT
 10136      00
 10137 4933 488D1500 		leaq	_ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE(%rip), %rdx
 10137      000000
 10138 493a 4889C6   		movq	%rax, %rsi
 10139 493d 488D3D00 		leaq	_ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE(%rip), %rdi
 10139      000000
 10140 4944 E8000000 		call	_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE@PLT
 10140      00
 10141              	.L520:
 10142              		.loc 3 183 0
 10143 4949 90       		nop
 10144 494a C9       		leave
 10145              		.cfi_def_cfa 7, 8
 10146 494b C3       		ret
 10147              		.cfi_endproc
 10148              	.LFE1609:
 10150              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 10151              		.align 2
 10152              		.weak	_ZN8UnitTest20DeferredTestReporterD2Ev
 10154              	_ZN8UnitTest20DeferredTestReporterD2Ev:
 10155              	.LFB1612:
 10156              		.file 7 "../DeferredTestReporter.h"
   1:../DeferredTestReporter.h **** #ifndef UNITTEST_DEFERREDTESTREPORTER_H
   2:../DeferredTestReporter.h **** #define UNITTEST_DEFERREDTESTREPORTER_H
   3:../DeferredTestReporter.h **** 
   4:../DeferredTestReporter.h **** #include "TestReporter.h"
   5:../DeferredTestReporter.h **** #include "DeferredTestResult.h"
   6:../DeferredTestReporter.h **** 
   7:../DeferredTestReporter.h **** #include <vector>
   8:../DeferredTestReporter.h **** 
   9:../DeferredTestReporter.h **** namespace UnitTest
  10:../DeferredTestReporter.h **** {
  11:../DeferredTestReporter.h **** 
  12:../DeferredTestReporter.h **** class DeferredTestReporter : public TestReporter
 10157              		.loc 7 12 0
 10158              		.cfi_startproc
 10159              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10160              		.cfi_lsda 0x1b,.LLSDA1612
 10161 0000 55       		pushq	%rbp
 10162              		.cfi_def_cfa_offset 16
 10163              		.cfi_offset 6, -16
 10164 0001 4889E5   		movq	%rsp, %rbp
 10165              		.cfi_def_cfa_register 6
 10166 0004 53       		pushq	%rbx
 10167 0005 4883EC18 		subq	$24, %rsp
 10168              		.cfi_offset 3, -24
 10169 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10170              	.LBB174:
 10171              		.loc 7 12 0
 10172 000d 488D1500 		leaq	16+_ZTVN8UnitTest20DeferredTestReporterE(%rip), %rdx
 10172      000000
 10173 0014 488B45E8 		movq	-24(%rbp), %rax
 10174 0018 488910   		movq	%rdx, (%rax)
 10175 001b 488B45E8 		movq	-24(%rbp), %rax
 10176 001f 4883C008 		addq	$8, %rax
 10177 0023 4889C7   		movq	%rax, %rdi
 10178              	.LEHB283:
 10179 0026 E8000000 		call	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 10179      00
 10180              	.LEHE283:
 10181              		.loc 7 12 0 is_stmt 0 discriminator 2
 10182 002b 488B45E8 		movq	-24(%rbp), %rax
 10183 002f 4889C7   		movq	%rax, %rdi
 10184              	.LEHB284:
 10185 0032 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev@PLT
 10185      00
 10186              	.LEHE284:
 10187              	.LBE174:
 10188 0037 EB1A     		jmp	.L524
 10189              	.L523:
 10190 0039 4889C3   		movq	%rax, %rbx
 10191              	.LBB175:
 10192              		.loc 7 12 0
 10193 003c 488B45E8 		movq	-24(%rbp), %rax
 10194 0040 4889C7   		movq	%rax, %rdi
 10195 0043 E8000000 		call	_ZN8UnitTest12TestReporterD2Ev@PLT
 10195      00
 10196 0048 4889D8   		movq	%rbx, %rax
 10197 004b 4889C7   		movq	%rax, %rdi
 10198              	.LEHB285:
 10199 004e E8000000 		call	_Unwind_Resume@PLT
 10199      00
 10200              	.LEHE285:
 10201              	.L524:
 10202              	.LBE175:
 10203 0053 4883C418 		addq	$24, %rsp
 10204 0057 5B       		popq	%rbx
 10205 0058 5D       		popq	%rbp
 10206              		.cfi_def_cfa 7, 8
 10207 0059 C3       		ret
 10208              		.cfi_endproc
 10209              	.LFE1612:
 10210              		.section	.gcc_except_table
 10211              	.LLSDA1612:
 10212 0822 FF       		.byte	0xff
 10213 0823 FF       		.byte	0xff
 10214 0824 01       		.byte	0x1
 10215 0825 0C       		.uleb128 .LLSDACSE1612-.LLSDACSB1612
 10216              	.LLSDACSB1612:
 10217 0826 26       		.uleb128 .LEHB283-.LFB1612
 10218 0827 05       		.uleb128 .LEHE283-.LEHB283
 10219 0828 39       		.uleb128 .L523-.LFB1612
 10220 0829 00       		.uleb128 0
 10221 082a 32       		.uleb128 .LEHB284-.LFB1612
 10222 082b 05       		.uleb128 .LEHE284-.LEHB284
 10223 082c 00       		.uleb128 0
 10224 082d 00       		.uleb128 0
 10225 082e 4E       		.uleb128 .LEHB285-.LFB1612
 10226 082f 05       		.uleb128 .LEHE285-.LEHB285
 10227 0830 00       		.uleb128 0
 10228 0831 00       		.uleb128 0
 10229              	.LLSDACSE1612:
 10230              		.section	.text._ZN8UnitTest20DeferredTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 10232              		.weak	_ZN8UnitTest20DeferredTestReporterD1Ev
 10233              		.set	_ZN8UnitTest20DeferredTestReporterD1Ev,_ZN8UnitTest20DeferredTestReporterD2Ev
 10234              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 10235              		.align 2
 10236              		.weak	_ZN8UnitTest20DeferredTestReporterD0Ev
 10238              	_ZN8UnitTest20DeferredTestReporterD0Ev:
 10239              	.LFB1614:
 10240              		.loc 7 12 0 is_stmt 1
 10241              		.cfi_startproc
 10242              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10243              		.cfi_lsda 0x1b,.LLSDA1614
 10244 0000 55       		pushq	%rbp
 10245              		.cfi_def_cfa_offset 16
 10246              		.cfi_offset 6, -16
 10247 0001 4889E5   		movq	%rsp, %rbp
 10248              		.cfi_def_cfa_register 6
 10249 0004 53       		pushq	%rbx
 10250 0005 4883EC18 		subq	$24, %rsp
 10251              		.cfi_offset 3, -24
 10252 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10253              		.loc 7 12 0
 10254 000d 488B45E8 		movq	-24(%rbp), %rax
 10255 0011 4889C7   		movq	%rax, %rdi
 10256              	.LEHB286:
 10257 0014 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD1Ev
 10257      00
 10258              	.LEHE286:
 10259              		.loc 7 12 0 is_stmt 0 discriminator 2
 10260 0019 488B45E8 		movq	-24(%rbp), %rax
 10261 001d 4889C7   		movq	%rax, %rdi
 10262 0020 E8000000 		call	_ZdlPv@PLT
 10262      00
 10263 0025 EB1A     		jmp	.L528
 10264              	.L527:
 10265 0027 4889C3   		movq	%rax, %rbx
 10266              		.loc 7 12 0
 10267 002a 488B45E8 		movq	-24(%rbp), %rax
 10268 002e 4889C7   		movq	%rax, %rdi
 10269 0031 E8000000 		call	_ZdlPv@PLT
 10269      00
 10270 0036 4889D8   		movq	%rbx, %rax
 10271 0039 4889C7   		movq	%rax, %rdi
 10272              	.LEHB287:
 10273 003c E8000000 		call	_Unwind_Resume@PLT
 10273      00
 10274              	.LEHE287:
 10275              	.L528:
 10276 0041 4883C418 		addq	$24, %rsp
 10277 0045 5B       		popq	%rbx
 10278 0046 5D       		popq	%rbp
 10279              		.cfi_def_cfa 7, 8
 10280 0047 C3       		ret
 10281              		.cfi_endproc
 10282              	.LFE1614:
 10283              		.section	.gcc_except_table
 10284              	.LLSDA1614:
 10285 0832 FF       		.byte	0xff
 10286 0833 FF       		.byte	0xff
 10287 0834 01       		.byte	0x1
 10288 0835 08       		.uleb128 .LLSDACSE1614-.LLSDACSB1614
 10289              	.LLSDACSB1614:
 10290 0836 14       		.uleb128 .LEHB286-.LFB1614
 10291 0837 05       		.uleb128 .LEHE286-.LEHB286
 10292 0838 27       		.uleb128 .L527-.LFB1614
 10293 0839 00       		.uleb128 0
 10294 083a 3C       		.uleb128 .LEHB287-.LFB1614
 10295 083b 05       		.uleb128 .LEHE287-.LEHB287
 10296 083c 00       		.uleb128 0
 10297 083d 00       		.uleb128 0
 10298              	.LLSDACSE1614:
 10299              		.section	.text._ZN8UnitTest20DeferredTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest20DeferredTestRe
 10301              		.section	.text._ZN8UnitTest15XmlTestReporterD2Ev,"axG",@progbits,_ZN8UnitTest15XmlTestReporterD5Ev
 10302              		.align 2
 10303              		.weak	_ZN8UnitTest15XmlTestReporterD2Ev
 10305              	_ZN8UnitTest15XmlTestReporterD2Ev:
 10306              	.LFB1615:
 10307              		.file 8 "../XmlTestReporter.h"
   1:../XmlTestReporter.h **** #ifndef UNITTEST_XMLTESTREPORTER_H
   2:../XmlTestReporter.h **** #define UNITTEST_XMLTESTREPORTER_H
   3:../XmlTestReporter.h **** 
   4:../XmlTestReporter.h **** #include "DeferredTestReporter.h"
   5:../XmlTestReporter.h **** 
   6:../XmlTestReporter.h **** #include <iosfwd>
   7:../XmlTestReporter.h **** 
   8:../XmlTestReporter.h **** namespace UnitTest
   9:../XmlTestReporter.h **** {
  10:../XmlTestReporter.h **** 
  11:../XmlTestReporter.h **** class XmlTestReporter : public DeferredTestReporter
 10308              		.loc 8 11 0 is_stmt 1
 10309              		.cfi_startproc
 10310 0000 55       		pushq	%rbp
 10311              		.cfi_def_cfa_offset 16
 10312              		.cfi_offset 6, -16
 10313 0001 4889E5   		movq	%rsp, %rbp
 10314              		.cfi_def_cfa_register 6
 10315 0004 4883EC10 		subq	$16, %rsp
 10316 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10317              	.LBB176:
 10318              		.loc 8 11 0
 10319 000c 488D1500 		leaq	16+_ZTVN8UnitTest15XmlTestReporterE(%rip), %rdx
 10319      000000
 10320 0013 488B45F8 		movq	-8(%rbp), %rax
 10321 0017 488910   		movq	%rdx, (%rax)
 10322 001a 488B45F8 		movq	-8(%rbp), %rax
 10323 001e 4889C7   		movq	%rax, %rdi
 10324 0021 E8000000 		call	_ZN8UnitTest20DeferredTestReporterD2Ev
 10324      00
 10325              	.LBE176:
 10326 0026 90       		nop
 10327 0027 C9       		leave
 10328              		.cfi_def_cfa 7, 8
 10329 0028 C3       		ret
 10330              		.cfi_endproc
 10331              	.LFE1615:
 10333              		.weak	_ZN8UnitTest15XmlTestReporterD1Ev
 10334              		.set	_ZN8UnitTest15XmlTestReporterD1Ev,_ZN8UnitTest15XmlTestReporterD2Ev
 10335              		.section	.text._ZN8UnitTest15XmlTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest15XmlTestReporterD5Ev
 10336              		.align 2
 10337              		.weak	_ZN8UnitTest15XmlTestReporterD0Ev
 10339              	_ZN8UnitTest15XmlTestReporterD0Ev:
 10340              	.LFB1617:
 10341              		.loc 8 11 0
 10342              		.cfi_startproc
 10343              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10344              		.cfi_lsda 0x1b,.LLSDA1617
 10345 0000 55       		pushq	%rbp
 10346              		.cfi_def_cfa_offset 16
 10347              		.cfi_offset 6, -16
 10348 0001 4889E5   		movq	%rsp, %rbp
 10349              		.cfi_def_cfa_register 6
 10350 0004 53       		pushq	%rbx
 10351 0005 4883EC18 		subq	$24, %rsp
 10352              		.cfi_offset 3, -24
 10353 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10354              		.loc 8 11 0
 10355 000d 488B45E8 		movq	-24(%rbp), %rax
 10356 0011 4889C7   		movq	%rax, %rdi
 10357              	.LEHB288:
 10358 0014 E8000000 		call	_ZN8UnitTest15XmlTestReporterD1Ev
 10358      00
 10359              	.LEHE288:
 10360              		.loc 8 11 0 is_stmt 0 discriminator 2
 10361 0019 488B45E8 		movq	-24(%rbp), %rax
 10362 001d 4889C7   		movq	%rax, %rdi
 10363 0020 E8000000 		call	_ZdlPv@PLT
 10363      00
 10364 0025 EB1A     		jmp	.L533
 10365              	.L532:
 10366 0027 4889C3   		movq	%rax, %rbx
 10367              		.loc 8 11 0
 10368 002a 488B45E8 		movq	-24(%rbp), %rax
 10369 002e 4889C7   		movq	%rax, %rdi
 10370 0031 E8000000 		call	_ZdlPv@PLT
 10370      00
 10371 0036 4889D8   		movq	%rbx, %rax
 10372 0039 4889C7   		movq	%rax, %rdi
 10373              	.LEHB289:
 10374 003c E8000000 		call	_Unwind_Resume@PLT
 10374      00
 10375              	.LEHE289:
 10376              	.L533:
 10377 0041 4883C418 		addq	$24, %rsp
 10378 0045 5B       		popq	%rbx
 10379 0046 5D       		popq	%rbp
 10380              		.cfi_def_cfa 7, 8
 10381 0047 C3       		ret
 10382              		.cfi_endproc
 10383              	.LFE1617:
 10384              		.section	.gcc_except_table
 10385              	.LLSDA1617:
 10386 083e FF       		.byte	0xff
 10387 083f FF       		.byte	0xff
 10388 0840 01       		.byte	0x1
 10389 0841 08       		.uleb128 .LLSDACSE1617-.LLSDACSB1617
 10390              	.LLSDACSB1617:
 10391 0842 14       		.uleb128 .LEHB288-.LFB1617
 10392 0843 05       		.uleb128 .LEHE288-.LEHB288
 10393 0844 27       		.uleb128 .L532-.LFB1617
 10394 0845 00       		.uleb128 0
 10395 0846 3C       		.uleb128 .LEHB289-.LFB1617
 10396 0847 05       		.uleb128 .LEHE289-.LEHB289
 10397 0848 00       		.uleb128 0
 10398 0849 00       		.uleb128 0
 10399              	.LLSDACSE1617:
 10400              		.section	.text._ZN8UnitTest15XmlTestReporterD0Ev,"axG",@progbits,_ZN8UnitTest15XmlTestReporterD5Ev
 10402              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 10403              		.align 2
 10404              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 10406              	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 10407              	.LFB1619:
 10408              		.file 9 "/usr/include/c++/7/bits/stl_vector.h"
   1:/usr/include/c++/7/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/c++/7/bits/stl_vector.h **** 
   3:/usr/include/c++/7/bits/stl_vector.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/stl_vector.h **** //
   5:/usr/include/c++/7/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/stl_vector.h **** // any later version.
  10:/usr/include/c++/7/bits/stl_vector.h **** 
  11:/usr/include/c++/7/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/stl_vector.h **** 
  16:/usr/include/c++/7/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/stl_vector.h **** 
  20:/usr/include/c++/7/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/stl_vector.h **** 
  25:/usr/include/c++/7/bits/stl_vector.h **** /*
  26:/usr/include/c++/7/bits/stl_vector.h ****  *
  27:/usr/include/c++/7/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/c++/7/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/7/bits/stl_vector.h ****  *
  30:/usr/include/c++/7/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/7/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/7/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/7/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/7/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/7/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/7/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/7/bits/stl_vector.h ****  *
  38:/usr/include/c++/7/bits/stl_vector.h ****  *
  39:/usr/include/c++/7/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/c++/7/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/7/bits/stl_vector.h ****  *
  42:/usr/include/c++/7/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/7/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/7/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/7/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/7/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/7/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/c++/7/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/7/bits/stl_vector.h ****  */
  50:/usr/include/c++/7/bits/stl_vector.h **** 
  51:/usr/include/c++/7/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/c++/7/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/7/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/c++/7/bits/stl_vector.h ****  */
  55:/usr/include/c++/7/bits/stl_vector.h **** 
  56:/usr/include/c++/7/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/c++/7/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/c++/7/bits/stl_vector.h **** 
  59:/usr/include/c++/7/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/c++/7/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/7/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/7/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/c++/7/bits/stl_vector.h **** #endif
  65:/usr/include/c++/7/bits/stl_vector.h **** 
  66:/usr/include/c++/7/bits/stl_vector.h **** #include <debug/assertions.h>
  67:/usr/include/c++/7/bits/stl_vector.h **** 
  68:/usr/include/c++/7/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  69:/usr/include/c++/7/bits/stl_vector.h **** {
  70:/usr/include/c++/7/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  71:/usr/include/c++/7/bits/stl_vector.h **** 
  72:/usr/include/c++/7/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  73:/usr/include/c++/7/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  74:/usr/include/c++/7/bits/stl_vector.h ****     struct _Vector_base
  75:/usr/include/c++/7/bits/stl_vector.h ****     {
  76:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  77:/usr/include/c++/7/bits/stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  78:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  79:/usr/include/c++/7/bits/stl_vector.h ****        	pointer;
  80:/usr/include/c++/7/bits/stl_vector.h **** 
  81:/usr/include/c++/7/bits/stl_vector.h ****       struct _Vector_impl
  82:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
  83:/usr/include/c++/7/bits/stl_vector.h ****       {
  84:/usr/include/c++/7/bits/stl_vector.h **** 	pointer _M_start;
  85:/usr/include/c++/7/bits/stl_vector.h **** 	pointer _M_finish;
  86:/usr/include/c++/7/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  87:/usr/include/c++/7/bits/stl_vector.h **** 
  88:/usr/include/c++/7/bits/stl_vector.h **** 	_Vector_impl()
  89:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
  90:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
  91:/usr/include/c++/7/bits/stl_vector.h **** 
  92:/usr/include/c++/7/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  93:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
  94:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
  95:/usr/include/c++/7/bits/stl_vector.h **** 
  96:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
  97:/usr/include/c++/7/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  98:/usr/include/c++/7/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  99:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_start(), _M_finish(), _M_end_of_storage()
 100:/usr/include/c++/7/bits/stl_vector.h **** 	{ }
 101:/usr/include/c++/7/bits/stl_vector.h **** #endif
 102:/usr/include/c++/7/bits/stl_vector.h **** 
 103:/usr/include/c++/7/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 104:/usr/include/c++/7/bits/stl_vector.h **** 	{
 105:/usr/include/c++/7/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 106:/usr/include/c++/7/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 107:/usr/include/c++/7/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 108:/usr/include/c++/7/bits/stl_vector.h **** 	}
 109:/usr/include/c++/7/bits/stl_vector.h ****       };
 110:/usr/include/c++/7/bits/stl_vector.h **** 
 111:/usr/include/c++/7/bits/stl_vector.h ****     public:
 112:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 113:/usr/include/c++/7/bits/stl_vector.h **** 
 114:/usr/include/c++/7/bits/stl_vector.h ****       _Tp_alloc_type&
 115:/usr/include/c++/7/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 116:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 117:/usr/include/c++/7/bits/stl_vector.h **** 
 118:/usr/include/c++/7/bits/stl_vector.h ****       const _Tp_alloc_type&
 119:/usr/include/c++/7/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 120:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 121:/usr/include/c++/7/bits/stl_vector.h **** 
 122:/usr/include/c++/7/bits/stl_vector.h ****       allocator_type
 123:/usr/include/c++/7/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 124:/usr/include/c++/7/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 125:/usr/include/c++/7/bits/stl_vector.h **** 
 126:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base()
 127:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl() { }
 128:/usr/include/c++/7/bits/stl_vector.h **** 
 129:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 130:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(__a) { }
 131:/usr/include/c++/7/bits/stl_vector.h **** 
 132:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(size_t __n)
 133:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl()
 134:/usr/include/c++/7/bits/stl_vector.h ****       { _M_create_storage(__n); }
 135:/usr/include/c++/7/bits/stl_vector.h **** 
 136:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 137:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(__a)
 138:/usr/include/c++/7/bits/stl_vector.h ****       { _M_create_storage(__n); }
 139:/usr/include/c++/7/bits/stl_vector.h **** 
 140:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 142:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 143:/usr/include/c++/7/bits/stl_vector.h **** 
 144:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 145:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 146:/usr/include/c++/7/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 147:/usr/include/c++/7/bits/stl_vector.h **** 
 148:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 149:/usr/include/c++/7/bits/stl_vector.h ****       : _M_impl(__a)
 150:/usr/include/c++/7/bits/stl_vector.h ****       {
 151:/usr/include/c++/7/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 152:/usr/include/c++/7/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 153:/usr/include/c++/7/bits/stl_vector.h **** 	else
 154:/usr/include/c++/7/bits/stl_vector.h **** 	  {
 155:/usr/include/c++/7/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 156:/usr/include/c++/7/bits/stl_vector.h **** 	    _M_create_storage(__n);
 157:/usr/include/c++/7/bits/stl_vector.h **** 	  }
 158:/usr/include/c++/7/bits/stl_vector.h ****       }
 159:/usr/include/c++/7/bits/stl_vector.h **** #endif
 160:/usr/include/c++/7/bits/stl_vector.h **** 
 161:/usr/include/c++/7/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 162:/usr/include/c++/7/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 163:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 164:/usr/include/c++/7/bits/stl_vector.h **** 
 165:/usr/include/c++/7/bits/stl_vector.h ****     public:
 166:/usr/include/c++/7/bits/stl_vector.h ****       _Vector_impl _M_impl;
 167:/usr/include/c++/7/bits/stl_vector.h **** 
 168:/usr/include/c++/7/bits/stl_vector.h ****       pointer
 169:/usr/include/c++/7/bits/stl_vector.h ****       _M_allocate(size_t __n)
 170:/usr/include/c++/7/bits/stl_vector.h ****       {
 171:/usr/include/c++/7/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 172:/usr/include/c++/7/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 173:/usr/include/c++/7/bits/stl_vector.h ****       }
 174:/usr/include/c++/7/bits/stl_vector.h **** 
 175:/usr/include/c++/7/bits/stl_vector.h ****       void
 176:/usr/include/c++/7/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 177:/usr/include/c++/7/bits/stl_vector.h ****       {
 178:/usr/include/c++/7/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 179:/usr/include/c++/7/bits/stl_vector.h **** 	if (__p)
 180:/usr/include/c++/7/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 181:/usr/include/c++/7/bits/stl_vector.h ****       }
 182:/usr/include/c++/7/bits/stl_vector.h **** 
 183:/usr/include/c++/7/bits/stl_vector.h ****     private:
 184:/usr/include/c++/7/bits/stl_vector.h ****       void
 185:/usr/include/c++/7/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 186:/usr/include/c++/7/bits/stl_vector.h ****       {
 187:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 188:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 189:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 190:/usr/include/c++/7/bits/stl_vector.h ****       }
 191:/usr/include/c++/7/bits/stl_vector.h ****     };
 192:/usr/include/c++/7/bits/stl_vector.h **** 
 193:/usr/include/c++/7/bits/stl_vector.h **** 
 194:/usr/include/c++/7/bits/stl_vector.h ****   /**
 195:/usr/include/c++/7/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 196:/usr/include/c++/7/bits/stl_vector.h ****    *  individual elements in any order.
 197:/usr/include/c++/7/bits/stl_vector.h ****    *
 198:/usr/include/c++/7/bits/stl_vector.h ****    *  @ingroup sequences
 199:/usr/include/c++/7/bits/stl_vector.h ****    *
 200:/usr/include/c++/7/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 201:/usr/include/c++/7/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 202:/usr/include/c++/7/bits/stl_vector.h ****    *
 203:/usr/include/c++/7/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 204:/usr/include/c++/7/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 205:/usr/include/c++/7/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 206:/usr/include/c++/7/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 207:/usr/include/c++/7/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 208:/usr/include/c++/7/bits/stl_vector.h ****    *
 209:/usr/include/c++/7/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 210:/usr/include/c++/7/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 211:/usr/include/c++/7/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 212:/usr/include/c++/7/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 213:/usr/include/c++/7/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 214:/usr/include/c++/7/bits/stl_vector.h ****   */
 215:/usr/include/c++/7/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 216:/usr/include/c++/7/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 217:/usr/include/c++/7/bits/stl_vector.h ****     {
 218:/usr/include/c++/7/bits/stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 219:/usr/include/c++/7/bits/stl_vector.h ****       // Concept requirements.
 220:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 221:/usr/include/c++/7/bits/stl_vector.h **** # if __cplusplus < 201103L
 222:/usr/include/c++/7/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 223:/usr/include/c++/7/bits/stl_vector.h **** # endif
 224:/usr/include/c++/7/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 225:/usr/include/c++/7/bits/stl_vector.h **** #endif
 226:/usr/include/c++/7/bits/stl_vector.h **** 
 227:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 228:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 229:/usr/include/c++/7/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 230:/usr/include/c++/7/bits/stl_vector.h **** 
 231:/usr/include/c++/7/bits/stl_vector.h ****     public:
 232:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Tp					value_type;
 233:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Base::pointer			pointer;
 234:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 235:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 236:/usr/include/c++/7/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 237:/usr/include/c++/7/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 238:/usr/include/c++/7/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 239:/usr/include/c++/7/bits/stl_vector.h ****       const_iterator;
 240:/usr/include/c++/7/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 241:/usr/include/c++/7/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 242:/usr/include/c++/7/bits/stl_vector.h ****       typedef size_t					size_type;
 243:/usr/include/c++/7/bits/stl_vector.h ****       typedef ptrdiff_t					difference_type;
 244:/usr/include/c++/7/bits/stl_vector.h ****       typedef _Alloc					allocator_type;
 245:/usr/include/c++/7/bits/stl_vector.h **** 
 246:/usr/include/c++/7/bits/stl_vector.h ****     protected:
 247:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_allocate;
 248:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_deallocate;
 249:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_impl;
 250:/usr/include/c++/7/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 251:/usr/include/c++/7/bits/stl_vector.h **** 
 252:/usr/include/c++/7/bits/stl_vector.h ****     public:
 253:/usr/include/c++/7/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 254:/usr/include/c++/7/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 255:/usr/include/c++/7/bits/stl_vector.h **** 
 256:/usr/include/c++/7/bits/stl_vector.h ****       /**
 257:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 258:/usr/include/c++/7/bits/stl_vector.h ****        */
 259:/usr/include/c++/7/bits/stl_vector.h ****       vector()
 260:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 261:/usr/include/c++/7/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 262:/usr/include/c++/7/bits/stl_vector.h **** #endif
 263:/usr/include/c++/7/bits/stl_vector.h ****       : _Base() { }
 264:/usr/include/c++/7/bits/stl_vector.h **** 
 265:/usr/include/c++/7/bits/stl_vector.h ****       /**
 266:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 267:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 268:/usr/include/c++/7/bits/stl_vector.h ****        */
 269:/usr/include/c++/7/bits/stl_vector.h ****       explicit
 270:/usr/include/c++/7/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 271:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__a) { }
 272:/usr/include/c++/7/bits/stl_vector.h **** 
 273:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 274:/usr/include/c++/7/bits/stl_vector.h ****       /**
 275:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 276:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 277:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 278:/usr/include/c++/7/bits/stl_vector.h ****        *
 279:/usr/include/c++/7/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 280:/usr/include/c++/7/bits/stl_vector.h ****        *  constructed elements.
 281:/usr/include/c++/7/bits/stl_vector.h ****        */
 282:/usr/include/c++/7/bits/stl_vector.h ****       explicit
 283:/usr/include/c++/7/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 284:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__n, __a)
 285:/usr/include/c++/7/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 286:/usr/include/c++/7/bits/stl_vector.h **** 
 287:/usr/include/c++/7/bits/stl_vector.h ****       /**
 288:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 289:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 290:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 291:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 292:/usr/include/c++/7/bits/stl_vector.h ****        *
 293:/usr/include/c++/7/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 294:/usr/include/c++/7/bits/stl_vector.h ****        */
 295:/usr/include/c++/7/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 296:/usr/include/c++/7/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 297:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__n, __a)
 298:/usr/include/c++/7/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 299:/usr/include/c++/7/bits/stl_vector.h **** #else
 300:/usr/include/c++/7/bits/stl_vector.h ****       /**
 301:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 302:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 303:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 304:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 305:/usr/include/c++/7/bits/stl_vector.h ****        *
 306:/usr/include/c++/7/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 307:/usr/include/c++/7/bits/stl_vector.h ****        */
 308:/usr/include/c++/7/bits/stl_vector.h ****       explicit
 309:/usr/include/c++/7/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 310:/usr/include/c++/7/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 311:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__n, __a)
 312:/usr/include/c++/7/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 313:/usr/include/c++/7/bits/stl_vector.h **** #endif
 314:/usr/include/c++/7/bits/stl_vector.h **** 
 315:/usr/include/c++/7/bits/stl_vector.h ****       /**
 316:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 317:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 318:/usr/include/c++/7/bits/stl_vector.h ****        *
 319:/usr/include/c++/7/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 320:/usr/include/c++/7/bits/stl_vector.h ****        *  @a __x  will not be copied
 321:/usr/include/c++/7/bits/stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 322:/usr/include/c++/7/bits/stl_vector.h ****        *
 323:/usr/include/c++/7/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 324:/usr/include/c++/7/bits/stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 325:/usr/include/c++/7/bits/stl_vector.h ****        */
 326:/usr/include/c++/7/bits/stl_vector.h ****       vector(const vector& __x)
 327:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__x.size(),
 328:/usr/include/c++/7/bits/stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 329:/usr/include/c++/7/bits/stl_vector.h ****       {
 330:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 331:/usr/include/c++/7/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 332:/usr/include/c++/7/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 333:/usr/include/c++/7/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 334:/usr/include/c++/7/bits/stl_vector.h ****       }
 335:/usr/include/c++/7/bits/stl_vector.h **** 
 336:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 337:/usr/include/c++/7/bits/stl_vector.h ****       /**
 338:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 339:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 340:/usr/include/c++/7/bits/stl_vector.h ****        *
 341:/usr/include/c++/7/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 342:/usr/include/c++/7/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 343:/usr/include/c++/7/bits/stl_vector.h ****        */
 344:/usr/include/c++/7/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 345:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 346:/usr/include/c++/7/bits/stl_vector.h **** 
 347:/usr/include/c++/7/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 348:/usr/include/c++/7/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 349:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 350:/usr/include/c++/7/bits/stl_vector.h ****       {
 351:/usr/include/c++/7/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 352:/usr/include/c++/7/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 353:/usr/include/c++/7/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 354:/usr/include/c++/7/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 355:/usr/include/c++/7/bits/stl_vector.h ****       }
 356:/usr/include/c++/7/bits/stl_vector.h **** 
 357:/usr/include/c++/7/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 358:/usr/include/c++/7/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 359:/usr/include/c++/7/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 360:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 361:/usr/include/c++/7/bits/stl_vector.h ****       {
 362:/usr/include/c++/7/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 363:/usr/include/c++/7/bits/stl_vector.h **** 	  {
 364:/usr/include/c++/7/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 365:/usr/include/c++/7/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 366:/usr/include/c++/7/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 367:/usr/include/c++/7/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 368:/usr/include/c++/7/bits/stl_vector.h **** 	    __rv.clear();
 369:/usr/include/c++/7/bits/stl_vector.h **** 	  }
 370:/usr/include/c++/7/bits/stl_vector.h ****       }
 371:/usr/include/c++/7/bits/stl_vector.h **** 
 372:/usr/include/c++/7/bits/stl_vector.h ****       /**
 373:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 374:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 375:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 376:/usr/include/c++/7/bits/stl_vector.h ****        *
 377:/usr/include/c++/7/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 378:/usr/include/c++/7/bits/stl_vector.h ****        *  initializer_list @a __l.
 379:/usr/include/c++/7/bits/stl_vector.h ****        *
 380:/usr/include/c++/7/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 381:/usr/include/c++/7/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 382:/usr/include/c++/7/bits/stl_vector.h ****        */
 383:/usr/include/c++/7/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 384:/usr/include/c++/7/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 385:/usr/include/c++/7/bits/stl_vector.h ****       : _Base(__a)
 386:/usr/include/c++/7/bits/stl_vector.h ****       {
 387:/usr/include/c++/7/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 388:/usr/include/c++/7/bits/stl_vector.h **** 			    random_access_iterator_tag());
 389:/usr/include/c++/7/bits/stl_vector.h ****       }
 390:/usr/include/c++/7/bits/stl_vector.h **** #endif
 391:/usr/include/c++/7/bits/stl_vector.h **** 
 392:/usr/include/c++/7/bits/stl_vector.h ****       /**
 393:/usr/include/c++/7/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 394:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 395:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 396:/usr/include/c++/7/bits/stl_vector.h ****        *  @param  __a  An allocator.
 397:/usr/include/c++/7/bits/stl_vector.h ****        *
 398:/usr/include/c++/7/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 399:/usr/include/c++/7/bits/stl_vector.h ****        *  [first,last).
 400:/usr/include/c++/7/bits/stl_vector.h ****        *
 401:/usr/include/c++/7/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 402:/usr/include/c++/7/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 403:/usr/include/c++/7/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 404:/usr/include/c++/7/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 405:/usr/include/c++/7/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 406:/usr/include/c++/7/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 407:/usr/include/c++/7/bits/stl_vector.h ****        */
 408:/usr/include/c++/7/bits/stl_vector.h **** #if __cplusplus >= 201103L
 409:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator,
 410:/usr/include/c++/7/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 411:/usr/include/c++/7/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 412:/usr/include/c++/7/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 413:/usr/include/c++/7/bits/stl_vector.h **** 	: _Base(__a)
 414:/usr/include/c++/7/bits/stl_vector.h **** 	{ _M_initialize_dispatch(__first, __last, __false_type()); }
 415:/usr/include/c++/7/bits/stl_vector.h **** #else
 416:/usr/include/c++/7/bits/stl_vector.h ****       template<typename _InputIterator>
 417:/usr/include/c++/7/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 418:/usr/include/c++/7/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 419:/usr/include/c++/7/bits/stl_vector.h **** 	: _Base(__a)
 420:/usr/include/c++/7/bits/stl_vector.h **** 	{
 421:/usr/include/c++/7/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 422:/usr/include/c++/7/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 423:/usr/include/c++/7/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 424:/usr/include/c++/7/bits/stl_vector.h **** 	}
 425:/usr/include/c++/7/bits/stl_vector.h **** #endif
 426:/usr/include/c++/7/bits/stl_vector.h **** 
 427:/usr/include/c++/7/bits/stl_vector.h ****       /**
 428:/usr/include/c++/7/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 429:/usr/include/c++/7/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 430:/usr/include/c++/7/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 431:/usr/include/c++/7/bits/stl_vector.h ****        *  responsibility.
 432:/usr/include/c++/7/bits/stl_vector.h ****        */
 433:/usr/include/c++/7/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 10409              		.loc 9 433 0 is_stmt 1
 10410              		.cfi_startproc
 10411              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10412              		.cfi_lsda 0x1b,.LLSDA1619
 10413 0000 55       		pushq	%rbp
 10414              		.cfi_def_cfa_offset 16
 10415              		.cfi_offset 6, -16
 10416 0001 4889E5   		movq	%rsp, %rbp
 10417              		.cfi_def_cfa_register 6
 10418 0004 53       		pushq	%rbx
 10419 0005 4883EC18 		subq	$24, %rsp
 10420              		.cfi_offset 3, -24
 10421 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10422              	.LBB177:
 434:/usr/include/c++/7/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 435:/usr/include/c++/7/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 10423              		.loc 9 435 0
 10424 000d 488B45E8 		movq	-24(%rbp), %rax
 10425 0011 4889C7   		movq	%rax, %rdi
 10426 0014 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 10426      00
 10427 0019 4889C2   		movq	%rax, %rdx
 434:/usr/include/c++/7/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 10428              		.loc 9 434 0
 10429 001c 488B45E8 		movq	-24(%rbp), %rax
 10430 0020 488B4808 		movq	8(%rax), %rcx
 10431 0024 488B45E8 		movq	-24(%rbp), %rax
 10432 0028 488B00   		movq	(%rax), %rax
 10433 002b 4889CE   		movq	%rcx, %rsi
 10434 002e 4889C7   		movq	%rax, %rdi
 10435              	.LEHB290:
 10436 0031 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 10436      00
 10437              	.LEHE290:
 10438              		.loc 9 435 0
 10439 0036 488B45E8 		movq	-24(%rbp), %rax
 10440 003a 4889C7   		movq	%rax, %rdi
 10441              	.LEHB291:
 10442 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 10442      00
 10443              	.LEHE291:
 10444              	.LBE177:
 10445 0042 EB1A     		jmp	.L537
 10446              	.L536:
 10447 0044 4889C3   		movq	%rax, %rbx
 10448              	.LBB178:
 10449 0047 488B45E8 		movq	-24(%rbp), %rax
 10450 004b 4889C7   		movq	%rax, %rdi
 10451 004e E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 10451      00
 10452 0053 4889D8   		movq	%rbx, %rax
 10453 0056 4889C7   		movq	%rax, %rdi
 10454              	.LEHB292:
 10455 0059 E8000000 		call	_Unwind_Resume@PLT
 10455      00
 10456              	.LEHE292:
 10457              	.L537:
 10458              	.LBE178:
 10459 005e 4883C418 		addq	$24, %rsp
 10460 0062 5B       		popq	%rbx
 10461 0063 5D       		popq	%rbp
 10462              		.cfi_def_cfa 7, 8
 10463 0064 C3       		ret
 10464              		.cfi_endproc
 10465              	.LFE1619:
 10466              		.section	.gcc_except_table
 10467              	.LLSDA1619:
 10468 084a FF       		.byte	0xff
 10469 084b FF       		.byte	0xff
 10470 084c 01       		.byte	0x1
 10471 084d 0C       		.uleb128 .LLSDACSE1619-.LLSDACSB1619
 10472              	.LLSDACSB1619:
 10473 084e 31       		.uleb128 .LEHB290-.LFB1619
 10474 084f 05       		.uleb128 .LEHE290-.LEHB290
 10475 0850 44       		.uleb128 .L536-.LFB1619
 10476 0851 00       		.uleb128 0
 10477 0852 3D       		.uleb128 .LEHB291-.LFB1619
 10478 0853 05       		.uleb128 .LEHE291-.LEHB291
 10479 0854 00       		.uleb128 0
 10480 0855 00       		.uleb128 0
 10481 0856 59       		.uleb128 .LEHB292-.LFB1619
 10482 0857 05       		.uleb128 .LEHE292-.LEHB292
 10483 0858 00       		.uleb128 0
 10484 0859 00       		.uleb128 0
 10485              	.LLSDACSE1619:
 10486              		.section	.text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vect
 10488              		.weak	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 10489              		.set	_ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt6vectorIN8UnitTest18DeferredTes
 10490              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev,"axG"
 10491              		.align 2
 10492              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
 10494              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:
 10495              	.LFB1623:
  81:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
 10496              		.loc 9 81 0
 10497              		.cfi_startproc
 10498 0000 55       		pushq	%rbp
 10499              		.cfi_def_cfa_offset 16
 10500              		.cfi_offset 6, -16
 10501 0001 4889E5   		movq	%rsp, %rbp
 10502              		.cfi_def_cfa_register 6
 10503 0004 4883EC10 		subq	$16, %rsp
 10504 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10505              	.LBB179:
  81:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
 10506              		.loc 9 81 0
 10507 000c 488B45F8 		movq	-8(%rbp), %rax
 10508 0010 4889C7   		movq	%rax, %rdi
 10509 0013 E8000000 		call	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 10509      00
 10510              	.LBE179:
 10511 0018 90       		nop
 10512 0019 C9       		leave
 10513              		.cfi_def_cfa 7, 8
 10514 001a C3       		ret
 10515              		.cfi_endproc
 10516              	.LFE1623:
 10518              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 10519              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev,_ZNSt12_Vector_
 10520              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 10521              		.align 2
 10522              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
 10524              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:
 10525              	.LFB1625:
 161:/usr/include/c++/7/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 10526              		.loc 9 161 0
 10527              		.cfi_startproc
 10528              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10529              		.cfi_lsda 0x1b,.LLSDA1625
 10530 0000 55       		pushq	%rbp
 10531              		.cfi_def_cfa_offset 16
 10532              		.cfi_offset 6, -16
 10533 0001 4889E5   		movq	%rsp, %rbp
 10534              		.cfi_def_cfa_register 6
 10535 0004 53       		pushq	%rbx
 10536 0005 4883EC18 		subq	$24, %rsp
 10537              		.cfi_offset 3, -24
 10538 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10539              	.LBB180:
 162:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10540              		.loc 9 162 0
 10541 000d 488B45E8 		movq	-24(%rbp), %rax
 10542 0011 488B4010 		movq	16(%rax), %rax
 163:/usr/include/c++/7/bits/stl_vector.h **** 
 10543              		.loc 9 163 0
 10544 0015 4889C2   		movq	%rax, %rdx
 10545 0018 488B45E8 		movq	-24(%rbp), %rax
 10546 001c 488B00   		movq	(%rax), %rax
 10547 001f 4829C2   		subq	%rax, %rdx
 10548 0022 4889D0   		movq	%rdx, %rax
 10549 0025 48C1F807 		sarq	$7, %rax
 162:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 10550              		.loc 9 162 0
 10551 0029 4889C2   		movq	%rax, %rdx
 10552 002c 488B45E8 		movq	-24(%rbp), %rax
 10553 0030 488B08   		movq	(%rax), %rcx
 10554 0033 488B45E8 		movq	-24(%rbp), %rax
 10555 0037 4889CE   		movq	%rcx, %rsi
 10556 003a 4889C7   		movq	%rax, %rdi
 10557              	.LEHB293:
 10558 003d E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 10558      00
 10559              	.LEHE293:
 163:/usr/include/c++/7/bits/stl_vector.h **** 
 10560              		.loc 9 163 0
 10561 0042 488B45E8 		movq	-24(%rbp), %rax
 10562 0046 4889C7   		movq	%rax, %rdi
 10563 0049 E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 10563      00
 10564              	.LBE180:
 10565 004e EB1A     		jmp	.L542
 10566              	.L541:
 10567 0050 4889C3   		movq	%rax, %rbx
 10568              	.LBB181:
 10569 0053 488B45E8 		movq	-24(%rbp), %rax
 10570 0057 4889C7   		movq	%rax, %rdi
 10571 005a E8000000 		call	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
 10571      00
 10572 005f 4889D8   		movq	%rbx, %rax
 10573 0062 4889C7   		movq	%rax, %rdi
 10574              	.LEHB294:
 10575 0065 E8000000 		call	_Unwind_Resume@PLT
 10575      00
 10576              	.LEHE294:
 10577              	.L542:
 10578              	.LBE181:
 10579 006a 4883C418 		addq	$24, %rsp
 10580 006e 5B       		popq	%rbx
 10581 006f 5D       		popq	%rbp
 10582              		.cfi_def_cfa 7, 8
 10583 0070 C3       		ret
 10584              		.cfi_endproc
 10585              	.LFE1625:
 10586              		.section	.gcc_except_table
 10587              	.LLSDA1625:
 10588 085a FF       		.byte	0xff
 10589 085b FF       		.byte	0xff
 10590 085c 01       		.byte	0x1
 10591 085d 08       		.uleb128 .LLSDACSE1625-.LLSDACSB1625
 10592              	.LLSDACSB1625:
 10593 085e 3D       		.uleb128 .LEHB293-.LFB1625
 10594 085f 05       		.uleb128 .LEHE293-.LEHB293
 10595 0860 50       		.uleb128 .L541-.LFB1625
 10596 0861 00       		.uleb128 0
 10597 0862 65       		.uleb128 .LEHB294-.LFB1625
 10598 0863 05       		.uleb128 .LEHE294-.LEHB294
 10599 0864 00       		.uleb128 0
 10600 0865 00       		.uleb128 0
 10601              	.LLSDACSE1625:
 10602              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev,"axG",@progbits,_ZN
 10604              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
 10605              		.set	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev,_ZNSt12_Vector_baseIN8UnitTes
 10606              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv,
 10607              		.align 2
 10608              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
 10610              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:
 10611              	.LFB1627:
 115:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 10612              		.loc 9 115 0
 10613              		.cfi_startproc
 10614 0000 55       		pushq	%rbp
 10615              		.cfi_def_cfa_offset 16
 10616              		.cfi_offset 6, -16
 10617 0001 4889E5   		movq	%rsp, %rbp
 10618              		.cfi_def_cfa_register 6
 10619 0004 48897DF8 		movq	%rdi, -8(%rbp)
 116:/usr/include/c++/7/bits/stl_vector.h **** 
 10620              		.loc 9 116 0
 10621 0008 488B45F8 		movq	-8(%rbp), %rax
 10622 000c 5D       		popq	%rbp
 10623              		.cfi_def_cfa 7, 8
 10624 000d C3       		ret
 10625              		.cfi_endproc
 10626              	.LFE1627:
 10628              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E,"axG",@progbits,_Z
 10629              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
 10631              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:
 10632              	.LFB1628:
 10633              		.file 10 "/usr/include/c++/7/bits/stl_construct.h"
   1:/usr/include/c++/7/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/7/bits/stl_construct.h **** 
   3:/usr/include/c++/7/bits/stl_construct.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/stl_construct.h **** //
   5:/usr/include/c++/7/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/7/bits/stl_construct.h **** 
  11:/usr/include/c++/7/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/stl_construct.h **** 
  16:/usr/include/c++/7/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/stl_construct.h **** 
  20:/usr/include/c++/7/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/stl_construct.h **** 
  25:/usr/include/c++/7/bits/stl_construct.h **** /*
  26:/usr/include/c++/7/bits/stl_construct.h ****  *
  27:/usr/include/c++/7/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/7/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/7/bits/stl_construct.h ****  *
  30:/usr/include/c++/7/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/7/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/7/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/7/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/7/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/7/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/7/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/7/bits/stl_construct.h ****  *
  38:/usr/include/c++/7/bits/stl_construct.h ****  *
  39:/usr/include/c++/7/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/7/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/7/bits/stl_construct.h ****  *
  42:/usr/include/c++/7/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/7/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/7/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/7/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/7/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/7/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/7/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/7/bits/stl_construct.h ****  */
  50:/usr/include/c++/7/bits/stl_construct.h **** 
  51:/usr/include/c++/7/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/7/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/7/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/7/bits/stl_construct.h ****  */
  55:/usr/include/c++/7/bits/stl_construct.h **** 
  56:/usr/include/c++/7/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/7/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/7/bits/stl_construct.h **** 
  59:/usr/include/c++/7/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/7/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/c++/7/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/7/bits/stl_construct.h **** 
  63:/usr/include/c++/7/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/7/bits/stl_construct.h **** {
  65:/usr/include/c++/7/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/7/bits/stl_construct.h **** 
  67:/usr/include/c++/7/bits/stl_construct.h ****   /**
  68:/usr/include/c++/7/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/7/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/7/bits/stl_construct.h ****    */
  71:/usr/include/c++/7/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/7/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/7/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/7/bits/stl_construct.h **** #else
  77:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/7/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/7/bits/stl_construct.h ****     {
  81:/usr/include/c++/7/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/7/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/7/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/7/bits/stl_construct.h ****     }
  85:/usr/include/c++/7/bits/stl_construct.h **** #endif
  86:/usr/include/c++/7/bits/stl_construct.h **** 
  87:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _T1>
  88:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  89:/usr/include/c++/7/bits/stl_construct.h ****     _Construct_novalue(_T1* __p)
  90:/usr/include/c++/7/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
  91:/usr/include/c++/7/bits/stl_construct.h **** 
  92:/usr/include/c++/7/bits/stl_construct.h ****   /**
  93:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  94:/usr/include/c++/7/bits/stl_construct.h ****    */
  95:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _Tp>
  96:/usr/include/c++/7/bits/stl_construct.h ****     inline void
  97:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  98:/usr/include/c++/7/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  99:/usr/include/c++/7/bits/stl_construct.h **** 
 100:/usr/include/c++/7/bits/stl_construct.h ****   template<bool>
 101:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_aux
 102:/usr/include/c++/7/bits/stl_construct.h ****     {
 103:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator>
 104:/usr/include/c++/7/bits/stl_construct.h ****         static void
 105:/usr/include/c++/7/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 106:/usr/include/c++/7/bits/stl_construct.h **** 	{
 107:/usr/include/c++/7/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 108:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 109:/usr/include/c++/7/bits/stl_construct.h **** 	}
 110:/usr/include/c++/7/bits/stl_construct.h ****     };
 111:/usr/include/c++/7/bits/stl_construct.h **** 
 112:/usr/include/c++/7/bits/stl_construct.h ****   template<>
 113:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_aux<true>
 114:/usr/include/c++/7/bits/stl_construct.h ****     {
 115:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator>
 116:/usr/include/c++/7/bits/stl_construct.h ****         static void
 117:/usr/include/c++/7/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 118:/usr/include/c++/7/bits/stl_construct.h ****     };
 119:/usr/include/c++/7/bits/stl_construct.h **** 
 120:/usr/include/c++/7/bits/stl_construct.h ****   /**
 121:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 122:/usr/include/c++/7/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 123:/usr/include/c++/7/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 124:/usr/include/c++/7/bits/stl_construct.h ****    */
 125:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator>
 126:/usr/include/c++/7/bits/stl_construct.h ****     inline void
 127:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 128:/usr/include/c++/7/bits/stl_construct.h ****     {
 129:/usr/include/c++/7/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 130:/usr/include/c++/7/bits/stl_construct.h ****                        _Value_type;
 131:/usr/include/c++/7/bits/stl_construct.h **** #if __cplusplus >= 201103L
 132:/usr/include/c++/7/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 133:/usr/include/c++/7/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 134:/usr/include/c++/7/bits/stl_construct.h **** 		    "value type is destructible");
 135:/usr/include/c++/7/bits/stl_construct.h **** #endif
 136:/usr/include/c++/7/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 137:/usr/include/c++/7/bits/stl_construct.h **** 	__destroy(__first, __last);
 138:/usr/include/c++/7/bits/stl_construct.h ****     }
 139:/usr/include/c++/7/bits/stl_construct.h **** 
 140:/usr/include/c++/7/bits/stl_construct.h ****   template<bool>
 141:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_n_aux
 142:/usr/include/c++/7/bits/stl_construct.h ****     {
 143:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 144:/usr/include/c++/7/bits/stl_construct.h ****         static _ForwardIterator
 145:/usr/include/c++/7/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 146:/usr/include/c++/7/bits/stl_construct.h **** 	{
 147:/usr/include/c++/7/bits/stl_construct.h **** 	  for (; __count > 0; (void)++__first, --__count)
 148:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 149:/usr/include/c++/7/bits/stl_construct.h **** 	  return __first;
 150:/usr/include/c++/7/bits/stl_construct.h **** 	}
 151:/usr/include/c++/7/bits/stl_construct.h ****     };
 152:/usr/include/c++/7/bits/stl_construct.h **** 
 153:/usr/include/c++/7/bits/stl_construct.h ****   template<>
 154:/usr/include/c++/7/bits/stl_construct.h ****     struct _Destroy_n_aux<true>
 155:/usr/include/c++/7/bits/stl_construct.h ****     {
 156:/usr/include/c++/7/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 157:/usr/include/c++/7/bits/stl_construct.h ****         static _ForwardIterator
 158:/usr/include/c++/7/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 159:/usr/include/c++/7/bits/stl_construct.h **** 	{
 160:/usr/include/c++/7/bits/stl_construct.h **** 	  std::advance(__first, __count);
 161:/usr/include/c++/7/bits/stl_construct.h **** 	  return __first;
 162:/usr/include/c++/7/bits/stl_construct.h **** 	}
 163:/usr/include/c++/7/bits/stl_construct.h ****     };
 164:/usr/include/c++/7/bits/stl_construct.h **** 
 165:/usr/include/c++/7/bits/stl_construct.h ****   /**
 166:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 167:/usr/include/c++/7/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 168:/usr/include/c++/7/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 169:/usr/include/c++/7/bits/stl_construct.h ****    */
 170:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Size>
 171:/usr/include/c++/7/bits/stl_construct.h ****     inline _ForwardIterator
 172:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy_n(_ForwardIterator __first, _Size __count)
 173:/usr/include/c++/7/bits/stl_construct.h ****     {
 174:/usr/include/c++/7/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 175:/usr/include/c++/7/bits/stl_construct.h ****                        _Value_type;
 176:/usr/include/c++/7/bits/stl_construct.h **** #if __cplusplus >= 201103L
 177:/usr/include/c++/7/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 178:/usr/include/c++/7/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 179:/usr/include/c++/7/bits/stl_construct.h **** 		    "value type is destructible");
 180:/usr/include/c++/7/bits/stl_construct.h **** #endif
 181:/usr/include/c++/7/bits/stl_construct.h ****       return std::_Destroy_n_aux<__has_trivial_destructor(_Value_type)>::
 182:/usr/include/c++/7/bits/stl_construct.h **** 	__destroy_n(__first, __count);
 183:/usr/include/c++/7/bits/stl_construct.h ****     }
 184:/usr/include/c++/7/bits/stl_construct.h **** 
 185:/usr/include/c++/7/bits/stl_construct.h ****   /**
 186:/usr/include/c++/7/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 187:/usr/include/c++/7/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 188:/usr/include/c++/7/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 189:/usr/include/c++/7/bits/stl_construct.h ****    */
 190:/usr/include/c++/7/bits/stl_construct.h **** 
 191:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 192:/usr/include/c++/7/bits/stl_construct.h ****     void
 193:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 194:/usr/include/c++/7/bits/stl_construct.h **** 	     _Allocator& __alloc)
 195:/usr/include/c++/7/bits/stl_construct.h ****     {
 196:/usr/include/c++/7/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 197:/usr/include/c++/7/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 198:/usr/include/c++/7/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 199:/usr/include/c++/7/bits/stl_construct.h ****     }
 200:/usr/include/c++/7/bits/stl_construct.h **** 
 201:/usr/include/c++/7/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 202:/usr/include/c++/7/bits/stl_construct.h ****     inline void
 203:/usr/include/c++/7/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 10634              		.loc 10 203 0
 10635              		.cfi_startproc
 10636 0000 55       		pushq	%rbp
 10637              		.cfi_def_cfa_offset 16
 10638              		.cfi_offset 6, -16
 10639 0001 4889E5   		movq	%rsp, %rbp
 10640              		.cfi_def_cfa_register 6
 10641 0004 4883EC20 		subq	$32, %rsp
 10642 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10643 000c 488975F0 		movq	%rsi, -16(%rbp)
 10644 0010 488955E8 		movq	%rdx, -24(%rbp)
 204:/usr/include/c++/7/bits/stl_construct.h **** 	     allocator<_Tp>&)
 205:/usr/include/c++/7/bits/stl_construct.h ****     {
 206:/usr/include/c++/7/bits/stl_construct.h ****       _Destroy(__first, __last);
 10645              		.loc 10 206 0
 10646 0014 488B55F0 		movq	-16(%rbp), %rdx
 10647 0018 488B45F8 		movq	-8(%rbp), %rax
 10648 001c 4889D6   		movq	%rdx, %rsi
 10649 001f 4889C7   		movq	%rax, %rdi
 10650 0022 E8000000 		call	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 10650      00
 207:/usr/include/c++/7/bits/stl_construct.h ****     }
 10651              		.loc 10 207 0
 10652 0027 90       		nop
 10653 0028 C9       		leave
 10654              		.cfi_def_cfa 7, 8
 10655 0029 C3       		ret
 10656              		.cfi_endproc
 10657              	.LFE1628:
 10659              		.section	.text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_ZNSaIN8UnitTest18Deferr
 10660              		.align 2
 10661              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 10663              	_ZNSaIN8UnitTest18DeferredTestResultEED2Ev:
 10664              	.LFB1630:
 10665              		.file 11 "/usr/include/c++/7/bits/allocator.h"
   1:/usr/include/c++/7/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/7/bits/allocator.h **** 
   3:/usr/include/c++/7/bits/allocator.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/allocator.h **** //
   5:/usr/include/c++/7/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/allocator.h **** // any later version.
  10:/usr/include/c++/7/bits/allocator.h **** 
  11:/usr/include/c++/7/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/allocator.h **** 
  16:/usr/include/c++/7/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/allocator.h **** 
  20:/usr/include/c++/7/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/allocator.h **** 
  25:/usr/include/c++/7/bits/allocator.h **** /*
  26:/usr/include/c++/7/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/7/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/7/bits/allocator.h ****  *
  29:/usr/include/c++/7/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/7/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/7/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/7/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/7/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/7/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/7/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/7/bits/allocator.h ****  */
  37:/usr/include/c++/7/bits/allocator.h **** 
  38:/usr/include/c++/7/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/7/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/7/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/7/bits/allocator.h ****  */
  42:/usr/include/c++/7/bits/allocator.h **** 
  43:/usr/include/c++/7/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/7/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/7/bits/allocator.h **** 
  46:/usr/include/c++/7/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/7/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/7/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/7/bits/allocator.h **** #endif
  51:/usr/include/c++/7/bits/allocator.h **** 
  52:/usr/include/c++/7/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/usr/include/c++/7/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/usr/include/c++/7/bits/allocator.h **** #endif
  56:/usr/include/c++/7/bits/allocator.h **** 
  57:/usr/include/c++/7/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/c++/7/bits/allocator.h **** {
  59:/usr/include/c++/7/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/c++/7/bits/allocator.h **** 
  61:/usr/include/c++/7/bits/allocator.h ****   /**
  62:/usr/include/c++/7/bits/allocator.h ****    *  @addtogroup allocators
  63:/usr/include/c++/7/bits/allocator.h ****    *  @{
  64:/usr/include/c++/7/bits/allocator.h ****    */
  65:/usr/include/c++/7/bits/allocator.h **** 
  66:/usr/include/c++/7/bits/allocator.h ****   /// allocator<void> specialization.
  67:/usr/include/c++/7/bits/allocator.h ****   template<>
  68:/usr/include/c++/7/bits/allocator.h ****     class allocator<void>
  69:/usr/include/c++/7/bits/allocator.h ****     {
  70:/usr/include/c++/7/bits/allocator.h ****     public:
  71:/usr/include/c++/7/bits/allocator.h ****       typedef size_t      size_type;
  72:/usr/include/c++/7/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/usr/include/c++/7/bits/allocator.h ****       typedef void*       pointer;
  74:/usr/include/c++/7/bits/allocator.h ****       typedef const void* const_pointer;
  75:/usr/include/c++/7/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/7/bits/allocator.h **** 
  77:/usr/include/c++/7/bits/allocator.h ****       template<typename _Tp1>
  78:/usr/include/c++/7/bits/allocator.h **** 	struct rebind
  79:/usr/include/c++/7/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:/usr/include/c++/7/bits/allocator.h **** 
  81:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/usr/include/c++/7/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/usr/include/c++/7/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/usr/include/c++/7/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/usr/include/c++/7/bits/allocator.h **** 
  86:/usr/include/c++/7/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/usr/include/c++/7/bits/allocator.h **** 
  88:/usr/include/c++/7/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/usr/include/c++/7/bits/allocator.h **** 	void
  90:/usr/include/c++/7/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/usr/include/c++/7/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  92:/usr/include/c++/7/bits/allocator.h **** 
  93:/usr/include/c++/7/bits/allocator.h ****       template<typename _Up>
  94:/usr/include/c++/7/bits/allocator.h **** 	void
  95:/usr/include/c++/7/bits/allocator.h **** 	destroy(_Up* __p) { __p->~_Up(); }
  96:/usr/include/c++/7/bits/allocator.h **** #endif
  97:/usr/include/c++/7/bits/allocator.h ****     };
  98:/usr/include/c++/7/bits/allocator.h **** 
  99:/usr/include/c++/7/bits/allocator.h ****   /**
 100:/usr/include/c++/7/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 101:/usr/include/c++/7/bits/allocator.h ****    *
 102:/usr/include/c++/7/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 103:/usr/include/c++/7/bits/allocator.h ****    *  for further details.
 104:/usr/include/c++/7/bits/allocator.h ****    *
 105:/usr/include/c++/7/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 106:/usr/include/c++/7/bits/allocator.h ****    */
 107:/usr/include/c++/7/bits/allocator.h ****   template<typename _Tp>
 108:/usr/include/c++/7/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
 109:/usr/include/c++/7/bits/allocator.h ****     {
 110:/usr/include/c++/7/bits/allocator.h ****    public:
 111:/usr/include/c++/7/bits/allocator.h ****       typedef size_t     size_type;
 112:/usr/include/c++/7/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 113:/usr/include/c++/7/bits/allocator.h ****       typedef _Tp*       pointer;
 114:/usr/include/c++/7/bits/allocator.h ****       typedef const _Tp* const_pointer;
 115:/usr/include/c++/7/bits/allocator.h ****       typedef _Tp&       reference;
 116:/usr/include/c++/7/bits/allocator.h ****       typedef const _Tp& const_reference;
 117:/usr/include/c++/7/bits/allocator.h ****       typedef _Tp        value_type;
 118:/usr/include/c++/7/bits/allocator.h **** 
 119:/usr/include/c++/7/bits/allocator.h ****       template<typename _Tp1>
 120:/usr/include/c++/7/bits/allocator.h **** 	struct rebind
 121:/usr/include/c++/7/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 122:/usr/include/c++/7/bits/allocator.h **** 
 123:/usr/include/c++/7/bits/allocator.h **** #if __cplusplus >= 201103L
 124:/usr/include/c++/7/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 125:/usr/include/c++/7/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 126:/usr/include/c++/7/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 127:/usr/include/c++/7/bits/allocator.h **** 
 128:/usr/include/c++/7/bits/allocator.h ****       typedef true_type is_always_equal;
 129:/usr/include/c++/7/bits/allocator.h **** #endif
 130:/usr/include/c++/7/bits/allocator.h **** 
 131:/usr/include/c++/7/bits/allocator.h ****       allocator() throw() { }
 132:/usr/include/c++/7/bits/allocator.h **** 
 133:/usr/include/c++/7/bits/allocator.h ****       allocator(const allocator& __a) throw()
 134:/usr/include/c++/7/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 135:/usr/include/c++/7/bits/allocator.h **** 
 136:/usr/include/c++/7/bits/allocator.h ****       template<typename _Tp1>
 137:/usr/include/c++/7/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) throw() { }
 138:/usr/include/c++/7/bits/allocator.h **** 
 139:/usr/include/c++/7/bits/allocator.h ****       ~allocator() throw() { }
 10666              		.loc 11 139 0
 10667              		.cfi_startproc
 10668 0000 55       		pushq	%rbp
 10669              		.cfi_def_cfa_offset 16
 10670              		.cfi_offset 6, -16
 10671 0001 4889E5   		movq	%rsp, %rbp
 10672              		.cfi_def_cfa_register 6
 10673 0004 4883EC10 		subq	$16, %rsp
 10674 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10675              	.LBB182:
 10676              		.loc 11 139 0
 10677 000c 488B45F8 		movq	-8(%rbp), %rax
 10678 0010 4889C7   		movq	%rax, %rdi
 10679 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 10679      00
 10680              	.LBE182:
 10681 0018 90       		nop
 10682 0019 C9       		leave
 10683              		.cfi_def_cfa 7, 8
 10684 001a C3       		ret
 10685              		.cfi_endproc
 10686              	.LFE1630:
 10688              		.weak	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev
 10689              		.set	_ZNSaIN8UnitTest18DeferredTestResultEED1Ev,_ZNSaIN8UnitTest18DeferredTestResultEED2Ev
 10690              		.section	.text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m,"a
 10691              		.align 2
 10692              		.weak	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
 10694              	_ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:
 10695              	.LFB1632:
 176:/usr/include/c++/7/bits/stl_vector.h ****       {
 10696              		.loc 9 176 0
 10697              		.cfi_startproc
 10698 0000 55       		pushq	%rbp
 10699              		.cfi_def_cfa_offset 16
 10700              		.cfi_offset 6, -16
 10701 0001 4889E5   		movq	%rsp, %rbp
 10702              		.cfi_def_cfa_register 6
 10703 0004 4883EC20 		subq	$32, %rsp
 10704 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10705 000c 488975F0 		movq	%rsi, -16(%rbp)
 10706 0010 488955E8 		movq	%rdx, -24(%rbp)
 179:/usr/include/c++/7/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10707              		.loc 9 179 0
 10708 0014 48837DF0 		cmpq	$0, -16(%rbp)
 10708      00
 10709 0019 7417     		je	.L549
 180:/usr/include/c++/7/bits/stl_vector.h ****       }
 10710              		.loc 9 180 0
 10711 001b 488B45F8 		movq	-8(%rbp), %rax
 10712 001f 488B55E8 		movq	-24(%rbp), %rdx
 10713 0023 488B4DF0 		movq	-16(%rbp), %rcx
 10714 0027 4889CE   		movq	%rcx, %rsi
 10715 002a 4889C7   		movq	%rax, %rdi
 10716 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 10716      00
 10717              	.L549:
 181:/usr/include/c++/7/bits/stl_vector.h **** 
 10718              		.loc 9 181 0
 10719 0032 90       		nop
 10720 0033 C9       		leave
 10721              		.cfi_def_cfa 7, 8
 10722 0034 C3       		ret
 10723              		.cfi_endproc
 10724              	.LFE1632:
 10726              		.section	.text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_,"axG",@progbits,_ZSt8_Destroy
 10727              		.weak	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
 10729              	_ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:
 10730              	.LFB1633:
 127:/usr/include/c++/7/bits/stl_construct.h ****     {
 10731              		.loc 10 127 0
 10732              		.cfi_startproc
 10733 0000 55       		pushq	%rbp
 10734              		.cfi_def_cfa_offset 16
 10735              		.cfi_offset 6, -16
 10736 0001 4889E5   		movq	%rsp, %rbp
 10737              		.cfi_def_cfa_register 6
 10738 0004 4883EC10 		subq	$16, %rsp
 10739 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10740 000c 488975F0 		movq	%rsi, -16(%rbp)
 137:/usr/include/c++/7/bits/stl_construct.h ****     }
 10741              		.loc 10 137 0
 10742 0010 488B55F0 		movq	-16(%rbp), %rdx
 10743 0014 488B45F8 		movq	-8(%rbp), %rax
 10744 0018 4889D6   		movq	%rdx, %rsi
 10745 001b 4889C7   		movq	%rax, %rdi
 10746 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 10746      00
 138:/usr/include/c++/7/bits/stl_construct.h **** 
 10747              		.loc 10 138 0
 10748 0023 90       		nop
 10749 0024 C9       		leave
 10750              		.cfi_def_cfa 7, 8
 10751 0025 C3       		ret
 10752              		.cfi_endproc
 10753              	.LFE1633:
 10755              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev,"axG",@progbits,_
 10756              		.align 2
 10757              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
 10759              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:
 10760              	.LFB1635:
 10761              		.file 12 "/usr/include/c++/7/ext/new_allocator.h"
   1:/usr/include/c++/7/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/7/ext/new_allocator.h **** 
   3:/usr/include/c++/7/ext/new_allocator.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/ext/new_allocator.h **** //
   5:/usr/include/c++/7/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/7/ext/new_allocator.h **** 
  11:/usr/include/c++/7/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/ext/new_allocator.h **** 
  16:/usr/include/c++/7/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/ext/new_allocator.h **** 
  20:/usr/include/c++/7/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/ext/new_allocator.h **** 
  25:/usr/include/c++/7/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/7/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/7/ext/new_allocator.h ****  */
  28:/usr/include/c++/7/ext/new_allocator.h **** 
  29:/usr/include/c++/7/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/7/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/7/ext/new_allocator.h **** 
  32:/usr/include/c++/7/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/7/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/7/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/7/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/7/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/7/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/7/ext/new_allocator.h **** #endif
  39:/usr/include/c++/7/ext/new_allocator.h **** 
  40:/usr/include/c++/7/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/7/ext/new_allocator.h **** {
  42:/usr/include/c++/7/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/7/ext/new_allocator.h **** 
  44:/usr/include/c++/7/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/7/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/7/ext/new_allocator.h **** 
  47:/usr/include/c++/7/ext/new_allocator.h ****   /**
  48:/usr/include/c++/7/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/7/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/7/ext/new_allocator.h ****    *
  51:/usr/include/c++/7/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:/usr/include/c++/7/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/7/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/7/ext/new_allocator.h ****    *
  55:/usr/include/c++/7/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/7/ext/new_allocator.h ****    */
  57:/usr/include/c++/7/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/7/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/7/ext/new_allocator.h ****     {
  60:/usr/include/c++/7/ext/new_allocator.h ****     public:
  61:/usr/include/c++/7/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/7/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/7/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/7/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/7/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/7/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/7/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/7/ext/new_allocator.h **** 
  69:/usr/include/c++/7/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/7/ext/new_allocator.h **** 	struct rebind
  71:/usr/include/c++/7/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/7/ext/new_allocator.h **** 
  73:/usr/include/c++/7/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/7/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/7/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/7/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/7/ext/new_allocator.h **** #endif
  78:/usr/include/c++/7/ext/new_allocator.h **** 
  79:/usr/include/c++/7/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/7/ext/new_allocator.h **** 
  81:/usr/include/c++/7/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/7/ext/new_allocator.h **** 
  83:/usr/include/c++/7/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/7/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/7/ext/new_allocator.h **** 
  86:/usr/include/c++/7/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 10762              		.loc 12 86 0
 10763              		.cfi_startproc
 10764 0000 55       		pushq	%rbp
 10765              		.cfi_def_cfa_offset 16
 10766              		.cfi_offset 6, -16
 10767 0001 4889E5   		movq	%rsp, %rbp
 10768              		.cfi_def_cfa_register 6
 10769 0004 48897DF8 		movq	%rdi, -8(%rbp)
 10770              		.loc 12 86 0
 10771 0008 90       		nop
 10772 0009 5D       		popq	%rbp
 10773              		.cfi_def_cfa 7, 8
 10774 000a C3       		ret
 10775              		.cfi_endproc
 10776              	.LFE1635:
 10778              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
 10779              		.set	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev,_ZN9__gnu_cxx13new_allocato
 10780              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_
 10781              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
 10783              	_ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:
 10784              	.LFB1637:
 10785              		.file 13 "/usr/include/c++/7/ext/alloc_traits.h"
   1:/usr/include/c++/7/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/7/ext/alloc_traits.h **** 
   3:/usr/include/c++/7/ext/alloc_traits.h **** // Copyright (C) 2011-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/ext/alloc_traits.h **** //
   5:/usr/include/c++/7/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/ext/alloc_traits.h **** // any later version.
  10:/usr/include/c++/7/ext/alloc_traits.h **** 
  11:/usr/include/c++/7/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/ext/alloc_traits.h **** 
  16:/usr/include/c++/7/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/ext/alloc_traits.h **** 
  20:/usr/include/c++/7/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/ext/alloc_traits.h **** 
  25:/usr/include/c++/7/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/c++/7/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/7/ext/alloc_traits.h ****  */
  28:/usr/include/c++/7/ext/alloc_traits.h **** 
  29:/usr/include/c++/7/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/c++/7/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/c++/7/ext/alloc_traits.h **** 
  32:/usr/include/c++/7/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/7/ext/alloc_traits.h **** 
  34:/usr/include/c++/7/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/c++/7/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/c++/7/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/c++/7/ext/alloc_traits.h **** #else
  38:/usr/include/c++/7/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/c++/7/ext/alloc_traits.h **** #endif
  40:/usr/include/c++/7/ext/alloc_traits.h **** 
  41:/usr/include/c++/7/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/7/ext/alloc_traits.h **** {
  43:/usr/include/c++/7/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/7/ext/alloc_traits.h **** 
  45:/usr/include/c++/7/ext/alloc_traits.h **** /**
  46:/usr/include/c++/7/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  47:/usr/include/c++/7/ext/alloc_traits.h ****  * @ingroup allocators
  48:/usr/include/c++/7/ext/alloc_traits.h **** */
  49:/usr/include/c++/7/ext/alloc_traits.h **** template<typename _Alloc>
  50:/usr/include/c++/7/ext/alloc_traits.h ****   struct __alloc_traits
  51:/usr/include/c++/7/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  52:/usr/include/c++/7/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  53:/usr/include/c++/7/ext/alloc_traits.h **** #endif
  54:/usr/include/c++/7/ext/alloc_traits.h ****   {
  55:/usr/include/c++/7/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
  56:/usr/include/c++/7/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  57:/usr/include/c++/7/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  58:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  59:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  60:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  61:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  62:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  63:/usr/include/c++/7/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  64:/usr/include/c++/7/ext/alloc_traits.h ****     typedef value_type&                             reference;
  65:/usr/include/c++/7/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
  66:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::allocate;
  67:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::deallocate;
  68:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::construct;
  69:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::destroy;
  70:/usr/include/c++/7/ext/alloc_traits.h ****     using _Base_type::max_size;
  71:/usr/include/c++/7/ext/alloc_traits.h **** 
  72:/usr/include/c++/7/ext/alloc_traits.h ****   private:
  73:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Ptr>
  74:/usr/include/c++/7/ext/alloc_traits.h ****       using __is_custom_pointer
  75:/usr/include/c++/7/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  76:/usr/include/c++/7/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  77:/usr/include/c++/7/ext/alloc_traits.h **** 
  78:/usr/include/c++/7/ext/alloc_traits.h ****   public:
  79:/usr/include/c++/7/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
  80:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  81:/usr/include/c++/7/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  82:/usr/include/c++/7/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  83:/usr/include/c++/7/ext/alloc_traits.h ****       {
  84:/usr/include/c++/7/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::addressof(*__p),
  85:/usr/include/c++/7/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  86:/usr/include/c++/7/ext/alloc_traits.h ****       }
  87:/usr/include/c++/7/ext/alloc_traits.h **** 
  88:/usr/include/c++/7/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
  89:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Ptr>
  90:/usr/include/c++/7/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  91:/usr/include/c++/7/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  92:/usr/include/c++/7/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::addressof(*__p)); }
  93:/usr/include/c++/7/ext/alloc_traits.h **** 
  94:/usr/include/c++/7/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
  95:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::select_on_container_copy_construction(__a); }
  96:/usr/include/c++/7/ext/alloc_traits.h **** 
  97:/usr/include/c++/7/ext/alloc_traits.h ****     static void _S_on_swap(_Alloc& __a, _Alloc& __b)
  98:/usr/include/c++/7/ext/alloc_traits.h ****     { std::__alloc_on_swap(__a, __b); }
  99:/usr/include/c++/7/ext/alloc_traits.h **** 
 100:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_copy_assign()
 101:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_copy_assignment::value; }
 102:/usr/include/c++/7/ext/alloc_traits.h **** 
 103:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_move_assign()
 104:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_move_assignment::value; }
 105:/usr/include/c++/7/ext/alloc_traits.h **** 
 106:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_propagate_on_swap()
 107:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::propagate_on_container_swap::value; }
 108:/usr/include/c++/7/ext/alloc_traits.h **** 
 109:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_always_equal()
 110:/usr/include/c++/7/ext/alloc_traits.h ****     { return _Base_type::is_always_equal::value; }
 111:/usr/include/c++/7/ext/alloc_traits.h **** 
 112:/usr/include/c++/7/ext/alloc_traits.h ****     static constexpr bool _S_nothrow_move()
 113:/usr/include/c++/7/ext/alloc_traits.h ****     { return _S_propagate_on_move_assign() || _S_always_equal(); }
 114:/usr/include/c++/7/ext/alloc_traits.h **** 
 115:/usr/include/c++/7/ext/alloc_traits.h ****     template<typename _Tp>
 116:/usr/include/c++/7/ext/alloc_traits.h ****       struct rebind
 117:/usr/include/c++/7/ext/alloc_traits.h ****       { typedef typename _Base_type::template rebind_alloc<_Tp> other; };
 118:/usr/include/c++/7/ext/alloc_traits.h **** #else
 119:/usr/include/c++/7/ext/alloc_traits.h **** 
 120:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::pointer                pointer;
 121:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::const_pointer          const_pointer;
 122:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::value_type             value_type;
 123:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::reference              reference;
 124:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::const_reference        const_reference;
 125:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::size_type              size_type;
 126:/usr/include/c++/7/ext/alloc_traits.h ****     typedef typename _Alloc::difference_type        difference_type;
 127:/usr/include/c++/7/ext/alloc_traits.h **** 
 128:/usr/include/c++/7/ext/alloc_traits.h ****     static pointer
 129:/usr/include/c++/7/ext/alloc_traits.h ****     allocate(_Alloc& __a, size_type __n)
 130:/usr/include/c++/7/ext/alloc_traits.h ****     { return __a.allocate(__n); }
 131:/usr/include/c++/7/ext/alloc_traits.h **** 
 132:/usr/include/c++/7/ext/alloc_traits.h ****     static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 10786              		.loc 13 132 0
 10787              		.cfi_startproc
 10788 0000 55       		pushq	%rbp
 10789              		.cfi_def_cfa_offset 16
 10790              		.cfi_offset 6, -16
 10791 0001 4889E5   		movq	%rsp, %rbp
 10792              		.cfi_def_cfa_register 6
 10793 0004 4883EC20 		subq	$32, %rsp
 10794 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10795 000c 488975F0 		movq	%rsi, -16(%rbp)
 10796 0010 488955E8 		movq	%rdx, -24(%rbp)
 133:/usr/include/c++/7/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 10797              		.loc 13 133 0
 10798 0014 488B55E8 		movq	-24(%rbp), %rdx
 10799 0018 488B4DF0 		movq	-16(%rbp), %rcx
 10800 001c 488B45F8 		movq	-8(%rbp), %rax
 10801 0020 4889CE   		movq	%rcx, %rsi
 10802 0023 4889C7   		movq	%rax, %rdi
 10803 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 10803      00
 10804 002b 90       		nop
 10805 002c C9       		leave
 10806              		.cfi_def_cfa 7, 8
 10807 002d C3       		ret
 10808              		.cfi_endproc
 10809              	.LFE1637:
 10811              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_,"axG",
 10812              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
 10814              	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:
 10815              	.LFB1638:
 105:/usr/include/c++/7/bits/stl_construct.h **** 	{
 10816              		.loc 10 105 0
 10817              		.cfi_startproc
 10818 0000 55       		pushq	%rbp
 10819              		.cfi_def_cfa_offset 16
 10820              		.cfi_offset 6, -16
 10821 0001 4889E5   		movq	%rsp, %rbp
 10822              		.cfi_def_cfa_register 6
 10823 0004 4883EC10 		subq	$16, %rsp
 10824 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10825 000c 488975F0 		movq	%rsi, -16(%rbp)
 10826              	.L555:
 107:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10827              		.loc 10 107 0 discriminator 2
 10828 0010 488B45F8 		movq	-8(%rbp), %rax
 10829 0014 483B45F0 		cmpq	-16(%rbp), %rax
 10830 0018 741B     		je	.L556
 108:/usr/include/c++/7/bits/stl_construct.h **** 	}
 10831              		.loc 10 108 0 discriminator 1
 10832 001a 488B45F8 		movq	-8(%rbp), %rax
 10833 001e 4889C7   		movq	%rax, %rdi
 10834 0021 E8000000 		call	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 10834      00
 10835 0026 4889C7   		movq	%rax, %rdi
 10836 0029 E8000000 		call	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 10836      00
 107:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 10837              		.loc 10 107 0 discriminator 1
 10838 002e 48836DF8 		subq	$-128, -8(%rbp)
 10838      80
 10839 0033 EBDB     		jmp	.L555
 10840              	.L556:
 109:/usr/include/c++/7/bits/stl_construct.h ****     };
 10841              		.loc 10 109 0
 10842 0035 90       		nop
 10843 0036 C9       		leave
 10844              		.cfi_def_cfa 7, 8
 10845 0037 C3       		ret
 10846              		.cfi_endproc
 10847              	.LFE1638:
 10849              		.section	.text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m,"ax
 10850              		.align 2
 10851              		.weak	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
 10853              	_ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:
 10854              	.LFB1639:
  87:/usr/include/c++/7/ext/new_allocator.h **** 
  88:/usr/include/c++/7/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/7/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/7/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/7/ext/new_allocator.h **** 
  92:/usr/include/c++/7/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/7/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/7/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/7/ext/new_allocator.h **** 
  96:/usr/include/c++/7/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/7/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/7/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/7/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 100:/usr/include/c++/7/ext/new_allocator.h ****       {
 101:/usr/include/c++/7/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/7/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/7/ext/new_allocator.h **** 
 104:/usr/include/c++/7/ext/new_allocator.h **** #if __cpp_aligned_new
 105:/usr/include/c++/7/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 106:/usr/include/c++/7/ext/new_allocator.h **** 	  {
 107:/usr/include/c++/7/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 108:/usr/include/c++/7/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 109:/usr/include/c++/7/ext/new_allocator.h **** 	  }
 110:/usr/include/c++/7/ext/new_allocator.h **** #endif
 111:/usr/include/c++/7/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 112:/usr/include/c++/7/ext/new_allocator.h ****       }
 113:/usr/include/c++/7/ext/new_allocator.h **** 
 114:/usr/include/c++/7/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 115:/usr/include/c++/7/ext/new_allocator.h ****       void
 116:/usr/include/c++/7/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 10855              		.loc 12 116 0
 10856              		.cfi_startproc
 10857 0000 55       		pushq	%rbp
 10858              		.cfi_def_cfa_offset 16
 10859              		.cfi_offset 6, -16
 10860 0001 4889E5   		movq	%rsp, %rbp
 10861              		.cfi_def_cfa_register 6
 10862 0004 4883EC20 		subq	$32, %rsp
 10863 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10864 000c 488975F0 		movq	%rsi, -16(%rbp)
 10865 0010 488955E8 		movq	%rdx, -24(%rbp)
 117:/usr/include/c++/7/ext/new_allocator.h ****       {
 118:/usr/include/c++/7/ext/new_allocator.h **** #if __cpp_aligned_new
 119:/usr/include/c++/7/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 120:/usr/include/c++/7/ext/new_allocator.h **** 	  {
 121:/usr/include/c++/7/ext/new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 122:/usr/include/c++/7/ext/new_allocator.h **** 	    return;
 123:/usr/include/c++/7/ext/new_allocator.h **** 	  }
 124:/usr/include/c++/7/ext/new_allocator.h **** #endif
 125:/usr/include/c++/7/ext/new_allocator.h **** 	::operator delete(__p);
 10866              		.loc 12 125 0
 10867 0014 488B45F0 		movq	-16(%rbp), %rax
 10868 0018 4889C7   		movq	%rax, %rdi
 10869 001b E8000000 		call	_ZdlPv@PLT
 10869      00
 126:/usr/include/c++/7/ext/new_allocator.h ****       }
 10870              		.loc 12 126 0
 10871 0020 90       		nop
 10872 0021 C9       		leave
 10873              		.cfi_def_cfa 7, 8
 10874 0022 C3       		ret
 10875              		.cfi_endproc
 10876              	.LFE1639:
 10878              		.section	.text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_,"axG",@progbits,_ZSt11__a
 10879              		.weak	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
 10881              	_ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:
 10882              	.LFB1640:
 10883              		.file 14 "/usr/include/c++/7/bits/move.h"
   1:/usr/include/c++/7/bits/move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:/usr/include/c++/7/bits/move.h **** 
   3:/usr/include/c++/7/bits/move.h **** // Copyright (C) 2007-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/move.h **** //
   5:/usr/include/c++/7/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/move.h **** // any later version.
  10:/usr/include/c++/7/bits/move.h **** 
  11:/usr/include/c++/7/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/move.h **** 
  16:/usr/include/c++/7/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/move.h **** 
  20:/usr/include/c++/7/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/move.h **** 
  25:/usr/include/c++/7/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/7/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/7/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/7/bits/move.h ****  */
  29:/usr/include/c++/7/bits/move.h **** 
  30:/usr/include/c++/7/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/7/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/7/bits/move.h **** 
  33:/usr/include/c++/7/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/7/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/7/bits/move.h **** 
  36:/usr/include/c++/7/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/7/bits/move.h **** {
  38:/usr/include/c++/7/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/7/bits/move.h **** 
  40:/usr/include/c++/7/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/7/bits/move.h ****   /**
  42:/usr/include/c++/7/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/7/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/7/bits/move.h ****    */
  45:/usr/include/c++/7/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/7/bits/move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  47:/usr/include/c++/7/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 10884              		.loc 14 47 0
 10885              		.cfi_startproc
 10886 0000 55       		pushq	%rbp
 10887              		.cfi_def_cfa_offset 16
 10888              		.cfi_offset 6, -16
 10889 0001 4889E5   		movq	%rsp, %rbp
 10890              		.cfi_def_cfa_register 6
 10891 0004 48897DF8 		movq	%rdi, -8(%rbp)
  48:/usr/include/c++/7/bits/move.h ****     { return __builtin_addressof(__r); }
 10892              		.loc 14 48 0
 10893 0008 488B45F8 		movq	-8(%rbp), %rax
 10894 000c 5D       		popq	%rbp
 10895              		.cfi_def_cfa 7, 8
 10896 000d C3       		ret
 10897              		.cfi_endproc
 10898              	.LFE1640:
 10900              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 10901              		.align 2
 10902              		.weak	_ZN8UnitTest18DeferredTestResultD2Ev
 10904              	_ZN8UnitTest18DeferredTestResultD2Ev:
 10905              	.LFB1643:
 10906              		.file 15 "../DeferredTestResult.h"
   1:../DeferredTestResult.h **** #ifndef UNITTEST_DEFERREDTESTRESULT_H
   2:../DeferredTestResult.h **** #define UNITTEST_DEFERREDTESTRESULT_H
   3:../DeferredTestResult.h **** 
   4:../DeferredTestResult.h **** #include <string>
   5:../DeferredTestResult.h **** #include <vector>
   6:../DeferredTestResult.h **** 
   7:../DeferredTestResult.h **** namespace UnitTest
   8:../DeferredTestResult.h **** {
   9:../DeferredTestResult.h **** 
  10:../DeferredTestResult.h **** struct DeferredTestResult
 10907              		.loc 15 10 0
 10908              		.cfi_startproc
 10909              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 10910              		.cfi_lsda 0x1b,.LLSDA1643
 10911 0000 55       		pushq	%rbp
 10912              		.cfi_def_cfa_offset 16
 10913              		.cfi_offset 6, -16
 10914 0001 4889E5   		movq	%rsp, %rbp
 10915              		.cfi_def_cfa_register 6
 10916 0004 53       		pushq	%rbx
 10917 0005 4883EC18 		subq	$24, %rsp
 10918              		.cfi_offset 3, -24
 10919 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10920              	.LBB183:
 10921              		.loc 15 10 0
 10922 000d 488B45E8 		movq	-24(%rbp), %rax
 10923 0011 4883C060 		addq	$96, %rax
 10924 0015 4889C7   		movq	%rax, %rdi
 10925              	.LEHB295:
 10926 0018 E8000000 		call	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 10926      00
 10927              	.LEHE295:
 10928              		.loc 15 10 0 is_stmt 0 discriminator 2
 10929 001d 488B45E8 		movq	-24(%rbp), %rax
 10930 0021 4883C040 		addq	$64, %rax
 10931 0025 4889C7   		movq	%rax, %rdi
 10932              	.LEHB296:
 10933 0028 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 10933      00
 10934              	.LEHE296:
 10935              		.loc 15 10 0 discriminator 4
 10936 002d 488B45E8 		movq	-24(%rbp), %rax
 10937 0031 4883C020 		addq	$32, %rax
 10938 0035 4889C7   		movq	%rax, %rdi
 10939              	.LEHB297:
 10940 0038 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 10940      00
 10941              	.LEHE297:
 10942              		.loc 15 10 0 discriminator 6
 10943 003d 488B45E8 		movq	-24(%rbp), %rax
 10944 0041 4889C7   		movq	%rax, %rdi
 10945              	.LEHB298:
 10946 0044 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 10946      00
 10947              	.LEHE298:
 10948              	.LBE183:
 10949 0049 EB44     		jmp	.L567
 10950              	.L564:
 10951 004b 4889C3   		movq	%rax, %rbx
 10952              	.LBB184:
 10953              		.loc 15 10 0
 10954 004e 488B45E8 		movq	-24(%rbp), %rax
 10955 0052 4883C040 		addq	$64, %rax
 10956 0056 4889C7   		movq	%rax, %rdi
 10957 0059 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 10957      00
 10958 005e EB03     		jmp	.L562
 10959              	.L565:
 10960 0060 4889C3   		movq	%rax, %rbx
 10961              	.L562:
 10962              		.loc 15 10 0 discriminator 3
 10963 0063 488B45E8 		movq	-24(%rbp), %rax
 10964 0067 4883C020 		addq	$32, %rax
 10965 006b 4889C7   		movq	%rax, %rdi
 10966 006e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 10966      00
 10967 0073 EB03     		jmp	.L563
 10968              	.L566:
 10969 0075 4889C3   		movq	%rax, %rbx
 10970              	.L563:
 10971              		.loc 15 10 0 discriminator 5
 10972 0078 488B45E8 		movq	-24(%rbp), %rax
 10973 007c 4889C7   		movq	%rax, %rdi
 10974 007f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 10974      00
 10975 0084 4889D8   		movq	%rbx, %rax
 10976 0087 4889C7   		movq	%rax, %rdi
 10977              	.LEHB299:
 10978 008a E8000000 		call	_Unwind_Resume@PLT
 10978      00
 10979              	.LEHE299:
 10980              	.L567:
 10981              	.LBE184:
 10982              		.loc 15 10 0
 10983 008f 4883C418 		addq	$24, %rsp
 10984 0093 5B       		popq	%rbx
 10985 0094 5D       		popq	%rbp
 10986              		.cfi_def_cfa 7, 8
 10987 0095 C3       		ret
 10988              		.cfi_endproc
 10989              	.LFE1643:
 10990              		.section	.gcc_except_table
 10991              	.LLSDA1643:
 10992 0866 FF       		.byte	0xff
 10993 0867 FF       		.byte	0xff
 10994 0868 01       		.byte	0x1
 10995 0869 15       		.uleb128 .LLSDACSE1643-.LLSDACSB1643
 10996              	.LLSDACSB1643:
 10997 086a 18       		.uleb128 .LEHB295-.LFB1643
 10998 086b 05       		.uleb128 .LEHE295-.LEHB295
 10999 086c 4B       		.uleb128 .L564-.LFB1643
 11000 086d 00       		.uleb128 0
 11001 086e 28       		.uleb128 .LEHB296-.LFB1643
 11002 086f 05       		.uleb128 .LEHE296-.LEHB296
 11003 0870 60       		.uleb128 .L565-.LFB1643
 11004 0871 00       		.uleb128 0
 11005 0872 38       		.uleb128 .LEHB297-.LFB1643
 11006 0873 05       		.uleb128 .LEHE297-.LEHB297
 11007 0874 75       		.uleb128 .L566-.LFB1643
 11008 0875 00       		.uleb128 0
 11009 0876 44       		.uleb128 .LEHB298-.LFB1643
 11010 0877 05       		.uleb128 .LEHE298-.LEHB298
 11011 0878 00       		.uleb128 0
 11012 0879 00       		.uleb128 0
 11013 087a 8A01     		.uleb128 .LEHB299-.LFB1643
 11014 087c 05       		.uleb128 .LEHE299-.LEHB299
 11015 087d 00       		.uleb128 0
 11016 087e 00       		.uleb128 0
 11017              	.LLSDACSE1643:
 11018              		.section	.text._ZN8UnitTest18DeferredTestResultD2Ev,"axG",@progbits,_ZN8UnitTest18DeferredTestResu
 11020              		.weak	_ZN8UnitTest18DeferredTestResultD1Ev
 11021              		.set	_ZN8UnitTest18DeferredTestResultD1Ev,_ZN8UnitTest18DeferredTestResultD2Ev
 11022              		.section	.text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_,"axG",@progbits,_ZSt8_DestroyIN8
 11023              		.weak	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
 11025              	_ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:
 11026              	.LFB1641:
  97:/usr/include/c++/7/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 11027              		.loc 10 97 0 is_stmt 1
 11028              		.cfi_startproc
 11029 0000 55       		pushq	%rbp
 11030              		.cfi_def_cfa_offset 16
 11031              		.cfi_offset 6, -16
 11032 0001 4889E5   		movq	%rsp, %rbp
 11033              		.cfi_def_cfa_register 6
 11034 0004 4883EC10 		subq	$16, %rsp
 11035 0008 48897DF8 		movq	%rdi, -8(%rbp)
  98:/usr/include/c++/7/bits/stl_construct.h **** 
 11036              		.loc 10 98 0
 11037 000c 488B45F8 		movq	-8(%rbp), %rax
 11038 0010 4889C7   		movq	%rax, %rdi
 11039 0013 E8000000 		call	_ZN8UnitTest18DeferredTestResultD1Ev
 11039      00
 11040 0018 90       		nop
 11041 0019 C9       		leave
 11042              		.cfi_def_cfa 7, 8
 11043 001a C3       		ret
 11044              		.cfi_endproc
 11045              	.LFE1641:
 11047              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 11048              		.align 2
 11049              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
 11051              	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 11052              	.LFB1646:
 433:/usr/include/c++/7/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 11053              		.loc 9 433 0
 11054              		.cfi_startproc
 11055              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 11056              		.cfi_lsda 0x1b,.LLSDA1646
 11057 0000 55       		pushq	%rbp
 11058              		.cfi_def_cfa_offset 16
 11059              		.cfi_offset 6, -16
 11060 0001 4889E5   		movq	%rsp, %rbp
 11061              		.cfi_def_cfa_register 6
 11062 0004 53       		pushq	%rbx
 11063 0005 4883EC18 		subq	$24, %rsp
 11064              		.cfi_offset 3, -24
 11065 0009 48897DE8 		movq	%rdi, -24(%rbp)
 11066              	.LBB185:
 11067              		.loc 9 435 0
 11068 000d 488B45E8 		movq	-24(%rbp), %rax
 11069 0011 4889C7   		movq	%rax, %rdi
 11070 0014 E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_
 11070      00
 11071 0019 4889C2   		movq	%rax, %rdx
 434:/usr/include/c++/7/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 11072              		.loc 9 434 0
 11073 001c 488B45E8 		movq	-24(%rbp), %rax
 11074 0020 488B4808 		movq	8(%rax), %rcx
 11075 0024 488B45E8 		movq	-24(%rbp), %rax
 11076 0028 488B00   		movq	(%rax), %rax
 11077 002b 4889CE   		movq	%rcx, %rsi
 11078 002e 4889C7   		movq	%rax, %rdi
 11079              	.LEHB300:
 11080 0031 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0
 11080      00
 11081              	.LEHE300:
 11082              		.loc 9 435 0
 11083 0036 488B45E8 		movq	-24(%rbp), %rax
 11084 003a 4889C7   		movq	%rax, %rdi
 11085              	.LEHB301:
 11086 003d E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 11086      00
 11087              	.LEHE301:
 11088              	.LBE185:
 11089 0042 EB1A     		jmp	.L572
 11090              	.L571:
 11091 0044 4889C3   		movq	%rax, %rbx
 11092              	.LBB186:
 11093 0047 488B45E8 		movq	-24(%rbp), %rax
 11094 004b 4889C7   		movq	%rax, %rdi
 11095 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2E
 11095      00
 11096 0053 4889D8   		movq	%rbx, %rax
 11097 0056 4889C7   		movq	%rax, %rdi
 11098              	.LEHB302:
 11099 0059 E8000000 		call	_Unwind_Resume@PLT
 11099      00
 11100              	.LEHE302:
 11101              	.L572:
 11102              	.LBE186:
 11103 005e 4883C418 		addq	$24, %rsp
 11104 0062 5B       		popq	%rbx
 11105 0063 5D       		popq	%rbp
 11106              		.cfi_def_cfa 7, 8
 11107 0064 C3       		ret
 11108              		.cfi_endproc
 11109              	.LFE1646:
 11110              		.section	.gcc_except_table
 11111              	.LLSDA1646:
 11112 087f FF       		.byte	0xff
 11113 0880 FF       		.byte	0xff
 11114 0881 01       		.byte	0x1
 11115 0882 0C       		.uleb128 .LLSDACSE1646-.LLSDACSB1646
 11116              	.LLSDACSB1646:
 11117 0883 31       		.uleb128 .LEHB300-.LFB1646
 11118 0884 05       		.uleb128 .LEHE300-.LEHB300
 11119 0885 44       		.uleb128 .L571-.LFB1646
 11120 0886 00       		.uleb128 0
 11121 0887 3D       		.uleb128 .LEHB301-.LFB1646
 11122 0888 05       		.uleb128 .LEHE301-.LEHB301
 11123 0889 00       		.uleb128 0
 11124 088a 00       		.uleb128 0
 11125 088b 59       		.uleb128 .LEHB302-.LFB1646
 11126 088c 05       		.uleb128 .LEHE302-.LEHB302
 11127 088d 00       		.uleb128 0
 11128 088e 00       		.uleb128 0
 11129              	.LLSDACSE1646:
 11130              		.section	.text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE
 11132              		.weak	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
 11133              		.set	_ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev,_ZNSt
 11134              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 11135              		.align 2
 11136              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 11138              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector
 11139              	.LFB1650:
  81:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
 11140              		.loc 9 81 0
 11141              		.cfi_startproc
 11142 0000 55       		pushq	%rbp
 11143              		.cfi_def_cfa_offset 16
 11144              		.cfi_offset 6, -16
 11145 0001 4889E5   		movq	%rsp, %rbp
 11146              		.cfi_def_cfa_register 6
 11147 0004 4883EC10 		subq	$16, %rsp
 11148 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11149              	.LBB187:
  81:/usr/include/c++/7/bits/stl_vector.h ****       : public _Tp_alloc_type
 11150              		.loc 9 81 0
 11151 000c 488B45F8 		movq	-8(%rbp), %rax
 11152 0010 4889C7   		movq	%rax, %rdi
 11153 0013 E8000000 		call	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 11153      00
 11154              	.LBE187:
 11155 0018 90       		nop
 11156 0019 C9       		leave
 11157              		.cfi_def_cfa 7, 8
 11158 001a C3       		ret
 11159              		.cfi_endproc
 11160              	.LFE1650:
 11162              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12
 11163              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 11164              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 11165              		.align 2
 11166              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2
 11168              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:
 11169              	.LFB1652:
 161:/usr/include/c++/7/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 11170              		.loc 9 161 0
 11171              		.cfi_startproc
 11172              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 11173              		.cfi_lsda 0x1b,.LLSDA1652
 11174 0000 55       		pushq	%rbp
 11175              		.cfi_def_cfa_offset 16
 11176              		.cfi_offset 6, -16
 11177 0001 4889E5   		movq	%rsp, %rbp
 11178              		.cfi_def_cfa_register 6
 11179 0004 53       		pushq	%rbx
 11180 0005 4883EC18 		subq	$24, %rsp
 11181              		.cfi_offset 3, -24
 11182 0009 48897DE8 		movq	%rdi, -24(%rbp)
 11183              	.LBB188:
 162:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 11184              		.loc 9 162 0
 11185 000d 488B45E8 		movq	-24(%rbp), %rax
 11186 0011 488B4010 		movq	16(%rax), %rax
 163:/usr/include/c++/7/bits/stl_vector.h **** 
 11187              		.loc 9 163 0
 11188 0015 4889C2   		movq	%rax, %rdx
 11189 0018 488B45E8 		movq	-24(%rbp), %rax
 11190 001c 488B00   		movq	(%rax), %rax
 11191 001f 4829C2   		subq	%rax, %rdx
 11192 0022 4889D0   		movq	%rdx, %rax
 11193 0025 48C1F803 		sarq	$3, %rax
 11194 0029 4889C2   		movq	%rax, %rdx
 11195 002c 48B8CDCC 		movabsq	$-3689348814741910323, %rax
 11195      CCCCCCCC 
 11195      CCCC
 11196 0036 480FAFC2 		imulq	%rdx, %rax
 162:/usr/include/c++/7/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 11197              		.loc 9 162 0
 11198 003a 4889C2   		movq	%rax, %rdx
 11199 003d 488B45E8 		movq	-24(%rbp), %rax
 11200 0041 488B08   		movq	(%rax), %rcx
 11201 0044 488B45E8 		movq	-24(%rbp), %rax
 11202 0048 4889CE   		movq	%rcx, %rsi
 11203 004b 4889C7   		movq	%rax, %rdi
 11204              	.LEHB303:
 11205 004e E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_
 11205      00
 11206              	.LEHE303:
 163:/usr/include/c++/7/bits/stl_vector.h **** 
 11207              		.loc 9 163 0
 11208 0053 488B45E8 		movq	-24(%rbp), %rax
 11209 0057 4889C7   		movq	%rax, %rdi
 11210 005a E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 11210      00
 11211              	.LBE188:
 11212 005f EB1A     		jmp	.L577
 11213              	.L576:
 11214 0061 4889C3   		movq	%rax, %rbx
 11215              	.LBB189:
 11216 0064 488B45E8 		movq	-24(%rbp), %rax
 11217 0068 4889C7   		movq	%rax, %rdi
 11218 006b E8000000 		call	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_
 11218      00
 11219 0070 4889D8   		movq	%rbx, %rax
 11220 0073 4889C7   		movq	%rax, %rdi
 11221              	.LEHB304:
 11222 0076 E8000000 		call	_Unwind_Resume@PLT
 11222      00
 11223              	.LEHE304:
 11224              	.L577:
 11225              	.LBE189:
 11226 007b 4883C418 		addq	$24, %rsp
 11227 007f 5B       		popq	%rbx
 11228 0080 5D       		popq	%rbp
 11229              		.cfi_def_cfa 7, 8
 11230 0081 C3       		ret
 11231              		.cfi_endproc
 11232              	.LFE1652:
 11233              		.section	.gcc_except_table
 11234              	.LLSDA1652:
 11235 088f FF       		.byte	0xff
 11236 0890 FF       		.byte	0xff
 11237 0891 01       		.byte	0x1
 11238 0892 08       		.uleb128 .LLSDACSE1652-.LLSDACSB1652
 11239              	.LLSDACSB1652:
 11240 0893 4E       		.uleb128 .LEHB303-.LFB1652
 11241 0894 05       		.uleb128 .LEHE303-.LEHB303
 11242 0895 61       		.uleb128 .L576-.LFB1652
 11243 0896 00       		.uleb128 0
 11244 0897 76       		.uleb128 .LEHB304-.LFB1652
 11245 0898 05       		.uleb128 .LEHE304-.LEHB304
 11246 0899 00       		.uleb128 0
 11247 089a 00       		.uleb128 0
 11248              	.LLSDACSE1652:
 11249              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 11251              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1
 11252              		.set	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1E
 11253              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 11254              		.align 2
 11255              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19
 11257              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_
 11258              	.LFB1654:
 115:/usr/include/c++/7/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 11259              		.loc 9 115 0
 11260              		.cfi_startproc
 11261 0000 55       		pushq	%rbp
 11262              		.cfi_def_cfa_offset 16
 11263              		.cfi_offset 6, -16
 11264 0001 4889E5   		movq	%rsp, %rbp
 11265              		.cfi_def_cfa_register 6
 11266 0004 48897DF8 		movq	%rdi, -8(%rbp)
 116:/usr/include/c++/7/bits/stl_vector.h **** 
 11267              		.loc 9 116 0
 11268 0008 488B45F8 		movq	-8(%rbp), %rax
 11269 000c 5D       		popq	%rbp
 11270              		.cfi_def_cfa 7, 8
 11271 000d C3       		ret
 11272              		.cfi_endproc
 11273              	.LFE1654:
 11275              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT
 11276              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT
 11278              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:
 11279              	.LFB1655:
 203:/usr/include/c++/7/bits/stl_construct.h **** 	     allocator<_Tp>&)
 11280              		.loc 10 203 0
 11281              		.cfi_startproc
 11282 0000 55       		pushq	%rbp
 11283              		.cfi_def_cfa_offset 16
 11284              		.cfi_offset 6, -16
 11285 0001 4889E5   		movq	%rsp, %rbp
 11286              		.cfi_def_cfa_register 6
 11287 0004 4883EC20 		subq	$32, %rsp
 11288 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11289 000c 488975F0 		movq	%rsi, -16(%rbp)
 11290 0010 488955E8 		movq	%rdx, -24(%rbp)
 206:/usr/include/c++/7/bits/stl_construct.h ****     }
 11291              		.loc 10 206 0
 11292 0014 488B55F0 		movq	-16(%rbp), %rdx
 11293 0018 488B45F8 		movq	-8(%rbp), %rax
 11294 001c 4889D6   		movq	%rdx, %rsi
 11295 001f 4889C7   		movq	%rax, %rdi
 11296 0022 E8000000 		call	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 11296      00
 11297              		.loc 10 207 0
 11298 0027 90       		nop
 11299 0028 C9       		leave
 11300              		.cfi_def_cfa 7, 8
 11301 0029 C3       		ret
 11302              		.cfi_endproc
 11303              	.LFE1655:
 11305              		.section	.text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev,"axG",@pr
 11306              		.align 2
 11307              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
 11309              	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 11310              	.LFB1657:
 11311              		.loc 11 139 0
 11312              		.cfi_startproc
 11313 0000 55       		pushq	%rbp
 11314              		.cfi_def_cfa_offset 16
 11315              		.cfi_offset 6, -16
 11316 0001 4889E5   		movq	%rsp, %rbp
 11317              		.cfi_def_cfa_register 6
 11318 0004 4883EC10 		subq	$16, %rsp
 11319 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11320              	.LBB190:
 11321              		.loc 11 139 0
 11322 000c 488B45F8 		movq	-8(%rbp), %rax
 11323 0010 4889C7   		movq	%rax, %rdi
 11324 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 11324      00
 11325              	.LBE190:
 11326 0018 90       		nop
 11327 0019 C9       		leave
 11328              		.cfi_def_cfa 7, 8
 11329 001a C3       		ret
 11330              		.cfi_endproc
 11331              	.LFE1657:
 11333              		.weak	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
 11334              		.set	_ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev,_ZNSaISt4pairIiNSt7
 11335              		.section	.text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES
 11336              		.align 2
 11337              		.weak	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13
 11339              	_ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deal
 11340              	.LFB1659:
 176:/usr/include/c++/7/bits/stl_vector.h ****       {
 11341              		.loc 9 176 0
 11342              		.cfi_startproc
 11343 0000 55       		pushq	%rbp
 11344              		.cfi_def_cfa_offset 16
 11345              		.cfi_offset 6, -16
 11346 0001 4889E5   		movq	%rsp, %rbp
 11347              		.cfi_def_cfa_register 6
 11348 0004 4883EC20 		subq	$32, %rsp
 11349 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11350 000c 488975F0 		movq	%rsi, -16(%rbp)
 11351 0010 488955E8 		movq	%rdx, -24(%rbp)
 179:/usr/include/c++/7/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 11352              		.loc 9 179 0
 11353 0014 48837DF0 		cmpq	$0, -16(%rbp)
 11353      00
 11354 0019 7417     		je	.L584
 180:/usr/include/c++/7/bits/stl_vector.h ****       }
 11355              		.loc 9 180 0
 11356 001b 488B45F8 		movq	-8(%rbp), %rax
 11357 001f 488B55E8 		movq	-24(%rbp), %rdx
 11358 0023 488B4DF0 		movq	-16(%rbp), %rcx
 11359 0027 4889CE   		movq	%rcx, %rsi
 11360 002a 4889C7   		movq	%rax, %rdi
 11361 002d E8000000 		call	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 11361      00
 11362              	.L584:
 181:/usr/include/c++/7/bits/stl_vector.h **** 
 11363              		.loc 9 181 0
 11364 0032 90       		nop
 11365 0033 C9       		leave
 11366              		.cfi_def_cfa 7, 8
 11367 0034 C3       		ret
 11368              		.cfi_endproc
 11369              	.LFE1659:
 11371              		.section	.text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9
 11372              		.weak	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
 11374              	_ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:
 11375              	.LFB1660:
 127:/usr/include/c++/7/bits/stl_construct.h ****     {
 11376              		.loc 10 127 0
 11377              		.cfi_startproc
 11378 0000 55       		pushq	%rbp
 11379              		.cfi_def_cfa_offset 16
 11380              		.cfi_offset 6, -16
 11381 0001 4889E5   		movq	%rsp, %rbp
 11382              		.cfi_def_cfa_register 6
 11383 0004 4883EC10 		subq	$16, %rsp
 11384 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11385 000c 488975F0 		movq	%rsi, -16(%rbp)
 137:/usr/include/c++/7/bits/stl_construct.h ****     }
 11386              		.loc 10 137 0
 11387 0010 488B55F0 		movq	-16(%rbp), %rdx
 11388 0014 488B45F8 		movq	-8(%rbp), %rax
 11389 0018 4889D6   		movq	%rdx, %rsi
 11390 001b 4889C7   		movq	%rax, %rdi
 11391 001e E8000000 		call	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 11391      00
 138:/usr/include/c++/7/bits/stl_construct.h **** 
 11392              		.loc 10 138 0
 11393 0023 90       		nop
 11394 0024 C9       		leave
 11395              		.cfi_def_cfa 7, 8
 11396 0025 C3       		ret
 11397              		.cfi_endproc
 11398              	.LFE1660:
 11400              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 11401              		.align 2
 11402              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 11404              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
 11405              	.LFB1662:
  86:/usr/include/c++/7/ext/new_allocator.h **** 
 11406              		.loc 12 86 0
 11407              		.cfi_startproc
 11408 0000 55       		pushq	%rbp
 11409              		.cfi_def_cfa_offset 16
 11410              		.cfi_offset 6, -16
 11411 0001 4889E5   		movq	%rsp, %rbp
 11412              		.cfi_def_cfa_register 6
 11413 0004 48897DF8 		movq	%rdi, -8(%rbp)
  86:/usr/include/c++/7/ext/new_allocator.h **** 
 11414              		.loc 12 86 0
 11415 0008 90       		nop
 11416 0009 5D       		popq	%rbp
 11417              		.cfi_def_cfa 7, 8
 11418 000a C3       		ret
 11419              		.cfi_endproc
 11420              	.LFE1662:
 11422              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 11423              		.set	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED
 11424              		.section	.text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_trait
 11425              		.weak	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 11427              	_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10
 11428              	.LFB1664:
 132:/usr/include/c++/7/ext/alloc_traits.h ****     { __a.deallocate(__p, __n); }
 11429              		.loc 13 132 0
 11430              		.cfi_startproc
 11431 0000 55       		pushq	%rbp
 11432              		.cfi_def_cfa_offset 16
 11433              		.cfi_offset 6, -16
 11434 0001 4889E5   		movq	%rsp, %rbp
 11435              		.cfi_def_cfa_register 6
 11436 0004 4883EC20 		subq	$32, %rsp
 11437 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11438 000c 488975F0 		movq	%rsi, -16(%rbp)
 11439 0010 488955E8 		movq	%rdx, -24(%rbp)
 11440              		.loc 13 133 0
 11441 0014 488B55E8 		movq	-24(%rbp), %rdx
 11442 0018 488B4DF0 		movq	-16(%rbp), %rcx
 11443 001c 488B45F8 		movq	-8(%rbp), %rax
 11444 0020 4889CE   		movq	%rcx, %rsi
 11445 0023 4889C7   		movq	%rax, %rdi
 11446 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE1
 11446      00
 11447 002b 90       		nop
 11448 002c C9       		leave
 11449              		.cfi_def_cfa 7, 8
 11450 002d C3       		ret
 11451              		.cfi_endproc
 11452              	.LFE1664:
 11454              		.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_t
 11455              		.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcES
 11457              	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 11458              	.LFB1665:
 105:/usr/include/c++/7/bits/stl_construct.h **** 	{
 11459              		.loc 10 105 0
 11460              		.cfi_startproc
 11461 0000 55       		pushq	%rbp
 11462              		.cfi_def_cfa_offset 16
 11463              		.cfi_offset 6, -16
 11464 0001 4889E5   		movq	%rsp, %rbp
 11465              		.cfi_def_cfa_register 6
 11466 0004 4883EC10 		subq	$16, %rsp
 11467 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11468 000c 488975F0 		movq	%rsi, -16(%rbp)
 11469              	.L590:
 107:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 11470              		.loc 10 107 0 discriminator 2
 11471 0010 488B45F8 		movq	-8(%rbp), %rax
 11472 0014 483B45F0 		cmpq	-16(%rbp), %rax
 11473 0018 741B     		je	.L591
 108:/usr/include/c++/7/bits/stl_construct.h **** 	}
 11474              		.loc 10 108 0 discriminator 1
 11475 001a 488B45F8 		movq	-8(%rbp), %rax
 11476 001e 4889C7   		movq	%rax, %rdi
 11477 0021 E8000000 		call	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 11477      00
 11478 0026 4889C7   		movq	%rax, %rdi
 11479 0029 E8000000 		call	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 11479      00
 107:/usr/include/c++/7/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 11480              		.loc 10 107 0 discriminator 1
 11481 002e 488345F8 		addq	$40, -8(%rbp)
 11481      28
 11482 0033 EBDB     		jmp	.L590
 11483              	.L591:
 109:/usr/include/c++/7/bits/stl_construct.h ****     };
 11484              		.loc 10 109 0
 11485 0035 90       		nop
 11486 0036 C9       		leave
 11487              		.cfi_def_cfa 7, 8
 11488 0037 C3       		ret
 11489              		.cfi_endproc
 11490              	.LFE1665:
 11492              		.section	.text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 11493              		.align 2
 11494              		.weak	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
 11496              	_ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deall
 11497              	.LFB1666:
 116:/usr/include/c++/7/ext/new_allocator.h ****       {
 11498              		.loc 12 116 0
 11499              		.cfi_startproc
 11500 0000 55       		pushq	%rbp
 11501              		.cfi_def_cfa_offset 16
 11502              		.cfi_offset 6, -16
 11503 0001 4889E5   		movq	%rsp, %rbp
 11504              		.cfi_def_cfa_register 6
 11505 0004 4883EC20 		subq	$32, %rsp
 11506 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11507 000c 488975F0 		movq	%rsi, -16(%rbp)
 11508 0010 488955E8 		movq	%rdx, -24(%rbp)
 125:/usr/include/c++/7/ext/new_allocator.h ****       }
 11509              		.loc 12 125 0
 11510 0014 488B45F0 		movq	-16(%rbp), %rax
 11511 0018 4889C7   		movq	%rax, %rdi
 11512 001b E8000000 		call	_ZdlPv@PLT
 11512      00
 11513              		.loc 12 126 0
 11514 0020 90       		nop
 11515 0021 C9       		leave
 11516              		.cfi_def_cfa 7, 8
 11517 0022 C3       		ret
 11518              		.cfi_endproc
 11519              	.LFE1666:
 11521              		.section	.text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT
 11522              		.weak	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
 11524              	_ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:
 11525              	.LFB1667:
  47:/usr/include/c++/7/bits/move.h ****     { return __builtin_addressof(__r); }
 11526              		.loc 14 47 0
 11527              		.cfi_startproc
 11528 0000 55       		pushq	%rbp
 11529              		.cfi_def_cfa_offset 16
 11530              		.cfi_offset 6, -16
 11531 0001 4889E5   		movq	%rsp, %rbp
 11532              		.cfi_def_cfa_register 6
 11533 0004 48897DF8 		movq	%rdi, -8(%rbp)
 11534              		.loc 14 48 0
 11535 0008 488B45F8 		movq	-8(%rbp), %rax
 11536 000c 5D       		popq	%rbp
 11537              		.cfi_def_cfa 7, 8
 11538 000d C3       		ret
 11539              		.cfi_endproc
 11540              	.LFE1667:
 11542              		.section	.text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev,"axG",@progbi
 11543              		.align 2
 11544              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
 11546              	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
 11547              	.LFB1670:
 11548              		.file 16 "/usr/include/c++/7/bits/stl_pair.h"
   1:/usr/include/c++/7/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/c++/7/bits/stl_pair.h **** 
   3:/usr/include/c++/7/bits/stl_pair.h **** // Copyright (C) 2001-2017 Free Software Foundation, Inc.
   4:/usr/include/c++/7/bits/stl_pair.h **** //
   5:/usr/include/c++/7/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/7/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/7/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/7/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/7/bits/stl_pair.h **** // any later version.
  10:/usr/include/c++/7/bits/stl_pair.h **** 
  11:/usr/include/c++/7/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/7/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/7/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/7/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/c++/7/bits/stl_pair.h **** 
  16:/usr/include/c++/7/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/7/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/7/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/7/bits/stl_pair.h **** 
  20:/usr/include/c++/7/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/7/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/7/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/7/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/7/bits/stl_pair.h **** 
  25:/usr/include/c++/7/bits/stl_pair.h **** /*
  26:/usr/include/c++/7/bits/stl_pair.h ****  *
  27:/usr/include/c++/7/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/c++/7/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/7/bits/stl_pair.h ****  *
  30:/usr/include/c++/7/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/7/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/7/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/7/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/7/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/7/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/7/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/7/bits/stl_pair.h ****  *
  38:/usr/include/c++/7/bits/stl_pair.h ****  *
  39:/usr/include/c++/7/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/7/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/7/bits/stl_pair.h ****  *
  42:/usr/include/c++/7/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/7/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/7/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/7/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/7/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/7/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/7/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/7/bits/stl_pair.h ****  */
  50:/usr/include/c++/7/bits/stl_pair.h **** 
  51:/usr/include/c++/7/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/c++/7/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/7/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/c++/7/bits/stl_pair.h ****  */
  55:/usr/include/c++/7/bits/stl_pair.h **** 
  56:/usr/include/c++/7/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/c++/7/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/c++/7/bits/stl_pair.h **** 
  59:/usr/include/c++/7/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/c++/7/bits/stl_pair.h **** 
  61:/usr/include/c++/7/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/c++/7/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/c++/7/bits/stl_pair.h **** #endif
  64:/usr/include/c++/7/bits/stl_pair.h **** 
  65:/usr/include/c++/7/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/c++/7/bits/stl_pair.h **** {
  67:/usr/include/c++/7/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/c++/7/bits/stl_pair.h **** 
  69:/usr/include/c++/7/bits/stl_pair.h ****   /**
  70:/usr/include/c++/7/bits/stl_pair.h ****    *  @addtogroup utilities
  71:/usr/include/c++/7/bits/stl_pair.h ****    *  @{
  72:/usr/include/c++/7/bits/stl_pair.h ****    */
  73:/usr/include/c++/7/bits/stl_pair.h **** 
  74:/usr/include/c++/7/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/c++/7/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/c++/7/bits/stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  77:/usr/include/c++/7/bits/stl_pair.h **** 
  78:/usr/include/c++/7/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/c++/7/bits/stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  80:/usr/include/c++/7/bits/stl_pair.h ****     piecewise_construct_t();
  81:/usr/include/c++/7/bits/stl_pair.h **** 
  82:/usr/include/c++/7/bits/stl_pair.h ****   // Forward declarations.
  83:/usr/include/c++/7/bits/stl_pair.h ****   template<typename...>
  84:/usr/include/c++/7/bits/stl_pair.h ****     class tuple;
  85:/usr/include/c++/7/bits/stl_pair.h **** 
  86:/usr/include/c++/7/bits/stl_pair.h ****   template<std::size_t...>
  87:/usr/include/c++/7/bits/stl_pair.h ****     struct _Index_tuple;
  88:/usr/include/c++/7/bits/stl_pair.h **** 
  89:/usr/include/c++/7/bits/stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  90:/usr/include/c++/7/bits/stl_pair.h ****   // constructors.
  91:/usr/include/c++/7/bits/stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  92:/usr/include/c++/7/bits/stl_pair.h ****   // is_convertible if the types are the same to
  93:/usr/include/c++/7/bits/stl_pair.h ****   // avoid querying those properties for incomplete types.
  94:/usr/include/c++/7/bits/stl_pair.h ****   template <bool, typename _T1, typename _T2>
  95:/usr/include/c++/7/bits/stl_pair.h ****     struct _PCC
  96:/usr/include/c++/7/bits/stl_pair.h ****     {
  97:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
  98:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
  99:/usr/include/c++/7/bits/stl_pair.h ****       {
 100:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 101:/usr/include/c++/7/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 102:/usr/include/c++/7/bits/stl_pair.h ****       }
 103:/usr/include/c++/7/bits/stl_pair.h **** 
 104:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 105:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 106:/usr/include/c++/7/bits/stl_pair.h ****       {
 107:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 108:/usr/include/c++/7/bits/stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 109:/usr/include/c++/7/bits/stl_pair.h ****       }
 110:/usr/include/c++/7/bits/stl_pair.h **** 
 111:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 112:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 113:/usr/include/c++/7/bits/stl_pair.h ****       {
 114:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 115:/usr/include/c++/7/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 116:/usr/include/c++/7/bits/stl_pair.h ****       }
 117:/usr/include/c++/7/bits/stl_pair.h **** 
 118:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 119:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 120:/usr/include/c++/7/bits/stl_pair.h ****       {
 121:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 122:/usr/include/c++/7/bits/stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 123:/usr/include/c++/7/bits/stl_pair.h ****       }
 124:/usr/include/c++/7/bits/stl_pair.h **** 
 125:/usr/include/c++/7/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 126:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _CopyMovePair()
 127:/usr/include/c++/7/bits/stl_pair.h ****       {
 128:/usr/include/c++/7/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 129:/usr/include/c++/7/bits/stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 130:/usr/include/c++/7/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 131:/usr/include/c++/7/bits/stl_pair.h **** 				       __do_converts,
 132:/usr/include/c++/7/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 133:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 134:/usr/include/c++/7/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 135:/usr/include/c++/7/bits/stl_pair.h **** 		      __converts
 136:/usr/include/c++/7/bits/stl_pair.h **** 		      >::value;
 137:/usr/include/c++/7/bits/stl_pair.h ****       }
 138:/usr/include/c++/7/bits/stl_pair.h **** 
 139:/usr/include/c++/7/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 140:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _MoveCopyPair()
 141:/usr/include/c++/7/bits/stl_pair.h ****       {
 142:/usr/include/c++/7/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 143:/usr/include/c++/7/bits/stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 144:/usr/include/c++/7/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 145:/usr/include/c++/7/bits/stl_pair.h **** 				       __do_converts,
 146:/usr/include/c++/7/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 147:/usr/include/c++/7/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 148:/usr/include/c++/7/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 149:/usr/include/c++/7/bits/stl_pair.h **** 		      __converts
 150:/usr/include/c++/7/bits/stl_pair.h **** 		      >::value;
 151:/usr/include/c++/7/bits/stl_pair.h ****       }
 152:/usr/include/c++/7/bits/stl_pair.h ****   };
 153:/usr/include/c++/7/bits/stl_pair.h **** 
 154:/usr/include/c++/7/bits/stl_pair.h ****   template <typename _T1, typename _T2>
 155:/usr/include/c++/7/bits/stl_pair.h ****     struct _PCC<false, _T1, _T2>
 156:/usr/include/c++/7/bits/stl_pair.h ****     {
 157:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 158:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 159:/usr/include/c++/7/bits/stl_pair.h ****       {
 160:/usr/include/c++/7/bits/stl_pair.h **** 	return false;
 161:/usr/include/c++/7/bits/stl_pair.h ****       }
 162:/usr/include/c++/7/bits/stl_pair.h **** 
 163:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 164:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 165:/usr/include/c++/7/bits/stl_pair.h ****       {
 166:/usr/include/c++/7/bits/stl_pair.h **** 	return false;
 167:/usr/include/c++/7/bits/stl_pair.h ****       }
 168:/usr/include/c++/7/bits/stl_pair.h **** 
 169:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 170:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 171:/usr/include/c++/7/bits/stl_pair.h ****       {
 172:/usr/include/c++/7/bits/stl_pair.h **** 	return false;
 173:/usr/include/c++/7/bits/stl_pair.h ****       }
 174:/usr/include/c++/7/bits/stl_pair.h **** 
 175:/usr/include/c++/7/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 176:/usr/include/c++/7/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 177:/usr/include/c++/7/bits/stl_pair.h ****       {
 178:/usr/include/c++/7/bits/stl_pair.h **** 	return false;
 179:/usr/include/c++/7/bits/stl_pair.h ****       }
 180:/usr/include/c++/7/bits/stl_pair.h ****   };
 181:/usr/include/c++/7/bits/stl_pair.h **** 
 182:/usr/include/c++/7/bits/stl_pair.h ****   // PR libstdc++/79141, a utility type for preventing
 183:/usr/include/c++/7/bits/stl_pair.h ****   // initialization of an argument of a disabled assignment
 184:/usr/include/c++/7/bits/stl_pair.h ****   // operator from a pair of empty braces.
 185:/usr/include/c++/7/bits/stl_pair.h ****   struct __nonesuch_no_braces : std::__nonesuch {
 186:/usr/include/c++/7/bits/stl_pair.h ****     explicit __nonesuch_no_braces(const __nonesuch&) = delete;
 187:/usr/include/c++/7/bits/stl_pair.h ****   };
 188:/usr/include/c++/7/bits/stl_pair.h **** 
 189:/usr/include/c++/7/bits/stl_pair.h **** #endif
 190:/usr/include/c++/7/bits/stl_pair.h **** 
 191:/usr/include/c++/7/bits/stl_pair.h ****  /**
 192:/usr/include/c++/7/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 193:/usr/include/c++/7/bits/stl_pair.h ****    *
 194:/usr/include/c++/7/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
 195:/usr/include/c++/7/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
 196:/usr/include/c++/7/bits/stl_pair.h ****    */
 197:/usr/include/c++/7/bits/stl_pair.h ****   template<typename _T1, typename _T2>
 198:/usr/include/c++/7/bits/stl_pair.h ****     struct pair
 11549              		.loc 16 198 0
 11550              		.cfi_startproc
 11551 0000 55       		pushq	%rbp
 11552              		.cfi_def_cfa_offset 16
 11553              		.cfi_offset 6, -16
 11554 0001 4889E5   		movq	%rsp, %rbp
 11555              		.cfi_def_cfa_register 6
 11556 0004 4883EC10 		subq	$16, %rsp
 11557 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11558              	.LBB191:
 11559              		.loc 16 198 0
 11560 000c 488B45F8 		movq	-8(%rbp), %rax
 11561 0010 4883C008 		addq	$8, %rax
 11562 0014 4889C7   		movq	%rax, %rdi
 11563 0017 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
 11563      00
 11564              	.LBE191:
 11565 001c 90       		nop
 11566 001d C9       		leave
 11567              		.cfi_def_cfa 7, 8
 11568 001e C3       		ret
 11569              		.cfi_endproc
 11570              	.LFE1670:
 11572              		.weak	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 11573              		.set	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev,_ZNSt4pairIiNSt7__cxx11
 11574              		.section	.text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_,"
 11575              		.weak	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
 11577              	_ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:
 11578              	.LFB1668:
  97:/usr/include/c++/7/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 11579              		.loc 10 97 0
 11580              		.cfi_startproc
 11581 0000 55       		pushq	%rbp
 11582              		.cfi_def_cfa_offset 16
 11583              		.cfi_offset 6, -16
 11584 0001 4889E5   		movq	%rsp, %rbp
 11585              		.cfi_def_cfa_register 6
 11586 0004 4883EC10 		subq	$16, %rsp
 11587 0008 48897DF8 		movq	%rdi, -8(%rbp)
  98:/usr/include/c++/7/bits/stl_construct.h **** 
 11588              		.loc 10 98 0
 11589 000c 488B45F8 		movq	-8(%rbp), %rax
 11590 0010 4889C7   		movq	%rax, %rdi
 11591 0013 E8000000 		call	_ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
 11591      00
 11592 0018 90       		nop
 11593 0019 C9       		leave
 11594              		.cfi_def_cfa 7, 8
 11595 001a C3       		ret
 11596              		.cfi_endproc
 11597              	.LFE1668:
 11599              		.text
 11601              	_GLOBAL__sub_I_TestXmlTestReporter.cpp:
 11602              	.LFB1672:
 11603              		.loc 3 183 0
 11604              		.cfi_startproc
 11605 494c 55       		pushq	%rbp
 11606              		.cfi_def_cfa_offset 16
 11607              		.cfi_offset 6, -16
 11608 494d 4889E5   		movq	%rsp, %rbp
 11609              		.cfi_def_cfa_register 6
 11610              		.loc 3 183 0
 11611 4950 BEFFFF00 		movl	$65535, %esi
 11611      00
 11612 4955 BF010000 		movl	$1, %edi
 11612      00
 11613 495a E8BDFDFF 		call	_Z41__static_initialization_and_destruction_0ii
 11613      FF
 11614 495f 5D       		popq	%rbp
 11615              		.cfi_def_cfa 7, 8
 11616 4960 C3       		ret
 11617              		.cfi_endproc
 11618              	.LFE1672:
 11620              		.section	.init_array,"aw"
 11621              		.align 8
 11622 0000 00000000 		.quad	_GLOBAL__sub_I_TestXmlTestReporter.cpp
 11622      00000000 
 11623              		.section	.rodata
 11624 0c4a 0000     		.align 4
 11625              	.LC10:
 11626 0c4c CDCCCC3D 		.long	1036831949
 11627              		.align 4
 11628              	.LC16:
 11629 0c50 0000803F 		.long	1065353216
 11630              		.align 4
 11631              	.LC38:
 11632 0c54 CDCC8C3F 		.long	1066192077
 11633              		.text
 11634              	.Letext0:
 11635              		.file 17 "../TestDetails.h"
 11636              		.file 18 "../TestList.h"
 11637              		.file 19 "../TestResults.h"
 11638              		.file 20 "../PosixUtils/SignalTranslator.h"
 11639              		.file 21 "/usr/include/x86_64-linux-gnu/c++/7/bits/c++config.h"
 11640              		.file 22 "/usr/include/c++/7/bits/basic_string.tcc"
 11641              		.file 23 "/usr/include/c++/7/bits/stringfwd.h"
 11642              		.file 24 "/usr/include/c++/7/cwchar"
 11643              		.file 25 "/usr/include/c++/7/bits/char_traits.h"
 11644              		.file 26 "/usr/include/c++/7/clocale"
 11645              		.file 27 "/usr/include/c++/7/cwctype"
 11646              		.file 28 "/usr/include/c++/7/bits/vector.tcc"
 11647              		.file 29 "/usr/include/c++/7/iosfwd"
 11648              		.file 30 "/usr/include/c++/7/bits/stl_iterator_base_types.h"
 11649              		.file 31 "/usr/include/c++/7/debug/debug.h"
 11650              		.file 32 "/usr/include/c++/7/bits/predefined_ops.h"
 11651              		.file 33 "/usr/include/c++/7/ext/numeric_traits.h"
 11652              		.file 34 "/usr/include/c++/7/bits/stl_iterator.h"
 11653              		.file 35 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 11654              		.file 36 "<built-in>"
 11655              		.file 37 "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h"
 11656              		.file 38 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h"
 11657              		.file 39 "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h"
 11658              		.file 40 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h"
 11659              		.file 41 "/usr/include/wchar.h"
 11660              		.file 42 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h"
 11661              		.file 43 "/usr/include/locale.h"
 11662              		.file 44 "/usr/include/x86_64-linux-gnu/bits/types.h"
 11663              		.file 45 "/usr/include/time.h"
 11664              		.file 46 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 11665              		.file 47 "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h"
 11666              		.file 48 "/usr/include/wctype.h"
 11667              		.file 49 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 11668              		.file 50 "/usr/include/setjmp.h"
 11669              		.file 51 "/usr/include/x86_64-linux-gnu/bits/types/sigval_t.h"
 11670              		.file 52 "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h"
 11671              		.file 53 "/usr/include/signal.h"
 11672              		.file 54 "/usr/include/x86_64-linux-gnu/bits/sigaction.h"
 11673              		.file 55 "/usr/include/x86_64-linux-gnu/sys/time.h"
 11674              		.file 56 "/usr/include/c++/7/new"
 31868              		.align 8
 31871              	DW.ref._ZTIN8UnitTest15AssertExceptionE:
 31872 0000 00000000 		.quad	_ZTIN8UnitTest15AssertExceptionE
 31872      00000000 
 31873              		.hidden	DW.ref._ZTISt9exception
 31874              		.weak	DW.ref._ZTISt9exception
 31875              		.section	.data.DW.ref._ZTISt9exception,"awG",@progbits,DW.ref._ZTISt9exception,comdat
 31876              		.align 8
 31879              	DW.ref._ZTISt9exception:
 31880 0000 00000000 		.quad	_ZTISt9exception
 31880      00000000 
 31881              		.hidden	DW.ref.__gxx_personality_v0
 31882              		.weak	DW.ref.__gxx_personality_v0
 31883              		.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
 31884              		.align 8
 31887              	DW.ref.__gxx_personality_v0:
 31888 0000 00000000 		.quad	__gxx_personality_v0
 31888      00000000 
 31889              		.hidden	__dso_handle
 31890              		.ident	"GCC: (Ubuntu 7.2.0-8ubuntu3.2) 7.2.0"
 31891              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 TestXmlTestReporter.cpp
     /tmp/cc6GIqRW.s:10     .text._ZN13UnitTestSuite12GetSuiteNameEv:0000000000000000 _ZN13UnitTestSuite12GetSuiteNameEv
     /tmp/cc6GIqRW.s:33     .text._ZN8UnitTest15MemoryOutStreamC1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamC1Ev
     /tmp/cc6GIqRW.s:31887  .data.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc6GIqRW.s:9653   .data.rel.ro.local._ZTTN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTTN8UnitTest15MemoryOutStreamE
     /tmp/cc6GIqRW.s:9637   .data.rel.ro.local._ZTVN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTVN8UnitTest15MemoryOutStreamE
     /tmp/cc6GIqRW.s:144    .text:0000000000000000 _ZN12_GLOBAL__N_122XmlTestReporterFixtureC2Ev
     /tmp/cc6GIqRW.s:225    .text:000000000000005c _ZN12_GLOBAL__N_122XmlTestReporterFixtureD2Ev
     /tmp/cc6GIqRW.s:10305  .text._ZN8UnitTest15XmlTestReporterD2Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD1Ev
     /tmp/cc6GIqRW.s:301    .text:00000000000000aa _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:301    .text:00000000000000aa _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:338    .text:00000000000000d8 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC2Ev
     /tmp/cc6GIqRW.s:9530   .data.rel.ro.local:0000000000000118 _ZTVN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/cc6GIqRW.s:338    .text:00000000000000d8 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedC1Ev
     /tmp/cc6GIqRW.s:376    .bss:0000000000000000 _ZN12_GLOBAL__N_162testXmlTestReporterFixtureMultipleCharactersAreEscapedInstanceE
     /tmp/cc6GIqRW.s:376    .bss:0000000000000038 _ZN12_GLOBAL__N_155adderXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/cc6GIqRW.s:381    .text:0000000000000124 _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD2Ev
     /tmp/cc6GIqRW.s:381    .text:0000000000000124 _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperD1Ev
     /tmp/cc6GIqRW.s:418    .text:0000000000000140 _ZNK12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscaped7RunImplEv
     /tmp/cc6GIqRW.s:5765   .text:0000000000002d43 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc6GIqRW.s:9698   .text._ZN8UnitTest15MemoryOutStreamD1Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD1Ev
     /tmp/cc6GIqRW.s:31879  .data.DW.ref._ZTISt9exception:0000000000000000 DW.ref._ZTISt9exception
     /tmp/cc6GIqRW.s:31871  .data.DW.ref._ZTIN8UnitTest15AssertExceptionE:0000000000000000 DW.ref._ZTIN8UnitTest15AssertExceptionE
     /tmp/cc6GIqRW.s:777    .text:000000000000044e _ZN12_GLOBAL__N_156XmlTestReporterFixtureMultipleCharactersAreEscapedHelper7RunImplEv
     /tmp/cc6GIqRW.s:6125   .text._ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE:0000000000000000 _ZN8UnitTest10CheckEqualIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRNS_11TestResultsERKT_RKT0_RKNS_11TestDetailsE
     /tmp/cc6GIqRW.s:985    .text:0000000000000624 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:985    .text:0000000000000624 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:1021   .text:0000000000000652 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC2Ev
     /tmp/cc6GIqRW.s:9424   .data.rel.ro.local:00000000000000f0 _ZTVN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/cc6GIqRW.s:1021   .text:0000000000000652 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledC1Ev
     /tmp/cc6GIqRW.s:1059   .bss:0000000000000040 _ZN12_GLOBAL__N_174testXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledInstanceE
     /tmp/cc6GIqRW.s:1059   .bss:0000000000000078 _ZN12_GLOBAL__N_167adderXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/cc6GIqRW.s:1064   .text:000000000000069e _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD2Ev
     /tmp/cc6GIqRW.s:1064   .text:000000000000069e _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperD1Ev
     /tmp/cc6GIqRW.s:1091   .text:00000000000006ba _ZNK12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalled7RunImplEv
     /tmp/cc6GIqRW.s:6267   .text:000000000000300c _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc6GIqRW.s:1450   .text:00000000000009c8 _ZN12_GLOBAL__N_168XmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledHelper7RunImplEv
     /tmp/cc6GIqRW.s:6621   .text._ZN8UnitTest5CheckIbEEbT_:0000000000000000 _ZN8UnitTest5CheckIbEEbT_
     /tmp/cc6GIqRW.s:1788   .text:0000000000000ca8 _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:1788   .text:0000000000000ca8 _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:1823   .text:0000000000000cd6 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC2Ev
     /tmp/cc6GIqRW.s:9318   .data.rel.ro.local:00000000000000c8 _ZTVN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/cc6GIqRW.s:1823   .text:0000000000000cd6 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatC1Ev
     /tmp/cc6GIqRW.s:1861   .bss:0000000000000080 _ZN12_GLOBAL__N_158testXmlTestReporterFixtureEmptyReportSummaryFormatInstanceE
     /tmp/cc6GIqRW.s:1861   .bss:00000000000000b8 _ZN12_GLOBAL__N_151adderXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/cc6GIqRW.s:1866   .text:0000000000000d22 _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD2Ev
     /tmp/cc6GIqRW.s:1866   .text:0000000000000d22 _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperD1Ev
     /tmp/cc6GIqRW.s:1893   .text:0000000000000d3e _ZNK12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormat7RunImplEv
     /tmp/cc6GIqRW.s:6643   .text:00000000000032d5 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc6GIqRW.s:2241   .text:000000000000104c _ZN12_GLOBAL__N_152XmlTestReporterFixtureEmptyReportSummaryFormatHelper7RunImplEv
     /tmp/cc6GIqRW.s:2418   .text:0000000000001180 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:2418   .text:0000000000001180 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:2454   .text:00000000000011ae _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC2Ev
     /tmp/cc6GIqRW.s:9212   .data.rel.ro.local:00000000000000a0 _ZTVN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/cc6GIqRW.s:2454   .text:00000000000011ae _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatC1Ev
     /tmp/cc6GIqRW.s:2492   .bss:00000000000000c0 _ZN12_GLOBAL__N_173testXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatInstanceE
     /tmp/cc6GIqRW.s:2492   .bss:00000000000000f8 _ZN12_GLOBAL__N_166adderXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/cc6GIqRW.s:2497   .text:00000000000011fa _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD2Ev
     /tmp/cc6GIqRW.s:2497   .text:00000000000011fa _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperD1Ev
     /tmp/cc6GIqRW.s:2524   .text:0000000000001216 _ZNK12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormat7RunImplEv
     /tmp/cc6GIqRW.s:6995   .text:000000000000359e _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc6GIqRW.s:2872   .text:0000000000001524 _ZN12_GLOBAL__N_167XmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatHelper7RunImplEv
     /tmp/cc6GIqRW.s:3064   .text:00000000000016b2 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:3064   .text:00000000000016b2 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:3100   .text:00000000000016e0 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC2Ev
     /tmp/cc6GIqRW.s:9106   .data.rel.ro.local:0000000000000078 _ZTVN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/cc6GIqRW.s:3100   .text:00000000000016e0 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatC1Ev
     /tmp/cc6GIqRW.s:3138   .bss:0000000000000100 _ZN12_GLOBAL__N_169testXmlTestReporterFixtureSingleFailedTestReportSummaryFormatInstanceE
     /tmp/cc6GIqRW.s:3138   .bss:0000000000000138 _ZN12_GLOBAL__N_162adderXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/cc6GIqRW.s:3143   .text:000000000000172c _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD2Ev
     /tmp/cc6GIqRW.s:3143   .text:000000000000172c _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperD1Ev
     /tmp/cc6GIqRW.s:3170   .text:0000000000001748 _ZNK12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormat7RunImplEv
     /tmp/cc6GIqRW.s:7347   .text:0000000000003867 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc6GIqRW.s:3524   .text:0000000000001a56 _ZN12_GLOBAL__N_163XmlTestReporterFixtureSingleFailedTestReportSummaryFormatHelper7RunImplEv
     /tmp/cc6GIqRW.s:3724   .text:0000000000001c08 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:3724   .text:0000000000001c08 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:3759   .text:0000000000001c36 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC2Ev
     /tmp/cc6GIqRW.s:9000   .data.rel.ro.local:0000000000000050 _ZTVN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/cc6GIqRW.s:3759   .text:0000000000001c36 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedC1Ev
     /tmp/cc6GIqRW.s:3797   .bss:0000000000000140 _ZN12_GLOBAL__N_160testXmlTestReporterFixtureFailureMessageIsXMLEscapedInstanceE
     /tmp/cc6GIqRW.s:3797   .bss:0000000000000178 _ZN12_GLOBAL__N_153adderXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/cc6GIqRW.s:3802   .text:0000000000001c82 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD2Ev
     /tmp/cc6GIqRW.s:3802   .text:0000000000001c82 _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperD1Ev
     /tmp/cc6GIqRW.s:3829   .text:0000000000001c9e _ZNK12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscaped7RunImplEv
     /tmp/cc6GIqRW.s:7699   .text:0000000000003b30 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc6GIqRW.s:4179   .text:0000000000001fac _ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplEv
     /tmp/cc6GIqRW.s:4387   .text:0000000000002182 _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:4387   .text:0000000000002182 _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:4422   .text:00000000000021b0 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC2Ev
     /tmp/cc6GIqRW.s:8894   .data.rel.ro.local:0000000000000028 _ZTVN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/cc6GIqRW.s:4422   .text:00000000000021b0 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessC1Ev
     /tmp/cc6GIqRW.s:4460   .bss:0000000000000180 _ZN12_GLOBAL__N_157testXmlTestReporterFixtureOneFailureAndOneSuccessInstanceE
     /tmp/cc6GIqRW.s:4460   .bss:00000000000001b8 _ZN12_GLOBAL__N_150adderXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/cc6GIqRW.s:4465   .text:00000000000021fc _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD2Ev
     /tmp/cc6GIqRW.s:4465   .text:00000000000021fc _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperD1Ev
     /tmp/cc6GIqRW.s:4492   .text:0000000000002218 _ZNK12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccess7RunImplEv
     /tmp/cc6GIqRW.s:8051   .text:0000000000003df9 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc6GIqRW.s:4849   .text:0000000000002526 _ZN12_GLOBAL__N_151XmlTestReporterFixtureOneFailureAndOneSuccessHelper7RunImplEv
     /tmp/cc6GIqRW.s:5080   .text:0000000000002772 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC2ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:5080   .text:0000000000002772 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperC1ERKN8UnitTest11TestDetailsE
     /tmp/cc6GIqRW.s:5115   .text:00000000000027a0 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC2Ev
     /tmp/cc6GIqRW.s:8788   .data.rel.ro.local:0000000000000000 _ZTVN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/cc6GIqRW.s:5115   .text:00000000000027a0 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresC1Ev
     /tmp/cc6GIqRW.s:5153   .bss:00000000000001c0 _ZN12_GLOBAL__N_150testXmlTestReporterFixtureMultipleFailuresInstanceE
     /tmp/cc6GIqRW.s:5153   .bss:00000000000001f8 _ZN12_GLOBAL__N_143adderXmlTestReporterFixtureMultipleFailuresE
     /tmp/cc6GIqRW.s:5158   .text:00000000000027ec _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD2Ev
     /tmp/cc6GIqRW.s:5158   .text:00000000000027ec _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperD1Ev
     /tmp/cc6GIqRW.s:5185   .text:0000000000002808 _ZNK12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailures7RunImplEv
     /tmp/cc6GIqRW.s:8403   .text:00000000000040c2 _ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelperEEEvRT_RKNS_11TestDetailsE
     /tmp/cc6GIqRW.s:5536   .text:0000000000002b16 _ZN12_GLOBAL__N_144XmlTestReporterFixtureMultipleFailuresHelper7RunImplEv
     /tmp/cc6GIqRW.s:8757   .text._ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE:0000000000000000 _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
     /tmp/cc6GIqRW.s:9907   .data.rel.ro:0000000000000000 _ZTIN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/cc6GIqRW.s:8797   .text:000000000000438c _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD1Ev
     /tmp/cc6GIqRW.s:8827   .text:00000000000043b6 _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD0Ev
     /tmp/cc6GIqRW.s:8797   .text:000000000000438c _ZN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresD2Ev
     /tmp/cc6GIqRW.s:9921   .data.rel.ro:0000000000000018 _ZTIN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/cc6GIqRW.s:8903   .text:00000000000043fe _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD1Ev
     /tmp/cc6GIqRW.s:8933   .text:0000000000004428 _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD0Ev
     /tmp/cc6GIqRW.s:8903   .text:00000000000043fe _ZN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessD2Ev
     /tmp/cc6GIqRW.s:9935   .data.rel.ro:0000000000000030 _ZTIN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/cc6GIqRW.s:9009   .text:0000000000004470 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD1Ev
     /tmp/cc6GIqRW.s:9039   .text:000000000000449a _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD0Ev
     /tmp/cc6GIqRW.s:9009   .text:0000000000004470 _ZN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedD2Ev
     /tmp/cc6GIqRW.s:9949   .data.rel.ro:0000000000000048 _ZTIN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/cc6GIqRW.s:9115   .text:00000000000044e2 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD1Ev
     /tmp/cc6GIqRW.s:9145   .text:000000000000450c _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD0Ev
     /tmp/cc6GIqRW.s:9115   .text:00000000000044e2 _ZN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatD2Ev
     /tmp/cc6GIqRW.s:9963   .data.rel.ro:0000000000000060 _ZTIN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/cc6GIqRW.s:9221   .text:0000000000004554 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD1Ev
     /tmp/cc6GIqRW.s:9251   .text:000000000000457e _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD0Ev
     /tmp/cc6GIqRW.s:9221   .text:0000000000004554 _ZN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatD2Ev
     /tmp/cc6GIqRW.s:9977   .data.rel.ro:0000000000000078 _ZTIN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/cc6GIqRW.s:9327   .text:00000000000045c6 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD1Ev
     /tmp/cc6GIqRW.s:9357   .text:00000000000045f0 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD0Ev
     /tmp/cc6GIqRW.s:9327   .text:00000000000045c6 _ZN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatD2Ev
     /tmp/cc6GIqRW.s:9991   .data.rel.ro:0000000000000090 _ZTIN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/cc6GIqRW.s:9433   .text:0000000000004638 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD1Ev
     /tmp/cc6GIqRW.s:9463   .text:0000000000004662 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD0Ev
     /tmp/cc6GIqRW.s:9433   .text:0000000000004638 _ZN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledD2Ev
     /tmp/cc6GIqRW.s:10005  .data.rel.ro:00000000000000a8 _ZTIN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/cc6GIqRW.s:9539   .text:00000000000046aa _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD1Ev
     /tmp/cc6GIqRW.s:9569   .text:00000000000046d4 _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD0Ev
     /tmp/cc6GIqRW.s:9539   .text:00000000000046aa _ZN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedD2Ev
     /tmp/cc6GIqRW.s:10014  .data.rel.ro._ZTIN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTIN8UnitTest15MemoryOutStreamE
     /tmp/cc6GIqRW.s:9821   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000000 _ZN8UnitTest15MemoryOutStreamD0Ev
     /tmp/cc6GIqRW.s:9807   .text._ZN8UnitTest15MemoryOutStreamD1Ev:00000000000000ac _ZTv0_n24_N8UnitTest15MemoryOutStreamD1Ev
     /tmp/cc6GIqRW.s:9887   .text._ZN8UnitTest15MemoryOutStreamD0Ev:0000000000000048 _ZTv0_n24_N8UnitTest15MemoryOutStreamD0Ev
     /tmp/cc6GIqRW.s:9666   .data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_NSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
     /tmp/cc6GIqRW.s:9683   .data.rel.ro._ZTCN8UnitTest15MemoryOutStreamE0_So:0000000000000000 _ZTCN8UnitTest15MemoryOutStreamE0_So
     /tmp/cc6GIqRW.s:9901   .rodata:0000000000000980 _ZTSN12_GLOBAL__N_142TestXmlTestReporterFixtureMultipleFailuresE
     /tmp/cc6GIqRW.s:9915   .rodata:00000000000009c0 _ZTSN12_GLOBAL__N_149TestXmlTestReporterFixtureOneFailureAndOneSuccessE
     /tmp/cc6GIqRW.s:9929   .rodata:0000000000000a20 _ZTSN12_GLOBAL__N_152TestXmlTestReporterFixtureFailureMessageIsXMLEscapedE
     /tmp/cc6GIqRW.s:9943   .rodata:0000000000000a80 _ZTSN12_GLOBAL__N_161TestXmlTestReporterFixtureSingleFailedTestReportSummaryFormatE
     /tmp/cc6GIqRW.s:9957   .rodata:0000000000000ae0 _ZTSN12_GLOBAL__N_165TestXmlTestReporterFixtureSingleSuccessfulTestReportSummaryFormatE
     /tmp/cc6GIqRW.s:9971   .rodata:0000000000000b40 _ZTSN12_GLOBAL__N_150TestXmlTestReporterFixtureEmptyReportSummaryFormatE
     /tmp/cc6GIqRW.s:9985   .rodata:0000000000000ba0 _ZTSN12_GLOBAL__N_166TestXmlTestReporterFixtureOutputIsCachedUntilReportSummaryIsCalledE
     /tmp/cc6GIqRW.s:9999   .rodata:0000000000000c00 _ZTSN12_GLOBAL__N_154TestXmlTestReporterFixtureMultipleCharactersAreEscapedE
     /tmp/cc6GIqRW.s:10023  .rodata._ZTSN8UnitTest15MemoryOutStreamE:0000000000000000 _ZTSN8UnitTest15MemoryOutStreamE
     /tmp/cc6GIqRW.s:10027  .text:000000000000471c _Z41__static_initialization_and_destruction_0ii
     /tmp/cc6GIqRW.s:10154  .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD2Ev
     /tmp/cc6GIqRW.s:10406  .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/cc6GIqRW.s:10154  .text._ZN8UnitTest20DeferredTestReporterD2Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD1Ev
     /tmp/cc6GIqRW.s:10238  .text._ZN8UnitTest20DeferredTestReporterD0Ev:0000000000000000 _ZN8UnitTest20DeferredTestReporterD0Ev
     /tmp/cc6GIqRW.s:10305  .text._ZN8UnitTest15XmlTestReporterD2Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD2Ev
     /tmp/cc6GIqRW.s:10339  .text._ZN8UnitTest15XmlTestReporterD0Ev:0000000000000000 _ZN8UnitTest15XmlTestReporterD0Ev
     /tmp/cc6GIqRW.s:10406  .text._ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/cc6GIqRW.s:10610  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE19_M_get_Tp_allocatorEv
     /tmp/cc6GIqRW.s:10631  .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultES1_EvT_S3_RSaIT0_E
     /tmp/cc6GIqRW.s:10524  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev
     /tmp/cc6GIqRW.s:10494  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev
     /tmp/cc6GIqRW.s:10663  .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/cc6GIqRW.s:10494  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD1Ev
     /tmp/cc6GIqRW.s:10694  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE13_M_deallocateEPS1_m
     /tmp/cc6GIqRW.s:10524  .text._ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED2Ev:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED1Ev
     /tmp/cc6GIqRW.s:10729  .text._ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_:0000000000000000 _ZSt8_DestroyIPN8UnitTest18DeferredTestResultEEvT_S3_
     /tmp/cc6GIqRW.s:10759  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev
     /tmp/cc6GIqRW.s:10663  .text._ZNSaIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/cc6GIqRW.s:10783  .text._ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaIN8UnitTest18DeferredTestResultEEE10deallocateERS3_PS2_m
     /tmp/cc6GIqRW.s:10814  .text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPN8UnitTest18DeferredTestResultEEEvT_S5_
     /tmp/cc6GIqRW.s:10759  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED1Ev
     /tmp/cc6GIqRW.s:10853  .text._ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEE10deallocateEPS2_m
     /tmp/cc6GIqRW.s:10881  .text._ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_:0000000000000000 _ZSt11__addressofIN8UnitTest18DeferredTestResultEEPT_RS2_
     /tmp/cc6GIqRW.s:11025  .text._ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_:0000000000000000 _ZSt8_DestroyIN8UnitTest18DeferredTestResultEEvPT_
     /tmp/cc6GIqRW.s:10904  .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD2Ev
     /tmp/cc6GIqRW.s:11051  .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/cc6GIqRW.s:10904  .text._ZN8UnitTest18DeferredTestResultD2Ev:0000000000000000 _ZN8UnitTest18DeferredTestResultD1Ev
     /tmp/cc6GIqRW.s:11051  .text._ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/cc6GIqRW.s:11257  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE19_M_get_Tp_allocatorEv
     /tmp/cc6GIqRW.s:11278  .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EvT_S9_RSaIT0_E
     /tmp/cc6GIqRW.s:11168  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev
     /tmp/cc6GIqRW.s:11138  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev
     /tmp/cc6GIqRW.s:11309  .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/cc6GIqRW.s:11138  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD1Ev
     /tmp/cc6GIqRW.s:11339  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE13_M_deallocateEPS7_m
     /tmp/cc6GIqRW.s:11168  .text._ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED2Ev:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED1Ev
     /tmp/cc6GIqRW.s:11374  .text._ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:0000000000000000 _ZSt8_DestroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_
     /tmp/cc6GIqRW.s:11404  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev
     /tmp/cc6GIqRW.s:11309  .text._ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/cc6GIqRW.s:11427  .text._ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS9_PS8_m:0000000000000000 _ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS9_PS8_m
     /tmp/cc6GIqRW.s:11457  .text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_:0000000000000000 _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SB_
     /tmp/cc6GIqRW.s:11404  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev
     /tmp/cc6GIqRW.s:11496  .text._ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m
     /tmp/cc6GIqRW.s:11524  .text._ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_:0000000000000000 _ZSt11__addressofISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEPT_RS8_
     /tmp/cc6GIqRW.s:11577  .text._ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_:0000000000000000 _ZSt8_DestroyISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvPT_
     /tmp/cc6GIqRW.s:11546  .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev
     /tmp/cc6GIqRW.s:11546  .text._ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev
     /tmp/cc6GIqRW.s:11601  .text:000000000000494c _GLOBAL__sub_I_TestXmlTestReporter.cpp
                           .group:0000000000000000 _ZN8UnitTest20DeferredTestReporterD5Ev
                           .group:0000000000000000 _ZN8UnitTest15XmlTestReporterD5Ev
                           .group:0000000000000000 _ZNSt6vectorIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseIN8UnitTest18DeferredTestResultESaIS1_EED5Ev
                           .group:0000000000000000 _ZNSaIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIN8UnitTest18DeferredTestResultEED5Ev
                           .group:0000000000000000 _ZN8UnitTest18DeferredTestResultD5Ev
                           .group:0000000000000000 _ZNSt6vectorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE12_Vector_implD5Ev
                           .group:0000000000000000 _ZNSt12_Vector_baseISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EED5Ev
                           .group:0000000000000000 _ZNSaISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorISt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED5Ev
                           .group:0000000000000000 _ZNSt4pairIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED5Ev

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED2Ev
_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev
_Unwind_Resume
__gxx_personality_v0
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode
_ZN8UnitTest15XmlTestReporterC1ERSo
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZN8UnitTest4TestC2EPKcS2_S2_i
__cxa_begin_catch
_ZN8UnitTest11CurrentTest7ResultsEv
_ZNK8UnitTest15AssertException10LineNumberEv
_ZNK8UnitTest15AssertException8FilenameEv
_ZN8UnitTest11TestDetailsC1EPKcS2_S2_i
_ZN8UnitTest11TestResults13OnTestFailureERKNS_11TestDetailsEPKc
__cxa_end_catch
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNK8UnitTest15MemoryOutStream7GetTextEv
_ZN8UnitTest11TestDetailsC1ERKS0_i
__stack_chk_fail
_ZN8UnitTest20DeferredTestReporter15ReportTestStartERKNS_11TestDetailsE
_ZN8UnitTest20DeferredTestReporter13ReportFailureERKNS_11TestDetailsEPKc
_ZN8UnitTest20DeferredTestReporter16ReportTestFinishERKNS_11TestDetailsEf
_ZN8UnitTest15XmlTestReporter13ReportSummaryEiiif
_ZN8UnitTest11CurrentTest7DetailsEv
_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
_ZN8UnitTest16SignalTranslatorC1Ev
_ZN8UnitTest16SignalTranslator12s_jumpTargetE
__sigsetjmp
__cxa_allocate_exception
_ZTIPKc
__cxa_throw
_ZN8UnitTest16SignalTranslatorD1Ev
_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZN8UnitTest4TestD2Ev
_ZdlPv
_ZTINSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
_ZTISo
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN8UnitTest4TestE
__dso_handle
__cxa_atexit
_ZN8UnitTest4Test11GetTestListEv
_ZN8UnitTest9ListAdderC1ERNS_8TestListEPNS_4TestE
_ZTVN8UnitTest20DeferredTestReporterE
_ZN8UnitTest12TestReporterD2Ev
_ZTVN8UnitTest15XmlTestReporterE
_ZTIN8UnitTest15AssertExceptionE
_ZTISt9exception
