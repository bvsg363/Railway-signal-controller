   1              		.file	"binio.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   5              	.LC0:
   6 0000 726200   		.string	"rb"
   7              	.LC1:
   8 0003 62756641 		.string	"bufAppendFromBinaryFile()"
   8      7070656E 
   8      6446726F 
   8      6D42696E 
   8      61727946 
   9 001d 000000   		.align 8
  10              	.LC2:
  11 0020 62756641 		.string	"bufAppendFromBinaryFile(): Unexpectedly hit EOF after reading %lu bytes!"
  11      7070656E 
  11      6446726F 
  11      6D42696E 
  11      61727946 
  12              		.text
  13              		.globl	bufAppendFromBinaryFile
  15              	bufAppendFromBinaryFile:
  16              	.LFB4:
  17              		.file 1 "binio.c"
   1:binio.c       **** /*
   2:binio.c       ****  * Copyright (C) 2009-2012 Chris McClelland
   3:binio.c       ****  *
   4:binio.c       ****  * This program is free software: you can redistribute it and/or modify
   5:binio.c       ****  * it under the terms of the GNU Lesser General Public License as published by
   6:binio.c       ****  * the Free Software Foundation, either version 3 of the License, or
   7:binio.c       ****  * (at your option) any later version.
   8:binio.c       ****  *
   9:binio.c       ****  * This program is distributed in the hope that it will be useful,
  10:binio.c       ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:binio.c       ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:binio.c       ****  * GNU Lesser General Public License for more details.
  13:binio.c       ****  *
  14:binio.c       ****  * You should have received a copy of the GNU Lesser General Public License
  15:binio.c       ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:binio.c       ****  */
  17:binio.c       **** #include <stdio.h>
  18:binio.c       **** #include <liberror.h>
  19:binio.c       **** #include "libbuffer.h"
  20:binio.c       **** 
  21:binio.c       **** DLLEXPORT(BufferStatus) bufAppendFromBinaryFile(
  22:binio.c       **** 	struct Buffer *self, const char *fileName, const char **error)
  23:binio.c       **** {
  18              		.loc 1 23 0
  19              		.cfi_startproc
  20 0000 55       		pushq	%rbp
  21              		.cfi_def_cfa_offset 16
  22              		.cfi_offset 6, -16
  23 0001 4889E5   		movq	%rsp, %rbp
  24              		.cfi_def_cfa_register 6
  25 0004 4883EC50 		subq	$80, %rsp
  26 0008 48897DC8 		movq	%rdi, -56(%rbp)
  27 000c 488975C0 		movq	%rsi, -64(%rbp)
  28 0010 488955B8 		movq	%rdx, -72(%rbp)
  24:binio.c       **** 	BufferStatus retVal = BUF_SUCCESS;
  29              		.loc 1 24 0
  30 0014 C745D000 		movl	$0, -48(%rbp)
  30      000000
  25:binio.c       **** 	BufferStatus bStatus;
  26:binio.c       **** 	size_t length;
  27:binio.c       **** 	size_t actualLength;
  28:binio.c       **** 	long ftellResult;
  29:binio.c       **** 	const size_t currentLength = self->length;
  31              		.loc 1 29 0
  32 001b 488B45C8 		movq	-56(%rbp), %rax
  33 001f 488B4008 		movq	8(%rax), %rax
  34 0023 488945D8 		movq	%rax, -40(%rbp)
  30:binio.c       **** 	FILE *file = fopen(fileName, "rb");
  35              		.loc 1 30 0
  36 0027 488B45C0 		movq	-64(%rbp), %rax
  37 002b 488D3500 		leaq	.LC0(%rip), %rsi
  37      000000
  38 0032 4889C7   		movq	%rax, %rdi
  39 0035 E8000000 		call	fopen@PLT
  39      00
  40 003a 488945E0 		movq	%rax, -32(%rbp)
  31:binio.c       **** 	if ( !file ) {
  41              		.loc 1 31 0
  42 003e 48837DE0 		cmpq	$0, -32(%rbp)
  42      00
  43 0043 752B     		jne	.L2
  32:binio.c       **** 		errRenderStd(error);
  44              		.loc 1 32 0
  45 0045 488B45B8 		movq	-72(%rbp), %rax
  46 0049 4889C7   		movq	%rax, %rdi
  47 004c E8000000 		call	errRenderStd@PLT
  47      00
  33:binio.c       **** 		errPrefix(error, "bufAppendFromBinaryFile()");
  48              		.loc 1 33 0
  49 0051 488B45B8 		movq	-72(%rbp), %rax
  50 0055 488D3500 		leaq	.LC1(%rip), %rsi
  50      000000
  51 005c 4889C7   		movq	%rax, %rdi
  52 005f E8000000 		call	errPrefix@PLT
  52      00
  34:binio.c       **** 		FAIL(BUF_FOPEN, cleanup);
  53              		.loc 1 34 0
  54 0064 C745D002 		movl	$2, -48(%rbp)
  54      000000
  55 006b E97E0100 		jmp	.L3
  55      00
  56              	.L2:
  35:binio.c       **** 	}
  36:binio.c       **** 	if ( fseek(file, 0, SEEK_END) ) {
  57              		.loc 1 36 0
  58 0070 488B45E0 		movq	-32(%rbp), %rax
  59 0074 BA020000 		movl	$2, %edx
  59      00
  60 0079 BE000000 		movl	$0, %esi
  60      00
  61 007e 4889C7   		movq	%rax, %rdi
  62 0081 E8000000 		call	fseek@PLT
  62      00
  63 0086 85C0     		testl	%eax, %eax
  64 0088 742B     		je	.L4
  37:binio.c       **** 		errRenderStd(error);
  65              		.loc 1 37 0
  66 008a 488B45B8 		movq	-72(%rbp), %rax
  67 008e 4889C7   		movq	%rax, %rdi
  68 0091 E8000000 		call	errRenderStd@PLT
  68      00
  38:binio.c       **** 		errPrefix(error, "bufAppendFromBinaryFile()");
  69              		.loc 1 38 0
  70 0096 488B45B8 		movq	-72(%rbp), %rax
  71 009a 488D3500 		leaq	.LC1(%rip), %rsi
  71      000000
  72 00a1 4889C7   		movq	%rax, %rdi
  73 00a4 E8000000 		call	errPrefix@PLT
  73      00
  39:binio.c       **** 		FAIL(BUF_FSEEK, cleanup);
  74              		.loc 1 39 0
  75 00a9 C745D003 		movl	$3, -48(%rbp)
  75      000000
  76 00b0 E9390100 		jmp	.L3
  76      00
  77              	.L4:
  40:binio.c       **** 	}
  41:binio.c       **** 	ftellResult = ftell(file);
  78              		.loc 1 41 0
  79 00b5 488B45E0 		movq	-32(%rbp), %rax
  80 00b9 4889C7   		movq	%rax, %rdi
  81 00bc E8000000 		call	ftell@PLT
  81      00
  82 00c1 488945E8 		movq	%rax, -24(%rbp)
  42:binio.c       **** 	if ( ftellResult < 0 ) {
  83              		.loc 1 42 0
  84 00c5 48837DE8 		cmpq	$0, -24(%rbp)
  84      00
  85 00ca 792B     		jns	.L5
  43:binio.c       **** 		errRenderStd(error);
  86              		.loc 1 43 0
  87 00cc 488B45B8 		movq	-72(%rbp), %rax
  88 00d0 4889C7   		movq	%rax, %rdi
  89 00d3 E8000000 		call	errRenderStd@PLT
  89      00
  44:binio.c       **** 		errPrefix(error, "bufAppendFromBinaryFile()");
  90              		.loc 1 44 0
  91 00d8 488B45B8 		movq	-72(%rbp), %rax
  92 00dc 488D3500 		leaq	.LC1(%rip), %rsi
  92      000000
  93 00e3 4889C7   		movq	%rax, %rdi
  94 00e6 E8000000 		call	errPrefix@PLT
  94      00
  45:binio.c       **** 		FAIL(BUF_FTELL, cleanup);
  95              		.loc 1 45 0
  96 00eb C745D004 		movl	$4, -48(%rbp)
  96      000000
  97 00f2 E9F70000 		jmp	.L3
  97      00
  98              	.L5:
  46:binio.c       **** 	}
  47:binio.c       **** 	length = (size_t)ftellResult;
  99              		.loc 1 47 0
 100 00f7 488B45E8 		movq	-24(%rbp), %rax
 101 00fb 488945F0 		movq	%rax, -16(%rbp)
  48:binio.c       **** 	bStatus = bufAppendConst(self, 0x00, length, error);
 102              		.loc 1 48 0
 103 00ff 488B4DB8 		movq	-72(%rbp), %rcx
 104 0103 488B55F0 		movq	-16(%rbp), %rdx
 105 0107 488B45C8 		movq	-56(%rbp), %rax
 106 010b BE000000 		movl	$0, %esi
 106      00
 107 0110 4889C7   		movq	%rax, %rdi
 108 0113 E8000000 		call	bufAppendConst@PLT
 108      00
 109 0118 8945D4   		movl	%eax, -44(%rbp)
  49:binio.c       **** 	CHECK_STATUS(bStatus, bStatus, cleanup, "bufAppendFromBinaryFile()");
 110              		.loc 1 49 0
 111 011b 837DD400 		cmpl	$0, -44(%rbp)
 112 011f 741E     		je	.L6
 113              		.loc 1 49 0 is_stmt 0 discriminator 1
 114 0121 488B45B8 		movq	-72(%rbp), %rax
 115 0125 488D3500 		leaq	.LC1(%rip), %rsi
 115      000000
 116 012c 4889C7   		movq	%rax, %rdi
 117 012f E8000000 		call	errPrefix@PLT
 117      00
 118 0134 8B45D4   		movl	-44(%rbp), %eax
 119 0137 8945D0   		movl	%eax, -48(%rbp)
 120 013a E9AF0000 		jmp	.L3
 120      00
 121              	.L6:
  50:binio.c       **** 	rewind(file);
 122              		.loc 1 50 0 is_stmt 1
 123 013f 488B45E0 		movq	-32(%rbp), %rax
 124 0143 4889C7   		movq	%rax, %rdi
 125 0146 E8000000 		call	rewind@PLT
 125      00
  51:binio.c       **** 	actualLength = fread(self->data + currentLength, 1, length, file);
 126              		.loc 1 51 0
 127 014b 488B45C8 		movq	-56(%rbp), %rax
 128 014f 488B10   		movq	(%rax), %rdx
 129 0152 488B45D8 		movq	-40(%rbp), %rax
 130 0156 488D3C02 		leaq	(%rdx,%rax), %rdi
 131 015a 488B55E0 		movq	-32(%rbp), %rdx
 132 015e 488B45F0 		movq	-16(%rbp), %rax
 133 0162 4889D1   		movq	%rdx, %rcx
 134 0165 4889C2   		movq	%rax, %rdx
 135 0168 BE010000 		movl	$1, %esi
 135      00
 136 016d E8000000 		call	fread@PLT
 136      00
 137 0172 488945F8 		movq	%rax, -8(%rbp)
  52:binio.c       **** 	if ( actualLength != length ) {
 138              		.loc 1 52 0
 139 0176 488B45F8 		movq	-8(%rbp), %rax
 140 017a 483B45F0 		cmpq	-16(%rbp), %rax
 141 017e 746D     		je	.L10
  53:binio.c       **** 		CHECK_STATUS(
 142              		.loc 1 53 0
 143 0180 488B45E0 		movq	-32(%rbp), %rax
 144 0184 4889C7   		movq	%rax, %rdi
 145 0187 E8000000 		call	feof@PLT
 145      00
 146 018c 85C0     		testl	%eax, %eax
 147 018e 7425     		je	.L7
 148              		.loc 1 53 0 is_stmt 0 discriminator 1
 149 0190 488B55F8 		movq	-8(%rbp), %rdx
 150 0194 488B45B8 		movq	-72(%rbp), %rax
 151 0198 488D3500 		leaq	.LC2(%rip), %rsi
 151      000000
 152 019f 4889C7   		movq	%rax, %rdi
 153 01a2 B8000000 		movl	$0, %eax
 153      00
 154 01a7 E8000000 		call	errRender@PLT
 154      00
 155 01ac C745D005 		movl	$5, -48(%rbp)
 155      000000
 156 01b3 EB39     		jmp	.L3
 157              	.L7:
  54:binio.c       **** 			feof(file), BUF_FEOF, cleanup,
  55:binio.c       **** 			"bufAppendFromBinaryFile(): Unexpectedly hit EOF after reading %lu bytes!", actualLength);
  56:binio.c       **** 		if ( ferror(file) ) {
 158              		.loc 1 56 0 is_stmt 1
 159 01b5 488B45E0 		movq	-32(%rbp), %rax
 160 01b9 4889C7   		movq	%rax, %rdi
 161 01bc E8000000 		call	ferror@PLT
 161      00
 162 01c1 85C0     		testl	%eax, %eax
 163 01c3 7428     		je	.L10
  57:binio.c       **** 			errRenderStd(error);
 164              		.loc 1 57 0
 165 01c5 488B45B8 		movq	-72(%rbp), %rax
 166 01c9 4889C7   		movq	%rax, %rdi
 167 01cc E8000000 		call	errRenderStd@PLT
 167      00
  58:binio.c       **** 			errPrefix(error, "bufAppendFromBinaryFile()");
 168              		.loc 1 58 0
 169 01d1 488B45B8 		movq	-72(%rbp), %rax
 170 01d5 488D3500 		leaq	.LC1(%rip), %rsi
 170      000000
 171 01dc 4889C7   		movq	%rax, %rdi
 172 01df E8000000 		call	errPrefix@PLT
 172      00
  59:binio.c       **** 			FAIL(BUF_FERROR, cleanup);
 173              		.loc 1 59 0
 174 01e4 C745D006 		movl	$6, -48(%rbp)
 174      000000
 175 01eb EB01     		jmp	.L3
 176              	.L10:
  60:binio.c       **** 		}
  61:binio.c       **** 	}
  62:binio.c       **** cleanup:
 177              		.loc 1 62 0
 178 01ed 90       		nop
 179              	.L3:
  63:binio.c       **** 	if ( file ) {
 180              		.loc 1 63 0
 181 01ee 48837DE0 		cmpq	$0, -32(%rbp)
 181      00
 182 01f3 740C     		je	.L8
  64:binio.c       **** 		fclose(file);
 183              		.loc 1 64 0
 184 01f5 488B45E0 		movq	-32(%rbp), %rax
 185 01f9 4889C7   		movq	%rax, %rdi
 186 01fc E8000000 		call	fclose@PLT
 186      00
 187              	.L8:
  65:binio.c       **** 	}
  66:binio.c       **** 	return retVal;
 188              		.loc 1 66 0
 189 0201 8B45D0   		movl	-48(%rbp), %eax
  67:binio.c       **** }
 190              		.loc 1 67 0
 191 0204 C9       		leave
 192              		.cfi_def_cfa 7, 8
 193 0205 C3       		ret
 194              		.cfi_endproc
 195              	.LFE4:
 197              		.section	.rodata
 198              	.LC3:
 199 0069 776200   		.string	"wb"
 200              	.LC4:
 201 006c 62756657 		.string	"bufWriteBinaryFile()"
 201      72697465 
 201      42696E61 
 201      72794669 
 201      6C652829 
 202              		.text
 203              		.globl	bufWriteBinaryFile
 205              	bufWriteBinaryFile:
 206              	.LFB5:
  68:binio.c       **** 
  69:binio.c       **** DLLEXPORT(BufferStatus) bufWriteBinaryFile(
  70:binio.c       **** 	const struct Buffer *self, const char *fileName, size_t bufAddress, size_t count,
  71:binio.c       **** 	const char **error)
  72:binio.c       **** {
 207              		.loc 1 72 0
 208              		.cfi_startproc
 209 0206 55       		pushq	%rbp
 210              		.cfi_def_cfa_offset 16
 211              		.cfi_offset 6, -16
 212 0207 4889E5   		movq	%rsp, %rbp
 213              		.cfi_def_cfa_register 6
 214 020a 4883EC50 		subq	$80, %rsp
 215 020e 48897DD8 		movq	%rdi, -40(%rbp)
 216 0212 488975D0 		movq	%rsi, -48(%rbp)
 217 0216 488955C8 		movq	%rdx, -56(%rbp)
 218 021a 48894DC0 		movq	%rcx, -64(%rbp)
 219 021e 4C8945B8 		movq	%r8, -72(%rbp)
  73:binio.c       **** 	BufferStatus retVal = BUF_SUCCESS;
 220              		.loc 1 73 0
 221 0222 C745EC00 		movl	$0, -20(%rbp)
 221      000000
  74:binio.c       **** 	size_t actualLength;
  75:binio.c       **** 	FILE *file = fopen(fileName, "wb");
 222              		.loc 1 75 0
 223 0229 488B45D0 		movq	-48(%rbp), %rax
 224 022d 488D3500 		leaq	.LC3(%rip), %rsi
 224      000000
 225 0234 4889C7   		movq	%rax, %rdi
 226 0237 E8000000 		call	fopen@PLT
 226      00
 227 023c 488945F0 		movq	%rax, -16(%rbp)
  76:binio.c       **** 	if ( !file ) {
 228              		.loc 1 76 0
 229 0240 48837DF0 		cmpq	$0, -16(%rbp)
 229      00
 230 0245 7528     		jne	.L12
  77:binio.c       **** 		errRenderStd(error);
 231              		.loc 1 77 0
 232 0247 488B45B8 		movq	-72(%rbp), %rax
 233 024b 4889C7   		movq	%rax, %rdi
 234 024e E8000000 		call	errRenderStd@PLT
 234      00
  78:binio.c       **** 		errPrefix(error, "bufWriteBinaryFile()");
 235              		.loc 1 78 0
 236 0253 488B45B8 		movq	-72(%rbp), %rax
 237 0257 488D3500 		leaq	.LC4(%rip), %rsi
 237      000000
 238 025e 4889C7   		movq	%rax, %rdi
 239 0261 E8000000 		call	errPrefix@PLT
 239      00
  79:binio.c       **** 		FAIL(BUF_FOPEN, cleanup);
 240              		.loc 1 79 0
 241 0266 C745EC02 		movl	$2, -20(%rbp)
 241      000000
 242 026d EB5E     		jmp	.L13
 243              	.L12:
  80:binio.c       **** 	}
  81:binio.c       **** 	actualLength = fwrite(self->data + bufAddress, 1, count, file);
 244              		.loc 1 81 0
 245 026f 488B45D8 		movq	-40(%rbp), %rax
 246 0273 488B10   		movq	(%rax), %rdx
 247 0276 488B45C8 		movq	-56(%rbp), %rax
 248 027a 488D3C02 		leaq	(%rdx,%rax), %rdi
 249 027e 488B55F0 		movq	-16(%rbp), %rdx
 250 0282 488B45C0 		movq	-64(%rbp), %rax
 251 0286 4889D1   		movq	%rdx, %rcx
 252 0289 4889C2   		movq	%rax, %rdx
 253 028c BE010000 		movl	$1, %esi
 253      00
 254 0291 E8000000 		call	fwrite@PLT
 254      00
 255 0296 488945F8 		movq	%rax, -8(%rbp)
  82:binio.c       **** 	if ( actualLength != count ) {
 256              		.loc 1 82 0
 257 029a 488B45F8 		movq	-8(%rbp), %rax
 258 029e 483B45C0 		cmpq	-64(%rbp), %rax
 259 02a2 7428     		je	.L16
  83:binio.c       **** 		errRenderStd(error);
 260              		.loc 1 83 0
 261 02a4 488B45B8 		movq	-72(%rbp), %rax
 262 02a8 4889C7   		movq	%rax, %rdi
 263 02ab E8000000 		call	errRenderStd@PLT
 263      00
  84:binio.c       **** 		errPrefix(error, "bufWriteBinaryFile()");
 264              		.loc 1 84 0
 265 02b0 488B45B8 		movq	-72(%rbp), %rax
 266 02b4 488D3500 		leaq	.LC4(%rip), %rsi
 266      000000
 267 02bb 4889C7   		movq	%rax, %rdi
 268 02be E8000000 		call	errPrefix@PLT
 268      00
  85:binio.c       **** 		FAIL(BUF_FERROR, cleanup);
 269              		.loc 1 85 0
 270 02c3 C745EC06 		movl	$6, -20(%rbp)
 270      000000
 271 02ca EB01     		jmp	.L13
 272              	.L16:
  86:binio.c       **** 	}
  87:binio.c       **** cleanup:
 273              		.loc 1 87 0
 274 02cc 90       		nop
 275              	.L13:
  88:binio.c       **** 	if ( file ) {
 276              		.loc 1 88 0
 277 02cd 48837DF0 		cmpq	$0, -16(%rbp)
 277      00
 278 02d2 740C     		je	.L14
  89:binio.c       **** 		fclose(file);	
 279              		.loc 1 89 0
 280 02d4 488B45F0 		movq	-16(%rbp), %rax
 281 02d8 4889C7   		movq	%rax, %rdi
 282 02db E8000000 		call	fclose@PLT
 282      00
 283              	.L14:
  90:binio.c       **** 	}
  91:binio.c       **** 	return retVal;
 284              		.loc 1 91 0
 285 02e0 8B45EC   		movl	-20(%rbp), %eax
  92:binio.c       **** }
 286              		.loc 1 92 0
 287 02e3 C9       		leave
 288              		.cfi_def_cfa 7, 8
 289 02e4 C3       		ret
 290              		.cfi_endproc
 291              	.LFE5:
 293              	.Letext0:
 294              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 295              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 296              		.file 4 "/usr/include/libio.h"
 297              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 298              		.file 6 "/usr/include/stdio.h"
 299              		.file 7 "/home/gani/eval/20140524/makestuff/common/makestuff.h"
 300              		.file 8 "libbuffer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 binio.c
     /tmp/ccKe9gFT.s:15     .text:0000000000000000 bufAppendFromBinaryFile
     /tmp/ccKe9gFT.s:205    .text:0000000000000206 bufWriteBinaryFile

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
fopen
errRenderStd
errPrefix
fseek
ftell
bufAppendConst
rewind
fread
feof
errRender
ferror
fclose
fwrite
