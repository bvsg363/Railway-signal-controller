   1              		.file	"main.c"
   2              		.section	.rodata.str1.1,"aMS",@progbits,1
   3              	.LC0:
   4 0000 646F5772 		.string	"doWrite()"
   4      69746528 
   4      2900
   5              		.section	.text.unlikely,"ax",@progbits
   7              	doWrite:
   8              	.LFB51:
   9              		.cfi_startproc
  10 0000 4157     		pushq	%r15
  11              		.cfi_def_cfa_offset 16
  12              		.cfi_offset 15, -16
  13 0002 4156     		pushq	%r14
  14              		.cfi_def_cfa_offset 24
  15              		.cfi_offset 14, -24
  16 0004 4D89C7   		movq	%r8, %r15
  17 0007 4155     		pushq	%r13
  18              		.cfi_def_cfa_offset 32
  19              		.cfi_offset 13, -32
  20 0009 4154     		pushq	%r12
  21              		.cfi_def_cfa_offset 40
  22              		.cfi_offset 12, -40
  23 000b 4989FE   		movq	%rdi, %r14
  24 000e 55       		pushq	%rbp
  25              		.cfi_def_cfa_offset 48
  26              		.cfi_offset 6, -48
  27 000f 53       		pushq	%rbx
  28              		.cfi_def_cfa_offset 56
  29              		.cfi_offset 3, -56
  30 0010 4D89CC   		movq	%r9, %r12
  31 0013 31DB     		xorl	%ebx, %ebx
  32 0015 31ED     		xorl	%ebp, %ebp
  33 0017 4881EC38 		subq	$65592, %rsp
  33      000100
  34              		.cfi_def_cfa_offset 65648
  35 001e 64488B04 		movq	%fs:40, %rax
  35      25280000 
  35      00
  36 0027 48898424 		movq	%rax, 65576(%rsp)
  36      28000100 
  37 002f 31C0     		xorl	%eax, %eax
  38 0031 4C8D6C24 		leaq	32(%rsp), %r13
  38      20
  39 0036 400FB6C6 		movzbl	%sil, %eax
  40 003a 48891424 		movq	%rdx, (%rsp)
  41 003e 48894C24 		movq	%rcx, 8(%rsp)
  41      08
  42 0043 89442414 		movl	%eax, 20(%rsp)
  43              	.L5:
  44 0047 488B0C24 		movq	(%rsp), %rcx
  45 004b BAFBFF00 		movl	$65531, %edx
  45      00
  46 0050 BE010000 		movl	$1, %esi
  46      00
  47 0055 4C89EF   		movq	%r13, %rdi
  48 0058 E8000000 		call	fread@PLT
  48      00
  49 005d 4885C0   		testq	%rax, %rax
  50 0060 7457     		je	.L2
  51 0062 8B742414 		movl	20(%rsp), %esi
  52 0066 4D89E0   		movq	%r12, %r8
  53 0069 4C89E9   		movq	%r13, %rcx
  54 006c 4889C2   		movq	%rax, %rdx
  55 006f 4C89F7   		movq	%r14, %rdi
  56 0072 4801C3   		addq	%rax, %rbx
  57 0075 48894424 		movq	%rax, 24(%rsp)
  57      18
  58 007a E8000000 		call	flWriteChannelAsync@PLT
  58      00
  59 007f 85C0     		testl	%eax, %eax
  60 0081 4C8B4C24 		movq	24(%rsp), %r9
  60      18
  61 0086 7416     		je	.L8
  62              	.L6:
  63 0088 488D3500 		leaq	.LC0(%rip), %rsi
  63      000000
  64 008f 4C89E7   		movq	%r12, %rdi
  65 0092 E8000000 		call	errPrefix@PLT
  65      00
  66 0097 B8010000 		movl	$1, %eax
  66      00
  67 009c EB38     		jmp	.L1
  68              	.L8:
  69 009e 31C0     		xorl	%eax, %eax
  70              	.L3:
  71 00a0 410FB654 		movzbl	0(%r13,%rax), %edx
  71      0500
  72 00a6 48FFC0   		incq	%rax
  73 00a9 01D5     		addl	%edx, %ebp
  74 00ab 4939C1   		cmpq	%rax, %r9
  75 00ae 75F0     		jne	.L3
  76 00b0 4981F9FB 		cmpq	$65531, %r9
  76      FF0000
  77 00b7 748E     		je	.L5
  78              	.L2:
  79 00b9 4C89E6   		movq	%r12, %rsi
  80 00bc 4C89F7   		movq	%r14, %rdi
  81 00bf E8000000 		call	flAwaitAsyncWrites@PLT
  81      00
  82 00c4 85C0     		testl	%eax, %eax
  83 00c6 75C0     		jne	.L6
  84 00c8 488B4424 		movq	8(%rsp), %rax
  84      08
  85 00cd 6641892F 		movw	%bp, (%r15)
  86 00d1 488918   		movq	%rbx, (%rax)
  87 00d4 31C0     		xorl	%eax, %eax
  88              	.L4:
  89              	.L1:
  90 00d6 488B8C24 		movq	65576(%rsp), %rcx
  90      28000100 
  91 00de 6448330C 		xorq	%fs:40, %rcx
  91      25280000 
  91      00
  92 00e7 7405     		je	.L7
  93 00e9 E8000000 		call	__stack_chk_fail@PLT
  93      00
  94              	.L7:
  95 00ee 4881C438 		addq	$65592, %rsp
  95      000100
  96              		.cfi_def_cfa_offset 56
  97 00f5 5B       		popq	%rbx
  98              		.cfi_def_cfa_offset 48
  99 00f6 5D       		popq	%rbp
 100              		.cfi_def_cfa_offset 40
 101 00f7 415C     		popq	%r12
 102              		.cfi_def_cfa_offset 32
 103 00f9 415D     		popq	%r13
 104              		.cfi_def_cfa_offset 24
 105 00fb 415E     		popq	%r14
 106              		.cfi_def_cfa_offset 16
 107 00fd 415F     		popq	%r15
 108              		.cfi_def_cfa_offset 8
 109 00ff C3       		ret
 110              		.cfi_endproc
 111              	.LFE51:
 113              		.section	.rodata.str1.1
 114              	.LC1:
 115 000a 776200   		.string	"wb"
 116              	.LC2:
 117 000d 646F5265 		.string	"doRead()"
 117      61642829 
 117      00
 118              		.section	.rodata.str1.8,"aMS",@progbits,1
 119              		.align 8
 120              	.LC5:
 121 0000 52656164 		.string	"Read %d bytes (checksum 0x%04X) from channel %d at %f MiB/s\n"
 121      20256420 
 121      62797465 
 121      73202863 
 121      6865636B 
 122              		.section	.rodata.str1.1
 123              	.LC6:
 124 0016 726200   		.string	"rb"
 125              		.section	.rodata.str1.8
 126 003d 000000   		.align 8
 127              	.LC7:
 128 0040 57726F74 		.string	"Wrote %zu bytes (checksum 0x%04X) to channel %lu at %f MiB/s\n"
 128      6520257A 
 128      75206279 
 128      74657320 
 128      28636865 
 129              		.section	.rodata.str1.1
 130              	.LC8:
 131 0019 25732061 		.string	"%s at column %d\n  %s\n  "
 131      7420636F 
 131      6C756D6E 
 131      2025640A 
 131      20202573 
 132              	.LC9:
 133 0031 2000     		.string	" "
 134              	.LC10:
 135 0033 5E0A00   		.string	"^\n"
 136              		.section	.text.unlikely
 138              	parseLine:
 139              	.LFB52:
 140              		.cfi_startproc
 141 0100 4157     		pushq	%r15
 142              		.cfi_def_cfa_offset 16
 143              		.cfi_offset 15, -16
 144 0102 4156     		pushq	%r14
 145              		.cfi_def_cfa_offset 24
 146              		.cfi_offset 14, -24
 147 0104 B9080000 		movl	$8, %ecx
 147      00
 148 0109 4155     		pushq	%r13
 149              		.cfi_def_cfa_offset 32
 150              		.cfi_offset 13, -32
 151 010b 4154     		pushq	%r12
 152              		.cfi_def_cfa_offset 40
 153              		.cfi_offset 12, -40
 154 010d 55       		pushq	%rbp
 155              		.cfi_def_cfa_offset 48
 156              		.cfi_offset 6, -48
 157 010e 53       		pushq	%rbx
 158              		.cfi_def_cfa_offset 56
 159              		.cfi_offset 3, -56
 160 010f 4889D3   		movq	%rdx, %rbx
 161 0112 4881ECA8 		subq	$168, %rsp
 161      000000
 162              		.cfi_def_cfa_offset 224
 163 0119 64488B04 		movq	%fs:40, %rax
 163      25280000 
 163      00
 164 0122 48898424 		movq	%rax, 152(%rsp)
 164      98000000 
 165 012a 31C0     		xorl	%eax, %eax
 166 012c 48893C24 		movq	%rdi, (%rsp)
 167 0130 488D7C24 		leaq	112(%rsp), %rdi
 167      70
 168 0135 48897424 		movq	%rsi, 16(%rsp)
 168      10
 169 013a BE000400 		movl	$1024, %esi
 169      00
 170 013f F3AB     		rep stosl
 171 0141 488D4424 		leaq	112(%rsp), %rax
 171      70
 172 0146 4889D1   		movq	%rdx, %rcx
 173 0149 31D2     		xorl	%edx, %edx
 174 014b 4889C7   		movq	%rax, %rdi
 175 014e 48894424 		movq	%rax, 24(%rsp)
 175      18
 176 0153 E8000000 		call	bufInitialise@PLT
 176      00
 177 0158 85C0     		testl	%eax, %eax
 178 015a 0F859D09 		jne	.L95
 178      0000
 179 0160 488B4424 		movq	16(%rsp), %rax
 179      10
 180 0165 48890500 		movq	%rax, ptr(%rip)
 180      000000
 181              	.L19:
 182 016c 488B3D00 		movq	ptr(%rip), %rdi
 182      000000
 183 0173 8A07     		movb	(%rdi), %al
 184 0175 3C3B     		cmpb	$59, %al
 185 0177 750C     		jne	.L153
 186 0179 48FFC7   		incq	%rdi
 187 017c 48893D00 		movq	%rdi, ptr(%rip)
 187      000000
 188 0183 EBE7     		jmp	.L19
 189              	.L153:
 190 0185 3C72     		cmpb	$114, %al
 191 0187 7415     		je	.L21
 192 0189 3C77     		cmpb	$119, %al
 193 018b 0F848F04 		je	.L22
 193      0000
 194 0191 3C2B     		cmpb	$43, %al
 195 0193 0F857509 		jne	.L116
 195      0000
 196 0199 E99F0800 		jmp	.L154
 196      00
 197              	.L21:
 198 019e 488D6F01 		leaq	1(%rdi), %rbp
 199 01a2 4C8D6424 		leaq	64(%rsp), %r12
 199      40
 200 01a7 48892D00 		movq	%rbp, ptr(%rip)
 200      000000
 201 01ae E8000000 		call	__errno_location@PLT
 201      00
 202 01b3 BA100000 		movl	$16, %edx
 202      00
 203 01b8 4989C7   		movq	%rax, %r15
 204 01bb C7000000 		movl	$0, (%rax)
 204      0000
 205 01c1 4C89E6   		movq	%r12, %rsi
 206 01c4 4889EF   		movq	%rbp, %rdi
 207 01c7 E8000000 		call	strtoul@PLT
 207      00
 208 01cc 41833F00 		cmpl	$0, (%r15)
 209 01d0 4989C5   		movq	%rax, %r13
 210 01d3 7411     		je	.L24
 211              	.L28:
 212 01d5 4531FF   		xorl	%r15d, %r15d
 213 01d8 4531F6   		xorl	%r14d, %r14d
 214 01db 41BD0200 		movl	$2, %r13d
 214      0000
 215 01e1 E9530600 		jmp	.L64
 215      00
 216              	.L24:
 217 01e6 83F87F   		cmpl	$127, %eax
 218 01e9 0F871504 		ja	.L97
 218      0000
 219 01ef 488B7C24 		movq	64(%rsp), %rdi
 219      40
 220 01f4 8A07     		movb	(%rdi), %al
 221 01f6 48893D00 		movq	%rdi, ptr(%rip)
 221      000000
 222 01fd A8DF     		testb	$-33, %al
 223 01ff 7415     		je	.L26
 224 0201 3C3B     		cmpb	$59, %al
 225 0203 7411     		je	.L26
 226              	.L29:
 227 0205 4531FF   		xorl	%r15d, %r15d
 228 0208 4531F6   		xorl	%r14d, %r14d
 229 020b 41BD0500 		movl	$5, %r13d
 229      0000
 230 0211 E9230600 		jmp	.L64
 230      00
 231              	.L26:
 232 0216 3C20     		cmpb	$32, %al
 233 0218 41BE0100 		movl	$1, %r14d
 233      0000
 234 021e 0F85F102 		jne	.L27
 234      0000
 235 0224 48FFC7   		incq	%rdi
 236 0227 4C89E6   		movq	%r12, %rsi
 237 022a 41C70700 		movl	$0, (%r15)
 237      000000
 238 0231 BA100000 		movl	$16, %edx
 238      00
 239 0236 48893D00 		movq	%rdi, ptr(%rip)
 239      000000
 240 023d E8000000 		call	strtoul@PLT
 240      00
 241 0242 41833F00 		cmpl	$0, (%r15)
 242 0246 4989C4   		movq	%rax, %r12
 243 0249 4189C6   		movl	%eax, %r14d
 244 024c 7587     		jne	.L28
 245 024e 4C8B7C24 		movq	64(%rsp), %r15
 245      40
 246 0253 418A07   		movb	(%r15), %al
 247 0256 4C893D00 		movq	%r15, ptr(%rip)
 247      000000
 248 025d A8DF     		testb	$-33, %al
 249 025f 7404     		je	.L117
 250 0261 3C3B     		cmpb	$59, %al
 251 0263 75A0     		jne	.L29
 252              	.L117:
 253 0265 3C20     		cmpb	$32, %al
 254 0267 0F85A802 		jne	.L27
 254      0000
 255 026d 498D4701 		leaq	1(%r15), %rax
 256 0271 48890500 		movq	%rax, ptr(%rip)
 256      000000
 257 0278 418A4701 		movb	1(%r15), %al
 258 027c 3C22     		cmpb	$34, %al
 259 027e 7404     		je	.L118
 260 0280 3C27     		cmpb	$39, %al
 261 0282 7581     		jne	.L29
 262              	.L118:
 263 0284 4983C702 		addq	$2, %r15
 264 0288 4C893D00 		movq	%r15, ptr(%rip)
 264      000000
 265 028f 4C89FD   		movq	%r15, %rbp
 266              	.L32:
 267 0292 8A5500   		movb	0(%rbp), %dl
 268 0295 38C2     		cmpb	%al, %dl
 269 0297 740D     		je	.L33
 270 0299 84D2     		testb	%dl, %dl
 271 029b 0F846605 		je	.L106
 271      0000
 272 02a1 48FFC5   		incq	%rbp
 273 02a4 EBEC     		jmp	.L32
 274              	.L33:
 275 02a6 84C0     		testb	%al, %al
 276 02a8 0F845905 		je	.L106
 276      0000
 277 02ae 4889E8   		movq	%rbp, %rax
 278 02b1 4C29F8   		subq	%r15, %rax
 279 02b4 488D7801 		leaq	1(%rax), %rdi
 280 02b8 48894424 		movq	%rax, 8(%rsp)
 280      08
 281 02bd E8000000 		call	malloc@PLT
 281      00
 282 02c2 4885C0   		testq	%rax, %rax
 283 02c5 4989C6   		movq	%rax, %r14
 284 02c8 0F844705 		je	.L107
 284      0000
 285 02ce 4C39FD   		cmpq	%r15, %rbp
 286 02d1 0F844905 		je	.L108
 286      0000
 287 02d7 488B5424 		movq	8(%rsp), %rdx
 287      08
 288 02dc 4C89FE   		movq	%r15, %rsi
 289 02df 4889C7   		movq	%rax, %rdi
 290 02e2 E8000000 		call	strncpy@PLT
 290      00
 291 02e7 488B4424 		movq	8(%rsp), %rax
 291      08
 292 02ec 488D4D01 		leaq	1(%rbp), %rcx
 293 02f0 488D3500 		leaq	.LC1(%rip), %rsi
 293      000000
 294 02f7 4C89F7   		movq	%r14, %rdi
 295 02fa 48890D00 		movq	%rcx, ptr(%rip)
 295      000000
 296 0301 41C60406 		movb	$0, (%r14,%rax)
 296      00
 297 0306 E8000000 		call	fopen@PLT
 297      00
 298 030b 4885C0   		testq	%rax, %rax
 299 030e 4989C7   		movq	%rax, %r15
 300 0311 0F84FE02 		je	.L102
 300      0000
 301 0317 4C89F7   		movq	%r14, %rdi
 302 031a BD000001 		movl	$65536, %ebp
 302      00
 303 031f E8000000 		call	free@PLT
 303      00
 304 0324 488D7C24 		leaq	80(%rsp), %rdi
 304      50
 305 0329 31F6     		xorl	%esi, %esi
 306 032b E8000000 		call	gettimeofday@PLT
 306      00
 307 0330 4181FC00 		cmpl	$65536, %r12d
 307      000100
 308 0337 488B3C24 		movq	(%rsp), %rdi
 309 033b 410FB6C5 		movzbl	%r13b, %eax
 310 033f 410F46EC 		cmovbe	%r12d, %ebp
 311 0343 4989D8   		movq	%rbx, %r8
 312 0346 31C9     		xorl	%ecx, %ecx
 313 0348 89EA     		movl	%ebp, %edx
 314 034a 89C6     		movl	%eax, %esi
 315 034c 89442428 		movl	%eax, 40(%rsp)
 316 0350 E8000000 		call	flReadChannelAsyncSubmit@PLT
 316      00
 317 0355 85C0     		testl	%eax, %eax
 318 0357 741C     		je	.L35
 319              	.L38:
 320 0359 488D3500 		leaq	.LC2(%rip), %rsi
 320      000000
 321 0360 4889DF   		movq	%rbx, %rdi
 322 0363 31ED     		xorl	%ebp, %ebp
 323 0365 41BE0100 		movl	$1, %r14d
 323      0000
 324 036b E8000000 		call	errPrefix@PLT
 324      00
 325 0370 E9260100 		jmp	.L36
 325      00
 326              	.L35:
 327 0375 488D4424 		leaq	60(%rsp), %rax
 327      3C
 328 037a 4589E6   		movl	%r12d, %r14d
 329 037d 4129EE   		subl	%ebp, %r14d
 330 0380 31ED     		xorl	%ebp, %ebp
 331 0382 48894424 		movq	%rax, 8(%rsp)
 331      08
 332 0387 488D4424 		leaq	72(%rsp), %rax
 332      48
 333 038c 48894424 		movq	%rax, 32(%rsp)
 333      20
 334              	.L37:
 335 0391 4585F6   		testl	%r14d, %r14d
 336 0394 0F84A900 		je	.L155
 336      0000
 337 039a 4181FE00 		cmpl	$65536, %r14d
 337      000100
 338 03a1 41B90000 		movl	$65536, %r9d
 338      0100
 339 03a7 8B742428 		movl	40(%rsp), %esi
 340 03ab 488B3C24 		movq	(%rsp), %rdi
 341 03af 450F46CE 		cmovbe	%r14d, %r9d
 342 03b3 4989D8   		movq	%rbx, %r8
 343 03b6 31C9     		xorl	%ecx, %ecx
 344 03b8 4489CA   		movl	%r9d, %edx
 345 03bb 44894C24 		movl	%r9d, 44(%rsp)
 345      2C
 346 03c0 E8000000 		call	flReadChannelAsyncSubmit@PLT
 346      00
 347 03c5 85C0     		testl	%eax, %eax
 348 03c7 7590     		jne	.L38
 349 03c9 488B4C24 		movq	8(%rsp), %rcx
 349      08
 350 03ce 448B4C24 		movl	44(%rsp), %r9d
 350      2C
 351 03d3 4989D8   		movq	%rbx, %r8
 352 03d6 488B7424 		movq	32(%rsp), %rsi
 352      20
 353 03db 488B3C24 		movq	(%rsp), %rdi
 354 03df 4889CA   		movq	%rcx, %rdx
 355 03e2 4529CE   		subl	%r9d, %r14d
 356 03e5 E8000000 		call	flReadChannelAsyncAwait@PLT
 356      00
 357 03ea 85C0     		testl	%eax, %eax
 358 03ec 0F8567FF 		jne	.L38
 358      FFFF
 359 03f2 8B54243C 		movl	60(%rsp), %edx
 360 03f6 488B7C24 		movq	72(%rsp), %rdi
 360      48
 361 03fb 4C89F9   		movq	%r15, %rcx
 362 03fe BE010000 		movl	$1, %esi
 362      00
 363 0403 E8000000 		call	fwrite@PLT
 363      00
 364 0408 3B44243C 		cmpl	60(%rsp), %eax
 365 040c 89C1     		movl	%eax, %ecx
 366 040e 7419     		je	.L39
 367              	.L43:
 368 0410 488D3500 		leaq	.LC2(%rip), %rsi
 368      000000
 369 0417 4889DF   		movq	%rbx, %rdi
 370 041a 31ED     		xorl	%ebp, %ebp
 371 041c 41BE0B00 		movl	$11, %r14d
 371      0000
 372 0422 E8000000 		call	errPrefix@PLT
 372      00
 373 0427 EB72     		jmp	.L36
 374              	.L39:
 375 0429 488B5424 		movq	72(%rsp), %rdx
 375      48
 376 042e 31C0     		xorl	%eax, %eax
 377              	.L40:
 378 0430 39C1     		cmpl	%eax, %ecx
 379 0432 0F8459FF 		je	.L37
 379      FFFF
 380 0438 0FB63402 		movzbl	(%rdx,%rax), %esi
 381 043c 48FFC0   		incq	%rax
 382 043f 01F5     		addl	%esi, %ebp
 383 0441 EBED     		jmp	.L40
 384              	.L155:
 385 0443 488D5424 		leaq	60(%rsp), %rdx
 385      3C
 386 0448 488B3C24 		movq	(%rsp), %rdi
 387 044c 488D7424 		leaq	72(%rsp), %rsi
 387      48
 388 0451 4989D8   		movq	%rbx, %r8
 389 0454 4889D1   		movq	%rdx, %rcx
 390 0457 E8000000 		call	flReadChannelAsyncAwait@PLT
 390      00
 391 045c 85C0     		testl	%eax, %eax
 392 045e 0F85F5FE 		jne	.L38
 392      FFFF
 393 0464 8B54243C 		movl	60(%rsp), %edx
 394 0468 488B7C24 		movq	72(%rsp), %rdi
 394      48
 395 046d 4C89F9   		movq	%r15, %rcx
 396 0470 BE010000 		movl	$1, %esi
 396      00
 397 0475 E8000000 		call	fwrite@PLT
 397      00
 398 047a 3B44243C 		cmpl	60(%rsp), %eax
 399 047e 89C1     		movl	%eax, %ecx
 400 0480 758E     		jne	.L43
 401 0482 488B5424 		movq	72(%rsp), %rdx
 401      48
 402 0487 31C0     		xorl	%eax, %eax
 403              	.L44:
 404 0489 39C1     		cmpl	%eax, %ecx
 405 048b 740B     		je	.L156
 406 048d 0FB63402 		movzbl	(%rdx,%rax), %esi
 407 0491 48FFC0   		incq	%rax
 408 0494 01F5     		addl	%esi, %ebp
 409 0496 EBF1     		jmp	.L44
 410              	.L156:
 411 0498 4531F6   		xorl	%r14d, %r14d
 412              	.L36:
 413 049b 488D7C24 		leaq	96(%rsp), %rdi
 413      60
 414 04a0 31F6     		xorl	%esi, %esi
 415 04a2 E8000000 		call	gettimeofday@PLT
 415      00
 416 04a7 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 416      000000
 417 04ae 0F844103 		je	.L65
 417      0000
 418 04b4 48694424 		imulq	$1000000, 96(%rsp), %rax
 418      6040420F 
 418      00
 419 04bd 48695424 		imulq	$1000000, 80(%rsp), %rdx
 419      5040420F 
 419      00
 420 04c6 488D3500 		leaq	.LC5(%rip), %rsi
 420      000000
 421 04cd 0FB7CD   		movzwl	%bp, %ecx
 422 04d0 4589E8   		movl	%r13d, %r8d
 423 04d3 BF010000 		movl	$1, %edi
 423      00
 424 04d8 48034424 		addq	104(%rsp), %rax
 424      68
 425 04dd 48035424 		addq	88(%rsp), %rdx
 425      58
 426 04e2 4829D0   		subq	%rdx, %rax
 427 04e5 4489E2   		movl	%r12d, %edx
 428 04e8 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 428      C8
 429 04ed 4489E0   		movl	%r12d, %eax
 430 04f0 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 430      C0
 431 04f5 B001     		movb	$1, %al
 432 04f7 F20F5E0D 		divsd	.LC3(%rip), %xmm1
 432      00000000 
 433 04ff F20F590D 		mulsd	.LC4(%rip), %xmm1
 433      00000000 
 434 0507 F20F5EC1 		divsd	%xmm1, %xmm0
 435 050b E8000000 		call	__printf_chk@PLT
 435      00
 436 0510 E9E00200 		jmp	.L65
 436      00
 437              	.L27:
 438 0515 488B7C24 		movq	24(%rsp), %rdi
 438      18
 439 051a 4489F5   		movl	%r14d, %ebp
 440 051d 31F6     		xorl	%esi, %esi
 441 051f 4889D9   		movq	%rbx, %rcx
 442 0522 4889EA   		movq	%rbp, %rdx
 443 0525 4C8B6424 		movq	120(%rsp), %r12
 443      78
 444 052a E8000000 		call	bufAppendConst@PLT
 444      00
 445 052f 85C0     		testl	%eax, %eax
 446 0531 7411     		je	.L50
 447              	.L56:
 448 0533 4531FF   		xorl	%r15d, %r15d
 449 0536 4531F6   		xorl	%r14d, %r14d
 450 0539 41BD0100 		movl	$1, %r13d
 450      0000
 451 053f E9F50200 		jmp	.L64
 451      00
 452              	.L50:
 453 0544 488D7C24 		leaq	80(%rsp), %rdi
 453      50
 454 0549 31F6     		xorl	%esi, %esi
 455 054b E8000000 		call	gettimeofday@PLT
 455      00
 456 0550 488B4C24 		movq	112(%rsp), %rcx
 456      70
 457 0555 488B3C24 		movq	(%rsp), %rdi
 458 0559 410FB6F5 		movzbl	%r13b, %esi
 459 055d 4989D8   		movq	%rbx, %r8
 460 0560 4889EA   		movq	%rbp, %rdx
 461 0563 4C01E1   		addq	%r12, %rcx
 462 0566 E8000000 		call	flReadChannel@PLT
 462      00
 463 056b 488D7C24 		leaq	96(%rsp), %rdi
 463      60
 464 0570 31F6     		xorl	%esi, %esi
 465 0572 4189C7   		movl	%eax, %r15d
 466 0575 E8000000 		call	gettimeofday@PLT
 466      00
 467 057a 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 467      000000
 468 0581 7473     		je	.L51
 469 0583 4C036424 		addq	112(%rsp), %r12
 469      70
 470 0588 31C0     		xorl	%eax, %eax
 471 058a 31C9     		xorl	%ecx, %ecx
 472              	.L52:
 473 058c 4839C5   		cmpq	%rax, %rbp
 474 058f 740C     		je	.L157
 475 0591 410FB614 		movzbl	(%r12,%rax), %edx
 475      04
 476 0596 48FFC0   		incq	%rax
 477 0599 01D1     		addl	%edx, %ecx
 478 059b EBEF     		jmp	.L52
 479              	.L157:
 480 059d 48694424 		imulq	$1000000, 96(%rsp), %rax
 480      6040420F 
 480      00
 481 05a6 48695424 		imulq	$1000000, 80(%rsp), %rdx
 481      5040420F 
 481      00
 482 05af F2480F2A 		cvtsi2sdq	%rbp, %xmm0
 482      C5
 483 05b4 488D3500 		leaq	.LC5(%rip), %rsi
 483      000000
 484 05bb 0FB7C9   		movzwl	%cx, %ecx
 485 05be 4589E8   		movl	%r13d, %r8d
 486 05c1 BF010000 		movl	$1, %edi
 486      00
 487 05c6 48034424 		addq	104(%rsp), %rax
 487      68
 488 05cb 48035424 		addq	88(%rsp), %rdx
 488      58
 489 05d0 4829D0   		subq	%rdx, %rax
 490 05d3 4489F2   		movl	%r14d, %edx
 491 05d6 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 491      C8
 492 05db B001     		movb	$1, %al
 493 05dd F20F5E0D 		divsd	.LC3(%rip), %xmm1
 493      00000000 
 494 05e5 F20F590D 		mulsd	.LC4(%rip), %xmm1
 494      00000000 
 495 05ed F20F5EC1 		divsd	%xmm1, %xmm0
 496 05f1 E8000000 		call	__printf_chk@PLT
 496      00
 497              	.L51:
 498 05f6 4585FF   		testl	%r15d, %r15d
 499 05f9 0F84CA04 		je	.L57
 499      0000
 500 05ff E92FFFFF 		jmp	.L56
 500      FF
 501              	.L97:
 502 0604 4531FF   		xorl	%r15d, %r15d
 503 0607 4531F6   		xorl	%r14d, %r14d
 504 060a 41BD0300 		movl	$3, %r13d
 504      0000
 505 0610 E9240200 		jmp	.L64
 505      00
 506              	.L102:
 507 0615 41BD0B00 		movl	$11, %r13d
 507      0000
 508 061b E9190200 		jmp	.L64
 508      00
 509              	.L22:
 510 0620 488D6F01 		leaq	1(%rdi), %rbp
 511 0624 48C74424 		movq	$1, 64(%rsp)
 511      40010000 
 511      00
 512 062d 48892D00 		movq	%rbp, ptr(%rip)
 512      000000
 513 0634 E8000000 		call	__errno_location@PLT
 513      00
 514 0639 488D7424 		leaq	72(%rsp), %rsi
 514      48
 515 063e 4989C5   		movq	%rax, %r13
 516 0641 C7000000 		movl	$0, (%rax)
 516      0000
 517 0647 BA100000 		movl	$16, %edx
 517      00
 518 064c 4889EF   		movq	%rbp, %rdi
 519 064f E8000000 		call	strtoul@PLT
 519      00
 520 0654 41837D00 		cmpl	$0, 0(%r13)
 520      00
 521 0659 4989C4   		movq	%rax, %r12
 522 065c 0F858B03 		jne	.L104
 522      0000
 523 0662 4883F87F 		cmpq	$127, %rax
 524 0666 0F879503 		ja	.L105
 524      0000
 525 066c 4C8B6C24 		movq	72(%rsp), %r13
 525      48
 526 0671 41807D00 		cmpb	$32, 0(%r13)
 526      20
 527 0676 4C892D00 		movq	%r13, ptr(%rip)
 527      000000
 528 067d 0F858B04 		jne	.L116
 528      0000
 529 0683 418A4501 		movb	1(%r13), %al
 530 0687 4D8D7D01 		leaq	1(%r13), %r15
 531 068b 4C893D00 		movq	%r15, ptr(%rip)
 531      000000
 532 0692 3C22     		cmpb	$34, %al
 533 0694 0F94C1   		sete	%cl
 534 0697 3C27     		cmpb	$39, %al
 535 0699 0F94C2   		sete	%dl
 536 069c 08CA     		orb	%cl, %dl
 537 069e 0F849D01 		je	.L60
 537      0000
 538 06a4 4983C502 		addq	$2, %r13
 539 06a8 66C74424 		movw	$0, 60(%rsp)
 539      3C0000
 540 06af 4C892D00 		movq	%r13, ptr(%rip)
 540      000000
 541 06b6 4C89ED   		movq	%r13, %rbp
 542              	.L61:
 543 06b9 8A5500   		movb	0(%rbp), %dl
 544 06bc 38C2     		cmpb	%al, %dl
 545 06be 740D     		je	.L62
 546 06c0 84D2     		testb	%dl, %dl
 547 06c2 0F843F01 		je	.L106
 547      0000
 548 06c8 48FFC5   		incq	%rbp
 549 06cb EBEC     		jmp	.L61
 550              	.L62:
 551 06cd 84C0     		testb	%al, %al
 552 06cf 0F843201 		je	.L106
 552      0000
 553 06d5 4989EF   		movq	%rbp, %r15
 554 06d8 4D29EF   		subq	%r13, %r15
 555 06db 498D7F01 		leaq	1(%r15), %rdi
 556 06df E8000000 		call	malloc@PLT
 556      00
 557 06e4 4885C0   		testq	%rax, %rax
 558 06e7 4989C6   		movq	%rax, %r14
 559 06ea 0F842501 		je	.L107
 559      0000
 560 06f0 4C39ED   		cmpq	%r13, %rbp
 561 06f3 0F842701 		je	.L108
 561      0000
 562 06f9 4C89FA   		movq	%r15, %rdx
 563 06fc 4C89EE   		movq	%r13, %rsi
 564 06ff 4889C7   		movq	%rax, %rdi
 565 0702 E8000000 		call	strncpy@PLT
 565      00
 566 0707 488D3500 		leaq	.LC6(%rip), %rsi
 566      000000
 567 070e 43C6043E 		movb	$0, (%r14,%r15)
 567      00
 568 0713 48FFC5   		incq	%rbp
 569 0716 4C89F7   		movq	%r14, %rdi
 570 0719 48892D00 		movq	%rbp, ptr(%rip)
 570      000000
 571 0720 E8000000 		call	fopen@PLT
 571      00
 572 0725 4885C0   		testq	%rax, %rax
 573 0728 4989C7   		movq	%rax, %r15
 574 072b 0F84FA00 		je	.L109
 574      0000
 575 0731 4C89F7   		movq	%r14, %rdi
 576 0734 E8000000 		call	free@PLT
 576      00
 577 0739 488D7C24 		leaq	80(%rsp), %rdi
 577      50
 578 073e 31F6     		xorl	%esi, %esi
 579 0740 E8000000 		call	gettimeofday@PLT
 579      00
 580 0745 488B3C24 		movq	(%rsp), %rdi
 581 0749 488D4C24 		leaq	64(%rsp), %rcx
 581      40
 582 074e 4C8D4424 		leaq	60(%rsp), %r8
 582      3C
 583 0753 4989D9   		movq	%rbx, %r9
 584 0756 4C89FA   		movq	%r15, %rdx
 585 0759 4489E6   		movl	%r12d, %esi
 586 075c E89FF8FF 		call	doWrite
 586      FF
 587 0761 488D7C24 		leaq	96(%rsp), %rdi
 587      60
 588 0766 31F6     		xorl	%esi, %esi
 589 0768 4189C6   		movl	%eax, %r14d
 590 076b E8000000 		call	gettimeofday@PLT
 590      00
 591 0770 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 591      000000
 592 0777 747C     		je	.L65
 593 0779 48694424 		imulq	$1000000, 96(%rsp), %rax
 593      6040420F 
 593      00
 594 0782 48694C24 		imulq	$1000000, 80(%rsp), %rcx
 594      5040420F 
 594      00
 595 078b 488B5424 		movq	64(%rsp), %rdx
 595      40
 596 0790 48034424 		addq	104(%rsp), %rax
 596      68
 597 0795 48034C24 		addq	88(%rsp), %rcx
 597      58
 598 079a 4829C8   		subq	%rcx, %rax
 599 079d 4885D2   		testq	%rdx, %rdx
 600 07a0 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 600      C8
 601 07a5 7807     		js	.L66
 602 07a7 F2480F2A 		cvtsi2sdq	%rdx, %xmm0
 602      C2
 603 07ac EB18     		jmp	.L67
 604              	.L66:
 605 07ae 4889D0   		movq	%rdx, %rax
 606 07b1 4889D1   		movq	%rdx, %rcx
 607 07b4 48D1E8   		shrq	%rax
 608 07b7 83E101   		andl	$1, %ecx
 609 07ba 4809C8   		orq	%rcx, %rax
 610 07bd F2480F2A 		cvtsi2sdq	%rax, %xmm0
 610      C0
 611 07c2 F20F58C0 		addsd	%xmm0, %xmm0
 612              	.L67:
 613 07c6 F20F5E0D 		divsd	.LC3(%rip), %xmm1
 613      00000000 
 614 07ce 0FB74C24 		movzwl	60(%rsp), %ecx
 614      3C
 615 07d3 488D3500 		leaq	.LC7(%rip), %rsi
 615      000000
 616 07da 4D89E0   		movq	%r12, %r8
 617 07dd BF010000 		movl	$1, %edi
 617      00
 618 07e2 B001     		movb	$1, %al
 619 07e4 F20F590D 		mulsd	.LC4(%rip), %xmm1
 619      00000000 
 620 07ec F20F5EC1 		divsd	%xmm1, %xmm0
 621 07f0 E8000000 		call	__printf_chk@PLT
 621      00
 622              	.L65:
 623 07f5 4585F6   		testl	%r14d, %r14d
 624 07f8 7539     		jne	.L110
 625 07fa 4C89FF   		movq	%r15, %rdi
 626 07fd E8000000 		call	fclose@PLT
 626      00
 627 0802 E9C20200 		jmp	.L57
 627      00
 628              	.L106:
 629 0807 4531FF   		xorl	%r15d, %r15d
 630 080a 4531F6   		xorl	%r14d, %r14d
 631 080d 41BD0600 		movl	$6, %r13d
 631      0000
 632 0813 EB24     		jmp	.L64
 633              	.L107:
 634 0815 4531FF   		xorl	%r15d, %r15d
 635 0818 41BD0700 		movl	$7, %r13d
 635      0000
 636 081e EB19     		jmp	.L64
 637              	.L108:
 638 0820 4531FF   		xorl	%r15d, %r15d
 639 0823 41BD0800 		movl	$8, %r13d
 639      0000
 640 0829 EB0E     		jmp	.L64
 641              	.L109:
 642 082b 41BD0A00 		movl	$10, %r13d
 642      0000
 643 0831 EB06     		jmp	.L64
 644              	.L110:
 645 0833 4589F5   		movl	%r14d, %r13d
 646 0836 4531F6   		xorl	%r14d, %r14d
 647              	.L64:
 648 0839 4531E4   		xorl	%r12d, %r12d
 649 083c E9DC0200 		jmp	.L18
 649      00
 650              	.L60:
 651 0841 8D48D0   		leal	-48(%rax), %ecx
 652 0844 80F909   		cmpb	$9, %cl
 653 0847 760E     		jbe	.L69
 654 0849 83E0DF   		andl	$-33, %eax
 655 084c 83E841   		subl	$65, %eax
 656 084f 3C05     		cmpb	$5, %al
 657 0851 0F87B702 		ja	.L116
 657      0000
 658              	.L69:
 659 0857 498D6D02 		leaq	2(%r13), %rbp
 660              	.L71:
 661 085b 8A4500   		movb	0(%rbp), %al
 662 085e 8D48D0   		leal	-48(%rax), %ecx
 663 0861 80F909   		cmpb	$9, %cl
 664 0864 7705     		ja	.L158
 665              	.L72:
 666 0866 48FFC5   		incq	%rbp
 667 0869 EBF0     		jmp	.L71
 668              	.L158:
 669 086b 83E0DF   		andl	$-33, %eax
 670 086e 83E841   		subl	$65, %eax
 671 0871 3C05     		cmpb	$5, %al
 672 0873 76F1     		jbe	.L72
 673 0875 4C29FD   		subq	%r15, %rbp
 674 0878 88542408 		movb	%dl, 8(%rsp)
 675 087c 40F6C501 		testb	$1, %bpl
 676 0880 0F858F01 		jne	.L111
 676      0000
 677 0886 48D1ED   		shrq	%rbp
 678 0889 4889EF   		movq	%rbp, %rdi
 679 088c 48896C24 		movq	%rbp, 64(%rsp)
 679      40
 680 0891 E8000000 		call	malloc@PLT
 680      00
 681 0896 8A542408 		movb	8(%rsp), %dl
 682 089a 4989C6   		movq	%rax, %r14
 683 089d 31C9     		xorl	%ecx, %ecx
 684              	.L73:
 685 089f 4839CD   		cmpq	%rcx, %rbp
 686 08a2 745A     		je	.L159
 687 08a4 418A544D 		movb	1(%r13,%rcx,2), %dl
 687      01
 688 08a9 8D42D0   		leal	-48(%rdx), %eax
 689 08ac 3C09     		cmpb	$9, %al
 690 08ae 7616     		jbe	.L74
 691 08b0 8D429F   		leal	-97(%rdx), %eax
 692 08b3 3C05     		cmpb	$5, %al
 693 08b5 7705     		ja	.L75
 694 08b7 8D42A9   		leal	-87(%rdx), %eax
 695 08ba EB0A     		jmp	.L74
 696              	.L75:
 697 08bc 8D42BF   		leal	-65(%rdx), %eax
 698 08bf 3C05     		cmpb	$5, %al
 699 08c1 7734     		ja	.L76
 700 08c3 8D42C9   		leal	-55(%rdx), %eax
 701              	.L74:
 702 08c6 418A544D 		movb	2(%r13,%rcx,2), %dl
 702      02
 703 08cb 8D72D0   		leal	-48(%rdx), %esi
 704 08ce 4080FE09 		cmpb	$9, %sil
 705 08d2 761A     		jbe	.L77
 706 08d4 8D729F   		leal	-97(%rdx), %esi
 707 08d7 4080FE05 		cmpb	$5, %sil
 708 08db 7705     		ja	.L78
 709 08dd 8D72A9   		leal	-87(%rdx), %esi
 710 08e0 EB0C     		jmp	.L77
 711              	.L78:
 712 08e2 8D72BF   		leal	-65(%rdx), %esi
 713 08e5 4080FE05 		cmpb	$5, %sil
 714 08e9 770C     		ja	.L76
 715 08eb 8D72C9   		leal	-55(%rdx), %esi
 716              	.L77:
 717 08ee C1E004   		sall	$4, %eax
 718 08f1 09F0     		orl	%esi, %eax
 719 08f3 4188040E 		movb	%al, (%r14,%rcx)
 720              	.L76:
 721 08f7 48FFC1   		incq	%rcx
 722 08fa B201     		movb	$1, %dl
 723 08fc EBA1     		jmp	.L73
 724              	.L159:
 725 08fe 4801ED   		addq	%rbp, %rbp
 726 0901 4C01FD   		addq	%r15, %rbp
 727 0904 84D2     		testb	%dl, %dl
 728 0906 7407     		je	.L80
 729 0908 48892D00 		movq	%rbp, ptr(%rip)
 729      000000
 730              	.L80:
 731 090f 488D7C24 		leaq	80(%rsp), %rdi
 731      50
 732 0914 31F6     		xorl	%esi, %esi
 733 0916 E8000000 		call	gettimeofday@PLT
 733      00
 734 091b 488B5424 		movq	64(%rsp), %rdx
 734      40
 735 0920 488B3C24 		movq	(%rsp), %rdi
 736 0924 4989D8   		movq	%rbx, %r8
 737 0927 4C89F1   		movq	%r14, %rcx
 738 092a 4489E6   		movl	%r12d, %esi
 739 092d E8000000 		call	flWriteChannel@PLT
 739      00
 740 0932 488D7C24 		leaq	96(%rsp), %rdi
 740      60
 741 0937 31F6     		xorl	%esi, %esi
 742 0939 89C5     		movl	%eax, %ebp
 743 093b E8000000 		call	gettimeofday@PLT
 743      00
 744 0940 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 744      000000
 745 0947 0F848F00 		je	.L81
 745      0000
 746 094d 488B4424 		movq	64(%rsp), %rax
 746      40
 747 0952 31D2     		xorl	%edx, %edx
 748 0954 31C9     		xorl	%ecx, %ecx
 749              	.L82:
 750 0956 4839D0   		cmpq	%rdx, %rax
 751 0959 740C     		je	.L160
 752 095b 410FB634 		movzbl	(%r14,%rdx), %esi
 752      16
 753 0960 48FFC2   		incq	%rdx
 754 0963 01F1     		addl	%esi, %ecx
 755 0965 EBEF     		jmp	.L82
 756              	.L160:
 757 0967 48694424 		imulq	$1000000, 96(%rsp), %rax
 757      6040420F 
 757      00
 758 0970 48697424 		imulq	$1000000, 80(%rsp), %rsi
 758      5040420F 
 758      00
 759 0979 48034424 		addq	104(%rsp), %rax
 759      68
 760 097e 48037424 		addq	88(%rsp), %rsi
 760      58
 761 0983 4829F0   		subq	%rsi, %rax
 762 0986 4885D2   		testq	%rdx, %rdx
 763 0989 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 763      C8
 764 098e 7807     		js	.L84
 765 0990 F2480F2A 		cvtsi2sdq	%rdx, %xmm0
 765      C2
 766 0995 EB18     		jmp	.L85
 767              	.L84:
 768 0997 4889D0   		movq	%rdx, %rax
 769 099a 4889D6   		movq	%rdx, %rsi
 770 099d 48D1E8   		shrq	%rax
 771 09a0 83E601   		andl	$1, %esi
 772 09a3 4809F0   		orq	%rsi, %rax
 773 09a6 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 773      C0
 774 09ab F20F58C0 		addsd	%xmm0, %xmm0
 775              	.L85:
 776 09af F20F5E0D 		divsd	.LC3(%rip), %xmm1
 776      00000000 
 777 09b7 488D3500 		leaq	.LC7(%rip), %rsi
 777      000000
 778 09be 0FB7C9   		movzwl	%cx, %ecx
 779 09c1 4D89E0   		movq	%r12, %r8
 780 09c4 BF010000 		movl	$1, %edi
 780      00
 781 09c9 B001     		movb	$1, %al
 782 09cb F20F590D 		mulsd	.LC4(%rip), %xmm1
 782      00000000 
 783 09d3 F20F5EC1 		divsd	%xmm1, %xmm0
 784 09d7 E8000000 		call	__printf_chk@PLT
 784      00
 785              	.L81:
 786 09dc 85ED     		testl	%ebp, %ebp
 787 09de 7549     		jne	.L112
 788 09e0 4C89F7   		movq	%r14, %rdi
 789 09e3 E8000000 		call	free@PLT
 789      00
 790 09e8 E9DC0000 		jmp	.L57
 790      00
 791              	.L104:
 792 09ed 4531FF   		xorl	%r15d, %r15d
 793 09f0 4531F6   		xorl	%r14d, %r14d
 794 09f3 4531E4   		xorl	%r12d, %r12d
 795 09f6 41BD0200 		movl	$2, %r13d
 795      0000
 796 09fc E91C0100 		jmp	.L18
 796      00
 797              	.L105:
 798 0a01 4531FF   		xorl	%r15d, %r15d
 799 0a04 4531F6   		xorl	%r14d, %r14d
 800 0a07 4531E4   		xorl	%r12d, %r12d
 801 0a0a 41BD0300 		movl	$3, %r13d
 801      0000
 802 0a10 E9080100 		jmp	.L18
 802      00
 803              	.L111:
 804 0a15 4531FF   		xorl	%r15d, %r15d
 805 0a18 4531F6   		xorl	%r14d, %r14d
 806 0a1b 4531E4   		xorl	%r12d, %r12d
 807 0a1e 41BD0900 		movl	$9, %r13d
 807      0000
 808 0a24 E9F40000 		jmp	.L18
 808      00
 809              	.L112:
 810 0a29 4D89F4   		movq	%r14, %r12
 811 0a2c 4531FF   		xorl	%r15d, %r15d
 812 0a2f 4531F6   		xorl	%r14d, %r14d
 813 0a32 41BD0100 		movl	$1, %r13d
 813      0000
 814 0a38 E9E00000 		jmp	.L18
 814      00
 815              	.L154:
 816 0a3d 488D6F01 		leaq	1(%rdi), %rbp
 817 0a41 48892D00 		movq	%rbp, ptr(%rip)
 817      000000
 818 0a48 E8000000 		call	__errno_location@PLT
 818      00
 819 0a4d 488D7424 		leaq	72(%rsp), %rsi
 819      48
 820 0a52 4989C4   		movq	%rax, %r12
 821 0a55 C7000000 		movl	$0, (%rax)
 821      0000
 822 0a5b BA100000 		movl	$16, %edx
 822      00
 823 0a60 4889EF   		movq	%rbp, %rdi
 824 0a63 E8000000 		call	strtoul@PLT
 824      00
 825 0a68 41833C24 		cmpl	$0, (%r12)
 825      00
 826 0a6d 7539     		jne	.L113
 827 0a6f 3DFF0000 		cmpl	$255, %eax
 827      00
 828 0a74 773A     		ja	.L114
 829 0a76 488B5424 		movq	72(%rsp), %rdx
 829      48
 830 0a7b 48891500 		movq	%rdx, ptr(%rip)
 830      000000
 831 0a82 8A12     		movb	(%rdx), %dl
 832 0a84 84D2     		testb	%dl, %dl
 833 0a86 7405     		je	.L119
 834 0a88 80FA3B   		cmpb	$59, %dl
 835 0a8b 752B     		jne	.L115
 836              	.L119:
 837 0a8d 488B3C24 		movq	(%rsp), %rdi
 838 0a91 0FB6F0   		movzbl	%al, %esi
 839 0a94 4889DA   		movq	%rbx, %rdx
 840 0a97 E8000000 		call	flSelectConduit@PLT
 840      00
 841 0a9c 85C0     		testl	%eax, %eax
 842 0a9e 7429     		je	.L57
 843 0aa0 41BD0100 		movl	$1, %r13d
 843      0000
 844 0aa6 EB16     		jmp	.L86
 845              	.L113:
 846 0aa8 41BD0200 		movl	$2, %r13d
 846      0000
 847 0aae EB0E     		jmp	.L86
 848              	.L114:
 849 0ab0 41BD0400 		movl	$4, %r13d
 849      0000
 850 0ab6 EB06     		jmp	.L86
 851              	.L115:
 852 0ab8 41BD0500 		movl	$5, %r13d
 852      0000
 853              	.L86:
 854 0abe 4531FF   		xorl	%r15d, %r15d
 855 0ac1 4531F6   		xorl	%r14d, %r14d
 856 0ac4 4531E4   		xorl	%r12d, %r12d
 857 0ac7 EB54     		jmp	.L18
 858              	.L57:
 859 0ac9 488B0500 		movq	ptr(%rip), %rax
 859      000000
 860 0ad0 8A00     		movb	(%rax), %al
 861 0ad2 3C3B     		cmpb	$59, %al
 862 0ad4 0F8492F6 		je	.L19
 862      FFFF
 863 0ada 84C0     		testb	%al, %al
 864 0adc 7530     		jne	.L116
 865 0ade 488B5424 		movq	120(%rsp), %rdx
 865      78
 866 0ae3 488B7424 		movq	112(%rsp), %rsi
 866      70
 867 0ae8 31FF     		xorl	%edi, %edi
 868 0aea 4531FF   		xorl	%r15d, %r15d
 869 0aed 4531F6   		xorl	%r14d, %r14d
 870 0af0 4531E4   		xorl	%r12d, %r12d
 871 0af3 4531ED   		xorl	%r13d, %r13d
 872 0af6 E8000000 		call	dump@PLT
 872      00
 873 0afb EB20     		jmp	.L18
 874              	.L95:
 875 0afd 4531FF   		xorl	%r15d, %r15d
 876 0b00 4531F6   		xorl	%r14d, %r14d
 877 0b03 4531E4   		xorl	%r12d, %r12d
 878 0b06 41BD0100 		movl	$1, %r13d
 878      0000
 879 0b0c EB0F     		jmp	.L18
 880              	.L116:
 881 0b0e 4531FF   		xorl	%r15d, %r15d
 882 0b11 4531F6   		xorl	%r14d, %r14d
 883 0b14 4531E4   		xorl	%r12d, %r12d
 884 0b17 41BD0500 		movl	$5, %r13d
 884      0000
 885              	.L18:
 886 0b1d 488D7C24 		leaq	112(%rsp), %rdi
 886      70
 887 0b22 E8000000 		call	bufDestroy@PLT
 887      00
 888 0b27 4D85FF   		testq	%r15, %r15
 889 0b2a 7408     		je	.L90
 890 0b2c 4C89FF   		movq	%r15, %rdi
 891 0b2f E8000000 		call	fclose@PLT
 891      00
 892              	.L90:
 893 0b34 4C89F7   		movq	%r14, %rdi
 894 0b37 E8000000 		call	free@PLT
 894      00
 895 0b3c 4C89E7   		movq	%r12, %rdi
 896 0b3f E8000000 		call	free@PLT
 896      00
 897 0b44 4183FD01 		cmpl	$1, %r13d
 898 0b48 7676     		jbe	.L91
 899 0b4a 488D1500 		leaq	errMessages(%rip), %rdx
 899      000000
 900 0b51 4C8B0500 		movq	ptr(%rip), %r8
 900      000000
 901 0b58 4489E8   		movl	%r13d, %eax
 902 0b5b 4C2B4424 		subq	16(%rsp), %r8
 902      10
 903 0b60 4C8B4C24 		movq	16(%rsp), %r9
 903      10
 904 0b65 4C8D2500 		leaq	.LC9(%rip), %r12
 904      000000
 905 0b6c 488B0CC2 		movq	(%rdx,%rax,8), %rcx
 906 0b70 488B3D00 		movq	stderr(%rip), %rdi
 906      000000
 907 0b77 488D1500 		leaq	.LC8(%rip), %rdx
 907      000000
 908 0b7e BE010000 		movl	$1, %esi
 908      00
 909 0b83 31C0     		xorl	%eax, %eax
 910 0b85 31DB     		xorl	%ebx, %ebx
 911 0b87 4489C5   		movl	%r8d, %ebp
 912 0b8a E8000000 		call	__fprintf_chk@PLT
 912      00
 913              	.L92:
 914 0b8f 39EB     		cmpl	%ebp, %ebx
 915 0b91 488B3D00 		movq	stderr(%rip), %rdi
 915      000000
 916 0b98 7D13     		jge	.L161
 917 0b9a 4C89E2   		movq	%r12, %rdx
 918 0b9d BE010000 		movl	$1, %esi
 918      00
 919 0ba2 31C0     		xorl	%eax, %eax
 920 0ba4 E8000000 		call	__fprintf_chk@PLT
 920      00
 921 0ba9 FFC3     		incl	%ebx
 922 0bab EBE2     		jmp	.L92
 923              	.L161:
 924 0bad 488D1500 		leaq	.LC10(%rip), %rdx
 924      000000
 925 0bb4 BE010000 		movl	$1, %esi
 925      00
 926 0bb9 31C0     		xorl	%eax, %eax
 927 0bbb E8000000 		call	__fprintf_chk@PLT
 927      00
 928              	.L91:
 929 0bc0 488B9C24 		movq	152(%rsp), %rbx
 929      98000000 
 930 0bc8 6448331C 		xorq	%fs:40, %rbx
 930      25280000 
 930      00
 931 0bd1 4489E8   		movl	%r13d, %eax
 932 0bd4 7405     		je	.L94
 933 0bd6 E8000000 		call	__stack_chk_fail@PLT
 933      00
 934              	.L94:
 935 0bdb 4881C4A8 		addq	$168, %rsp
 935      000000
 936              		.cfi_def_cfa_offset 56
 937 0be2 5B       		popq	%rbx
 938              		.cfi_def_cfa_offset 48
 939 0be3 5D       		popq	%rbp
 940              		.cfi_def_cfa_offset 40
 941 0be4 415C     		popq	%r12
 942              		.cfi_def_cfa_offset 32
 943 0be6 415D     		popq	%r13
 944              		.cfi_def_cfa_offset 24
 945 0be8 415E     		popq	%r14
 946              		.cfi_def_cfa_offset 16
 947 0bea 415F     		popq	%r15
 948              		.cfi_def_cfa_offset 8
 949 0bec C3       		ret
 950              		.cfi_endproc
 951              	.LFE52:
 953              		.globl	__popcountdi2
 954              		.text
 955              		.p2align 4,,15
 956              		.globl	popcount
 958              	popcount:
 959              	.LFB45:
 960              		.cfi_startproc
 961 0000 4883EC08 		subq	$8, %rsp
 962              		.cfi_def_cfa_offset 16
 963 0004 89FF     		movl	%edi, %edi
 964 0006 E8000000 		call	__popcountdi2@PLT
 964      00
 965 000b 4883C408 		addq	$8, %rsp
 966              		.cfi_def_cfa_offset 8
 967 000f C3       		ret
 968              		.cfi_endproc
 969              	.LFE45:
 971              		.p2align 4,,15
 972              		.globl	pow1
 974              	pow1:
 975              	.LFB53:
 976              		.cfi_startproc
 977 0010 85F6     		testl	%esi, %esi
 978 0012 0F8E0001 		jle	.L170
 978      0000
 979 0018 8D46FF   		leal	-1(%rsi), %eax
 980 001b 83F808   		cmpl	$8, %eax
 981 001e 0F860401 		jbe	.L171
 981      0000
 982 0024 897C24F4 		movl	%edi, -12(%rsp)
 983 0028 89F2     		movl	%esi, %edx
 984 002a 31C0     		xorl	%eax, %eax
 985 002c 660F6E6C 		movd	-12(%rsp), %xmm5
 985      24F4
 986 0032 C1EA02   		shrl	$2, %edx
 987 0035 660F6F05 		movdqa	.LC11(%rip), %xmm0
 987      00000000 
 988 003d 660F70DD 		pshufd	$0, %xmm5, %xmm3
 988      00
 989 0042 660F6FE3 		movdqa	%xmm3, %xmm4
 990 0046 660F73D4 		psrlq	$32, %xmm4
 990      20
 991 004b 0F1F4400 		.p2align 4,,10
 991      00
 992              		.p2align 3
 993              	.L167:
 994 0050 660F6FD0 		movdqa	%xmm0, %xmm2
 995 0054 83C001   		addl	$1, %eax
 996 0057 660F6FC8 		movdqa	%xmm0, %xmm1
 997 005b 39D0     		cmpl	%edx, %eax
 998 005d 660FF4D3 		pmuludq	%xmm3, %xmm2
 999 0061 660F70C2 		pshufd	$8, %xmm2, %xmm0
 999      08
 1000 0066 660F73D1 		psrlq	$32, %xmm1
 1000      20
 1001 006b 660FF4CC 		pmuludq	%xmm4, %xmm1
 1002 006f 660F70C9 		pshufd	$8, %xmm1, %xmm1
 1002      08
 1003 0074 660F62C1 		punpckldq	%xmm1, %xmm0
 1004 0078 72D6     		jb	.L167
 1005 007a 660F6FD0 		movdqa	%xmm0, %xmm2
 1006 007e 89F2     		movl	%esi, %edx
 1007 0080 660F6FC8 		movdqa	%xmm0, %xmm1
 1008 0084 660F73D0 		psrlq	$32, %xmm0
 1008      20
 1009 0089 83E2FC   		andl	$-4, %edx
 1010 008c 660F73DA 		psrldq	$8, %xmm2
 1010      08
 1011 0091 39D6     		cmpl	%edx, %esi
 1012 0093 660FF4CA 		pmuludq	%xmm2, %xmm1
 1013 0097 660F73D2 		psrlq	$32, %xmm2
 1013      20
 1014 009c 660F70C9 		pshufd	$8, %xmm1, %xmm1
 1014      08
 1015 00a1 660FF4C2 		pmuludq	%xmm2, %xmm0
 1016 00a5 660F70C0 		pshufd	$8, %xmm0, %xmm0
 1016      08
 1017 00aa 660F62C8 		punpckldq	%xmm0, %xmm1
 1018 00ae 660F6FC1 		movdqa	%xmm1, %xmm0
 1019 00b2 660F73D9 		psrldq	$4, %xmm1
 1019      04
 1020 00b7 660FF4C1 		pmuludq	%xmm1, %xmm0
 1021 00bb 660F7EC0 		movd	%xmm0, %eax
 1022 00bf 745F     		je	.L173
 1023              	.L166:
 1024 00c1 8D4A01   		leal	1(%rdx), %ecx
 1025 00c4 0FAFC7   		imull	%edi, %eax
 1026 00c7 39CE     		cmpl	%ecx, %esi
 1027 00c9 7E52     		jle	.L164
 1028 00cb 8D4A02   		leal	2(%rdx), %ecx
 1029 00ce 0FAFC7   		imull	%edi, %eax
 1030 00d1 39CE     		cmpl	%ecx, %esi
 1031 00d3 7E48     		jle	.L164
 1032 00d5 8D4A03   		leal	3(%rdx), %ecx
 1033 00d8 0FAFC7   		imull	%edi, %eax
 1034 00db 39CE     		cmpl	%ecx, %esi
 1035 00dd 7E3E     		jle	.L164
 1036 00df 8D4A04   		leal	4(%rdx), %ecx
 1037 00e2 0FAFC7   		imull	%edi, %eax
 1038 00e5 39CE     		cmpl	%ecx, %esi
 1039 00e7 7E34     		jle	.L164
 1040 00e9 8D4A05   		leal	5(%rdx), %ecx
 1041 00ec 0FAFC7   		imull	%edi, %eax
 1042 00ef 39CE     		cmpl	%ecx, %esi
 1043 00f1 7E2A     		jle	.L164
 1044 00f3 8D4A06   		leal	6(%rdx), %ecx
 1045 00f6 0FAFC7   		imull	%edi, %eax
 1046 00f9 39CE     		cmpl	%ecx, %esi
 1047 00fb 7E20     		jle	.L164
 1048 00fd 8D4A07   		leal	7(%rdx), %ecx
 1049 0100 0FAFC7   		imull	%edi, %eax
 1050 0103 39CE     		cmpl	%ecx, %esi
 1051 0105 7E16     		jle	.L164
 1052 0107 83C208   		addl	$8, %edx
 1053 010a 0FAFC7   		imull	%edi, %eax
 1054 010d 39D6     		cmpl	%edx, %esi
 1055 010f 7E0C     		jle	.L164
 1056 0111 0FAFC7   		imull	%edi, %eax
 1057 0114 C3       		ret
 1058              		.p2align 4,,10
 1059 0115 0F1F00   		.p2align 3
 1060              	.L170:
 1061 0118 B8010000 		movl	$1, %eax
 1061      00
 1062              	.L164:
 1063 011d F3C3     		rep ret
 1064 011f 90       		.p2align 4,,10
 1065              		.p2align 3
 1066              	.L173:
 1067 0120 F3C3     		rep ret
 1068              		.p2align 4,,10
 1069 0122 660F1F44 		.p2align 3
 1069      0000
 1070              	.L171:
 1071 0128 31D2     		xorl	%edx, %edx
 1072 012a B8010000 		movl	$1, %eax
 1072      00
 1073 012f EB90     		jmp	.L166
 1074              		.cfi_endproc
 1075              	.LFE53:
 1077              		.section	.rodata.str1.1
 1078              	.LC12:
 1079 0036 7200     		.string	"r"
 1080              		.section	.rodata.str1.8
 1081 007e 0000     		.align 8
 1082              	.LC13:
 1083 0080 2F686F6D 		.string	"/home/gani/eval/20140524/makestuff/hdlmake/apps/makestuff/swled/cksum/vhdl/track_data.csv
 1083      652F6761 
 1083      6E692F65 
 1083      76616C2F 
 1083      32303134 
 1084              		.section	.rodata.str1.1
 1085              	.LC14:
 1086 0038 6E6F2073 		.string	"no such file\n"
 1086      75636820 
 1086      66696C65 
 1086      0A00
 1087              	.LC33:
 1088 0046 25642C25 		.string	"%d,%d,%d,%d,%d"
 1088      642C2564 
 1088      2C25642C 
 1088      256400
 1089              		.text
 1090 0131 0F1F4400 		.p2align 4,,15
 1090      00662E0F 
 1090      1F840000 
 1090      000000
 1091              		.globl	text_read
 1093              	text_read:
 1094              	.LFB54:
 1095              		.cfi_startproc
 1096 0140 4157     		pushq	%r15
 1097              		.cfi_def_cfa_offset 16
 1098              		.cfi_offset 15, -16
 1099 0142 4156     		pushq	%r14
 1100              		.cfi_def_cfa_offset 24
 1101              		.cfi_offset 14, -24
 1102 0144 488D3500 		leaq	.LC12(%rip), %rsi
 1102      000000
 1103 014b 4155     		pushq	%r13
 1104              		.cfi_def_cfa_offset 32
 1105              		.cfi_offset 13, -32
 1106 014d 4154     		pushq	%r12
 1107              		.cfi_def_cfa_offset 40
 1108              		.cfi_offset 12, -40
 1109 014f 55       		pushq	%rbp
 1110              		.cfi_def_cfa_offset 48
 1111              		.cfi_offset 6, -48
 1112 0150 53       		pushq	%rbx
 1113              		.cfi_def_cfa_offset 56
 1114              		.cfi_offset 3, -56
 1115 0151 4889FD   		movq	%rdi, %rbp
 1116 0154 488D3D00 		leaq	.LC13(%rip), %rdi
 1116      000000
 1117 015b 4883EC38 		subq	$56, %rsp
 1118              		.cfi_def_cfa_offset 112
 1119 015f 64488B04 		movq	%fs:40, %rax
 1119      25280000 
 1119      00
 1120 0168 48894424 		movq	%rax, 40(%rsp)
 1120      28
 1121 016d 31C0     		xorl	%eax, %eax
 1122 016f E8000000 		call	fopen@PLT
 1122      00
 1123 0174 4885C0   		testq	%rax, %rax
 1124 0177 4889C3   		movq	%rax, %rbx
 1125 017a 0F844807 		je	.L244
 1125      0000
 1126              	.L175:
 1127 0180 4889EA   		movq	%rbp, %rdx
 1128 0183 4C8D8D00 		leaq	512(%rbp), %r9
 1128      020000
 1129 018a 4889E8   		movq	%rbp, %rax
 1130 018d 48F7DA   		negq	%rdx
 1131 0190 66440F6F 		movdqa	.LC20(%rip), %xmm14
 1131      35000000 
 1131      00
 1132 0199 83E20F   		andl	$15, %edx
 1133 019c 41B84000 		movl	$64, %r8d
 1133      0000
 1134 01a2 488D7C15 		leaq	16(%rbp,%rdx), %rdi
 1134      10
 1135 01a7 660F6F15 		movdqa	.LC15(%rip), %xmm2
 1135      00000000 
 1136 01af 66440F6F 		movdqa	.LC21(%rip), %xmm13
 1136      2D000000 
 1136      00
 1137 01b8 66440F6F 		movdqa	.LC22(%rip), %xmm12
 1137      25000000 
 1137      00
 1138 01c1 66440F6F 		movdqa	.LC23(%rip), %xmm11
 1138      1D000000 
 1138      00
 1139 01ca 660F6F2D 		movdqa	.LC19(%rip), %xmm5
 1139      00000000 
 1140 01d2 66440F6F 		movdqa	.LC24(%rip), %xmm10
 1140      15000000 
 1140      00
 1141 01db 66440F6F 		movdqa	.LC25(%rip), %xmm9
 1141      0D000000 
 1141      00
 1142 01e4 66440F6F 		movdqa	.LC26(%rip), %xmm8
 1142      05000000 
 1142      00
 1143 01ed 660F6F3D 		movdqa	.LC27(%rip), %xmm7
 1143      00000000 
 1144              		.p2align 4,,10
 1145 01f5 0F1F00   		.p2align 3
 1146              	.L176:
 1147 01f8 89C2     		movl	%eax, %edx
 1148 01fa F7DA     		negl	%edx
 1149 01fc 83E20F   		andl	$15, %edx
 1150 01ff 0F847305 		je	.L185
 1150      0000
 1151 0205 83FA01   		cmpl	$1, %edx
 1152 0208 C60000   		movb	$0, (%rax)
 1153 020b 0F844F05 		je	.L186
 1153      0000
 1154 0211 83FA02   		cmpl	$2, %edx
 1155 0214 C6400108 		movb	$8, 1(%rax)
 1156 0218 0F847205 		je	.L187
 1156      0000
 1157 021e 83FA03   		cmpl	$3, %edx
 1158 0221 C6400210 		movb	$16, 2(%rax)
 1159 0225 0F847D05 		je	.L188
 1159      0000
 1160 022b 83FA04   		cmpl	$4, %edx
 1161 022e C6400318 		movb	$24, 3(%rax)
 1162 0232 0F848805 		je	.L189
 1162      0000
 1163 0238 83FA05   		cmpl	$5, %edx
 1164 023b C6400420 		movb	$32, 4(%rax)
 1165 023f 0F849305 		je	.L190
 1165      0000
 1166 0245 83FA06   		cmpl	$6, %edx
 1167 0248 C6400528 		movb	$40, 5(%rax)
 1168 024c 0F849E05 		je	.L191
 1168      0000
 1169 0252 83FA07   		cmpl	$7, %edx
 1170 0255 C6400630 		movb	$48, 6(%rax)
 1171 0259 0F84A905 		je	.L192
 1171      0000
 1172 025f 83FA08   		cmpl	$8, %edx
 1173 0262 C6400738 		movb	$56, 7(%rax)
 1174 0266 0F84CC05 		je	.L193
 1174      0000
 1175 026c 83FA09   		cmpl	$9, %edx
 1176 026f C6400800 		movb	$0, 8(%rax)
 1177 0273 0F84A705 		je	.L194
 1177      0000
 1178 0279 83FA0A   		cmpl	$10, %edx
 1179 027c C6400908 		movb	$8, 9(%rax)
 1180 0280 0F84E205 		je	.L195
 1180      0000
 1181 0286 83FA0B   		cmpl	$11, %edx
 1182 0289 C6400A10 		movb	$16, 10(%rax)
 1183 028d 0F84BD05 		je	.L196
 1183      0000
 1184 0293 83FA0C   		cmpl	$12, %edx
 1185 0296 C6400B18 		movb	$24, 11(%rax)
 1186 029a 0F84E005 		je	.L197
 1186      0000
 1187 02a0 83FA0D   		cmpl	$13, %edx
 1188 02a3 C6400C20 		movb	$32, 12(%rax)
 1189 02a7 0F84EB05 		je	.L198
 1189      0000
 1190 02ad 83FA0F   		cmpl	$15, %edx
 1191 02b0 C6400D28 		movb	$40, 13(%rax)
 1192 02b4 0F85F605 		jne	.L199
 1192      0000
 1193 02ba C6400E30 		movb	$48, 14(%rax)
 1194 02be B9310000 		movl	$49, %ecx
 1194      00
 1195 02c3 C7442408 		movl	$15, 8(%rsp)
 1195      0F000000 
 1196              	.L180:
 1197 02cb 660F6E4C 		movd	8(%rsp), %xmm1
 1197      2408
 1198 02d1 4489C6   		movl	%r8d, %esi
 1199 02d4 66440F6F 		movdqa	.LC32(%rip), %xmm15
 1199      3D000000 
 1199      00
 1200 02dd 29D6     		subl	%edx, %esi
 1201 02df 660F70C9 		pshufd	$0, %xmm1, %xmm1
 1201      00
 1202 02e4 89F2     		movl	%esi, %edx
 1203 02e6 C1EA04   		shrl	$4, %edx
 1204 02e9 83FA04   		cmpl	$4, %edx
 1205 02ec 660F6FC1 		movdqa	%xmm1, %xmm0
 1206 02f0 660F6FD9 		movdqa	%xmm1, %xmm3
 1207 02f4 66440FFE 		paddd	%xmm1, %xmm15
 1207      F9
 1208 02f9 66440FDB 		pand	%xmm2, %xmm15
 1208      FA
 1209 02fe 66410FFE 		paddd	%xmm14, %xmm0
 1209      C6
 1210 0303 66410FFE 		paddd	%xmm13, %xmm3
 1210      DD
 1211 0308 660FDBC2 		pand	%xmm2, %xmm0
 1212 030c 660FDBDA 		pand	%xmm2, %xmm3
 1213 0310 660F6FE0 		movdqa	%xmm0, %xmm4
 1214 0314 660F61C3 		punpcklwd	%xmm3, %xmm0
 1215 0318 660F69E3 		punpckhwd	%xmm3, %xmm4
 1216 031c 660F6FD8 		movdqa	%xmm0, %xmm3
 1217 0320 660F61C4 		punpcklwd	%xmm4, %xmm0
 1218 0324 660F69DC 		punpckhwd	%xmm4, %xmm3
 1219 0328 660F6FE1 		movdqa	%xmm1, %xmm4
 1220 032c 66410FFE 		paddd	%xmm11, %xmm4
 1220      E3
 1221 0331 660FDBE2 		pand	%xmm2, %xmm4
 1222 0335 660F61C3 		punpcklwd	%xmm3, %xmm0
 1223 0339 660F6FD9 		movdqa	%xmm1, %xmm3
 1224 033d 66410FFE 		paddd	%xmm12, %xmm3
 1224      DC
 1225 0342 660FDBDA 		pand	%xmm2, %xmm3
 1226 0346 660FDBC5 		pand	%xmm5, %xmm0
 1227 034a 660F6FF3 		movdqa	%xmm3, %xmm6
 1228 034e 660F61DC 		punpcklwd	%xmm4, %xmm3
 1229 0352 660F69F4 		punpckhwd	%xmm4, %xmm6
 1230 0356 660F6FE3 		movdqa	%xmm3, %xmm4
 1231 035a 660F61DE 		punpcklwd	%xmm6, %xmm3
 1232 035e 660F69E6 		punpckhwd	%xmm6, %xmm4
 1233 0362 660F61DC 		punpcklwd	%xmm4, %xmm3
 1234 0366 660FDBDD 		pand	%xmm5, %xmm3
 1235 036a 660F67C3 		packuswb	%xmm3, %xmm0
 1236 036e 660F6FD9 		movdqa	%xmm1, %xmm3
 1237 0372 660FFCC0 		paddb	%xmm0, %xmm0
 1238 0376 660FFCC0 		paddb	%xmm0, %xmm0
 1239 037a 660FFCC0 		paddb	%xmm0, %xmm0
 1240 037e 0F2947F0 		movaps	%xmm0, -16(%rdi)
 1241 0382 66410FFE 		paddd	%xmm9, %xmm3
 1241      D9
 1242 0387 660F6FC1 		movdqa	%xmm1, %xmm0
 1243 038b 660FDBDA 		pand	%xmm2, %xmm3
 1244 038f 66410FFE 		paddd	%xmm10, %xmm0
 1244      C2
 1245 0394 660FDBC2 		pand	%xmm2, %xmm0
 1246 0398 660F6FE0 		movdqa	%xmm0, %xmm4
 1247 039c 660F61C3 		punpcklwd	%xmm3, %xmm0
 1248 03a0 660F69E3 		punpckhwd	%xmm3, %xmm4
 1249 03a4 660F6FD8 		movdqa	%xmm0, %xmm3
 1250 03a8 660F61C4 		punpcklwd	%xmm4, %xmm0
 1251 03ac 660F69DC 		punpckhwd	%xmm4, %xmm3
 1252 03b0 660F6FE1 		movdqa	%xmm1, %xmm4
 1253 03b4 660FFEE7 		paddd	%xmm7, %xmm4
 1254 03b8 660FDBE2 		pand	%xmm2, %xmm4
 1255 03bc 660F61C3 		punpcklwd	%xmm3, %xmm0
 1256 03c0 660F6FD9 		movdqa	%xmm1, %xmm3
 1257 03c4 66410FFE 		paddd	%xmm8, %xmm3
 1257      D8
 1258 03c9 660FDBDA 		pand	%xmm2, %xmm3
 1259 03cd 660FDBC5 		pand	%xmm5, %xmm0
 1260 03d1 660F6FF3 		movdqa	%xmm3, %xmm6
 1261 03d5 660F61DC 		punpcklwd	%xmm4, %xmm3
 1262 03d9 660F69F4 		punpckhwd	%xmm4, %xmm6
 1263 03dd 660F6FE3 		movdqa	%xmm3, %xmm4
 1264 03e1 660F61DE 		punpcklwd	%xmm6, %xmm3
 1265 03e5 660F69E6 		punpckhwd	%xmm6, %xmm4
 1266 03e9 660F61DC 		punpcklwd	%xmm4, %xmm3
 1267 03ed 660F6F25 		movdqa	.LC30(%rip), %xmm4
 1267      00000000 
 1268 03f5 660FDBDD 		pand	%xmm5, %xmm3
 1269 03f9 660FFEE1 		paddd	%xmm1, %xmm4
 1270 03fd 660FDBE2 		pand	%xmm2, %xmm4
 1271 0401 660F67C3 		packuswb	%xmm3, %xmm0
 1272 0405 660F6F1D 		movdqa	.LC28(%rip), %xmm3
 1272      00000000 
 1273 040d 660FFCC0 		paddb	%xmm0, %xmm0
 1274 0411 660FFCC0 		paddb	%xmm0, %xmm0
 1275 0415 660FFCC0 		paddb	%xmm0, %xmm0
 1276 0419 0F2907   		movaps	%xmm0, (%rdi)
 1277 041c 660FFED9 		paddd	%xmm1, %xmm3
 1278 0420 660F6F05 		movdqa	.LC29(%rip), %xmm0
 1278      00000000 
 1279 0428 660FFEC1 		paddd	%xmm1, %xmm0
 1280 042c 660FDBC2 		pand	%xmm2, %xmm0
 1281 0430 660F6FF0 		movdqa	%xmm0, %xmm6
 1282 0434 660F61C4 		punpcklwd	%xmm4, %xmm0
 1283 0438 660F69F4 		punpckhwd	%xmm4, %xmm6
 1284 043c 660F6FE0 		movdqa	%xmm0, %xmm4
 1285 0440 660F61C6 		punpcklwd	%xmm6, %xmm0
 1286 0444 660F69E6 		punpckhwd	%xmm6, %xmm4
 1287 0448 660F61C4 		punpcklwd	%xmm4, %xmm0
 1288 044c 660F6F25 		movdqa	.LC31(%rip), %xmm4
 1288      00000000 
 1289 0454 660FFEE1 		paddd	%xmm1, %xmm4
 1290 0458 660FDBE2 		pand	%xmm2, %xmm4
 1291 045c 660FDBC5 		pand	%xmm5, %xmm0
 1292 0460 660F6FF4 		movdqa	%xmm4, %xmm6
 1293 0464 66410F61 		punpcklwd	%xmm15, %xmm4
 1293      E7
 1294 0469 66410F69 		punpckhwd	%xmm15, %xmm6
 1294      F7
 1295 046e 66440F6F 		movdqa	%xmm4, %xmm15
 1295      FC
 1296 0473 660F61E6 		punpcklwd	%xmm6, %xmm4
 1297 0477 66440F69 		punpckhwd	%xmm6, %xmm15
 1297      FE
 1298 047c 66410F61 		punpcklwd	%xmm15, %xmm4
 1298      E7
 1299 0481 660FDBE5 		pand	%xmm5, %xmm4
 1300 0485 660F67C4 		packuswb	%xmm4, %xmm0
 1301 0489 660FFCC0 		paddb	%xmm0, %xmm0
 1302 048d 660FFCC0 		paddb	%xmm0, %xmm0
 1303 0491 660FFCC0 		paddb	%xmm0, %xmm0
 1304 0495 0F294710 		movaps	%xmm0, 16(%rdi)
 1305 0499 0F859000 		jne	.L178
 1305      0000
 1306 049f 660FDBDA 		pand	%xmm2, %xmm3
 1307 04a3 660F6F05 		movdqa	.LC16(%rip), %xmm0
 1307      00000000 
 1308 04ab 660F6FE3 		movdqa	%xmm3, %xmm4
 1309 04af 660FFEC1 		paddd	%xmm1, %xmm0
 1310 04b3 660FDBC2 		pand	%xmm2, %xmm0
 1311 04b7 660F61D8 		punpcklwd	%xmm0, %xmm3
 1312 04bb 660F69E0 		punpckhwd	%xmm0, %xmm4
 1313 04bf 660F6FC3 		movdqa	%xmm3, %xmm0
 1314 04c3 660F61DC 		punpcklwd	%xmm4, %xmm3
 1315 04c7 660F69C4 		punpckhwd	%xmm4, %xmm0
 1316 04cb 660F61D8 		punpcklwd	%xmm0, %xmm3
 1317 04cf 660F6F05 		movdqa	.LC17(%rip), %xmm0
 1317      00000000 
 1318 04d7 660FFEC1 		paddd	%xmm1, %xmm0
 1319 04db 660FDBC2 		pand	%xmm2, %xmm0
 1320 04df 660FFE0D 		paddd	.LC18(%rip), %xmm1
 1320      00000000 
 1321 04e7 660FDBCA 		pand	%xmm2, %xmm1
 1322 04eb 660FDBDD 		pand	%xmm5, %xmm3
 1323 04ef 660F6FF0 		movdqa	%xmm0, %xmm6
 1324 04f3 660F6FE0 		movdqa	%xmm0, %xmm4
 1325 04f7 660F61F1 		punpcklwd	%xmm1, %xmm6
 1326 04fb 660F69E1 		punpckhwd	%xmm1, %xmm4
 1327 04ff 660F6FC6 		movdqa	%xmm6, %xmm0
 1328 0503 660F6FCE 		movdqa	%xmm6, %xmm1
 1329 0507 660F69C4 		punpckhwd	%xmm4, %xmm0
 1330 050b 660F61CC 		punpcklwd	%xmm4, %xmm1
 1331 050f 660F61C8 		punpcklwd	%xmm0, %xmm1
 1332 0513 660F6FC3 		movdqa	%xmm3, %xmm0
 1333 0517 660FDBCD 		pand	%xmm5, %xmm1
 1334 051b 660F67C1 		packuswb	%xmm1, %xmm0
 1335 051f 660FFCC0 		paddb	%xmm0, %xmm0
 1336 0523 660FFCC0 		paddb	%xmm0, %xmm0
 1337 0527 660FFCC0 		paddb	%xmm0, %xmm0
 1338 052b 0F294720 		movaps	%xmm0, 32(%rdi)
 1339              	.L178:
 1340 052f 8B542408 		movl	8(%rsp), %edx
 1341 0533 4189F2   		movl	%esi, %r10d
 1342 0536 4183E2F0 		andl	$-16, %r10d
 1343 053a 4429D1   		subl	%r10d, %ecx
 1344 053d 4401D2   		addl	%r10d, %edx
 1345 0540 4439D6   		cmpl	%r10d, %esi
 1346 0543 0F845401 		je	.L177
 1346      0000
 1347 0549 89D6     		movl	%edx, %esi
 1348 054b 4C63D2   		movslq	%edx, %r10
 1349 054e 83E607   		andl	$7, %esi
 1350 0551 C1E603   		sall	$3, %esi
 1351 0554 83F901   		cmpl	$1, %ecx
 1352 0557 42883410 		movb	%sil, (%rax,%r10)
 1353 055b 8D7201   		leal	1(%rdx), %esi
 1354 055e 0F843901 		je	.L177
 1354      0000
 1355 0564 4C63D6   		movslq	%esi, %r10
 1356 0567 83E607   		andl	$7, %esi
 1357 056a C1E603   		sall	$3, %esi
 1358 056d 83F902   		cmpl	$2, %ecx
 1359 0570 42883410 		movb	%sil, (%rax,%r10)
 1360 0574 8D7202   		leal	2(%rdx), %esi
 1361 0577 0F842001 		je	.L177
 1361      0000
 1362 057d 4C63D6   		movslq	%esi, %r10
 1363 0580 83E607   		andl	$7, %esi
 1364 0583 C1E603   		sall	$3, %esi
 1365 0586 83F903   		cmpl	$3, %ecx
 1366 0589 42883410 		movb	%sil, (%rax,%r10)
 1367 058d 8D7203   		leal	3(%rdx), %esi
 1368 0590 0F840701 		je	.L177
 1368      0000
 1369 0596 4C63D6   		movslq	%esi, %r10
 1370 0599 83E607   		andl	$7, %esi
 1371 059c C1E603   		sall	$3, %esi
 1372 059f 83F904   		cmpl	$4, %ecx
 1373 05a2 42883410 		movb	%sil, (%rax,%r10)
 1374 05a6 8D7204   		leal	4(%rdx), %esi
 1375 05a9 0F84EE00 		je	.L177
 1375      0000
 1376 05af 4C63D6   		movslq	%esi, %r10
 1377 05b2 83E607   		andl	$7, %esi
 1378 05b5 C1E603   		sall	$3, %esi
 1379 05b8 83F905   		cmpl	$5, %ecx
 1380 05bb 42883410 		movb	%sil, (%rax,%r10)
 1381 05bf 8D7205   		leal	5(%rdx), %esi
 1382 05c2 0F84D500 		je	.L177
 1382      0000
 1383 05c8 4C63D6   		movslq	%esi, %r10
 1384 05cb 83E607   		andl	$7, %esi
 1385 05ce C1E603   		sall	$3, %esi
 1386 05d1 83F906   		cmpl	$6, %ecx
 1387 05d4 42883410 		movb	%sil, (%rax,%r10)
 1388 05d8 8D7206   		leal	6(%rdx), %esi
 1389 05db 0F84BC00 		je	.L177
 1389      0000
 1390 05e1 4C63D6   		movslq	%esi, %r10
 1391 05e4 83E607   		andl	$7, %esi
 1392 05e7 C1E603   		sall	$3, %esi
 1393 05ea 83F907   		cmpl	$7, %ecx
 1394 05ed 42883410 		movb	%sil, (%rax,%r10)
 1395 05f1 8D7207   		leal	7(%rdx), %esi
 1396 05f4 0F84A300 		je	.L177
 1396      0000
 1397 05fa 4C63D6   		movslq	%esi, %r10
 1398 05fd 83E607   		andl	$7, %esi
 1399 0600 C1E603   		sall	$3, %esi
 1400 0603 83F908   		cmpl	$8, %ecx
 1401 0606 42883410 		movb	%sil, (%rax,%r10)
 1402 060a 8D7208   		leal	8(%rdx), %esi
 1403 060d 0F848A00 		je	.L177
 1403      0000
 1404 0613 4C63D6   		movslq	%esi, %r10
 1405 0616 83E607   		andl	$7, %esi
 1406 0619 C1E603   		sall	$3, %esi
 1407 061c 83F909   		cmpl	$9, %ecx
 1408 061f 42883410 		movb	%sil, (%rax,%r10)
 1409 0623 8D7209   		leal	9(%rdx), %esi
 1410 0626 7475     		je	.L177
 1411 0628 4C63D6   		movslq	%esi, %r10
 1412 062b 83E607   		andl	$7, %esi
 1413 062e C1E603   		sall	$3, %esi
 1414 0631 83F90A   		cmpl	$10, %ecx
 1415 0634 42883410 		movb	%sil, (%rax,%r10)
 1416 0638 8D720A   		leal	10(%rdx), %esi
 1417 063b 7460     		je	.L177
 1418 063d 4C63D6   		movslq	%esi, %r10
 1419 0640 83E607   		andl	$7, %esi
 1420 0643 C1E603   		sall	$3, %esi
 1421 0646 83F90B   		cmpl	$11, %ecx
 1422 0649 42883410 		movb	%sil, (%rax,%r10)
 1423 064d 8D720B   		leal	11(%rdx), %esi
 1424 0650 744B     		je	.L177
 1425 0652 4C63D6   		movslq	%esi, %r10
 1426 0655 83E607   		andl	$7, %esi
 1427 0658 C1E603   		sall	$3, %esi
 1428 065b 83F90C   		cmpl	$12, %ecx
 1429 065e 42883410 		movb	%sil, (%rax,%r10)
 1430 0662 8D720C   		leal	12(%rdx), %esi
 1431 0665 7436     		je	.L177
 1432 0667 4C63D6   		movslq	%esi, %r10
 1433 066a 83E607   		andl	$7, %esi
 1434 066d C1E603   		sall	$3, %esi
 1435 0670 83F90D   		cmpl	$13, %ecx
 1436 0673 42883410 		movb	%sil, (%rax,%r10)
 1437 0677 8D720D   		leal	13(%rdx), %esi
 1438 067a 7421     		je	.L177
 1439 067c 4C63D6   		movslq	%esi, %r10
 1440 067f 83E607   		andl	$7, %esi
 1441 0682 83C20E   		addl	$14, %edx
 1442 0685 C1E603   		sall	$3, %esi
 1443 0688 83F90E   		cmpl	$14, %ecx
 1444 068b 42883410 		movb	%sil, (%rax,%r10)
 1445 068f 740C     		je	.L177
 1446 0691 4863CA   		movslq	%edx, %rcx
 1447 0694 83E207   		andl	$7, %edx
 1448 0697 C1E203   		sall	$3, %edx
 1449 069a 881408   		movb	%dl, (%rax,%rcx)
 1450              	.L177:
 1451 069d 4883C040 		addq	$64, %rax
 1452 06a1 4883C740 		addq	$64, %rdi
 1453 06a5 4939C1   		cmpq	%rax, %r9
 1454 06a8 0F854AFB 		jne	.L176
 1454      FFFF
 1455 06ae 488D4424 		leaq	20(%rsp), %rax
 1455      14
 1456 06b3 4C8D7C24 		leaq	32(%rsp), %r15
 1456      20
 1457 06b8 4C8D7424 		leaq	28(%rsp), %r14
 1457      1C
 1458 06bd 4C8D6C24 		leaq	24(%rsp), %r13
 1458      18
 1459 06c2 4C8D6424 		leaq	36(%rsp), %r12
 1459      24
 1460 06c7 48894424 		movq	%rax, 8(%rsp)
 1460      08
 1461 06cc EB35     		jmp	.L179
 1462 06ce 6690     		.p2align 4,,10
 1463              		.p2align 3
 1464              	.L183:
 1465 06d0 8B44241C 		movl	28(%rsp), %eax
 1466 06d4 8B542418 		movl	24(%rsp), %edx
 1467 06d8 48634C24 		movslq	20(%rsp), %rcx
 1467      14
 1468 06dd 8D14D0   		leal	(%rax,%rdx,8), %edx
 1469 06e0 4863F2   		movslq	%edx, %rsi
 1470 06e3 89542418 		movl	%edx, 24(%rsp)
 1471 06e7 8B542424 		movl	36(%rsp), %edx
 1472 06eb 48C1E106 		salq	$6, %rcx
 1473 06ef 4801E9   		addq	%rbp, %rcx
 1474 06f2 8D44C280 		leal	-128(%rdx,%rax,8), %eax
 1475 06f6 0FB65424 		movzbl	32(%rsp), %edx
 1475      20
 1476 06fb C1E206   		sall	$6, %edx
 1477 06fe 01D0     		addl	%edx, %eax
 1478 0700 880431   		movb	%al, (%rcx,%rsi)
 1479              	.L179:
 1480 0703 4883EC08 		subq	$8, %rsp
 1481              		.cfi_def_cfa_offset 120
 1482 0707 488D3500 		leaq	.LC33(%rip), %rsi
 1482      000000
 1483 070e 4C89E9   		movq	%r13, %rcx
 1484 0711 4154     		pushq	%r12
 1485              		.cfi_def_cfa_offset 128
 1486 0713 488B5424 		movq	24(%rsp), %rdx
 1486      18
 1487 0718 31C0     		xorl	%eax, %eax
 1488 071a 4D89F9   		movq	%r15, %r9
 1489 071d 4D89F0   		movq	%r14, %r8
 1490 0720 4889DF   		movq	%rbx, %rdi
 1491 0723 E8000000 		call	__isoc99_fscanf@PLT
 1491      00
 1492 0728 83F8FF   		cmpl	$-1, %eax
 1493 072b 5A       		popq	%rdx
 1494              		.cfi_def_cfa_offset 120
 1495 072c 59       		popq	%rcx
 1496              		.cfi_def_cfa_offset 112
 1497 072d 75A1     		jne	.L183
 1498 072f 4889DF   		movq	%rbx, %rdi
 1499 0732 E8000000 		call	fclose@PLT
 1499      00
 1500 0737 488B4424 		movq	40(%rsp), %rax
 1500      28
 1501 073c 64483304 		xorq	%fs:40, %rax
 1501      25280000 
 1501      00
 1502 0745 0F859501 		jne	.L245
 1502      0000
 1503 074b 4883C438 		addq	$56, %rsp
 1504              		.cfi_remember_state
 1505              		.cfi_def_cfa_offset 56
 1506 074f 5B       		popq	%rbx
 1507              		.cfi_def_cfa_offset 48
 1508 0750 5D       		popq	%rbp
 1509              		.cfi_def_cfa_offset 40
 1510 0751 415C     		popq	%r12
 1511              		.cfi_def_cfa_offset 32
 1512 0753 415D     		popq	%r13
 1513              		.cfi_def_cfa_offset 24
 1514 0755 415E     		popq	%r14
 1515              		.cfi_def_cfa_offset 16
 1516 0757 415F     		popq	%r15
 1517              		.cfi_def_cfa_offset 8
 1518 0759 C3       		ret
 1519 075a 660F1F44 		.p2align 4,,10
 1519      0000
 1520              		.p2align 3
 1521              	.L186:
 1522              		.cfi_restore_state
 1523 0760 B93F0000 		movl	$63, %ecx
 1523      00
 1524 0765 C7442408 		movl	$1, 8(%rsp)
 1524      01000000 
 1525 076d E959FBFF 		jmp	.L180
 1525      FF
 1526              		.p2align 4,,10
 1527 0772 660F1F44 		.p2align 3
 1527      0000
 1528              	.L185:
 1529 0778 B9400000 		movl	$64, %ecx
 1529      00
 1530 077d C7442408 		movl	$0, 8(%rsp)
 1530      00000000 
 1531 0785 E941FBFF 		jmp	.L180
 1531      FF
 1532 078a 660F1F44 		.p2align 4,,10
 1532      0000
 1533              		.p2align 3
 1534              	.L187:
 1535 0790 B93E0000 		movl	$62, %ecx
 1535      00
 1536 0795 C7442408 		movl	$2, 8(%rsp)
 1536      02000000 
 1537 079d E929FBFF 		jmp	.L180
 1537      FF
 1538              		.p2align 4,,10
 1539 07a2 660F1F44 		.p2align 3
 1539      0000
 1540              	.L188:
 1541 07a8 B93D0000 		movl	$61, %ecx
 1541      00
 1542 07ad C7442408 		movl	$3, 8(%rsp)
 1542      03000000 
 1543 07b5 E911FBFF 		jmp	.L180
 1543      FF
 1544 07ba 660F1F44 		.p2align 4,,10
 1544      0000
 1545              		.p2align 3
 1546              	.L189:
 1547 07c0 B93C0000 		movl	$60, %ecx
 1547      00
 1548 07c5 C7442408 		movl	$4, 8(%rsp)
 1548      04000000 
 1549 07cd E9F9FAFF 		jmp	.L180
 1549      FF
 1550              		.p2align 4,,10
 1551 07d2 660F1F44 		.p2align 3
 1551      0000
 1552              	.L190:
 1553 07d8 B93B0000 		movl	$59, %ecx
 1553      00
 1554 07dd C7442408 		movl	$5, 8(%rsp)
 1554      05000000 
 1555 07e5 E9E1FAFF 		jmp	.L180
 1555      FF
 1556 07ea 660F1F44 		.p2align 4,,10
 1556      0000
 1557              		.p2align 3
 1558              	.L191:
 1559 07f0 B93A0000 		movl	$58, %ecx
 1559      00
 1560 07f5 C7442408 		movl	$6, 8(%rsp)
 1560      06000000 
 1561 07fd E9C9FAFF 		jmp	.L180
 1561      FF
 1562              		.p2align 4,,10
 1563 0802 660F1F44 		.p2align 3
 1563      0000
 1564              	.L192:
 1565 0808 B9390000 		movl	$57, %ecx
 1565      00
 1566 080d C7442408 		movl	$7, 8(%rsp)
 1566      07000000 
 1567 0815 E9B1FAFF 		jmp	.L180
 1567      FF
 1568 081a 660F1F44 		.p2align 4,,10
 1568      0000
 1569              		.p2align 3
 1570              	.L194:
 1571 0820 B9370000 		movl	$55, %ecx
 1571      00
 1572 0825 C7442408 		movl	$9, 8(%rsp)
 1572      09000000 
 1573 082d E999FAFF 		jmp	.L180
 1573      FF
 1574              		.p2align 4,,10
 1575 0832 660F1F44 		.p2align 3
 1575      0000
 1576              	.L193:
 1577 0838 B9380000 		movl	$56, %ecx
 1577      00
 1578 083d C7442408 		movl	$8, 8(%rsp)
 1578      08000000 
 1579 0845 E981FAFF 		jmp	.L180
 1579      FF
 1580 084a 660F1F44 		.p2align 4,,10
 1580      0000
 1581              		.p2align 3
 1582              	.L196:
 1583 0850 B9350000 		movl	$53, %ecx
 1583      00
 1584 0855 C7442408 		movl	$11, 8(%rsp)
 1584      0B000000 
 1585 085d E969FAFF 		jmp	.L180
 1585      FF
 1586              		.p2align 4,,10
 1587 0862 660F1F44 		.p2align 3
 1587      0000
 1588              	.L195:
 1589 0868 B9360000 		movl	$54, %ecx
 1589      00
 1590 086d C7442408 		movl	$10, 8(%rsp)
 1590      0A000000 
 1591 0875 E951FAFF 		jmp	.L180
 1591      FF
 1592 087a 660F1F44 		.p2align 4,,10
 1592      0000
 1593              		.p2align 3
 1594              	.L197:
 1595 0880 B9340000 		movl	$52, %ecx
 1595      00
 1596 0885 C7442408 		movl	$12, 8(%rsp)
 1596      0C000000 
 1597 088d E939FAFF 		jmp	.L180
 1597      FF
 1598              		.p2align 4,,10
 1599 0892 660F1F44 		.p2align 3
 1599      0000
 1600              	.L198:
 1601 0898 B9330000 		movl	$51, %ecx
 1601      00
 1602 089d C7442408 		movl	$13, 8(%rsp)
 1602      0D000000 
 1603 08a5 E921FAFF 		jmp	.L180
 1603      FF
 1604 08aa 660F1F44 		.p2align 4,,10
 1604      0000
 1605              		.p2align 3
 1606              	.L199:
 1607 08b0 B9320000 		movl	$50, %ecx
 1607      00
 1608 08b5 C7442408 		movl	$14, 8(%rsp)
 1608      0E000000 
 1609 08bd E909FAFF 		jmp	.L180
 1609      FF
 1610              		.p2align 4,,10
 1611 08c2 660F1F44 		.p2align 3
 1611      0000
 1612              	.L244:
 1613 08c8 488D3500 		leaq	.LC14(%rip), %rsi
 1613      000000
 1614 08cf BF010000 		movl	$1, %edi
 1614      00
 1615 08d4 31C0     		xorl	%eax, %eax
 1616 08d6 E8000000 		call	__printf_chk@PLT
 1616      00
 1617 08db E9A0F8FF 		jmp	.L175
 1617      FF
 1618              	.L245:
 1619 08e0 E8000000 		call	__stack_chk_fail@PLT
 1619      00
 1620              		.cfi_endproc
 1621              	.LFE54:
 1623              		.section	.rodata.str1.1
 1624              	.LC34:
 1625 0055 7700     		.string	"w"
 1626              	.LC35:
 1627 0057 6E6F2073 		.string	"no such file to write\n"
 1627      75636820 
 1627      66696C65 
 1627      20746F20 
 1627      77726974 
 1628              	.LC36:
 1629 006e 25642C25 		.string	"%d,%d,%d,%d,%d\n"
 1629      642C2564 
 1629      2C25642C 
 1629      25640A00 
 1630              		.text
 1631 08e5 90662E0F 		.p2align 4,,15
 1631      1F840000 
 1631      000000
 1632              		.globl	update_file
 1634              	update_file:
 1635              	.LFB55:
 1636              		.cfi_startproc
 1637 08f0 4156     		pushq	%r14
 1638              		.cfi_def_cfa_offset 16
 1639              		.cfi_offset 14, -16
 1640 08f2 488D3500 		leaq	.LC34(%rip), %rsi
 1640      000000
 1641 08f9 4155     		pushq	%r13
 1642              		.cfi_def_cfa_offset 24
 1643              		.cfi_offset 13, -24
 1644 08fb 4989FE   		movq	%rdi, %r14
 1645 08fe 4154     		pushq	%r12
 1646              		.cfi_def_cfa_offset 32
 1647              		.cfi_offset 12, -32
 1648 0900 488D3D00 		leaq	.LC13(%rip), %rdi
 1648      000000
 1649 0907 55       		pushq	%rbp
 1650              		.cfi_def_cfa_offset 40
 1651              		.cfi_offset 6, -40
 1652 0908 53       		pushq	%rbx
 1653              		.cfi_def_cfa_offset 48
 1654              		.cfi_offset 3, -48
 1655 0909 E8000000 		call	fopen@PLT
 1655      00
 1656 090e 4885C0   		testq	%rax, %rax
 1657 0911 4989C4   		movq	%rax, %r12
 1658 0914 747A     		je	.L254
 1659              	.L247:
 1660 0916 4C8D2D00 		leaq	.LC36(%rip), %r13
 1660      000000
 1661 091d 31ED     		xorl	%ebp, %ebp
 1662 091f 90       		.p2align 4,,10
 1663              		.p2align 3
 1664              	.L248:
 1665 0920 31DB     		xorl	%ebx, %ebx
 1666              		.p2align 4,,10
 1667 0922 660F1F44 		.p2align 3
 1667      0000
 1668              	.L250:
 1669 0928 410FB604 		movzbl	(%r14,%rbx), %eax
 1669      1E
 1670 092d 4189D9   		movl	%ebx, %r9d
 1671 0930 4183E107 		andl	$7, %r9d
 1672 0934 428D0CCD 		leal	0(,%r9,8), %ecx
 1672      00000000 
 1673 093c 39C8     		cmpl	%ecx, %eax
 1674 093e 89C2     		movl	%eax, %edx
 1675 0940 7428     		je	.L249
 1676 0942 C1E806   		shrl	$6, %eax
 1677 0945 83E207   		andl	$7, %edx
 1678 0948 4189D8   		movl	%ebx, %r8d
 1679 094b 83E001   		andl	$1, %eax
 1680 094e 52       		pushq	%rdx
 1681              		.cfi_def_cfa_offset 56
 1682 094f 41C1F803 		sarl	$3, %r8d
 1683 0953 50       		pushq	%rax
 1684              		.cfi_def_cfa_offset 64
 1685 0954 4C89EA   		movq	%r13, %rdx
 1686 0957 89E9     		movl	%ebp, %ecx
 1687 0959 BE010000 		movl	$1, %esi
 1687      00
 1688 095e 4C89E7   		movq	%r12, %rdi
 1689 0961 31C0     		xorl	%eax, %eax
 1690 0963 E8000000 		call	__fprintf_chk@PLT
 1690      00
 1691 0968 58       		popq	%rax
 1692              		.cfi_def_cfa_offset 56
 1693 0969 5A       		popq	%rdx
 1694              		.cfi_def_cfa_offset 48
 1695              	.L249:
 1696 096a 4883C301 		addq	$1, %rbx
 1697 096e 4883FB40 		cmpq	$64, %rbx
 1698 0972 75B4     		jne	.L250
 1699 0974 83C501   		addl	$1, %ebp
 1700 0977 4983C640 		addq	$64, %r14
 1701 097b 83FD08   		cmpl	$8, %ebp
 1702 097e 75A0     		jne	.L248
 1703 0980 5B       		popq	%rbx
 1704              		.cfi_remember_state
 1705              		.cfi_def_cfa_offset 40
 1706 0981 4C89E7   		movq	%r12, %rdi
 1707 0984 5D       		popq	%rbp
 1708              		.cfi_def_cfa_offset 32
 1709 0985 415C     		popq	%r12
 1710              		.cfi_def_cfa_offset 24
 1711 0987 415D     		popq	%r13
 1712              		.cfi_def_cfa_offset 16
 1713 0989 415E     		popq	%r14
 1714              		.cfi_def_cfa_offset 8
 1715 098b E9000000 		jmp	fclose@PLT
 1715      00
 1716              	.L254:
 1717              		.cfi_restore_state
 1718 0990 488D3500 		leaq	.LC35(%rip), %rsi
 1718      000000
 1719 0997 BF010000 		movl	$1, %edi
 1719      00
 1720 099c 31C0     		xorl	%eax, %eax
 1721 099e E8000000 		call	__printf_chk@PLT
 1721      00
 1722 09a3 E96EFFFF 		jmp	.L247
 1722      FF
 1723              		.cfi_endproc
 1724              	.LFE55:
 1726 09a8 0F1F8400 		.p2align 4,,15
 1726      00000000 
 1727              		.globl	count1
 1729              	count1:
 1730              	.LFB69:
 1731              		.cfi_startproc
 1732 09b0 4883EC08 		subq	$8, %rsp
 1733              		.cfi_def_cfa_offset 16
 1734 09b4 89FF     		movl	%edi, %edi
 1735 09b6 E8000000 		call	__popcountdi2@PLT
 1735      00
 1736 09bb 4883C408 		addq	$8, %rsp
 1737              		.cfi_def_cfa_offset 8
 1738 09bf C3       		ret
 1739              		.cfi_endproc
 1740              	.LFE69:
 1742              		.p2align 4,,15
 1743              		.globl	neg
 1745              	neg:
 1746              	.LFB57:
 1747              		.cfi_startproc
 1748 09c0 89F8     		movl	%edi, %eax
 1749 09c2 F7D0     		notl	%eax
 1750 09c4 C3       		ret
 1751              		.cfi_endproc
 1752              	.LFE57:
 1754 09c5 90662E0F 		.p2align 4,,15
 1754      1F840000 
 1754      000000
 1755              		.globl	concat
 1757              	concat:
 1758              	.LFB58:
 1759              		.cfi_startproc
 1760 09d0 400FB6FF 		movzbl	%dil, %edi
 1761 09d4 89F8     		movl	%edi, %eax
 1762 09d6 C1E004   		sall	$4, %eax
 1763 09d9 09F8     		orl	%edi, %eax
 1764 09db C1E004   		sall	$4, %eax
 1765 09de 09F8     		orl	%edi, %eax
 1766 09e0 C1E004   		sall	$4, %eax
 1767 09e3 09F8     		orl	%edi, %eax
 1768 09e5 C1E004   		sall	$4, %eax
 1769 09e8 09F8     		orl	%edi, %eax
 1770 09ea C1E004   		sall	$4, %eax
 1771 09ed 09F8     		orl	%edi, %eax
 1772 09ef C1E004   		sall	$4, %eax
 1773 09f2 09F8     		orl	%edi, %eax
 1774 09f4 C1E004   		sall	$4, %eax
 1775 09f7 09F8     		orl	%edi, %eax
 1776 09f9 C1E004   		sall	$4, %eax
 1777 09fc 09F8     		orl	%edi, %eax
 1778 09fe C3       		ret
 1779              		.cfi_endproc
 1780              	.LFE58:
 1782 09ff 90       		.p2align 4,,15
 1783              		.globl	bitXor
 1785              	bitXor:
 1786              	.LFB59:
 1787              		.cfi_startproc
 1788 0a00 89F8     		movl	%edi, %eax
 1789 0a02 31F0     		xorl	%esi, %eax
 1790 0a04 C3       		ret
 1791              		.cfi_endproc
 1792              	.LFE59:
 1794 0a05 90662E0F 		.p2align 4,,15
 1794      1F840000 
 1794      000000
 1795              		.globl	findki
 1797              	findki:
 1798              	.LFB60:
 1799              		.cfi_startproc
 1800 0a10 85F6     		testl	%esi, %esi
 1801 0a12 7824     		js	.L263
 1802 0a14 83C601   		addl	$1, %esi
 1803 0a17 31D2     		xorl	%edx, %edx
 1804 0a19 EB07     		jmp	.L262
 1805 0a1b 0F1F4400 		.p2align 4,,10
 1805      00
 1806              		.p2align 3
 1807              	.L264:
 1808 0a20 89C7     		movl	%eax, %edi
 1809              	.L262:
 1810 0a22 89F8     		movl	%edi, %eax
 1811 0a24 83C201   		addl	$1, %edx
 1812 0a27 D1E8     		shrl	%eax
 1813 0a29 39D6     		cmpl	%edx, %esi
 1814 0a2b 75F3     		jne	.L264
 1815 0a2d 89F8     		movl	%edi, %eax
 1816 0a2f 83E001   		andl	$1, %eax
 1817 0a32 C3       		ret
 1818              		.p2align 4,,10
 1819 0a33 0F1F4400 		.p2align 3
 1819      00
 1820              	.L263:
 1821 0a38 31C0     		xorl	%eax, %eax
 1822 0a3a C3       		ret
 1823              		.cfi_endproc
 1824              	.LFE60:
 1826 0a3b 0F1F4400 		.p2align 4,,15
 1826      00
 1827              		.globl	findti
 1829              	findti:
 1830              	.LFB61:
 1831              		.cfi_startproc
 1832 0a40 89F8     		movl	%edi, %eax
 1833 0a42 89F2     		movl	%esi, %edx
 1834 0a44 D1E8     		shrl	%eax
 1835 0a46 83E203   		andl	$3, %edx
 1836 0a49 7463     		je	.L272
 1837 0a4b 89F9     		movl	%edi, %ecx
 1838 0a4d C1E902   		shrl	$2, %ecx
 1839 0a50 83FA01   		cmpl	$1, %edx
 1840 0a53 740B     		je	.L266
 1841 0a55 89F8     		movl	%edi, %eax
 1842 0a57 C1E803   		shrl	$3, %eax
 1843 0a5a 83FA03   		cmpl	$3, %edx
 1844 0a5d 0F45C1   		cmovne	%ecx, %eax
 1845              	.L266:
 1846 0a60 83C604   		addl	$4, %esi
 1847 0a63 83E001   		andl	$1, %eax
 1848 0a66 83FE1F   		cmpl	$31, %esi
 1849 0a69 7F41     		jg	.L265
 1850 0a6b 85F6     		testl	%esi, %esi
 1851 0a6d 7909     		jns	.L270
 1852 0a6f 90       		.p2align 4,,10
 1853              		.p2align 3
 1854              	.L268:
 1855 0a70 83C604   		addl	$4, %esi
 1856 0a73 78FB     		js	.L268
 1857              		.p2align 4,,10
 1858 0a75 0F1F00   		.p2align 3
 1859              	.L270:
 1860 0a78 89F9     		movl	%edi, %ecx
 1861 0a7a 31D2     		xorl	%edx, %edx
 1862 0a7c EB05     		jmp	.L269
 1863 0a7e 6690     		.p2align 4,,10
 1864              		.p2align 3
 1865              	.L273:
 1866 0a80 4489C1   		movl	%r8d, %ecx
 1867              	.L269:
 1868 0a83 4189C8   		movl	%ecx, %r8d
 1869 0a86 83C201   		addl	$1, %edx
 1870 0a89 41D1E8   		shrl	%r8d
 1871 0a8c 39F2     		cmpl	%esi, %edx
 1872 0a8e 7EF0     		jle	.L273
 1873 0a90 83E101   		andl	$1, %ecx
 1874 0a93 83C604   		addl	$4, %esi
 1875 0a96 89CA     		movl	%ecx, %edx
 1876 0a98 09C1     		orl	%eax, %ecx
 1877 0a9a 21C2     		andl	%eax, %edx
 1878 0a9c 89C8     		movl	%ecx, %eax
 1879 0a9e 0FB6D2   		movzbl	%dl, %edx
 1880 0aa1 F7D2     		notl	%edx
 1881 0aa3 21D0     		andl	%edx, %eax
 1882 0aa5 83FE1F   		cmpl	$31, %esi
 1883 0aa8 7ECE     		jle	.L270
 1884 0aaa F3C3     		rep ret
 1885              	.L265:
 1886 0aac F3C3     		rep ret
 1887              	.L272:
 1888 0aae 89F8     		movl	%edi, %eax
 1889 0ab0 EBAE     		jmp	.L266
 1890              		.cfi_endproc
 1891              	.LFE61:
 1893 0ab2 0F1F4000 		.p2align 4,,15
 1893      662E0F1F 
 1893      84000000 
 1893      0000
 1894              		.globl	findt
 1896              	findt:
 1897              	.LFB62:
 1898              		.cfi_startproc
 1899 0ac0 89F8     		movl	%edi, %eax
 1900 0ac2 4155     		pushq	%r13
 1901              		.cfi_def_cfa_offset 16
 1902              		.cfi_offset 13, -16
 1903 0ac4 4189FB   		movl	%edi, %r11d
 1904 0ac7 4154     		pushq	%r12
 1905              		.cfi_def_cfa_offset 24
 1906              		.cfi_offset 12, -24
 1907 0ac9 D1E8     		shrl	%eax
 1908 0acb 55       		pushq	%rbp
 1909              		.cfi_def_cfa_offset 32
 1910              		.cfi_offset 6, -32
 1911 0acc 53       		pushq	%rbx
 1912              		.cfi_def_cfa_offset 40
 1913              		.cfi_offset 3, -40
 1914 0acd 89FB     		movl	%edi, %ebx
 1915 0acf 4189C5   		movl	%eax, %r13d
 1916 0ad2 89FD     		movl	%edi, %ebp
 1917 0ad4 C1EB02   		shrl	$2, %ebx
 1918 0ad7 41C1EB03 		shrl	$3, %r11d
 1919 0adb 83E501   		andl	$1, %ebp
 1920 0ade 4183E501 		andl	$1, %r13d
 1921 0ae2 83E301   		andl	$1, %ebx
 1922 0ae5 4183E301 		andl	$1, %r11d
 1923 0ae9 4531C0   		xorl	%r8d, %r8d
 1924 0aec 31C0     		xorl	%eax, %eax
 1925 0aee 41BA1B00 		movl	$27, %r10d
 1925      0000
 1926              	.L282:
 1927 0af4 4489D2   		movl	%r10d, %edx
 1928 0af7 458D6005 		leal	5(%r8), %r12d
 1929 0afb 4429C2   		subl	%r8d, %edx
 1930 0afe 83E2FC   		andl	$-4, %edx
 1931 0b01 458D4C10 		leal	9(%r8,%rdx), %r9d
 1931      09
 1932 0b06 662E0F1F 		.p2align 4,,10
 1932      84000000 
 1932      0000
 1933              		.p2align 3
 1934              	.L284:
 1935 0b10 89FA     		movl	%edi, %edx
 1936 0b12 31C9     		xorl	%ecx, %ecx
 1937 0b14 EB0C     		jmp	.L285
 1938 0b16 662E0F1F 		.p2align 4,,10
 1938      84000000 
 1938      0000
 1939              		.p2align 3
 1940              	.L294:
 1941 0b20 89F2     		movl	%esi, %edx
 1942              	.L285:
 1943 0b22 89D6     		movl	%edx, %esi
 1944 0b24 83C101   		addl	$1, %ecx
 1945 0b27 D1EE     		shrl	%esi
 1946 0b29 4439E1   		cmpl	%r12d, %ecx
 1947 0b2c 75F2     		jne	.L294
 1948 0b2e 83E201   		andl	$1, %edx
 1949 0b31 448D6104 		leal	4(%rcx), %r12d
 1950 0b35 89D6     		movl	%edx, %esi
 1951 0b37 09EA     		orl	%ebp, %edx
 1952 0b39 21EE     		andl	%ebp, %esi
 1953 0b3b 0FB6D2   		movzbl	%dl, %edx
 1954 0b3e 400FB6F6 		movzbl	%sil, %esi
 1955 0b42 F7D6     		notl	%esi
 1956 0b44 21F2     		andl	%esi, %edx
 1957 0b46 4539CC   		cmpl	%r9d, %r12d
 1958 0b49 89D5     		movl	%edx, %ebp
 1959 0b4b 75C3     		jne	.L284
 1960 0b4d 4585C0   		testl	%r8d, %r8d
 1961 0b50 7418     		je	.L287
 1962 0b52 4183F801 		cmpl	$1, %r8d
 1963 0b56 7410     		je	.L300
 1964 0b58 4183F803 		cmpl	$3, %r8d
 1965 0b5c 752E     		jne	.L301
 1966 0b5e 8D04D0   		leal	(%rax,%rdx,8), %eax
 1967              	.L298:
 1968 0b61 5B       		popq	%rbx
 1969              		.cfi_remember_state
 1970              		.cfi_def_cfa_offset 32
 1971 0b62 5D       		popq	%rbp
 1972              		.cfi_def_cfa_offset 24
 1973 0b63 415C     		popq	%r12
 1974              		.cfi_def_cfa_offset 16
 1975 0b65 415D     		popq	%r13
 1976              		.cfi_def_cfa_offset 8
 1977 0b67 C3       		ret
 1978              	.L300:
 1979              		.cfi_restore_state
 1980 0b68 01D2     		addl	%edx, %edx
 1981              	.L287:
 1982 0b6a 01D0     		addl	%edx, %eax
 1983 0b6c 4183C001 		addl	$1, %r8d
 1984              	.L290:
 1985 0b70 4183F801 		cmpl	$1, %r8d
 1986 0b74 4489ED   		movl	%r13d, %ebp
 1987 0b77 0F8477FF 		je	.L282
 1987      FFFF
 1988 0b7d 4183F803 		cmpl	$3, %r8d
 1989 0b81 89DD     		movl	%ebx, %ebp
 1990 0b83 410F44EB 		cmove	%r11d, %ebp
 1991 0b87 E968FFFF 		jmp	.L282
 1991      FF
 1992              	.L301:
 1993 0b8c 4183C001 		addl	$1, %r8d
 1994 0b90 8D0490   		leal	(%rax,%rdx,4), %eax
 1995 0b93 4183F804 		cmpl	$4, %r8d
 1996 0b97 75D7     		jne	.L290
 1997 0b99 EBC6     		jmp	.L298
 1998              		.cfi_endproc
 1999              	.LFE62:
 2001 0b9b 0F1F4400 		.p2align 4,,15
 2001      00
 2002              		.globl	encrypt
 2004              	encrypt:
 2005              	.LFB63:
 2006              		.cfi_startproc
 2007 0ba0 4154     		pushq	%r12
 2008              		.cfi_def_cfa_offset 16
 2009              		.cfi_offset 12, -16
 2010 0ba2 55       		pushq	%rbp
 2011              		.cfi_def_cfa_offset 24
 2012              		.cfi_offset 6, -24
 2013 0ba3 4189F4   		movl	%esi, %r12d
 2014 0ba6 53       		pushq	%rbx
 2015              		.cfi_def_cfa_offset 32
 2016              		.cfi_offset 3, -32
 2017 0ba7 89FB     		movl	%edi, %ebx
 2018 0ba9 89F7     		movl	%esi, %edi
 2019 0bab E8000000 		call	findt
 2019      00
 2020 0bb0 4489E7   		movl	%r12d, %edi
 2021 0bb3 89C5     		movl	%eax, %ebp
 2022 0bb5 E8000000 		call	__popcountdi2@PLT
 2022      00
 2023 0bba 85C0     		testl	%eax, %eax
 2024 0bbc 7448     		je	.L303
 2025 0bbe 89C6     		movl	%eax, %esi
 2026 0bc0 31C9     		xorl	%ecx, %ecx
 2027              		.p2align 4,,10
 2028 0bc2 660F1F44 		.p2align 3
 2028      0000
 2029              	.L304:
 2030 0bc8 400FB6D5 		movzbl	%bpl, %edx
 2031 0bcc 83C101   		addl	$1, %ecx
 2032 0bcf 83C501   		addl	$1, %ebp
 2033 0bd2 89D0     		movl	%edx, %eax
 2034 0bd4 83E50F   		andl	$15, %ebp
 2035 0bd7 C1E004   		sall	$4, %eax
 2036 0bda 09D0     		orl	%edx, %eax
 2037 0bdc C1E004   		sall	$4, %eax
 2038 0bdf 09D0     		orl	%edx, %eax
 2039 0be1 C1E004   		sall	$4, %eax
 2040 0be4 09D0     		orl	%edx, %eax
 2041 0be6 C1E004   		sall	$4, %eax
 2042 0be9 09D0     		orl	%edx, %eax
 2043 0beb C1E004   		sall	$4, %eax
 2044 0bee 09D0     		orl	%edx, %eax
 2045 0bf0 C1E004   		sall	$4, %eax
 2046 0bf3 09D0     		orl	%edx, %eax
 2047 0bf5 C1E004   		sall	$4, %eax
 2048 0bf8 09D0     		orl	%edx, %eax
 2049 0bfa C1E004   		sall	$4, %eax
 2050 0bfd 09D0     		orl	%edx, %eax
 2051 0bff 31C3     		xorl	%eax, %ebx
 2052 0c01 4038CE   		cmpb	%cl, %sil
 2053 0c04 75C2     		jne	.L304
 2054              	.L303:
 2055 0c06 89D8     		movl	%ebx, %eax
 2056 0c08 5B       		popq	%rbx
 2057              		.cfi_def_cfa_offset 24
 2058 0c09 5D       		popq	%rbp
 2059              		.cfi_def_cfa_offset 16
 2060 0c0a 415C     		popq	%r12
 2061              		.cfi_def_cfa_offset 8
 2062 0c0c C3       		ret
 2063              		.cfi_endproc
 2064              	.LFE63:
 2066              		.section	.rodata.str1.1
 2067              	.LC37:
 2068 007e 25730A00 		.string	"%s\n"
 2069              		.section	.text.unlikely
 2071              	send_to_fpga:
 2072              	.LFB66:
 2073              		.cfi_startproc
 2074 0bed 4156     		pushq	%r14
 2075              		.cfi_def_cfa_offset 16
 2076              		.cfi_offset 14, -16
 2077 0bef 4155     		pushq	%r13
 2078              		.cfi_def_cfa_offset 24
 2079              		.cfi_offset 13, -24
 2080 0bf1 4989FE   		movq	%rdi, %r14
 2081 0bf4 4154     		pushq	%r12
 2082              		.cfi_def_cfa_offset 32
 2083              		.cfi_offset 12, -32
 2084 0bf6 55       		pushq	%rbp
 2085              		.cfi_def_cfa_offset 40
 2086              		.cfi_offset 6, -40
 2087 0bf7 BF080000 		movl	$8, %edi
 2087      00
 2088 0bfc 53       		pushq	%rbx
 2089              		.cfi_def_cfa_offset 48
 2090              		.cfi_offset 3, -48
 2091 0bfd 89D5     		movl	%edx, %ebp
 2092 0bff 4989CD   		movq	%rcx, %r13
 2093 0c02 448D6436 		leal	1(%rsi,%rsi), %r12d
 2093      01
 2094 0c07 E8000000 		call	malloc@PLT
 2094      00
 2095 0c0c BE9F9999 		movl	$-1717986913, %esi
 2095      99
 2096 0c11 89EF     		movl	%ebp, %edi
 2097 0c13 4889C3   		movq	%rax, %rbx
 2098 0c16 E8000000 		call	encrypt
 2098      00
 2099 0c1b 31D2     		xorl	%edx, %edx
 2100              	.L311:
 2101 0c1d 880413   		movb	%al, (%rbx,%rdx)
 2102 0c20 48FFC2   		incq	%rdx
 2103 0c23 C1E808   		shrl	$8, %eax
 2104 0c26 4883FA04 		cmpq	$4, %rdx
 2105 0c2a 75F1     		jne	.L311
 2106 0c2c 488D6B04 		leaq	4(%rbx), %rbp
 2107 0c30 450FB6E4 		movzbl	%r12b, %r12d
 2108              	.L313:
 2109 0c34 48FFCD   		decq	%rbp
 2110 0c37 4D89E8   		movq	%r13, %r8
 2111 0c3a BA010000 		movl	$1, %edx
 2111      00
 2112 0c3f 4889E9   		movq	%rbp, %rcx
 2113 0c42 4489E6   		movl	%r12d, %esi
 2114 0c45 4C89F7   		movq	%r14, %rdi
 2115 0c48 E8000000 		call	flWriteChannel@PLT
 2115      00
 2116 0c4d 85C0     		testl	%eax, %eax
 2117 0c4f 7511     		jne	.L315
 2118 0c51 4839EB   		cmpq	%rbp, %rbx
 2119 0c54 75DE     		jne	.L313
 2120 0c56 4889DF   		movq	%rbx, %rdi
 2121 0c59 31DB     		xorl	%ebx, %ebx
 2122 0c5b E8000000 		call	free@PLT
 2122      00
 2123 0c60 EB05     		jmp	.L312
 2124              	.L315:
 2125 0c62 BB010000 		movl	$1, %ebx
 2125      00
 2126              	.L312:
 2127 0c67 498B4D00 		movq	0(%r13), %rcx
 2128 0c6b 4885C9   		testq	%rcx, %rcx
 2129 0c6e 7423     		je	.L314
 2130 0c70 488B3D00 		movq	stderr(%rip), %rdi
 2130      000000
 2131 0c77 488D1500 		leaq	.LC37(%rip), %rdx
 2131      000000
 2132 0c7e BE010000 		movl	$1, %esi
 2132      00
 2133 0c83 31C0     		xorl	%eax, %eax
 2134 0c85 E8000000 		call	__fprintf_chk@PLT
 2134      00
 2135 0c8a 498B7D00 		movq	0(%r13), %rdi
 2136 0c8e E8000000 		call	flFreeError@PLT
 2136      00
 2137              	.L314:
 2138 0c93 89D8     		movl	%ebx, %eax
 2139 0c95 5B       		popq	%rbx
 2140              		.cfi_def_cfa_offset 40
 2141 0c96 5D       		popq	%rbp
 2142              		.cfi_def_cfa_offset 32
 2143 0c97 415C     		popq	%r12
 2144              		.cfi_def_cfa_offset 24
 2145 0c99 415D     		popq	%r13
 2146              		.cfi_def_cfa_offset 16
 2147 0c9b 415E     		popq	%r14
 2148              		.cfi_def_cfa_offset 8
 2149 0c9d C3       		ret
 2150              		.cfi_endproc
 2151              	.LFE66:
 2153              		.text
 2154 0c0d 0F1F00   		.p2align 4,,15
 2155              		.globl	decrypt
 2157              	decrypt:
 2158              	.LFB64:
 2159              		.cfi_startproc
 2160 0c10 4154     		pushq	%r12
 2161              		.cfi_def_cfa_offset 16
 2162              		.cfi_offset 12, -16
 2163 0c12 55       		pushq	%rbp
 2164              		.cfi_def_cfa_offset 24
 2165              		.cfi_offset 6, -24
 2166 0c13 89F5     		movl	%esi, %ebp
 2167 0c15 53       		pushq	%rbx
 2168              		.cfi_def_cfa_offset 32
 2169              		.cfi_offset 3, -32
 2170 0c16 89FB     		movl	%edi, %ebx
 2171 0c18 89F7     		movl	%esi, %edi
 2172 0c1a E8000000 		call	findt
 2172      00
 2173 0c1f 89EF     		movl	%ebp, %edi
 2174 0c21 4189C4   		movl	%eax, %r12d
 2175 0c24 E8000000 		call	__popcountdi2@PLT
 2175      00
 2176 0c29 418D4C24 		leal	15(%r12), %ecx
 2176      0F
 2177 0c2e BF200000 		movl	$32, %edi
 2177      00
 2178 0c33 83E10F   		andl	$15, %ecx
 2179 0c36 29C7     		subl	%eax, %edi
 2180 0c38 7446     		je	.L323
 2181 0c3a 31F6     		xorl	%esi, %esi
 2182 0c3c 0F1F4000 		.p2align 4,,10
 2183              		.p2align 3
 2184              	.L324:
 2185 0c40 0FB6D1   		movzbl	%cl, %edx
 2186 0c43 83C601   		addl	$1, %esi
 2187 0c46 83C10F   		addl	$15, %ecx
 2188 0c49 89D0     		movl	%edx, %eax
 2189 0c4b 83E10F   		andl	$15, %ecx
 2190 0c4e C1E004   		sall	$4, %eax
 2191 0c51 09D0     		orl	%edx, %eax
 2192 0c53 C1E004   		sall	$4, %eax
 2193 0c56 09D0     		orl	%edx, %eax
 2194 0c58 C1E004   		sall	$4, %eax
 2195 0c5b 09D0     		orl	%edx, %eax
 2196 0c5d C1E004   		sall	$4, %eax
 2197 0c60 09D0     		orl	%edx, %eax
 2198 0c62 C1E004   		sall	$4, %eax
 2199 0c65 09D0     		orl	%edx, %eax
 2200 0c67 C1E004   		sall	$4, %eax
 2201 0c6a 09D0     		orl	%edx, %eax
 2202 0c6c C1E004   		sall	$4, %eax
 2203 0c6f 09D0     		orl	%edx, %eax
 2204 0c71 C1E004   		sall	$4, %eax
 2205 0c74 09D0     		orl	%edx, %eax
 2206 0c76 31C3     		xorl	%eax, %ebx
 2207 0c78 400FB6C6 		movzbl	%sil, %eax
 2208 0c7c 39F8     		cmpl	%edi, %eax
 2209 0c7e 7CC0     		jl	.L324
 2210              	.L323:
 2211 0c80 89D8     		movl	%ebx, %eax
 2212 0c82 5B       		popq	%rbx
 2213              		.cfi_def_cfa_offset 24
 2214 0c83 5D       		popq	%rbp
 2215              		.cfi_def_cfa_offset 16
 2216 0c84 415C     		popq	%r12
 2217              		.cfi_def_cfa_offset 8
 2218 0c86 C3       		ret
 2219              		.cfi_endproc
 2220              	.LFE64:
 2222              		.section	.rodata.str1.1
 2223              	.LC38:
 2224 0082 72656365 		.string	"receive_from_fpga()"
 2224      6976655F 
 2224      66726F6D 
 2224      5F667067 
 2224      61282900 
 2225              		.section	.text.unlikely
 2227              	receive_from_fpga:
 2228              	.LFB65:
 2229              		.cfi_startproc
 2230 0c9e 4157     		pushq	%r15
 2231              		.cfi_def_cfa_offset 16
 2232              		.cfi_offset 15, -16
 2233 0ca0 4156     		pushq	%r14
 2234              		.cfi_def_cfa_offset 24
 2235              		.cfi_offset 14, -24
 2236 0ca2 01F6     		addl	%esi, %esi
 2237 0ca4 4155     		pushq	%r13
 2238              		.cfi_def_cfa_offset 32
 2239              		.cfi_offset 13, -32
 2240 0ca6 4154     		pushq	%r12
 2241              		.cfi_def_cfa_offset 40
 2242              		.cfi_offset 12, -40
 2243 0ca8 4989C8   		movq	%rcx, %r8
 2244 0cab 55       		pushq	%rbp
 2245              		.cfi_def_cfa_offset 48
 2246              		.cfi_offset 6, -48
 2247 0cac 53       		pushq	%rbx
 2248              		.cfi_def_cfa_offset 56
 2249              		.cfi_offset 3, -56
 2250 0cad 4889CB   		movq	%rcx, %rbx
 2251 0cb0 31C9     		xorl	%ecx, %ecx
 2252 0cb2 4989FD   		movq	%rdi, %r13
 2253 0cb5 4883EC38 		subq	$56, %rsp
 2254              		.cfi_def_cfa_offset 112
 2255 0cb9 64488B04 		movq	%fs:40, %rax
 2255      25280000 
 2255      00
 2256 0cc2 48894424 		movq	%rax, 40(%rsp)
 2256      28
 2257 0cc7 31C0     		xorl	%eax, %eax
 2258 0cc9 400FB6C6 		movzbl	%sil, %eax
 2259 0ccd 48895424 		movq	%rdx, 8(%rsp)
 2259      08
 2260 0cd2 BA010000 		movl	$1, %edx
 2260      00
 2261 0cd7 89C6     		movl	%eax, %esi
 2262 0cd9 89442404 		movl	%eax, 4(%rsp)
 2263 0cdd E8000000 		call	flReadChannelAsyncSubmit@PLT
 2263      00
 2264 0ce2 85C0     		testl	%eax, %eax
 2265 0ce4 7419     		je	.L336
 2266              	.L333:
 2267 0ce6 488D3500 		leaq	.LC38(%rip), %rsi
 2267      000000
 2268 0ced 4889DF   		movq	%rbx, %rdi
 2269 0cf0 BD010000 		movl	$1, %ebp
 2269      00
 2270 0cf5 E8000000 		call	errPrefix@PLT
 2270      00
 2271 0cfa E9A60000 		jmp	.L332
 2271      00
 2272              	.L336:
 2273 0cff 4C8D6424 		leaq	28(%rsp), %r12
 2273      1C
 2274 0d04 4C8D7C24 		leaq	32(%rsp), %r15
 2274      20
 2275 0d09 41BE0300 		movl	$3, %r14d
 2275      0000
 2276 0d0f 31ED     		xorl	%ebp, %ebp
 2277              	.L331:
 2278 0d11 8B742404 		movl	4(%rsp), %esi
 2279 0d15 31C9     		xorl	%ecx, %ecx
 2280 0d17 4989D8   		movq	%rbx, %r8
 2281 0d1a BA010000 		movl	$1, %edx
 2281      00
 2282 0d1f 4C89EF   		movq	%r13, %rdi
 2283 0d22 E8000000 		call	flReadChannelAsyncSubmit@PLT
 2283      00
 2284 0d27 85C0     		testl	%eax, %eax
 2285 0d29 75BB     		jne	.L333
 2286 0d2b 4989D8   		movq	%rbx, %r8
 2287 0d2e 4C89E1   		movq	%r12, %rcx
 2288 0d31 4C89E2   		movq	%r12, %rdx
 2289 0d34 4C89FE   		movq	%r15, %rsi
 2290 0d37 4C89EF   		movq	%r13, %rdi
 2291 0d3a E8000000 		call	flReadChannelAsyncAwait@PLT
 2291      00
 2292 0d3f 85C0     		testl	%eax, %eax
 2293 0d41 75A3     		jne	.L333
 2294 0d43 8B44241C 		movl	28(%rsp), %eax
 2295 0d47 8D0CC500 		leal	0(,%rax,8), %ecx
 2295      000000
 2296 0d4e 488B4424 		movq	32(%rsp), %rax
 2296      20
 2297 0d53 D3E5     		sall	%cl, %ebp
 2298 0d55 0FB638   		movzbl	(%rax), %edi
 2299 0d58 09FD     		orl	%edi, %ebp
 2300 0d5a 41FFCE   		decl	%r14d
 2301 0d5d 75B2     		jne	.L331
 2302 0d5f 4989D8   		movq	%rbx, %r8
 2303 0d62 4C89E1   		movq	%r12, %rcx
 2304 0d65 4C89E2   		movq	%r12, %rdx
 2305 0d68 4C89FE   		movq	%r15, %rsi
 2306 0d6b 4C89EF   		movq	%r13, %rdi
 2307 0d6e E8000000 		call	flReadChannelAsyncAwait@PLT
 2307      00
 2308 0d73 85C0     		testl	%eax, %eax
 2309 0d75 0F856BFF 		jne	.L333
 2309      FFFF
 2310 0d7b 8B44241C 		movl	28(%rsp), %eax
 2311 0d7f BE9F9999 		movl	$-1717986913, %esi
 2311      99
 2312 0d84 8D0CC500 		leal	0(,%rax,8), %ecx
 2312      000000
 2313 0d8b 488B4424 		movq	32(%rsp), %rax
 2313      20
 2314 0d90 D3E5     		sall	%cl, %ebp
 2315 0d92 0FB638   		movzbl	(%rax), %edi
 2316 0d95 09EF     		orl	%ebp, %edi
 2317 0d97 31ED     		xorl	%ebp, %ebp
 2318 0d99 E8000000 		call	decrypt
 2318      00
 2319 0d9e 488B5424 		movq	8(%rsp), %rdx
 2319      08
 2320 0da3 8902     		movl	%eax, (%rdx)
 2321              	.L332:
 2322 0da5 488B0B   		movq	(%rbx), %rcx
 2323 0da8 4885C9   		testq	%rcx, %rcx
 2324 0dab 7422     		je	.L334
 2325 0dad 488B3D00 		movq	stderr(%rip), %rdi
 2325      000000
 2326 0db4 488D1500 		leaq	.LC37(%rip), %rdx
 2326      000000
 2327 0dbb BE010000 		movl	$1, %esi
 2327      00
 2328 0dc0 31C0     		xorl	%eax, %eax
 2329 0dc2 E8000000 		call	__fprintf_chk@PLT
 2329      00
 2330 0dc7 488B3B   		movq	(%rbx), %rdi
 2331 0dca E8000000 		call	flFreeError@PLT
 2331      00
 2332              	.L334:
 2333 0dcf 488B5424 		movq	40(%rsp), %rdx
 2333      28
 2334 0dd4 64483314 		xorq	%fs:40, %rdx
 2334      25280000 
 2334      00
 2335 0ddd 89E8     		movl	%ebp, %eax
 2336 0ddf 7405     		je	.L335
 2337 0de1 E8000000 		call	__stack_chk_fail@PLT
 2337      00
 2338              	.L335:
 2339 0de6 4883C438 		addq	$56, %rsp
 2340              		.cfi_def_cfa_offset 56
 2341 0dea 5B       		popq	%rbx
 2342              		.cfi_def_cfa_offset 48
 2343 0deb 5D       		popq	%rbp
 2344              		.cfi_def_cfa_offset 40
 2345 0dec 415C     		popq	%r12
 2346              		.cfi_def_cfa_offset 32
 2347 0dee 415D     		popq	%r13
 2348              		.cfi_def_cfa_offset 24
 2349 0df0 415E     		popq	%r14
 2350              		.cfi_def_cfa_offset 16
 2351 0df2 415F     		popq	%r15
 2352              		.cfi_def_cfa_offset 8
 2353 0df4 C3       		ret
 2354              		.cfi_endproc
 2355              	.LFE65:
 2357              		.section	.rodata.str1.8
 2358 00da 00000000 		.align 8
 2358      0000
 2359              	.LC39:
 2360 00e0 20202020 		.string	"            vendor ID and product ID (e.g 04B4:8613)"
 2360      20202020 
 2360      20202020 
 2360      76656E64 
 2360      6F722049 
 2361              		.section	.rodata.str1.1
 2362              	.LC40:
 2363 0096 3C564944 		.string	"<VID:PID>"
 2363      3A504944 
 2363      3E00
 2364              	.LC41:
 2365 00a0 69767000 		.string	"ivp"
 2366              	.LC42:
 2367 00a4 6900     		.string	"i"
 2368              		.section	.rodata.str1.8
 2369 0115 000000   		.align 8
 2370              	.LC43:
 2371 0118 20202020 		.string	"       VID, PID and opt. dev ID (e.g 1D50:602B:0001)"
 2371      20202056 
 2371      49442C20 
 2371      50494420 
 2371      616E6420 
 2372              		.section	.rodata.str1.1
 2373              	.LC44:
 2374 00a6 3C564944 		.string	"<VID:PID[:DID]>"
 2374      3A504944 
 2374      5B3A4449 
 2374      445D3E00 
 2375              	.LC45:
 2376 00b6 767000   		.string	"vp"
 2377              	.LC46:
 2378 00b9 7600     		.string	"v"
 2379              		.section	.rodata.str1.8
 2380 014d 000000   		.align 8
 2381              	.LC47:
 2382 0150 20202020 		.string	"        firmware to RAM-load (or use std fw)"
 2382      20202020 
 2382      6669726D 
 2382      77617265 
 2382      20746F20 
 2383              		.section	.rodata.str1.1
 2384              	.LC48:
 2385 00bb 3C666972 		.string	"<firmware.hex>"
 2385      6D776172 
 2385      652E6865 
 2385      783E00
 2386              	.LC49:
 2387 00ca 667700   		.string	"fw"
 2388              	.LC50:
 2389 00cd 6600     		.string	"f"
 2390              		.section	.rodata.str1.8
 2391 017d 000000   		.align 8
 2392              	.LC51:
 2393 0180 20726561 		.string	" read/write digital ports (e.g B13+,C1-,B2?)"
 2393      642F7772 
 2393      69746520 
 2393      64696769 
 2393      74616C20 
 2394              		.section	.rodata.str1.1
 2395              	.LC52:
 2396 00cf 3C626974 		.string	"<bitCfg[,bitCfg]*>"
 2396      4366675B 
 2396      2C626974 
 2396      4366675D 
 2396      2A3E00
 2397              	.LC53:
 2398 00e2 706F7274 		.string	"ports"
 2398      7300
 2399              	.LC54:
 2400 00e8 6400     		.string	"d"
 2401              	.LC55:
 2402 00ea 20202020 		.string	"         query the JTAG chain"
 2402      20202020 
 2402      20717565 
 2402      72792074 
 2402      6865204A 
 2403              	.LC56:
 2404 0108 3C6A7461 		.string	"<jtagBits>"
 2404      67426974 
 2404      733E00
 2405              	.LC57:
 2406 0113 71756572 		.string	"query"
 2406      7900
 2407              	.LC58:
 2408 0119 7100     		.string	"q"
 2409              	.LC59:
 2410 011b 20202020 		.string	"         program a device"
 2410      20202020 
 2410      2070726F 
 2410      6772616D 
 2410      20612064 
 2411              	.LC60:
 2412 0135 3C636F6E 		.string	"<config>"
 2412      6669673E 
 2412      00
 2413              	.LC61:
 2414 013e 70726F67 		.string	"program"
 2414      72616D00 
 2415              	.LC62:
 2416 0146 7000     		.string	"p"
 2417              		.section	.rodata.str1.8
 2418 01ad 000000   		.align 8
 2419              	.LC63:
 2420 01b0 20202020 		.string	"        which comm conduit to choose (default 0x01)"
 2420      20202020 
 2420      77686963 
 2420      6820636F 
 2420      6D6D2063 
 2421              		.section	.rodata.str1.1
 2422              	.LC64:
 2423 0148 3C636F6E 		.string	"<conduit>"
 2423      64756974 
 2423      3E00
 2424              	.LC65:
 2425 0152 636F6E64 		.string	"conduit"
 2425      75697400 
 2426              	.LC66:
 2427 015a 6300     		.string	"c"
 2428              		.section	.rodata.str1.8
 2429 01e4 00000000 		.align 8
 2430              	.LC67:
 2431 01e8 20202020 		.string	"    a series of CommFPGA actions"
 2431      61207365 
 2431      72696573 
 2431      206F6620 
 2431      436F6D6D 
 2432              		.section	.rodata.str1.1
 2433              	.LC68:
 2434 015c 3C616374 		.string	"<actionString>"
 2434      696F6E53 
 2434      7472696E 
 2434      673E00
 2435              	.LC69:
 2436 016b 61637469 		.string	"action"
 2436      6F6E00
 2437              	.LC70:
 2438 0172 6100     		.string	"a"
 2439              		.section	.rodata.str1.8
 2440 0209 00000000 		.align 8
 2440      000000
 2441              	.LC71:
 2442 0210 20202020 		.string	"                    start up an interactive CommFPGA session"
 2442      20202020 
 2442      20202020 
 2442      20202020 
 2442      20202020 
 2443              		.section	.rodata.str1.1
 2444              	.LC72:
 2445 0174 7368656C 		.string	"shell"
 2445      6C00
 2446              	.LC73:
 2447 017a 7300     		.string	"s"
 2448              		.section	.rodata.str1.8
 2449 024d 000000   		.align 8
 2450              	.LC74:
 2451 0250 20202020 		.string	"                enable benchmarking & checksumming"
 2451      20202020 
 2451      20202020 
 2451      20202020 
 2451      656E6162 
 2452              		.section	.rodata.str1.1
 2453              	.LC75:
 2454 017c 62656E63 		.string	"benchmark"
 2454      686D6172 
 2454      6B00
 2455              	.LC76:
 2456 0186 6200     		.string	"b"
 2457              		.section	.rodata.str1.8
 2458 0283 00000000 		.align 8
 2458      00
 2459              	.LC77:
 2460 0288 20202020 		.string	"                    reset the bulk endpoints"
 2460      20202020 
 2460      20202020 
 2460      20202020 
 2460      20202020 
 2461              		.section	.rodata.str1.1
 2462              	.LC78:
 2463 0188 72657365 		.string	"reset"
 2463      7400
 2464              		.section	.rodata.str1.8
 2465 02b5 000000   		.align 8
 2466              	.LC79:
 2467 02b8 20202077 		.string	"   write data from channel ch to file"
 2467      72697465 
 2467      20646174 
 2467      61206672 
 2467      6F6D2063 
 2468              		.section	.rodata.str1.1
 2469              	.LC80:
 2470 018e 3C63683A 		.string	"<ch:file.bin>"
 2470      66696C65 
 2470      2E62696E 
 2470      3E00
 2471              	.LC81:
 2472 019c 64756D70 		.string	"dumploop"
 2472      6C6F6F70 
 2472      00
 2473              	.LC82:
 2474 01a5 6C00     		.string	"l"
 2475              		.section	.rodata.str1.8
 2476 02de 0000     		.align 8
 2477              	.LC83:
 2478 02e0 20202020 		.string	"                     print this help and exit"
 2478      20202020 
 2478      20202020 
 2478      20202020 
 2478      20202020 
 2479              		.section	.rodata.str1.1
 2480              	.LC84:
 2481 01a7 68656C70 		.string	"help"
 2481      00
 2482              	.LC85:
 2483 01ac 6800     		.string	"h"
 2484              		.section	.rodata.str1.8
 2485 030e 0000     		.align 8
 2486              	.LC86:
 2487 0310 20202077 		.string	"   write firmware to FX2's EEPROM (!!)"
 2487      72697465 
 2487      20666972 
 2487      6D776172 
 2487      6520746F 
 2488              		.section	.rodata.str1.1
 2489              	.LC87:
 2490 01ae 3C737464 		.string	"<std|fw.hex|fw.iic>"
 2490      7C66772E 
 2490      6865787C 
 2490      66772E69 
 2490      69633E00 
 2491              	.LC88:
 2492 01c2 65657072 		.string	"eeprom"
 2492      6F6D00
 2493              		.section	.rodata.str1.8
 2494 0337 00       		.align 8
 2495              	.LC89:
 2496 0338 20202020 		.string	"     backup FX2's EEPROM (e.g 128:fw.iic)\n"
 2496      20626163 
 2496      6B757020 
 2496      46583227 
 2496      73204545 
 2497              		.section	.rodata.str1.1
 2498              	.LC90:
 2499 01c9 3C6B6269 		.string	"<kbitSize:fw.iic>"
 2499      7453697A 
 2499      653A6677 
 2499      2E696963 
 2499      3E00
 2500              	.LC91:
 2501 01db 6261636B 		.string	"backup"
 2501      757000
 2502              		.section	.rodata.str1.8
 2503 0363 00000000 		.align 8
 2503      00
 2504              	.LC92:
 2505 0368 636F6D6D 		.string	"communication with the CommFPGA for rail info"
 2505      756E6963 
 2505      6174696F 
 2505      6E207769 
 2505      74682074 
 2506              		.section	.rodata.str1.1
 2507              	.LC93:
 2508 01e2 3C726169 		.string	"<railString>"
 2508      6C537472 
 2508      696E673E 
 2508      00
 2509              	.LC94:
 2510 01ef 7261696C 		.string	"rail"
 2510      00
 2511              	.LC95:
 2512 01f4 7900     		.string	"y"
 2513              	.LC96:
 2514 01f6 666C636C 		.string	"flcli"
 2514      6900
 2515              	.LC97:
 2516 01fc 25733A20 		.string	"%s: insufficient memory\n"
 2516      696E7375 
 2516      66666963 
 2516      69656E74 
 2516      206D656D 
 2517              		.section	.rodata.str1.8
 2518 0396 0000     		.align 8
 2519              	.LC98:
 2520 0398 46504741 		.string	"FPGALink Command-Line Interface Copyright (C) 2012-2014 Chris McClelland\n\nUsage: %s"
 2520      4C696E6B 
 2520      20436F6D 
 2520      6D616E64 
 2520      2D4C696E 
 2521              		.section	.rodata.str1.1
 2522              	.LC99:
 2523 0215 0A00     		.string	"\n"
 2524              		.section	.rodata.str1.8
 2525 03ec 00000000 		.align 8
 2526              	.LC100:
 2527 03f0 0A496E74 		.string	"\nInteract with an FPGALink device.\n\n"
 2527      65726163 
 2527      74207769 
 2527      74682061 
 2527      6E204650 
 2528              		.section	.rodata.str1.1
 2529              	.LC101:
 2530 0217 2020252D 		.string	"  %-10s %s\n"
 2530      31307320 
 2530      25730A00 
 2531              		.section	.rodata.str1.8
 2532 0415 000000   		.align 8
 2533              	.LC102:
 2534 0418 54727920 		.string	"Try '%s --help' for more information.\n"
 2534      27257320 
 2534      2D2D6865 
 2534      6C702720 
 2534      666F7220 
 2535 043f 00       		.align 8
 2536              	.LC103:
 2537 0440 41747465 		.string	"Attempting to open connection to FPGALink device %s...\n"
 2537      6D707469 
 2537      6E672074 
 2537      6F206F70 
 2537      656E2063 
 2538              		.section	.rodata.str1.1
 2539              	.LC104:
 2540 0223 4C6F6164 		.string	"Loading firmware into %s...\n"
 2540      696E6720 
 2540      6669726D 
 2540      77617265 
 2540      20696E74 
 2541              	.LC105:
 2542 0240 41776169 		.string	"Awaiting renumeration"
 2542      74696E67 
 2542      2072656E 
 2542      756D6572 
 2542      6174696F 
 2543              	.LC106:
 2544 0256 2E00     		.string	"."
 2545              		.section	.rodata.str1.8
 2546              		.align 8
 2547              	.LC107:
 2548 0478 46504741 		.string	"FPGALink device did not renumerate properly as %s\n"
 2548      4C696E6B 
 2548      20646576 
 2548      69636520 
 2548      64696420 
 2549 04ab 00000000 		.align 8
 2549      00
 2550              	.LC108:
 2551 04b0 41747465 		.string	"Attempting to open connection to FPGLink device %s again...\n"
 2551      6D707469 
 2551      6E672074 
 2551      6F206F70 
 2551      656E2063 
 2552 04ed 000000   		.align 8
 2553              	.LC109:
 2554 04f0 436F756C 		.string	"Could not open FPGALink device at %s and no initial VID:PID was supplied\n"
 2554      64206E6F 
 2554      74206F70 
 2554      656E2046 
 2554      5047414C 
 2555 053a 00000000 		.align 8
 2555      0000
 2556              	.LC110:
 2557 0540 436F6E6E 		.string	"Connected to FPGALink device %s (firmwareID: 0x%04X, firmwareVersion: 0x%08X)\n"
 2557      65637465 
 2557      6420746F 
 2557      20465047 
 2557      414C696E 
 2558              		.section	.rodata.str1.1
 2559              	.LC111:
 2560 0258 73746400 		.string	"std"
 2561              		.section	.rodata.str1.8
 2562 058f 00       		.align 8
 2563              	.LC112:
 2564 0590 57726974 		.string	"Writing the standard FPGALink firmware to the FX2's EEPROM...\n"
 2564      696E6720 
 2564      74686520 
 2564      7374616E 
 2564      64617264 
 2565 05cf 00       		.align 8
 2566              	.LC113:
 2567 05d0 57726974 		.string	"Writing custom FPGALink firmware from %s to the FX2's EEPROM...\n"
 2567      696E6720 
 2567      63757374 
 2567      6F6D2046 
 2567      5047414C 
 2568 0611 00000000 		.align 8
 2568      000000
 2569              	.LC114:
 2570 0618 25733A20 		.string	"%s: invalid argument to option --backup=<kbitSize:fw.iic>\n"
 2570      696E7661 
 2570      6C696420 
 2570      61726775 
 2570      6D656E74 
 2571 0653 00000000 		.align 8
 2571      00
 2572              	.LC115:
 2573 0658 53617669 		.string	"Saving a backup of %d kbit from the FX2's EEPROM to %s...\n"
 2573      6E672061 
 2573      20626163 
 2573      6B757020 
 2573      6F662025 
 2574              		.section	.rodata.str1.1
 2575              	.LC116:
 2576 025c 436F6E66 		.string	"Configuring ports...\n"
 2576      69677572 
 2576      696E6720 
 2576      706F7274 
 2576      732E2E2E 
 2577              	.LC117:
 2578 0272 25303858 		.string	"%08X"
 2578      00
 2579              		.section	.rodata.str1.8
 2580 0693 00000000 		.align 8
 2580      00
 2581              	.LC118:
 2582 0698 52656164 		.string	"Readback:   28   24   20   16    12    8    4    0\n          %s"
 2582      6261636B 
 2582      3A202020 
 2582      32382020 
 2582      20323420 
 2583              		.section	.rodata.str1.1
 2584              	.LC119:
 2585 0277 20257300 		.string	" %s"
 2586              	.LC120:
 2587 027b 20202573 		.string	"  %s"
 2587      00
 2588              	.LC121:
 2589 0280 2025730A 		.string	" %s\n"
 2589      00
 2590              		.section	.rodata.str1.8
 2591              		.align 8
 2592              	.LC122:
 2593 06d8 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain, yielding:\n"
 2593      46504741 
 2593      4C696E6B 
 2593      20646576 
 2593      69636520 
 2594              		.section	.rodata.str1.1
 2595              	.LC123:
 2596 0285 20203078 		.string	"  0x%08X\n"
 2596      25303858 
 2596      0A00
 2597              		.section	.rodata.str1.8
 2598 0715 000000   		.align 8
 2599              	.LC124:
 2600 0718 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain but did not find any attached devices\n"
 2600      46504741 
 2600      4C696E6B 
 2600      20646576 
 2600      69636520 
 2601              		.align 8
 2602              	.LC125:
 2603 0770 4A544147 		.string	"JTAG chain scan requested but FPGALink device at %s does not support NeroProg\n"
 2603      20636861 
 2603      696E2073 
 2603      63616E20 
 2603      72657175 
 2604              		.section	.rodata.str1.1
 2605              	.LC126:
 2606 028f 50726F67 		.string	"Programming device...\n"
 2606      72616D6D 
 2606      696E6720 
 2606      64657669 
 2606      63652E2E 
 2607              		.section	.rodata.str1.8
 2608 07bf 00       		.align 8
 2609              	.LC127:
 2610 07c0 50726F67 		.string	"Program operation requested but device at %s does not support NeroProg\n"
 2610      72616D20 
 2610      6F706572 
 2610      6174696F 
 2610      6E207265 
 2611              		.align 8
 2612              	.LC128:
 2613 0808 45786563 		.string	"Executing CommFPGA actions on FPGALink device %s...\n"
 2613      7574696E 
 2613      6720436F 
 2613      6D6D4650 
 2613      47412061 
 2614 083d 000000   		.align 8
 2615              	.LC129:
 2616 0840 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --program?\n"
 2616      46504741 
 2616      4C696E6B 
 2616      20646576 
 2616      69636520 
 2617 088c 00000000 		.align 8
 2618              	.LC130:
 2619 0890 41637469 		.string	"Action requested but device at %s does not support CommFPGA\n"
 2619      6F6E2072 
 2619      65717565 
 2619      73746564 
 2619      20627574 
 2620 08cd 000000   		.align 8
 2621              	.LC131:
 2622 08d0 25733A20 		.string	"%s: invalid argument to option -l|--dumploop=<ch:file.bin>\n"
 2622      696E7661 
 2622      6C696420 
 2622      61726775 
 2622      6D656E74 
 2623 090c 00000000 		.align 8
 2624              	.LC132:
 2625 0910 436F7079 		.string	"Copying from channel %lu to %s"
 2625      696E6720 
 2625      66726F6D 
 2625      20636861 
 2625      6E6E656C 
 2626              		.section	.rodata.str1.1
 2627              	.LC133:
 2628 02a6 0A436175 		.string	"\nCaught SIGINT, quitting...\n"
 2628      67687420 
 2628      53494749 
 2628      4E542C20 
 2628      71756974 
 2629              		.section	.rodata.str1.8
 2630 092f 00       		.align 8
 2631              	.LC134:
 2632 0930 45786563 		.string	"Executing CommFPGA rail info on FPGALink device %s...\n"
 2632      7574696E 
 2632      6720436F 
 2632      6D6D4650 
 2632      47412072 
 2633              		.section	.rodata.str1.1
 2634              	.LC135:
 2635 02c3 656E7465 		.string	"entering the loop\n"
 2635      72696E67 
 2635      20746865 
 2635      206C6F6F 
 2635      700A00
 2636              	.LC136:
 2637 02d6 63686563 		.string	"checking on channel %d\n"
 2637      6B696E67 
 2637      206F6E20 
 2637      6368616E 
 2637      6E656C20 
 2638              	.LC137:
 2639 02ee 78206973 		.string	"x is %d, y is %d\n"
 2639      2025642C 
 2639      20792069 
 2639      73202564 
 2639      0A00
 2640              	.LC138:
 2641 0300 636F2D6F 		.string	"co-ord data re-sent\n"
 2641      72642064 
 2641      61746120 
 2641      72652D73 
 2641      656E740A 
 2642              		.section	.rodata.str1.8
 2643 0967 00       		.align 8
 2644              	.LC139:
 2645 0968 636F6E6E 		.string	"connection established on channel number %d\n"
 2645      65637469 
 2645      6F6E2065 
 2645      73746162 
 2645      6C697368 
 2646 0995 000000   		.align 8
 2647              	.LC140:
 2648 0998 77726974 		.string	"written the first 4 bytes of rail info\n"
 2648      74656E20 
 2648      74686520 
 2648      66697273 
 2648      74203420 
 2649              		.align 8
 2650              	.LC141:
 2651 09c0 77726974 		.string	"written the last 4 bytes of rail info\n"
 2651      74656E20 
 2651      74686520 
 2651      6C617374 
 2651      20342062 
 2652 09e7 00       		.align 8
 2653              	.LC142:
 2654 09e8 53322073 		.string	"S2 state successfully completed\n"
 2654      74617465 
 2654      20737563 
 2654      63657373 
 2654      66756C6C 
 2655 0a09 00000000 		.align 8
 2655      000000
 2656              	.LC143:
 2657 0a10 72656365 		.string	"received data at S3 is %u at time %d\n"
 2657      69766564 
 2657      20646174 
 2657      61206174 
 2657      20533320 
 2658              		.section	.rodata.str1.1
 2659              	.LC144:
 2660 0315 2D0A00   		.string	"-\n"
 2661              		.section	.rodata.str1.8
 2662 0a36 0000     		.align 8
 2663              	.LC145:
 2664 0a38 4469646E 		.string	"Didn't receive ACK on channel %d, decrypted_data = %u\n"
 2664      27742072 
 2664      65636569 
 2664      76652041 
 2664      434B206F 
 2665              		.section	.rodata.str1.1
 2666              	.LC146:
 2667 0318 6E6F206F 		.string	"no of processes completed %d\n"
 2667      66207072 
 2667      6F636573 
 2667      73657320 
 2667      636F6D70 
 2668              		.section	.rodata.str1.8
 2669 0a6f 00       		.align 8
 2670              	.LC147:
 2671 0a70 77616974 		.string	"waiting for next process to start\n"
 2671      696E6720 
 2671      666F7220 
 2671      6E657874 
 2671      2070726F 
 2672              		.section	.rodata.str1.1
 2673              	.LC148:
 2674 0336 2E0A00   		.string	".\n"
 2675              	.LC149:
 2676 0339 77616974 		.string	"waited for 20 seconds\n\n\n"
 2676      65642066 
 2676      6F722032 
 2676      30207365 
 2676      636F6E64 
 2677              		.section	.rodata.str1.8
 2678 0a93 00000000 		.align 8
 2678      00
 2679              	.LC150:
 2680 0a98 0A456E74 		.string	"\nEntering CommFPGA command-line mode:\n"
 2680      6572696E 
 2680      6720436F 
 2680      6D6D4650 
 2680      47412063 
 2681              		.section	.rodata.str1.1
 2682              	.LC151:
 2683 0352 3E2000   		.string	"> "
 2684              		.section	.rodata.str1.8
 2685 0abf 00       		.align 8
 2686              	.LC152:
 2687 0ac0 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --xsvf?\n"
 2687      46504741 
 2687      4C696E6B 
 2687      20646576 
 2687      69636520 
 2688 0b09 00000000 		.align 8
 2688      000000
 2689              	.LC153:
 2690 0b10 5368656C 		.string	"Shell requested but device at %s does not support CommFPGA\n"
 2690      6C207265 
 2690      71756573 
 2690      74656420 
 2690      62757420 
 2691              		.section	.text.startup,"ax",@progbits
 2692              		.p2align 4,,15
 2693              		.globl	main
 2695              	main:
 2696              	.LFB67:
 2697              		.cfi_startproc
 2698 0000 4157     		pushq	%r15
 2699              		.cfi_def_cfa_offset 16
 2700              		.cfi_offset 15, -16
 2701 0002 4156     		pushq	%r14
 2702              		.cfi_def_cfa_offset 24
 2703              		.cfi_offset 14, -24
 2704 0004 488D0D00 		leaq	.LC39(%rip), %rcx
 2704      000000
 2705 000b 4155     		pushq	%r13
 2706              		.cfi_def_cfa_offset 32
 2707              		.cfi_offset 13, -32
 2708 000d 4154     		pushq	%r12
 2709              		.cfi_def_cfa_offset 40
 2710              		.cfi_offset 12, -40
 2711 000f 488D1500 		leaq	.LC40(%rip), %rdx
 2711      000000
 2712 0016 55       		pushq	%rbp
 2713              		.cfi_def_cfa_offset 48
 2714              		.cfi_offset 6, -48
 2715 0017 53       		pushq	%rbx
 2716              		.cfi_def_cfa_offset 56
 2717              		.cfi_offset 3, -56
 2718 0018 4189FC   		movl	%edi, %r12d
 2719 001b 4989F5   		movq	%rsi, %r13
 2720 001e 488D3D00 		leaq	.LC42(%rip), %rdi
 2720      000000
 2721 0025 488D3500 		leaq	.LC41(%rip), %rsi
 2721      000000
 2722 002c 4881ECB8 		subq	$952, %rsp
 2722      030000
 2723              		.cfi_def_cfa_offset 1008
 2724 0033 64488B04 		movq	%fs:40, %rax
 2724      25280000 
 2724      00
 2725 003c 48898424 		movq	%rax, 936(%rsp)
 2725      A8030000 
 2726 0044 31C0     		xorl	%eax, %eax
 2727 0046 E8000000 		call	arg_str0@PLT
 2727      00
 2728 004b 488D0D00 		leaq	.LC43(%rip), %rcx
 2728      000000
 2729 0052 488D1500 		leaq	.LC44(%rip), %rdx
 2729      000000
 2730 0059 488D3500 		leaq	.LC45(%rip), %rsi
 2730      000000
 2731 0060 488D3D00 		leaq	.LC46(%rip), %rdi
 2731      000000
 2732 0067 48894424 		movq	%rax, 24(%rsp)
 2732      18
 2733 006c E8000000 		call	arg_str1@PLT
 2733      00
 2734 0071 488D0D00 		leaq	.LC47(%rip), %rcx
 2734      000000
 2735 0078 488D1500 		leaq	.LC48(%rip), %rdx
 2735      000000
 2736 007f 488D3500 		leaq	.LC49(%rip), %rsi
 2736      000000
 2737 0086 488D3D00 		leaq	.LC50(%rip), %rdi
 2737      000000
 2738 008d 48894424 		movq	%rax, 16(%rsp)
 2738      10
 2739 0092 E8000000 		call	arg_str0@PLT
 2739      00
 2740 0097 488D0D00 		leaq	.LC51(%rip), %rcx
 2740      000000
 2741 009e 488D1500 		leaq	.LC52(%rip), %rdx
 2741      000000
 2742 00a5 488D3500 		leaq	.LC53(%rip), %rsi
 2742      000000
 2743 00ac 488D3D00 		leaq	.LC54(%rip), %rdi
 2743      000000
 2744 00b3 48894424 		movq	%rax, 40(%rsp)
 2744      28
 2745 00b8 E8000000 		call	arg_str0@PLT
 2745      00
 2746 00bd 488D0D00 		leaq	.LC55(%rip), %rcx
 2746      000000
 2747 00c4 488D1500 		leaq	.LC56(%rip), %rdx
 2747      000000
 2748 00cb 488D3500 		leaq	.LC57(%rip), %rsi
 2748      000000
 2749 00d2 488D3D00 		leaq	.LC58(%rip), %rdi
 2749      000000
 2750 00d9 48894424 		movq	%rax, 56(%rsp)
 2750      38
 2751 00de E8000000 		call	arg_str0@PLT
 2751      00
 2752 00e3 488D0D00 		leaq	.LC59(%rip), %rcx
 2752      000000
 2753 00ea 488D1500 		leaq	.LC60(%rip), %rdx
 2753      000000
 2754 00f1 488D3500 		leaq	.LC61(%rip), %rsi
 2754      000000
 2755 00f8 488D3D00 		leaq	.LC62(%rip), %rdi
 2755      000000
 2756 00ff 48894424 		movq	%rax, 64(%rsp)
 2756      40
 2757 0104 E8000000 		call	arg_str0@PLT
 2757      00
 2758 0109 488D0D00 		leaq	.LC63(%rip), %rcx
 2758      000000
 2759 0110 488D1500 		leaq	.LC64(%rip), %rdx
 2759      000000
 2760 0117 488D3500 		leaq	.LC65(%rip), %rsi
 2760      000000
 2761 011e 488D3D00 		leaq	.LC66(%rip), %rdi
 2761      000000
 2762 0125 48894424 		movq	%rax, 72(%rsp)
 2762      48
 2763 012a E8000000 		call	arg_uint0@PLT
 2763      00
 2764 012f 488D0D00 		leaq	.LC67(%rip), %rcx
 2764      000000
 2765 0136 488D1500 		leaq	.LC68(%rip), %rdx
 2765      000000
 2766 013d 488D3500 		leaq	.LC69(%rip), %rsi
 2766      000000
 2767 0144 488D3D00 		leaq	.LC70(%rip), %rdi
 2767      000000
 2768 014b 48894424 		movq	%rax, 48(%rsp)
 2768      30
 2769 0150 E8000000 		call	arg_str0@PLT
 2769      00
 2770 0155 488D1500 		leaq	.LC71(%rip), %rdx
 2770      000000
 2771 015c 488D3500 		leaq	.LC72(%rip), %rsi
 2771      000000
 2772 0163 488D3D00 		leaq	.LC73(%rip), %rdi
 2772      000000
 2773 016a 48894424 		movq	%rax, 80(%rsp)
 2773      50
 2774 016f E8000000 		call	arg_lit0@PLT
 2774      00
 2775 0174 488D1500 		leaq	.LC74(%rip), %rdx
 2775      000000
 2776 017b 488D3500 		leaq	.LC75(%rip), %rsi
 2776      000000
 2777 0182 488D3D00 		leaq	.LC76(%rip), %rdi
 2777      000000
 2778 0189 4989C7   		movq	%rax, %r15
 2779 018c 48898424 		movq	%rax, 136(%rsp)
 2779      88000000 
 2780 0194 E8000000 		call	arg_lit0@PLT
 2780      00
 2781 0199 488D1500 		leaq	.LC77(%rip), %rdx
 2781      000000
 2782 01a0 488D3500 		leaq	.LC78(%rip), %rsi
 2782      000000
 2783 01a7 488D3D00 		leaq	.LC12(%rip), %rdi
 2783      000000
 2784 01ae 48894424 		movq	%rax, 104(%rsp)
 2784      68
 2785 01b3 E8000000 		call	arg_lit0@PLT
 2785      00
 2786 01b8 488D0D00 		leaq	.LC79(%rip), %rcx
 2786      000000
 2787 01bf 488D1500 		leaq	.LC80(%rip), %rdx
 2787      000000
 2788 01c6 488D3500 		leaq	.LC81(%rip), %rsi
 2788      000000
 2789 01cd 488D3D00 		leaq	.LC82(%rip), %rdi
 2789      000000
 2790 01d4 4989C6   		movq	%rax, %r14
 2791 01d7 48898424 		movq	%rax, 128(%rsp)
 2791      80000000 
 2792 01df E8000000 		call	arg_str0@PLT
 2792      00
 2793 01e4 488D1500 		leaq	.LC83(%rip), %rdx
 2793      000000
 2794 01eb 488D3500 		leaq	.LC84(%rip), %rsi
 2794      000000
 2795 01f2 488D3D00 		leaq	.LC85(%rip), %rdi
 2795      000000
 2796 01f9 48894424 		movq	%rax, 88(%rsp)
 2796      58
 2797 01fe E8000000 		call	arg_lit0@PLT
 2797      00
 2798 0203 488D0D00 		leaq	.LC86(%rip), %rcx
 2798      000000
 2799 020a 488D1500 		leaq	.LC87(%rip), %rdx
 2799      000000
 2800 0211 488D3500 		leaq	.LC88(%rip), %rsi
 2800      000000
 2801 0218 31FF     		xorl	%edi, %edi
 2802 021a 48894424 		movq	%rax, 8(%rsp)
 2802      08
 2803 021f E8000000 		call	arg_str0@PLT
 2803      00
 2804 0224 488D0D00 		leaq	.LC89(%rip), %rcx
 2804      000000
 2805 022b 488D1500 		leaq	.LC90(%rip), %rdx
 2805      000000
 2806 0232 488D3500 		leaq	.LC91(%rip), %rsi
 2806      000000
 2807 0239 31FF     		xorl	%edi, %edi
 2808 023b 48894424 		movq	%rax, 32(%rsp)
 2808      20
 2809 0240 E8000000 		call	arg_str0@PLT
 2809      00
 2810 0245 488D0D00 		leaq	.LC92(%rip), %rcx
 2810      000000
 2811 024c 488D1500 		leaq	.LC93(%rip), %rdx
 2811      000000
 2812 0253 488D3500 		leaq	.LC94(%rip), %rsi
 2812      000000
 2813 025a 488D3D00 		leaq	.LC95(%rip), %rdi
 2813      000000
 2814 0261 4889C3   		movq	%rax, %rbx
 2815 0264 48894424 		movq	%rax, 120(%rsp)
 2815      78
 2816 0269 E8000000 		call	arg_str0@PLT
 2816      00
 2817 026e BF140000 		movl	$20, %edi
 2817      00
 2818 0273 48894424 		movq	%rax, 96(%rsp)
 2818      60
 2819 0278 E8000000 		call	arg_end@PLT
 2819      00
 2820 027d F30F7E44 		movq	24(%rsp), %xmm0
 2820      2418
 2821 0283 4C897C24 		movq	%r15, 112(%rsp)
 2821      70
 2822 0288 0F164424 		movhps	16(%rsp), %xmm0
 2822      10
 2823 028d 4889C5   		movq	%rax, %rbp
 2824 0290 48898424 		movq	%rax, 384(%rsp)
 2824      80010000 
 2825 0298 48C78424 		movq	$0, 160(%rsp)
 2825      A0000000 
 2825      00000000 
 2826 02a4 48C78424 		movq	$0, 168(%rsp)
 2826      A8000000 
 2826      00000000 
 2827 02b0 0F298424 		movaps	%xmm0, 256(%rsp)
 2827      00010000 
 2828 02b8 F30F7E44 		movq	40(%rsp), %xmm0
 2828      2428
 2829 02be 0F164424 		movhps	56(%rsp), %xmm0
 2829      38
 2830 02c3 0F298424 		movaps	%xmm0, 272(%rsp)
 2830      10010000 
 2831 02cb F30F7E44 		movq	64(%rsp), %xmm0
 2831      2440
 2832 02d1 0F164424 		movhps	72(%rsp), %xmm0
 2832      48
 2833 02d6 0F298424 		movaps	%xmm0, 288(%rsp)
 2833      20010000 
 2834 02de F30F7E44 		movq	48(%rsp), %xmm0
 2834      2430
 2835 02e4 0F164424 		movhps	80(%rsp), %xmm0
 2835      50
 2836 02e9 0F298424 		movaps	%xmm0, 304(%rsp)
 2836      30010000 
 2837 02f1 F30F7E44 		movq	112(%rsp), %xmm0
 2837      2470
 2838 02f7 4C897424 		movq	%r14, 112(%rsp)
 2838      70
 2839 02fc 0F164424 		movhps	104(%rsp), %xmm0
 2839      68
 2840 0301 0F298424 		movaps	%xmm0, 320(%rsp)
 2840      40010000 
 2841 0309 F30F7E44 		movq	112(%rsp), %xmm0
 2841      2470
 2842 030f 48895C24 		movq	%rbx, 112(%rsp)
 2842      70
 2843 0314 0F164424 		movhps	88(%rsp), %xmm0
 2843      58
 2844 0319 488D9C24 		leaq	256(%rsp), %rbx
 2844      00010000 
 2845 0321 0F298424 		movaps	%xmm0, 336(%rsp)
 2845      50010000 
 2846 0329 4889DF   		movq	%rbx, %rdi
 2847 032c F30F7E44 		movq	8(%rsp), %xmm0
 2847      2408
 2848 0332 0F164424 		movhps	32(%rsp), %xmm0
 2848      20
 2849 0337 0F298424 		movaps	%xmm0, 352(%rsp)
 2849      60010000 
 2850 033f F30F7E44 		movq	112(%rsp), %xmm0
 2850      2470
 2851 0345 0F164424 		movhps	96(%rsp), %xmm0
 2851      60
 2852 034a 0F298424 		movaps	%xmm0, 368(%rsp)
 2852      70010000 
 2853 0352 E8000000 		call	arg_nullcheck@PLT
 2853      00
 2854 0357 85C0     		testl	%eax, %eax
 2855 0359 0F849C00 		je	.L343
 2855      0000
 2856 035f 488B3D00 		movq	stderr(%rip), %rdi
 2856      000000
 2857 0366 488D0D00 		leaq	.LC96(%rip), %rcx
 2857      000000
 2858 036d 488D1500 		leaq	.LC97(%rip), %rdx
 2858      000000
 2859 0374 BE010000 		movl	$1, %esi
 2859      00
 2860 0379 31C0     		xorl	%eax, %eax
 2861 037b 31DB     		xorl	%ebx, %ebx
 2862 037d BD010000 		movl	$1, %ebp
 2862      00
 2863 0382 E8000000 		call	__fprintf_chk@PLT
 2863      00
 2864              	.L344:
 2865 0387 4889DF   		movq	%rbx, %rdi
 2866 038a E8000000 		call	free@PLT
 2866      00
 2867 038f 488BBC24 		movq	160(%rsp), %rdi
 2867      A0000000 
 2868 0397 E8000000 		call	flClose@PLT
 2868      00
 2869 039c 488B8C24 		movq	168(%rsp), %rcx
 2869      A8000000 
 2870 03a4 4885C9   		testq	%rcx, %rcx
 2871 03a7 7427     		je	.L428
 2872 03a9 488B3D00 		movq	stderr(%rip), %rdi
 2872      000000
 2873 03b0 488D1500 		leaq	.LC37(%rip), %rdx
 2873      000000
 2874 03b7 BE010000 		movl	$1, %esi
 2874      00
 2875 03bc 31C0     		xorl	%eax, %eax
 2876 03be E8000000 		call	__fprintf_chk@PLT
 2876      00
 2877 03c3 488BBC24 		movq	168(%rsp), %rdi
 2877      A8000000 
 2878 03cb E8000000 		call	flFreeError@PLT
 2878      00
 2879              	.L428:
 2880 03d0 488B9C24 		movq	936(%rsp), %rbx
 2880      A8030000 
 2881 03d8 6448331C 		xorq	%fs:40, %rbx
 2881      25280000 
 2881      00
 2882 03e1 89E8     		movl	%ebp, %eax
 2883 03e3 0F854008 		jne	.L474
 2883      0000
 2884 03e9 4881C4B8 		addq	$952, %rsp
 2884      030000
 2885              		.cfi_remember_state
 2886              		.cfi_def_cfa_offset 56
 2887 03f0 5B       		popq	%rbx
 2888              		.cfi_def_cfa_offset 48
 2889 03f1 5D       		popq	%rbp
 2890              		.cfi_def_cfa_offset 40
 2891 03f2 415C     		popq	%r12
 2892              		.cfi_def_cfa_offset 32
 2893 03f4 415D     		popq	%r13
 2894              		.cfi_def_cfa_offset 24
 2895 03f6 415E     		popq	%r14
 2896              		.cfi_def_cfa_offset 16
 2897 03f8 415F     		popq	%r15
 2898              		.cfi_def_cfa_offset 8
 2899 03fa C3       		ret
 2900              	.L343:
 2901              		.cfi_restore_state
 2902 03fb 4889DA   		movq	%rbx, %rdx
 2903 03fe 4C89EE   		movq	%r13, %rsi
 2904 0401 4489E7   		movl	%r12d, %edi
 2905 0404 E8000000 		call	arg_parse@PLT
 2905      00
 2906 0409 488B4C24 		movq	8(%rsp), %rcx
 2906      08
 2907 040e 83796000 		cmpl	$0, 96(%rcx)
 2908 0412 7F4B     		jg	.L475
 2909 0414 85C0     		testl	%eax, %eax
 2910 0416 0F8EA500 		jle	.L346
 2910      0000
 2911 041c 488B3D00 		movq	stdout(%rip), %rdi
 2911      000000
 2912 0423 488D1500 		leaq	.LC96(%rip), %rdx
 2912      000000
 2913 042a 4889EE   		movq	%rbp, %rsi
 2914 042d E8000000 		call	arg_print_errors@PLT
 2914      00
 2915 0432 488D0D00 		leaq	.LC96(%rip), %rcx
 2915      000000
 2916 0439 488D1500 		leaq	.LC102(%rip), %rdx
 2916      000000
 2917              	.L471:
 2918 0440 488B3D00 		movq	stderr(%rip), %rdi
 2918      000000
 2919 0447 BE010000 		movl	$1, %esi
 2919      00
 2920 044c 31C0     		xorl	%eax, %eax
 2921 044e 31DB     		xorl	%ebx, %ebx
 2922 0450 BD0C0000 		movl	$12, %ebp
 2922      00
 2923 0455 E8000000 		call	__fprintf_chk@PLT
 2923      00
 2924 045a E928FFFF 		jmp	.L344
 2924      FF
 2925              	.L475:
 2926 045f 488D1500 		leaq	.LC96(%rip), %rdx
 2926      000000
 2927 0466 488D3500 		leaq	.LC98(%rip), %rsi
 2927      000000
 2928 046d BF010000 		movl	$1, %edi
 2928      00
 2929 0472 31C0     		xorl	%eax, %eax
 2930 0474 31ED     		xorl	%ebp, %ebp
 2931 0476 E8000000 		call	__printf_chk@PLT
 2931      00
 2932 047b 488B3D00 		movq	stdout(%rip), %rdi
 2932      000000
 2933 0482 488D1500 		leaq	.LC99(%rip), %rdx
 2933      000000
 2934 0489 4889DE   		movq	%rbx, %rsi
 2935 048c E8000000 		call	arg_print_syntax@PLT
 2935      00
 2936 0491 488D3500 		leaq	.LC100(%rip), %rsi
 2936      000000
 2937 0498 BF010000 		movl	$1, %edi
 2937      00
 2938 049d 31C0     		xorl	%eax, %eax
 2939 049f E8000000 		call	__printf_chk@PLT
 2939      00
 2940 04a4 488B3D00 		movq	stdout(%rip), %rdi
 2940      000000
 2941 04ab 488D1500 		leaq	.LC101(%rip), %rdx
 2941      000000
 2942 04b2 4889DE   		movq	%rbx, %rsi
 2943 04b5 31DB     		xorl	%ebx, %ebx
 2944 04b7 E8000000 		call	arg_print_glossary@PLT
 2944      00
 2945 04bc E9C6FEFF 		jmp	.L344
 2945      FF
 2946              	.L346:
 2947 04c1 4C8DBC24 		leaq	168(%rsp), %r15
 2947      A8000000 
 2948 04c9 31FF     		xorl	%edi, %edi
 2949 04cb 4C89FE   		movq	%r15, %rsi
 2950 04ce E8000000 		call	flInitialise@PLT
 2950      00
 2951 04d3 85C0     		testl	%eax, %eax
 2952 04d5 740C     		je	.L347
 2953              	.L422:
 2954 04d7 31DB     		xorl	%ebx, %ebx
 2955 04d9 BD010000 		movl	$1, %ebp
 2955      00
 2956 04de E9A4FEFF 		jmp	.L344
 2956      FF
 2957              	.L347:
 2958 04e3 488B4424 		movq	16(%rsp), %rax
 2958      10
 2959 04e8 488D3500 		leaq	.LC103(%rip), %rsi
 2959      000000
 2960 04ef 488DAC24 		leaq	160(%rsp), %rbp
 2960      A0000000 
 2961 04f7 BF010000 		movl	$1, %edi
 2961      00
 2962 04fc 488B4068 		movq	104(%rax), %rax
 2963 0500 4C8B30   		movq	(%rax), %r14
 2964 0503 31C0     		xorl	%eax, %eax
 2965 0505 4C89F2   		movq	%r14, %rdx
 2966 0508 E8000000 		call	__printf_chk@PLT
 2966      00
 2967 050d 31D2     		xorl	%edx, %edx
 2968 050f 4889EE   		movq	%rbp, %rsi
 2969 0512 4C89F7   		movq	%r14, %rdi
 2970 0515 E8000000 		call	flOpen@PLT
 2970      00
 2971 051a 85C0     		testl	%eax, %eax
 2972 051c 0F843D01 		je	.L348
 2972      0000
 2973 0522 488B4424 		movq	24(%rsp), %rax
 2973      18
 2974 0527 83786000 		cmpl	$0, 96(%rax)
 2975 052b 0F845B03 		je	.L349
 2975      0000
 2976 0531 488B4068 		movq	104(%rax), %rax
 2977 0535 488D3500 		leaq	.LC104(%rip), %rsi
 2977      000000
 2978 053c BF010000 		movl	$1, %edi
 2978      00
 2979 0541 488B18   		movq	(%rax), %rbx
 2980 0544 31C0     		xorl	%eax, %eax
 2981 0546 4889DA   		movq	%rbx, %rdx
 2982 0549 E8000000 		call	__printf_chk@PLT
 2982      00
 2983 054e 488B4424 		movq	40(%rsp), %rax
 2983      28
 2984 0553 83786000 		cmpl	$0, 96(%rax)
 2985 0557 0F843E03 		je	.L350
 2985      0000
 2986 055d 488B4068 		movq	104(%rax), %rax
 2987 0561 4C89FA   		movq	%r15, %rdx
 2988 0564 4889DF   		movq	%rbx, %rdi
 2989 0567 488B30   		movq	(%rax), %rsi
 2990 056a E8000000 		call	flLoadCustomFirmware@PLT
 2990      00
 2991              	.L351:
 2992 056f 85C0     		testl	%eax, %eax
 2993 0571 0F8560FF 		jne	.L422
 2993      FFFF
 2994 0577 488D3500 		leaq	.LC105(%rip), %rsi
 2994      000000
 2995 057e BF010000 		movl	$1, %edi
 2995      00
 2996 0583 BB3C0000 		movl	$60, %ebx
 2996      00
 2997 0588 4C8DAC24 		leaq	184(%rsp), %r13
 2997      B8000000 
 2998 0590 4C8D2500 		leaq	.LC106(%rip), %r12
 2998      000000
 2999 0597 E8000000 		call	__printf_chk@PLT
 2999      00
 3000 059c BFE80300 		movl	$1000, %edi
 3000      00
 3001 05a1 E8000000 		call	flSleep@PLT
 3001      00
 3002 05a6 EB04     		jmp	.L353
 3003              	.L476:
 3004 05a8 85DB     		testl	%ebx, %ebx
 3005 05aa 7448     		je	.L435
 3006              	.L353:
 3007 05ac 4C89E6   		movq	%r12, %rsi
 3008 05af BF010000 		movl	$1, %edi
 3008      00
 3009 05b4 31C0     		xorl	%eax, %eax
 3010 05b6 E8000000 		call	__printf_chk@PLT
 3010      00
 3011 05bb 488B3D00 		movq	stdout(%rip), %rdi
 3011      000000
 3012 05c2 E8000000 		call	fflush@PLT
 3012      00
 3013 05c7 4C89FA   		movq	%r15, %rdx
 3014 05ca 4C89EE   		movq	%r13, %rsi
 3015 05cd 4C89F7   		movq	%r14, %rdi
 3016 05d0 E8000000 		call	flIsDeviceAvailable@PLT
 3016      00
 3017 05d5 85C0     		testl	%eax, %eax
 3018 05d7 0F85FAFE 		jne	.L422
 3018      FFFF
 3019 05dd BFFA0000 		movl	$250, %edi
 3019      00
 3020 05e2 83EB01   		subl	$1, %ebx
 3021 05e5 E8000000 		call	flSleep@PLT
 3021      00
 3022 05ea 80BC24B8 		cmpb	$0, 184(%rsp)
 3022      00000000 
 3023 05f2 74B4     		je	.L476
 3024              	.L435:
 3025 05f4 488D3500 		leaq	.LC99(%rip), %rsi
 3025      000000
 3026 05fb 31C0     		xorl	%eax, %eax
 3027 05fd BF010000 		movl	$1, %edi
 3027      00
 3028 0602 E8000000 		call	__printf_chk@PLT
 3028      00
 3029 0607 80BC24B8 		cmpb	$0, 184(%rsp)
 3029      00000000 
 3030 060f 7522     		jne	.L355
 3031 0611 488B3D00 		movq	stderr(%rip), %rdi
 3031      000000
 3032 0618 488D1500 		leaq	.LC107(%rip), %rdx
 3032      000000
 3033 061f 4C89F1   		movq	%r14, %rcx
 3034 0622 BE010000 		movl	$1, %esi
 3034      00
 3035 0627 31C0     		xorl	%eax, %eax
 3036 0629 E8000000 		call	__fprintf_chk@PLT
 3036      00
 3037 062e E9A4FEFF 		jmp	.L422
 3037      FF
 3038              	.L355:
 3039 0633 488D3500 		leaq	.LC108(%rip), %rsi
 3039      000000
 3040 063a 4C89F2   		movq	%r14, %rdx
 3041 063d BF010000 		movl	$1, %edi
 3041      00
 3042 0642 31C0     		xorl	%eax, %eax
 3043 0644 E8000000 		call	__printf_chk@PLT
 3043      00
 3044 0649 4C89FA   		movq	%r15, %rdx
 3045 064c 4889EE   		movq	%rbp, %rsi
 3046 064f 4C89F7   		movq	%r14, %rdi
 3047 0652 E8000000 		call	flOpen@PLT
 3047      00
 3048 0657 85C0     		testl	%eax, %eax
 3049 0659 0F8578FE 		jne	.L422
 3049      FFFF
 3050              	.L348:
 3051 065f 488BBC24 		movq	160(%rsp), %rdi
 3051      A0000000 
 3052 0667 E8000000 		call	flGetFirmwareVersion@PLT
 3052      00
 3053 066c 488BBC24 		movq	160(%rsp), %rdi
 3053      A0000000 
 3054 0674 89C3     		movl	%eax, %ebx
 3055 0676 E8000000 		call	flGetFirmwareID@PLT
 3055      00
 3056 067b 488D3500 		leaq	.LC110(%rip), %rsi
 3056      000000
 3057 0682 0FB7C8   		movzwl	%ax, %ecx
 3058 0685 4189D8   		movl	%ebx, %r8d
 3059 0688 31C0     		xorl	%eax, %eax
 3060 068a 4C89F2   		movq	%r14, %rdx
 3061 068d BF010000 		movl	$1, %edi
 3061      00
 3062 0692 E8000000 		call	__printf_chk@PLT
 3062      00
 3063 0697 488B4424 		movq	32(%rsp), %rax
 3063      20
 3064 069c 83786000 		cmpl	$0, 96(%rax)
 3065 06a0 744F     		je	.L363
 3066 06a2 488B4424 		movq	32(%rsp), %rax
 3066      20
 3067 06a7 488D3D00 		leaq	.LC111(%rip), %rdi
 3067      000000
 3068 06ae 488B4068 		movq	104(%rax), %rax
 3069 06b2 488B18   		movq	(%rax), %rbx
 3070 06b5 4889DE   		movq	%rbx, %rsi
 3071 06b8 E8000000 		call	strcmp@PLT
 3071      00
 3072 06bd 85C0     		testl	%eax, %eax
 3073 06bf 0F854802 		jne	.L360
 3073      0000
 3074 06c5 488D3500 		leaq	.LC112(%rip), %rsi
 3074      000000
 3075 06cc BF010000 		movl	$1, %edi
 3075      00
 3076 06d1 E8000000 		call	__printf_chk@PLT
 3076      00
 3077 06d6 488BBC24 		movq	160(%rsp), %rdi
 3077      A0000000 
 3078 06de 4C89FA   		movq	%r15, %rdx
 3079 06e1 4C89F6   		movq	%r14, %rsi
 3080 06e4 E8000000 		call	flFlashStandardFirmware@PLT
 3080      00
 3081              	.L361:
 3082 06e9 85C0     		testl	%eax, %eax
 3083 06eb 0F85E6FD 		jne	.L422
 3083      FFFF
 3084              	.L363:
 3085 06f1 488B4424 		movq	120(%rsp), %rax
 3085      78
 3086 06f6 83786000 		cmpl	$0, 96(%rax)
 3087 06fa 0F85AE01 		jne	.L477
 3087      0000
 3088              	.L359:
 3089 0700 488B8424 		movq	128(%rsp), %rax
 3089      80000000 
 3090 0708 83786000 		cmpl	$0, 96(%rax)
 3091 070c 0F853202 		jne	.L366
 3091      0000
 3092              	.L369:
 3093 0712 488B4424 		movq	48(%rsp), %rax
 3093      30
 3094 0717 BB010000 		movl	$1, %ebx
 3094      00
 3095 071c 83786000 		cmpl	$0, 96(%rax)
 3096 0720 740C     		je	.L368
 3097 0722 488B4424 		movq	48(%rsp), %rax
 3097      30
 3098 0727 488B4068 		movq	104(%rax), %rax
 3099 072b 0FB618   		movzbl	(%rax), %ebx
 3100              	.L368:
 3101 072e 488BBC24 		movq	160(%rsp), %rdi
 3101      A0000000 
 3102 0736 E8000000 		call	flIsNeroCapable@PLT
 3102      00
 3103 073b 488BBC24 		movq	160(%rsp), %rdi
 3103      A0000000 
 3104 0743 89C5     		movl	%eax, %ebp
 3105 0745 0FB6C3   		movzbl	%bl, %eax
 3106 0748 89C6     		movl	%eax, %esi
 3107 074a 89442408 		movl	%eax, 8(%rsp)
 3108 074e E8000000 		call	flIsCommCapable@PLT
 3108      00
 3109 0753 89C3     		movl	%eax, %ebx
 3110 0755 488B4424 		movq	56(%rsp), %rax
 3110      38
 3111 075a 83786000 		cmpl	$0, 96(%rax)
 3112 075e 0F853702 		jne	.L478
 3112      0000
 3113              	.L370:
 3114 0764 488B4424 		movq	64(%rsp), %rax
 3114      40
 3115 0769 83786000 		cmpl	$0, 96(%rax)
 3116 076d 0F84EE01 		je	.L372
 3116      0000
 3117 0773 4084ED   		testb	%bpl, %bpl
 3118 0776 0F84BF03 		je	.L373
 3118      0000
 3119 077c 488BBC24 		movq	160(%rsp), %rdi
 3119      A0000000 
 3120 0784 31F6     		xorl	%esi, %esi
 3121 0786 4C89FA   		movq	%r15, %rdx
 3122 0789 E8000000 		call	flSelectConduit@PLT
 3122      00
 3123 078e 85C0     		testl	%eax, %eax
 3124 0790 0F8541FD 		jne	.L422
 3124      FFFF
 3125 0796 488B4424 		movq	64(%rsp), %rax
 3125      40
 3126 079b 488DAC24 		leaq	192(%rsp), %rbp
 3126      C0000000 
 3127 07a3 488BBC24 		movq	160(%rsp), %rdi
 3127      A0000000 
 3128 07ab 488D9424 		leaq	152(%rsp), %rdx
 3128      98000000 
 3129 07b3 4D89F9   		movq	%r15, %r9
 3130 07b6 41B81000 		movl	$16, %r8d
 3130      0000
 3131 07bc 4889E9   		movq	%rbp, %rcx
 3132 07bf 488B4068 		movq	104(%rax), %rax
 3133 07c3 488B30   		movq	(%rax), %rsi
 3134 07c6 E8000000 		call	jtagScanChain@PLT
 3134      00
 3135 07cb 85C0     		testl	%eax, %eax
 3136 07cd 0F8504FD 		jne	.L422
 3136      FFFF
 3137 07d3 83BC2498 		cmpl	$0, 152(%rsp)
 3137      00000000 
 3138 07db 4C89F2   		movq	%r14, %rdx
 3139 07de 0F848A04 		je	.L374
 3139      0000
 3140 07e4 488D3500 		leaq	.LC122(%rip), %rsi
 3140      000000
 3141 07eb BF010000 		movl	$1, %edi
 3141      00
 3142 07f0 4531ED   		xorl	%r13d, %r13d
 3143 07f3 4C8D2500 		leaq	.LC123(%rip), %r12
 3143      000000
 3144 07fa E8000000 		call	__printf_chk@PLT
 3144      00
 3145 07ff EB18     		jmp	.L375
 3146              	.L376:
 3147 0801 428B54AD 		movl	0(%rbp,%r13,4), %edx
 3147      00
 3148 0806 4C89E6   		movq	%r12, %rsi
 3149 0809 BF010000 		movl	$1, %edi
 3149      00
 3150 080e 31C0     		xorl	%eax, %eax
 3151 0810 4983C501 		addq	$1, %r13
 3152 0814 E8000000 		call	__printf_chk@PLT
 3152      00
 3153              	.L375:
 3154 0819 4439AC24 		cmpl	%r13d, 152(%rsp)
 3154      98000000 
 3155 0821 77DE     		ja	.L376
 3156 0823 488B4424 		movq	72(%rsp), %rax
 3156      48
 3157 0828 83786000 		cmpl	$0, 96(%rax)
 3158 082c 0F855E04 		jne	.L378
 3158      0000
 3159              	.L379:
 3160 0832 488B4424 		movq	104(%rsp), %rax
 3160      68
 3161 0837 83786000 		cmpl	$0, 96(%rax)
 3162 083b 7407     		je	.L381
 3163 083d C6050000 		movb	$1, enableBenchmarking(%rip)
 3163      000001
 3164              	.L381:
 3165 0844 488B4424 		movq	80(%rsp), %rax
 3165      50
 3166 0849 83786000 		cmpl	$0, 96(%rax)
 3167 084d 0F854603 		jne	.L479
 3167      0000
 3168              	.L382:
 3169 0853 488B4424 		movq	88(%rsp), %rax
 3169      58
 3170 0858 83786000 		cmpl	$0, 96(%rax)
 3171 085c 0F85CC03 		jne	.L480
 3171      0000
 3172              	.L388:
 3173 0862 488B4424 		movq	96(%rsp), %rax
 3173      60
 3174 0867 83786000 		cmpl	$0, 96(%rax)
 3175 086b 0F851805 		jne	.L481
 3175      0000
 3176 0871 488B8424 		movq	136(%rsp), %rax
 3176      88000000 
 3177 0879 83786000 		cmpl	$0, 96(%rax)
 3178 087d 0F857404 		jne	.L482
 3178      0000
 3179              	.L420:
 3180 0883 31DB     		xorl	%ebx, %ebx
 3181 0885 31ED     		xorl	%ebp, %ebp
 3182 0887 E9FBFAFF 		jmp	.L344
 3182      FF
 3183              	.L349:
 3184 088c 4C89F1   		movq	%r14, %rcx
 3185 088f 488D1500 		leaq	.LC109(%rip), %rdx
 3185      000000
 3186 0896 E9A5FBFF 		jmp	.L471
 3186      FF
 3187              	.L350:
 3188 089b 4C89FA   		movq	%r15, %rdx
 3189 089e 4C89F6   		movq	%r14, %rsi
 3190 08a1 4889DF   		movq	%rbx, %rdi
 3191 08a4 E8000000 		call	flLoadStandardFirmware@PLT
 3191      00
 3192 08a9 E9C1FCFF 		jmp	.L351
 3192      FF
 3193              	.L477:
 3194 08ae 488B4424 		movq	120(%rsp), %rax
 3194      78
 3195 08b3 4C8DAC24 		leaq	184(%rsp), %r13
 3195      B8000000 
 3196 08bb 31D2     		xorl	%edx, %edx
 3197 08bd 4C89EE   		movq	%r13, %rsi
 3198 08c0 488B4068 		movq	104(%rax), %rax
 3199 08c4 488B38   		movq	(%rax), %rdi
 3200 08c7 E8000000 		call	strtoul@PLT
 3200      00
 3201 08cc 4889C3   		movq	%rax, %rbx
 3202 08cf 488B8424 		movq	184(%rsp), %rax
 3202      B8000000 
 3203 08d7 80383A   		cmpb	$58, (%rax)
 3204 08da 0F846A02 		je	.L364
 3204      0000
 3205 08e0 488D0D00 		leaq	.LC96(%rip), %rcx
 3205      000000
 3206 08e7 488D1500 		leaq	.LC114(%rip), %rdx
 3206      000000
 3207              	.L472:
 3208 08ee 488B3D00 		movq	stderr(%rip), %rdi
 3208      000000
 3209 08f5 BE010000 		movl	$1, %esi
 3209      00
 3210 08fa 31C0     		xorl	%eax, %eax
 3211 08fc BD0C0000 		movl	$12, %ebp
 3211      00
 3212 0901 31DB     		xorl	%ebx, %ebx
 3213 0903 E8000000 		call	__fprintf_chk@PLT
 3213      00
 3214 0908 E97AFAFF 		jmp	.L344
 3214      FF
 3215              	.L360:
 3216 090d 488D3500 		leaq	.LC113(%rip), %rsi
 3216      000000
 3217 0914 4889DA   		movq	%rbx, %rdx
 3218 0917 BF010000 		movl	$1, %edi
 3218      00
 3219 091c 31C0     		xorl	%eax, %eax
 3220 091e E8000000 		call	__printf_chk@PLT
 3220      00
 3221 0923 488B4424 		movq	32(%rsp), %rax
 3221      20
 3222 0928 488BBC24 		movq	160(%rsp), %rdi
 3222      A0000000 
 3223 0930 4C89FA   		movq	%r15, %rdx
 3224 0933 488B4068 		movq	104(%rax), %rax
 3225 0937 488B30   		movq	(%rax), %rsi
 3226 093a E8000000 		call	flFlashCustomFirmware@PLT
 3226      00
 3227 093f E9A5FDFF 		jmp	.L361
 3227      FF
 3228              	.L366:
 3229 0944 488BBC24 		movq	160(%rsp), %rdi
 3229      A0000000 
 3230 094c 4C89FE   		movq	%r15, %rsi
 3231 094f E8000000 		call	flResetToggle@PLT
 3231      00
 3232 0954 85C0     		testl	%eax, %eax
 3233 0956 0F857BFB 		jne	.L422
 3233      FFFF
 3234 095c E9B1FDFF 		jmp	.L369
 3234      FF
 3235              	.L372:
 3236 0961 488B4424 		movq	72(%rsp), %rax
 3236      48
 3237 0966 83786000 		cmpl	$0, 96(%rax)
 3238 096a 0F84C2FE 		je	.L379
 3238      FFFF
 3239 0970 488D3500 		leaq	.LC126(%rip), %rsi
 3239      000000
 3240 0977 31C0     		xorl	%eax, %eax
 3241 0979 BF010000 		movl	$1, %edi
 3241      00
 3242 097e E8000000 		call	__printf_chk@PLT
 3242      00
 3243 0983 4084ED   		testb	%bpl, %bpl
 3244 0986 0F851703 		jne	.L429
 3244      0000
 3245 098c 4C89F1   		movq	%r14, %rcx
 3246 098f 488D1500 		leaq	.LC127(%rip), %rdx
 3246      000000
 3247 0996 E9A5FAFF 		jmp	.L471
 3247      FF
 3248              	.L478:
 3249 099b 488D3500 		leaq	.LC116(%rip), %rsi
 3249      000000
 3250 09a2 BF010000 		movl	$1, %edi
 3250      00
 3251 09a7 31C0     		xorl	%eax, %eax
 3252 09a9 4C8DAC24 		leaq	184(%rsp), %r13
 3252      B8000000 
 3253 09b1 E8000000 		call	__printf_chk@PLT
 3253      00
 3254 09b6 488B4424 		movq	56(%rsp), %rax
 3254      38
 3255 09bb 488BBC24 		movq	160(%rsp), %rdi
 3255      A0000000 
 3256 09c3 4C89F9   		movq	%r15, %rcx
 3257 09c6 4C89EA   		movq	%r13, %rdx
 3258 09c9 488B4068 		movq	104(%rax), %rax
 3259 09cd 488B30   		movq	(%rax), %rsi
 3260 09d0 E8000000 		call	flMultiBitPortAccess@PLT
 3260      00
 3261 09d5 85C0     		testl	%eax, %eax
 3262 09d7 0F85FAFA 		jne	.L422
 3262      FFFF
 3263 09dd 448B8424 		movl	184(%rsp), %r8d
 3263      B8000000 
 3264 09e5 488D0D00 		leaq	.LC117(%rip), %rcx
 3264      000000
 3265 09ec 488DBC24 		leaq	927(%rsp), %rdi
 3265      9F030000 
 3266 09f4 BA090000 		movl	$9, %edx
 3266      00
 3267 09f9 BE010000 		movl	$1, %esi
 3267      00
 3268 09fe 31C0     		xorl	%eax, %eax
 3269 0a00 4C8D2500 		leaq	nibbles(%rip), %r12
 3269      000000
 3270 0a07 E8000000 		call	__sprintf_chk@PLT
 3270      00
 3271 0a0c 0FB68424 		movzbl	927(%rsp), %eax
 3271      9F030000 
 3272 0a14 488D3500 		leaq	.LC118(%rip), %rsi
 3272      000000
 3273 0a1b BF010000 		movl	$1, %edi
 3273      00
 3274 0a20 83E830   		subl	$48, %eax
 3275 0a23 4898     		cltq
 3276 0a25 498B14C4 		movq	(%r12,%rax,8), %rdx
 3277 0a29 31C0     		xorl	%eax, %eax
 3278 0a2b E8000000 		call	__printf_chk@PLT
 3278      00
 3279 0a30 0FB68424 		movzbl	928(%rsp), %eax
 3279      A0030000 
 3280 0a38 488D3500 		leaq	.LC119(%rip), %rsi
 3280      000000
 3281 0a3f BF010000 		movl	$1, %edi
 3281      00
 3282 0a44 83E830   		subl	$48, %eax
 3283 0a47 4898     		cltq
 3284 0a49 498B14C4 		movq	(%r12,%rax,8), %rdx
 3285 0a4d 31C0     		xorl	%eax, %eax
 3286 0a4f E8000000 		call	__printf_chk@PLT
 3286      00
 3287 0a54 0FB68424 		movzbl	929(%rsp), %eax
 3287      A1030000 
 3288 0a5c 488D3500 		leaq	.LC119(%rip), %rsi
 3288      000000
 3289 0a63 BF010000 		movl	$1, %edi
 3289      00
 3290 0a68 83E830   		subl	$48, %eax
 3291 0a6b 4898     		cltq
 3292 0a6d 498B14C4 		movq	(%r12,%rax,8), %rdx
 3293 0a71 31C0     		xorl	%eax, %eax
 3294 0a73 E8000000 		call	__printf_chk@PLT
 3294      00
 3295 0a78 0FB68424 		movzbl	930(%rsp), %eax
 3295      A2030000 
 3296 0a80 488D3500 		leaq	.LC119(%rip), %rsi
 3296      000000
 3297 0a87 BF010000 		movl	$1, %edi
 3297      00
 3298 0a8c 83E830   		subl	$48, %eax
 3299 0a8f 4898     		cltq
 3300 0a91 498B14C4 		movq	(%r12,%rax,8), %rdx
 3301 0a95 31C0     		xorl	%eax, %eax
 3302 0a97 E8000000 		call	__printf_chk@PLT
 3302      00
 3303 0a9c 0FB68424 		movzbl	931(%rsp), %eax
 3303      A3030000 
 3304 0aa4 488D3500 		leaq	.LC120(%rip), %rsi
 3304      000000
 3305 0aab BF010000 		movl	$1, %edi
 3305      00
 3306 0ab0 83E830   		subl	$48, %eax
 3307 0ab3 4898     		cltq
 3308 0ab5 498B14C4 		movq	(%r12,%rax,8), %rdx
 3309 0ab9 31C0     		xorl	%eax, %eax
 3310 0abb E8000000 		call	__printf_chk@PLT
 3310      00
 3311 0ac0 0FB68424 		movzbl	932(%rsp), %eax
 3311      A4030000 
 3312 0ac8 488D3500 		leaq	.LC119(%rip), %rsi
 3312      000000
 3313 0acf BF010000 		movl	$1, %edi
 3313      00
 3314 0ad4 83E830   		subl	$48, %eax
 3315 0ad7 4898     		cltq
 3316 0ad9 498B14C4 		movq	(%r12,%rax,8), %rdx
 3317 0add 31C0     		xorl	%eax, %eax
 3318 0adf E8000000 		call	__printf_chk@PLT
 3318      00
 3319 0ae4 0FB68424 		movzbl	933(%rsp), %eax
 3319      A5030000 
 3320 0aec 488D3500 		leaq	.LC119(%rip), %rsi
 3320      000000
 3321 0af3 BF010000 		movl	$1, %edi
 3321      00
 3322 0af8 83E830   		subl	$48, %eax
 3323 0afb 4898     		cltq
 3324 0afd 498B14C4 		movq	(%r12,%rax,8), %rdx
 3325 0b01 31C0     		xorl	%eax, %eax
 3326 0b03 E8000000 		call	__printf_chk@PLT
 3326      00
 3327 0b08 0FB68424 		movzbl	934(%rsp), %eax
 3327      A6030000 
 3328 0b10 488D3500 		leaq	.LC121(%rip), %rsi
 3328      000000
 3329 0b17 BF010000 		movl	$1, %edi
 3329      00
 3330 0b1c 83E830   		subl	$48, %eax
 3331 0b1f 4898     		cltq
 3332 0b21 498B14C4 		movq	(%r12,%rax,8), %rdx
 3333 0b25 31C0     		xorl	%eax, %eax
 3334 0b27 E8000000 		call	__printf_chk@PLT
 3334      00
 3335 0b2c BF640000 		movl	$100, %edi
 3335      00
 3336 0b31 E8000000 		call	flSleep@PLT
 3336      00
 3337 0b36 E929FCFF 		jmp	.L370
 3337      FF
 3338              	.L373:
 3339 0b3b 4C89F1   		movq	%r14, %rcx
 3340 0b3e 488D1500 		leaq	.LC125(%rip), %rdx
 3340      000000
 3341 0b45 E9F6F8FF 		jmp	.L471
 3341      FF
 3342              	.L364:
 3343 0b4a 488D4801 		leaq	1(%rax), %rcx
 3344 0b4e 488D3500 		leaq	.LC115(%rip), %rsi
 3344      000000
 3345 0b55 89DA     		movl	%ebx, %edx
 3346 0b57 BF010000 		movl	$1, %edi
 3346      00
 3347 0b5c 31C0     		xorl	%eax, %eax
 3348 0b5e 48898C24 		movq	%rcx, 184(%rsp)
 3348      B8000000 
 3349 0b66 E8000000 		call	__printf_chk@PLT
 3349      00
 3350 0b6b 488B9424 		movq	184(%rsp), %rdx
 3350      B8000000 
 3351 0b73 488BBC24 		movq	160(%rsp), %rdi
 3351      A0000000 
 3352 0b7b 4C89F9   		movq	%r15, %rcx
 3353 0b7e 89DE     		movl	%ebx, %esi
 3354 0b80 E8000000 		call	flSaveFirmware@PLT
 3354      00
 3355 0b85 85C0     		testl	%eax, %eax
 3356 0b87 0F8473FB 		je	.L359
 3356      FFFF
 3357              	.L396:
 3358 0b8d BD010000 		movl	$1, %ebp
 3358      00
 3359 0b92 31DB     		xorl	%ebx, %ebx
 3360 0b94 E9EEF7FF 		jmp	.L344
 3360      FF
 3361              	.L479:
 3362 0b99 488D3500 		leaq	.LC128(%rip), %rsi
 3362      000000
 3363 0ba0 31C0     		xorl	%eax, %eax
 3364 0ba2 4C89F2   		movq	%r14, %rdx
 3365 0ba5 BF010000 		movl	$1, %edi
 3365      00
 3366 0baa E8000000 		call	__printf_chk@PLT
 3366      00
 3367 0baf 84DB     		testb	%bl, %bl
 3368 0bb1 0F843101 		je	.L395
 3368      0000
 3369 0bb7 8B742408 		movl	8(%rsp), %esi
 3370 0bbb 488BBC24 		movq	160(%rsp), %rdi
 3370      A0000000 
 3371 0bc3 4C89FA   		movq	%r15, %rdx
 3372 0bc6 E8000000 		call	flSelectConduit@PLT
 3372      00
 3373 0bcb 85C0     		testl	%eax, %eax
 3374 0bcd 75BE     		jne	.L396
 3375 0bcf 4C8DAC24 		leaq	184(%rsp), %r13
 3375      B8000000 
 3376 0bd7 488BBC24 		movq	160(%rsp), %rdi
 3376      A0000000 
 3377 0bdf 4C89FA   		movq	%r15, %rdx
 3378 0be2 4C89EE   		movq	%r13, %rsi
 3379 0be5 E8000000 		call	flIsFPGARunning@PLT
 3379      00
 3380 0bea 85C0     		testl	%eax, %eax
 3381 0bec 759F     		jne	.L396
 3382 0bee 80BC24B8 		cmpb	$0, 184(%rsp)
 3382      00000000 
 3383 0bf6 0F84B307 		je	.L397
 3383      0000
 3384 0bfc 488B4424 		movq	80(%rsp), %rax
 3384      50
 3385 0c01 488BBC24 		movq	160(%rsp), %rdi
 3385      A0000000 
 3386 0c09 4C89FA   		movq	%r15, %rdx
 3387 0c0c 488B4068 		movq	104(%rax), %rax
 3388 0c10 488B30   		movq	(%rax), %rsi
 3389 0c13 E8000000 		call	parseLine
 3389      00
 3390 0c18 85C0     		testl	%eax, %eax
 3391 0c1a 89C5     		movl	%eax, %ebp
 3392 0c1c 0F8431FC 		je	.L382
 3392      FFFF
 3393 0c22 31DB     		xorl	%ebx, %ebx
 3394 0c24 E95EF7FF 		jmp	.L344
 3394      FF
 3395              	.L474:
 3396 0c29 E8000000 		call	__stack_chk_fail@PLT
 3396      00
 3397              	.L480:
 3398 0c2e 488B4068 		movq	104(%rax), %rax
 3399 0c32 488DB424 		leaq	176(%rsp), %rsi
 3399      B0000000 
 3400 0c3a BA0A0000 		movl	$10, %edx
 3400      00
 3401 0c3f 488B38   		movq	(%rax), %rdi
 3402 0c42 E8000000 		call	strtoul@PLT
 3402      00
 3403 0c47 488B8C24 		movq	176(%rsp), %rcx
 3403      B0000000 
 3404 0c4f 4889C5   		movq	%rax, %rbp
 3405 0c52 80393A   		cmpb	$58, (%rcx)
 3406 0c55 0F84EB01 		je	.L389
 3406      0000
 3407 0c5b 488D0D00 		leaq	.LC96(%rip), %rcx
 3407      000000
 3408 0c62 488D1500 		leaq	.LC131(%rip), %rdx
 3408      000000
 3409 0c69 E980FCFF 		jmp	.L472
 3409      FF
 3410              	.L374:
 3411 0c6e 488D3500 		leaq	.LC124(%rip), %rsi
 3411      000000
 3412 0c75 31C0     		xorl	%eax, %eax
 3413 0c77 BF010000 		movl	$1, %edi
 3413      00
 3414 0c7c E8000000 		call	__printf_chk@PLT
 3414      00
 3415 0c81 488B4424 		movq	72(%rsp), %rax
 3415      48
 3416 0c86 83786000 		cmpl	$0, 96(%rax)
 3417 0c8a 0F84A2FB 		je	.L379
 3417      FFFF
 3418              	.L378:
 3419 0c90 488D3500 		leaq	.LC126(%rip), %rsi
 3419      000000
 3420 0c97 BF010000 		movl	$1, %edi
 3420      00
 3421 0c9c 31C0     		xorl	%eax, %eax
 3422 0c9e E8000000 		call	__printf_chk@PLT
 3422      00
 3423              	.L429:
 3424 0ca3 488BBC24 		movq	160(%rsp), %rdi
 3424      A0000000 
 3425 0cab 31F6     		xorl	%esi, %esi
 3426 0cad 4C89FA   		movq	%r15, %rdx
 3427 0cb0 E8000000 		call	flSelectConduit@PLT
 3427      00
 3428 0cb5 85C0     		testl	%eax, %eax
 3429 0cb7 0F851AF8 		jne	.L422
 3429      FFFF
 3430 0cbd 488B4424 		movq	72(%rsp), %rax
 3430      48
 3431 0cc2 488BBC24 		movq	160(%rsp), %rdi
 3431      A0000000 
 3432 0cca 31D2     		xorl	%edx, %edx
 3433 0ccc 4C89F9   		movq	%r15, %rcx
 3434 0ccf 488B4068 		movq	104(%rax), %rax
 3435 0cd3 488B30   		movq	(%rax), %rsi
 3436 0cd6 E8000000 		call	flProgram@PLT
 3436      00
 3437 0cdb 85C0     		testl	%eax, %eax
 3438 0cdd 0F85F4F7 		jne	.L422
 3438      FFFF
 3439 0ce3 E94AFBFF 		jmp	.L379
 3439      FF
 3440              	.L395:
 3441 0ce8 4C89F1   		movq	%r14, %rcx
 3442 0ceb 488D1500 		leaq	.LC130(%rip), %rdx
 3442      000000
 3443 0cf2 E949F7FF 		jmp	.L471
 3443      FF
 3444              	.L482:
 3445 0cf7 488D3500 		leaq	.LC150(%rip), %rsi
 3445      000000
 3446 0cfe 31C0     		xorl	%eax, %eax
 3447 0d00 BF010000 		movl	$1, %edi
 3447      00
 3448 0d05 E8000000 		call	__printf_chk@PLT
 3448      00
 3449 0d0a 84DB     		testb	%bl, %bl
 3450 0d0c 0F842501 		je	.L421
 3450      0000
 3451              	.L430:
 3452 0d12 8B742408 		movl	8(%rsp), %esi
 3453 0d16 488BBC24 		movq	160(%rsp), %rdi
 3453      A0000000 
 3454 0d1e 4C89FA   		movq	%r15, %rdx
 3455 0d21 E8000000 		call	flSelectConduit@PLT
 3455      00
 3456 0d26 85C0     		testl	%eax, %eax
 3457 0d28 0F85A9F7 		jne	.L422
 3457      FFFF
 3458 0d2e 488BBC24 		movq	160(%rsp), %rdi
 3458      A0000000 
 3459 0d36 488DB424 		leaq	184(%rsp), %rsi
 3459      B8000000 
 3460 0d3e 4C89FA   		movq	%r15, %rdx
 3461 0d41 E8000000 		call	flIsFPGARunning@PLT
 3461      00
 3462 0d46 85C0     		testl	%eax, %eax
 3463 0d48 0F8589F7 		jne	.L422
 3463      FFFF
 3464 0d4e 80BC24B8 		cmpb	$0, 184(%rsp)
 3464      00000000 
 3465 0d56 0F846202 		je	.L423
 3465      0000
 3466 0d5c 4C8D2500 		leaq	.LC151(%rip), %r12
 3466      000000
 3467              	.L425:
 3468 0d63 4C89E7   		movq	%r12, %rdi
 3469 0d66 E8000000 		call	readline@PLT
 3469      00
 3470 0d6b 4885C0   		testq	%rax, %rax
 3471 0d6e 4889C3   		movq	%rax, %rbx
 3472 0d71 740F     		je	.L424
 3473 0d73 0FB600   		movzbl	(%rax), %eax
 3474 0d76 84C0     		testb	%al, %al
 3475 0d78 74E9     		je	.L425
 3476 0d7a 3C71     		cmpb	$113, %al
 3477 0d7c 0F85F805 		jne	.L483
 3477      0000
 3478              	.L424:
 3479 0d82 31ED     		xorl	%ebp, %ebp
 3480 0d84 E9FEF5FF 		jmp	.L344
 3480      FF
 3481              	.L481:
 3482 0d89 488D3500 		leaq	.LC134(%rip), %rsi
 3482      000000
 3483 0d90 31C0     		xorl	%eax, %eax
 3484 0d92 4C89F2   		movq	%r14, %rdx
 3485 0d95 BF010000 		movl	$1, %edi
 3485      00
 3486 0d9a E8000000 		call	__printf_chk@PLT
 3486      00
 3487 0d9f 84DB     		testb	%bl, %bl
 3488 0da1 0F8441FF 		je	.L395
 3488      FFFF
 3489 0da7 8B742408 		movl	8(%rsp), %esi
 3490 0dab 488BBC24 		movq	160(%rsp), %rdi
 3490      A0000000 
 3491 0db3 4C89FA   		movq	%r15, %rdx
 3492 0db6 E8000000 		call	flSelectConduit@PLT
 3492      00
 3493 0dbb 85C0     		testl	%eax, %eax
 3494 0dbd 0F85CAFD 		jne	.L396
 3494      FFFF
 3495 0dc3 488BBC24 		movq	160(%rsp), %rdi
 3495      A0000000 
 3496 0dcb 488DB424 		leaq	176(%rsp), %rsi
 3496      B0000000 
 3497 0dd3 4C89FA   		movq	%r15, %rdx
 3498 0dd6 E8000000 		call	flIsFPGARunning@PLT
 3498      00
 3499 0ddb 85C0     		testl	%eax, %eax
 3500 0ddd 0F85AAFD 		jne	.L396
 3500      FFFF
 3501 0de3 488B4424 		movq	96(%rsp), %rax
 3501      60
 3502 0de8 80BC24B0 		cmpb	$0, 176(%rsp)
 3502      00000000 
 3503 0df0 488B4068 		movq	104(%rax), %rax
 3504 0df4 488B00   		movq	(%rax), %rax
 3505 0df7 0F84B205 		je	.L397
 3505      0000
 3506 0dfd 803866   		cmpb	$102, (%rax)
 3507 0e00 48890500 		movq	%rax, ptr(%rip)
 3507      000000
 3508 0e07 0F84C001 		je	.L484
 3508      0000
 3509              	.L398:
 3510 0e0d 488B8424 		movq	136(%rsp), %rax
 3510      88000000 
 3511 0e15 83786000 		cmpl	$0, 96(%rax)
 3512 0e19 0F8464FA 		je	.L420
 3512      FFFF
 3513 0e1f 488D3500 		leaq	.LC150(%rip), %rsi
 3513      000000
 3514 0e26 BF010000 		movl	$1, %edi
 3514      00
 3515 0e2b 31C0     		xorl	%eax, %eax
 3516 0e2d E8000000 		call	__printf_chk@PLT
 3516      00
 3517 0e32 E9DBFEFF 		jmp	.L430
 3517      FF
 3518              	.L421:
 3519 0e37 4C89F1   		movq	%r14, %rcx
 3520 0e3a 488D1500 		leaq	.LC153(%rip), %rdx
 3520      000000
 3521 0e41 E9FAF5FF 		jmp	.L471
 3521      FF
 3522              	.L389:
 3523 0e46 488D3500 		leaq	.LC132(%rip), %rsi
 3523      000000
 3524 0e4d 4883C101 		addq	$1, %rcx
 3525 0e51 4889C2   		movq	%rax, %rdx
 3526 0e54 BF010000 		movl	$1, %edi
 3526      00
 3527 0e59 31C0     		xorl	%eax, %eax
 3528 0e5b 48898C24 		movq	%rcx, 176(%rsp)
 3528      B0000000 
 3529 0e63 E8000000 		call	__printf_chk@PLT
 3529      00
 3530 0e68 488BBC24 		movq	176(%rsp), %rdi
 3530      B0000000 
 3531 0e70 488D3500 		leaq	.LC1(%rip), %rsi
 3531      000000
 3532 0e77 E8000000 		call	fopen@PLT
 3532      00
 3533 0e7c 4885C0   		testq	%rax, %rax
 3534 0e7f 4989C4   		movq	%rax, %r12
 3535 0e82 0F843D05 		je	.L433
 3535      0000
 3536 0e88 E8000000 		call	sigRegisterHandler@PLT
 3536      00
 3537 0e8d 8B742408 		movl	8(%rsp), %esi
 3538 0e91 488BBC24 		movq	160(%rsp), %rdi
 3538      A0000000 
 3539 0e99 4C89FA   		movq	%r15, %rdx
 3540 0e9c E8000000 		call	flSelectConduit@PLT
 3540      00
 3541 0ea1 85C0     		testl	%eax, %eax
 3542 0ea3 0F85E4FC 		jne	.L396
 3542      FFFF
 3543 0ea9 488BBC24 		movq	160(%rsp), %rdi
 3543      A0000000 
 3544 0eb1 400FB6ED 		movzbl	%bpl, %ebp
 3545 0eb5 31C9     		xorl	%ecx, %ecx
 3546 0eb7 4D89F8   		movq	%r15, %r8
 3547 0eba BA005800 		movl	$22528, %edx
 3547      00
 3548 0ebf 89EE     		movl	%ebp, %esi
 3549 0ec1 E8000000 		call	flReadChannelAsyncSubmit@PLT
 3549      00
 3550 0ec6 85C0     		testl	%eax, %eax
 3551 0ec8 0F85BFFC 		jne	.L396
 3551      FFFF
 3552 0ece 488D8424 		leaq	184(%rsp), %rax
 3552      B8000000 
 3553 0ed6 4C8DAC24 		leaq	156(%rsp), %r13
 3553      9C000000 
 3554 0ede 48894424 		movq	%rax, 16(%rsp)
 3554      10
 3555              	.L393:
 3556 0ee3 488BBC24 		movq	160(%rsp), %rdi
 3556      A0000000 
 3557 0eeb 31C9     		xorl	%ecx, %ecx
 3558 0eed 4D89F8   		movq	%r15, %r8
 3559 0ef0 BA005800 		movl	$22528, %edx
 3559      00
 3560 0ef5 89EE     		movl	%ebp, %esi
 3561 0ef7 E8000000 		call	flReadChannelAsyncSubmit@PLT
 3561      00
 3562 0efc 85C0     		testl	%eax, %eax
 3563 0efe 0F8589FC 		jne	.L396
 3563      FFFF
 3564 0f04 488B7424 		movq	16(%rsp), %rsi
 3564      10
 3565 0f09 488BBC24 		movq	160(%rsp), %rdi
 3565      A0000000 
 3566 0f11 4D89F8   		movq	%r15, %r8
 3567 0f14 4C89E9   		movq	%r13, %rcx
 3568 0f17 4C89EA   		movq	%r13, %rdx
 3569 0f1a E8000000 		call	flReadChannelAsyncAwait@PLT
 3569      00
 3570 0f1f 85C0     		testl	%eax, %eax
 3571 0f21 0F8566FC 		jne	.L396
 3571      FFFF
 3572 0f27 8B94249C 		movl	156(%rsp), %edx
 3572      000000
 3573 0f2e 488BBC24 		movq	184(%rsp), %rdi
 3573      B8000000 
 3574 0f36 4C89E1   		movq	%r12, %rcx
 3575 0f39 BE010000 		movl	$1, %esi
 3575      00
 3576 0f3e E8000000 		call	fwrite@PLT
 3576      00
 3577 0f43 488D3500 		leaq	.LC106(%rip), %rsi
 3577      000000
 3578 0f4a BF010000 		movl	$1, %edi
 3578      00
 3579 0f4f 31C0     		xorl	%eax, %eax
 3580 0f51 E8000000 		call	__printf_chk@PLT
 3580      00
 3581 0f56 E8000000 		call	sigIsRaised@PLT
 3581      00
 3582 0f5b 84C0     		testb	%al, %al
 3583 0f5d 7484     		je	.L393
 3584 0f5f 488D3500 		leaq	.LC133(%rip), %rsi
 3584      000000
 3585 0f66 BF010000 		movl	$1, %edi
 3585      00
 3586 0f6b 31C0     		xorl	%eax, %eax
 3587 0f6d E8000000 		call	__printf_chk@PLT
 3587      00
 3588 0f72 488B7424 		movq	16(%rsp), %rsi
 3588      10
 3589 0f77 488BBC24 		movq	160(%rsp), %rdi
 3589      A0000000 
 3590 0f7f 4D89F8   		movq	%r15, %r8
 3591 0f82 4C89E9   		movq	%r13, %rcx
 3592 0f85 4C89EA   		movq	%r13, %rdx
 3593 0f88 E8000000 		call	flReadChannelAsyncAwait@PLT
 3593      00
 3594 0f8d 85C0     		testl	%eax, %eax
 3595 0f8f 0F85F8FB 		jne	.L396
 3595      FFFF
 3596 0f95 8B94249C 		movl	156(%rsp), %edx
 3596      000000
 3597 0f9c 488BBC24 		movq	184(%rsp), %rdi
 3597      B8000000 
 3598 0fa4 4C89E1   		movq	%r12, %rcx
 3599 0fa7 BE010000 		movl	$1, %esi
 3599      00
 3600 0fac E8000000 		call	fwrite@PLT
 3600      00
 3601 0fb1 4C89E7   		movq	%r12, %rdi
 3602 0fb4 E8000000 		call	fclose@PLT
 3602      00
 3603 0fb9 E9A4F8FF 		jmp	.L388
 3603      FF
 3604              	.L423:
 3605 0fbe 4C89F1   		movq	%r14, %rcx
 3606 0fc1 488D1500 		leaq	.LC152(%rip), %rdx
 3606      000000
 3607 0fc8 E973F4FF 		jmp	.L471
 3607      FF
 3608              	.L484:
 3609 0fcd 4883C001 		addq	$1, %rax
 3610 0fd1 488D3500 		leaq	.LC135(%rip), %rsi
 3610      000000
 3611 0fd8 BF010000 		movl	$1, %edi
 3611      00
 3612 0fdd 48890500 		movq	%rax, ptr(%rip)
 3612      000000
 3613 0fe4 31C0     		xorl	%eax, %eax
 3614 0fe6 C78424B8 		movl	$0, 184(%rsp)
 3614      00000000 
 3614      000000
 3615 0ff1 E8000000 		call	__printf_chk@PLT
 3615      00
 3616 0ff6 488D8424 		leaq	400(%rsp), %rax
 3616      90010000 
 3617 0ffe 31DB     		xorl	%ebx, %ebx
 3618 1000 4C8DAC24 		leaq	184(%rsp), %r13
 3618      B8000000 
 3619 1008 4C897424 		movq	%r14, 88(%rsp)
 3619      58
 3620 100d C7442410 		movl	$0, 16(%rsp)
 3620      00000000 
 3621 1015 4531E4   		xorl	%r12d, %r12d
 3622 1018 C7442420 		movl	$0, 32(%rsp)
 3622      00000000 
 3623 1020 48894424 		movq	%rax, 40(%rsp)
 3623      28
 3624 1025 4189DE   		movl	%ebx, %r14d
 3625              	.L417:
 3626 1028 410FB6DE 		movzbl	%r14b, %ebx
 3627 102c 488D3500 		leaq	.LC136(%rip), %rsi
 3627      000000
 3628 1033 BF010000 		movl	$1, %edi
 3628      00
 3629 1038 8D041B   		leal	(%rbx,%rbx), %eax
 3630 103b 89C2     		movl	%eax, %edx
 3631 103d 89442438 		movl	%eax, 56(%rsp)
 3632 1041 31C0     		xorl	%eax, %eax
 3633 1043 E8000000 		call	__printf_chk@PLT
 3633      00
 3634 1048 488BBC24 		movq	160(%rsp), %rdi
 3634      A0000000 
 3635 1050 4C89F9   		movq	%r15, %rcx
 3636 1053 4C89EA   		movq	%r13, %rdx
 3637 1056 89DE     		movl	%ebx, %esi
 3638 1058 E8000000 		call	receive_from_fpga
 3638      00
 3639 105d 0FB6AC24 		movzbl	184(%rsp), %ebp
 3639      B8000000 
 3640 1065 488D3500 		leaq	.LC137(%rip), %rsi
 3640      000000
 3641 106c BF010000 		movl	$1, %edi
 3641      00
 3642 1071 89E8     		movl	%ebp, %eax
 3643 1073 89AC24B8 		movl	%ebp, 184(%rsp)
 3643      000000
 3644 107a 83E50F   		andl	$15, %ebp
 3645 107d C1E804   		shrl	$4, %eax
 3646 1080 89E9     		movl	%ebp, %ecx
 3647 1082 89C2     		movl	%eax, %edx
 3648 1084 89442418 		movl	%eax, 24(%rsp)
 3649 1088 31C0     		xorl	%eax, %eax
 3650 108a E8000000 		call	__printf_chk@PLT
 3650      00
 3651 108f 8B442418 		movl	24(%rsp), %eax
 3652 1093 488BBC24 		movq	160(%rsp), %rdi
 3652      A0000000 
 3653 109b 89DE     		movl	%ebx, %esi
 3654 109d C1E004   		sall	$4, %eax
 3655 10a0 8D0C28   		leal	(%rax,%rbp), %ecx
 3656 10a3 89CA     		movl	%ecx, %edx
 3657 10a5 894C2430 		movl	%ecx, 48(%rsp)
 3658 10a9 4C89F9   		movq	%r15, %rcx
 3659 10ac E8000000 		call	send_to_fpga
 3659      00
 3660 10b1 488D3500 		leaq	.LC138(%rip), %rsi
 3660      000000
 3661 10b8 BF010000 		movl	$1, %edi
 3661      00
 3662 10bd 31C0     		xorl	%eax, %eax
 3663 10bf E8000000 		call	__printf_chk@PLT
 3663      00
 3664 10c4 488BBC24 		movq	160(%rsp), %rdi
 3664      A0000000 
 3665 10cc 4C89F9   		movq	%r15, %rcx
 3666 10cf 4C89EA   		movq	%r13, %rdx
 3667 10d2 89DE     		movl	%ebx, %esi
 3668 10d4 E8000000 		call	receive_from_fpga
 3668      00
 3669 10d9 8B442418 		movl	24(%rsp), %eax
 3670 10dd 8D0CED00 		leal	0(,%rbp,8), %ecx
 3670      000000
 3671 10e4 488B7424 		movq	40(%rsp), %rsi
 3671      28
 3672 10e9 894C2440 		movl	%ecx, 64(%rsp)
 3673 10ed 48C1E006 		salq	$6, %rax
 3674 10f1 4889C2   		movq	%rax, %rdx
 3675 10f4 89C8     		movl	%ecx, %eax
 3676 10f6 4801D0   		addq	%rdx, %rax
 3677 10f9 4801F0   		addq	%rsi, %rax
 3678 10fc 48894424 		movq	%rax, 80(%rsp)
 3678      50
 3679 1101 8D4104   		leal	4(%rcx), %eax
 3680 1104 4801D0   		addq	%rdx, %rax
 3681 1107 4801F0   		addq	%rsi, %rax
 3682 110a 48894424 		movq	%rax, 72(%rsp)
 3682      48
 3683 110f EB21     		jmp	.L400
 3684              	.L401:
 3685 1111 837C2410 		cmpl	$0, 16(%rsp)
 3685      00
 3686 1116 0F844C03 		je	.L485
 3686      0000
 3687 111c 837C2410 		cmpl	$1, 16(%rsp)
 3687      01
 3688 1121 0F84AA02 		je	.L486
 3688      0000
 3689              	.L407:
 3690 1127 837C2410 		cmpl	$2, 16(%rsp)
 3690      02
 3691 112c 0F84AB02 		je	.L412
 3691      0000
 3692              	.L400:
 3693 1132 8B8C24B8 		movl	184(%rsp), %ecx
 3693      000000
 3694 1139 81F9CCCC 		cmpl	$-858993460, %ecx
 3694      CCCC
 3695 113f 75D0     		jne	.L401
 3696 1141 488B7C24 		movq	40(%rsp), %rdi
 3696      28
 3697 1146 E8000000 		call	text_read
 3697      00
 3698 114b 8B542438 		movl	56(%rsp), %edx
 3699 114f 488D3500 		leaq	.LC139(%rip), %rsi
 3699      000000
 3700 1156 BF010000 		movl	$1, %edi
 3700      00
 3701 115b 31C0     		xorl	%eax, %eax
 3702 115d E8000000 		call	__printf_chk@PLT
 3702      00
 3703 1162 488BBC24 		movq	160(%rsp), %rdi
 3703      A0000000 
 3704 116a 4C89F9   		movq	%r15, %rcx
 3705 116d BA333333 		movl	$858993459, %edx
 3705      33
 3706 1172 89DE     		movl	%ebx, %esi
 3707 1174 E8000000 		call	send_to_fpga
 3707      00
 3708 1179 31C0     		xorl	%eax, %eax
 3709              	.L402:
 3710 117b 488B4C24 		movq	80(%rsp), %rcx
 3710      50
 3711 1180 41C1E408 		sall	$8, %r12d
 3712 1184 0FB61401 		movzbl	(%rcx,%rax), %edx
 3713 1188 4883C001 		addq	$1, %rax
 3714 118c 4109D4   		orl	%edx, %r12d
 3715 118f 4883F804 		cmpq	$4, %rax
 3716 1193 75E6     		jne	.L402
 3717 1195 488BBC24 		movq	160(%rsp), %rdi
 3717      A0000000 
 3718 119d 4C89F9   		movq	%r15, %rcx
 3719 11a0 4489E2   		movl	%r12d, %edx
 3720 11a3 89DE     		movl	%ebx, %esi
 3721 11a5 BD000100 		movl	$256, %ebp
 3721      00
 3722 11aa E8000000 		call	send_to_fpga
 3722      00
 3723 11af 488D3500 		leaq	.LC140(%rip), %rsi
 3723      000000
 3724 11b6 BF010000 		movl	$1, %edi
 3724      00
 3725 11bb 31C0     		xorl	%eax, %eax
 3726 11bd E8000000 		call	__printf_chk@PLT
 3726      00
 3727 11c2 EB13     		jmp	.L413
 3728              	.L403:
 3729 11c4 BF010000 		movl	$1, %edi
 3729      00
 3730 11c9 E8000000 		call	sleep@PLT
 3730      00
 3731 11ce 83ED01   		subl	$1, %ebp
 3732 11d1 0F840602 		je	.L412
 3732      0000
 3733              	.L413:
 3734 11d7 488BBC24 		movq	160(%rsp), %rdi
 3734      A0000000 
 3735 11df 4C89F9   		movq	%r15, %rcx
 3736 11e2 4C89EA   		movq	%r13, %rdx
 3737 11e5 89DE     		movl	%ebx, %esi
 3738 11e7 E8000000 		call	receive_from_fpga
 3738      00
 3739 11ec 81BC24B8 		cmpl	$-858993460, 184(%rsp)
 3739      000000CC 
 3739      CCCCCC
 3740 11f7 75CB     		jne	.L403
 3741 11f9 31C0     		xorl	%eax, %eax
 3742              	.L404:
 3743 11fb 488B4C24 		movq	72(%rsp), %rcx
 3743      48
 3744 1200 41C1E408 		sall	$8, %r12d
 3745 1204 0FB61401 		movzbl	(%rcx,%rax), %edx
 3746 1208 4883C001 		addq	$1, %rax
 3747 120c 4109D4   		orl	%edx, %r12d
 3748 120f 4883F804 		cmpq	$4, %rax
 3749 1213 75E6     		jne	.L404
 3750 1215 488BBC24 		movq	160(%rsp), %rdi
 3750      A0000000 
 3751 121d 4C89F9   		movq	%r15, %rcx
 3752 1220 4489E2   		movl	%r12d, %edx
 3753 1223 89DE     		movl	%ebx, %esi
 3754 1225 BD000100 		movl	$256, %ebp
 3754      00
 3755 122a E8000000 		call	send_to_fpga
 3755      00
 3756 122f 488D3500 		leaq	.LC141(%rip), %rsi
 3756      000000
 3757 1236 BF010000 		movl	$1, %edi
 3757      00
 3758 123b 31C0     		xorl	%eax, %eax
 3759 123d E8000000 		call	__printf_chk@PLT
 3759      00
 3760 1242 EB13     		jmp	.L411
 3761              	.L405:
 3762 1244 BF010000 		movl	$1, %edi
 3762      00
 3763 1249 E8000000 		call	sleep@PLT
 3763      00
 3764 124e 83ED01   		subl	$1, %ebp
 3765 1251 0F848601 		je	.L412
 3765      0000
 3766              	.L411:
 3767 1257 488BBC24 		movq	160(%rsp), %rdi
 3767      A0000000 
 3768 125f 4C89F9   		movq	%r15, %rcx
 3769 1262 4C89EA   		movq	%r13, %rdx
 3770 1265 89DE     		movl	%ebx, %esi
 3771 1267 E8000000 		call	receive_from_fpga
 3771      00
 3772 126c 81BC24B8 		cmpl	$-858993460, 184(%rsp)
 3772      000000CC 
 3772      CCCCCC
 3773 1277 75CB     		jne	.L405
 3774 1279 488BBC24 		movq	160(%rsp), %rdi
 3774      A0000000 
 3775 1281 4C89F9   		movq	%r15, %rcx
 3776 1284 BA333333 		movl	$858993459, %edx
 3776      33
 3777 1289 89DE     		movl	%ebx, %esi
 3778 128b 31ED     		xorl	%ebp, %ebp
 3779 128d E8000000 		call	send_to_fpga
 3779      00
 3780 1292 488D3500 		leaq	.LC142(%rip), %rsi
 3780      000000
 3781 1299 BF010000 		movl	$1, %edi
 3781      00
 3782 129e 31C0     		xorl	%eax, %eax
 3783 12a0 E8000000 		call	__printf_chk@PLT
 3783      00
 3784 12a5 BF180000 		movl	$24, %edi
 3784      00
 3785 12aa E8000000 		call	sleep@PLT
 3785      00
 3786 12af EB60     		jmp	.L410
 3787              	.L406:
 3788 12b1 BE9F9999 		movl	$-1717986913, %esi
 3788      99
 3789 12b6 E8000000 		call	encrypt
 3789      00
 3790 12bb 488D3500 		leaq	.LC143(%rip), %rsi
 3790      000000
 3791 12c2 898424B8 		movl	%eax, 184(%rsp)
 3791      000000
 3792 12c9 89C2     		movl	%eax, %edx
 3793 12cb BF010000 		movl	$1, %edi
 3793      00
 3794 12d0 31C0     		xorl	%eax, %eax
 3795 12d2 89E9     		movl	%ebp, %ecx
 3796 12d4 E8000000 		call	__printf_chk@PLT
 3796      00
 3797 12d9 8BBC24B8 		movl	184(%rsp), %edi
 3797      000000
 3798 12e0 85FF     		testl	%edi, %edi
 3799 12e2 0F85AE01 		jne	.L487
 3799      0000
 3800 12e8 BF010000 		movl	$1, %edi
 3800      00
 3801 12ed 83C501   		addl	$1, %ebp
 3802 12f0 E8000000 		call	sleep@PLT
 3802      00
 3803 12f5 488D3500 		leaq	.LC144(%rip), %rsi
 3803      000000
 3804 12fc 31C0     		xorl	%eax, %eax
 3805 12fe BF010000 		movl	$1, %edi
 3805      00
 3806 1303 E8000000 		call	__printf_chk@PLT
 3806      00
 3807 1308 83FD14   		cmpl	$20, %ebp
 3808 130b 0F84CF01 		je	.L409
 3808      0000
 3809              	.L410:
 3810 1311 488BBC24 		movq	160(%rsp), %rdi
 3810      A0000000 
 3811 1319 4C89F9   		movq	%r15, %rcx
 3812 131c 4C89EA   		movq	%r13, %rdx
 3813 131f 89DE     		movl	%ebx, %esi
 3814 1321 E8000000 		call	receive_from_fpga
 3814      00
 3815 1326 8BBC24B8 		movl	184(%rsp), %edi
 3815      000000
 3816 132d 3B7C2430 		cmpl	48(%rsp), %edi
 3817 1331 0F857AFF 		jne	.L406
 3817      FFFF
 3818 1337 8B542430 		movl	48(%rsp), %edx
 3819 133b 488BBC24 		movq	160(%rsp), %rdi
 3819      A0000000 
 3820 1343 4C89F9   		movq	%r15, %rcx
 3821 1346 89DE     		movl	%ebx, %esi
 3822 1348 E8000000 		call	send_to_fpga
 3822      00
 3823 134d 488D3500 		leaq	.LC138(%rip), %rsi
 3823      000000
 3824 1354 BF010000 		movl	$1, %edi
 3824      00
 3825 1359 31C0     		xorl	%eax, %eax
 3826 135b E8000000 		call	__printf_chk@PLT
 3826      00
 3827 1360 488BBC24 		movq	160(%rsp), %rdi
 3827      A0000000 
 3828 1368 4C89F9   		movq	%r15, %rcx
 3829 136b 4C89EA   		movq	%r13, %rdx
 3830 136e 89DE     		movl	%ebx, %esi
 3831 1370 E8000000 		call	receive_from_fpga
 3831      00
 3832 1375 E9ADFDFF 		jmp	.L407
 3832      FF
 3833              	.L483:
 3834 137a 4889DF   		movq	%rbx, %rdi
 3835 137d E8000000 		call	add_history@PLT
 3835      00
 3836 1382 488BBC24 		movq	160(%rsp), %rdi
 3836      A0000000 
 3837 138a 4C89FA   		movq	%r15, %rdx
 3838 138d 4889DE   		movq	%rbx, %rsi
 3839 1390 E8000000 		call	parseLine
 3839      00
 3840 1395 85C0     		testl	%eax, %eax
 3841 1397 7525     		jne	.L468
 3842 1399 4889DF   		movq	%rbx, %rdi
 3843 139c E8000000 		call	free@PLT
 3843      00
 3844 13a1 803B71   		cmpb	$113, (%rbx)
 3845 13a4 0F85B9F9 		jne	.L425
 3845      FFFF
 3846 13aa E9D3F9FF 		jmp	.L424
 3846      FF
 3847              	.L397:
 3848 13af 4C89F1   		movq	%r14, %rcx
 3849 13b2 488D1500 		leaq	.LC129(%rip), %rdx
 3849      000000
 3850 13b9 E930F5FF 		jmp	.L472
 3850      FF
 3851              	.L468:
 3852 13be 89C5     		movl	%eax, %ebp
 3853 13c0 E9C2EFFF 		jmp	.L344
 3853      FF
 3854              	.L433:
 3855 13c5 BD0B0000 		movl	$11, %ebp
 3855      00
 3856 13ca 31DB     		xorl	%ebx, %ebx
 3857 13cc E9B6EFFF 		jmp	.L344
 3857      FF
 3858              	.L486:
 3859 13d1 4180FE3F 		cmpb	$63, %r14b
 3860 13d5 7506     		jne	.L412
 3861 13d7 41BEFFFF 		movl	$-1, %r14d
 3861      FFFF
 3862              	.L412:
 3863 13dd 83442420 		addl	$1, 32(%rsp)
 3863      01
 3864 13e2 488D3500 		leaq	.LC146(%rip), %rsi
 3864      000000
 3865 13e9 BF010000 		movl	$1, %edi
 3865      00
 3866 13ee 8B442420 		movl	32(%rsp), %eax
 3867 13f2 BB0A0000 		movl	$10, %ebx
 3867      00
 3868 13f7 89C2     		movl	%eax, %edx
 3869 13f9 31C0     		xorl	%eax, %eax
 3870 13fb E8000000 		call	__printf_chk@PLT
 3870      00
 3871 1400 488D3500 		leaq	.LC147(%rip), %rsi
 3871      000000
 3872 1407 BF010000 		movl	$1, %edi
 3872      00
 3873 140c 31C0     		xorl	%eax, %eax
 3874 140e E8000000 		call	__printf_chk@PLT
 3874      00
 3875              	.L416:
 3876 1413 BF020000 		movl	$2, %edi
 3876      00
 3877 1418 E8000000 		call	sleep@PLT
 3877      00
 3878 141d 488D3500 		leaq	.LC148(%rip), %rsi
 3878      000000
 3879 1424 31C0     		xorl	%eax, %eax
 3880 1426 BF010000 		movl	$1, %edi
 3880      00
 3881 142b E8000000 		call	__printf_chk@PLT
 3881      00
 3882 1430 83EB01   		subl	$1, %ebx
 3883 1433 75DE     		jne	.L416
 3884 1435 488D3500 		leaq	.LC149(%rip), %rsi
 3884      000000
 3885 143c 31C0     		xorl	%eax, %eax
 3886 143e BF010000 		movl	$1, %edi
 3886      00
 3887 1443 4183C601 		addl	$1, %r14d
 3888 1447 E8000000 		call	__printf_chk@PLT
 3888      00
 3889 144c 4180FE3F 		cmpb	$63, %r14b
 3890 1450 C7442410 		movl	$2, 16(%rsp)
 3890      02000000 
 3891 1458 0F86CAFB 		jbe	.L417
 3891      FFFF
 3892 145e 4C8B7424 		movq	88(%rsp), %r14
 3892      58
 3893 1463 E9A5F9FF 		jmp	.L398
 3893      FF
 3894              	.L485:
 3895 1468 8B542438 		movl	56(%rsp), %edx
 3896 146c 488D3500 		leaq	.LC145(%rip), %rsi
 3896      000000
 3897 1473 BF010000 		movl	$1, %edi
 3897      00
 3898 1478 31C0     		xorl	%eax, %eax
 3899 147a E8000000 		call	__printf_chk@PLT
 3899      00
 3900 147f BF050000 		movl	$5, %edi
 3900      00
 3901 1484 E8000000 		call	sleep@PLT
 3901      00
 3902 1489 C7442410 		movl	$1, 16(%rsp)
 3902      01000000 
 3903 1491 E99CFCFF 		jmp	.L400
 3903      FF
 3904              	.L487:
 3905 1496 BE9F9999 		movl	$-1717986913, %esi
 3905      99
 3906 149b 488D9C24 		leaq	944(%rsp), %rbx
 3906      B0030000 
 3907 14a3 E8000000 		call	decrypt
 3907      00
 3908 14a8 4189C4   		movl	%eax, %r12d
 3909 14ab 48635424 		movslq	24(%rsp), %rdx
 3909      18
 3910 14b0 488B7C24 		movq	40(%rsp), %rdi
 3910      28
 3911 14b5 41C1EC03 		shrl	$3, %r12d
 3912 14b9 898424B8 		movl	%eax, 184(%rsp)
 3912      000000
 3913 14c0 4489E1   		movl	%r12d, %ecx
 3914 14c3 83E107   		andl	$7, %ecx
 3915 14c6 034C2440 		addl	64(%rsp), %ecx
 3916 14ca 48C1E206 		salq	$6, %rdx
 3917 14ce 4801DA   		addq	%rbx, %rdx
 3918 14d1 4863C9   		movslq	%ecx, %rcx
 3919 14d4 888411E0 		movb	%al, -544(%rcx,%rdx)
 3919      FDFFFF
 3920 14db E8000000 		call	update_file
 3920      00
 3921              	.L409:
 3922 14e0 4183EE01 		subl	$1, %r14d
 3923 14e4 E9F4FEFF 		jmp	.L412
 3923      FF
 3924              		.cfi_endproc
 3925              	.LFE67:
 3927              		.section	.rodata.str1.1
 3928              	.LC154:
 3929 0355 30303030 		.string	"0000"
 3929      00
 3930              	.LC155:
 3931 035a 30303031 		.string	"0001"
 3931      00
 3932              	.LC156:
 3933 035f 30303130 		.string	"0010"
 3933      00
 3934              	.LC157:
 3935 0364 30303131 		.string	"0011"
 3935      00
 3936              	.LC158:
 3937 0369 30313030 		.string	"0100"
 3937      00
 3938              	.LC159:
 3939 036e 30313031 		.string	"0101"
 3939      00
 3940              	.LC160:
 3941 0373 30313130 		.string	"0110"
 3941      00
 3942              	.LC161:
 3943 0378 30313131 		.string	"0111"
 3943      00
 3944              	.LC162:
 3945 037d 31303030 		.string	"1000"
 3945      00
 3946              	.LC163:
 3947 0382 31303031 		.string	"1001"
 3947      00
 3948              	.LC164:
 3949 0387 58585858 		.string	"XXXX"
 3949      00
 3950              	.LC165:
 3951 038c 31303130 		.string	"1010"
 3951      00
 3952              	.LC166:
 3953 0391 31303131 		.string	"1011"
 3953      00
 3954              	.LC167:
 3955 0396 31313030 		.string	"1100"
 3955      00
 3956              	.LC168:
 3957 039b 31313031 		.string	"1101"
 3957      00
 3958              	.LC169:
 3959 03a0 31313130 		.string	"1110"
 3959      00
 3960              	.LC170:
 3961 03a5 31313131 		.string	"1111"
 3961      00
 3962              		.section	.data.rel.ro.local,"aw",@progbits
 3963              		.align 32
 3966              	nibbles:
 3967 0000 00000000 		.quad	.LC154
 3967      00000000 
 3968 0008 00000000 		.quad	.LC155
 3968      00000000 
 3969 0010 00000000 		.quad	.LC156
 3969      00000000 
 3970 0018 00000000 		.quad	.LC157
 3970      00000000 
 3971 0020 00000000 		.quad	.LC158
 3971      00000000 
 3972 0028 00000000 		.quad	.LC159
 3972      00000000 
 3973 0030 00000000 		.quad	.LC160
 3973      00000000 
 3974 0038 00000000 		.quad	.LC161
 3974      00000000 
 3975 0040 00000000 		.quad	.LC162
 3975      00000000 
 3976 0048 00000000 		.quad	.LC163
 3976      00000000 
 3977 0050 00000000 		.quad	.LC164
 3977      00000000 
 3978 0058 00000000 		.quad	.LC164
 3978      00000000 
 3979 0060 00000000 		.quad	.LC164
 3979      00000000 
 3980 0068 00000000 		.quad	.LC164
 3980      00000000 
 3981 0070 00000000 		.quad	.LC164
 3981      00000000 
 3982 0078 00000000 		.quad	.LC164
 3982      00000000 
 3983 0080 00000000 		.quad	.LC164
 3983      00000000 
 3984 0088 00000000 		.quad	.LC165
 3984      00000000 
 3985 0090 00000000 		.quad	.LC166
 3985      00000000 
 3986 0098 00000000 		.quad	.LC167
 3986      00000000 
 3987 00a0 00000000 		.quad	.LC168
 3987      00000000 
 3988 00a8 00000000 		.quad	.LC169
 3988      00000000 
 3989 00b0 00000000 		.quad	.LC170
 3989      00000000 
 3990              		.section	.rodata.str1.1
 3991              	.LC171:
 3992 03aa 556E7061 		.string	"Unparseable hex number"
 3992      72736561 
 3992      626C6520 
 3992      68657820 
 3992      6E756D62 
 3993              	.LC172:
 3994 03c1 4368616E 		.string	"Channel out of range"
 3994      6E656C20 
 3994      6F757420 
 3994      6F662072 
 3994      616E6765 
 3995              	.LC173:
 3996 03d6 436F6E64 		.string	"Conduit out of range"
 3996      75697420 
 3996      6F757420 
 3996      6F662072 
 3996      616E6765 
 3997              	.LC174:
 3998 03eb 496C6C65 		.string	"Illegal character"
 3998      67616C20 
 3998      63686172 
 3998      61637465 
 3998      7200
 3999              	.LC175:
 4000 03fd 556E7465 		.string	"Unterminated string"
 4000      726D696E 
 4000      61746564 
 4000      20737472 
 4000      696E6700 
 4001              	.LC176:
 4002 0411 4E6F206D 		.string	"No memory"
 4002      656D6F72 
 4002      7900
 4003              	.LC177:
 4004 041b 456D7074 		.string	"Empty string"
 4004      79207374 
 4004      72696E67 
 4004      00
 4005              	.LC178:
 4006 0428 4F646420 		.string	"Odd number of digits"
 4006      6E756D62 
 4006      6572206F 
 4006      66206469 
 4006      67697473 
 4007              	.LC179:
 4008 043d 43616E6E 		.string	"Cannot load file"
 4008      6F74206C 
 4008      6F616420 
 4008      66696C65 
 4008      00
 4009              	.LC180:
 4010 044e 43616E6E 		.string	"Cannot save file"
 4010      6F742073 
 4010      61766520 
 4010      66696C65 
 4010      00
 4011              	.LC181:
 4012 045f 42616420 		.string	"Bad arguments"
 4012      61726775 
 4012      6D656E74 
 4012      7300
 4013              		.section	.data.rel.ro.local
 4014 00b8 00000000 		.align 32
 4014      00000000 
 4017              	errMessages:
 4018 00c0 00000000 		.quad	0
 4018      00000000 
 4019 00c8 00000000 		.quad	0
 4019      00000000 
 4020 00d0 00000000 		.quad	.LC171
 4020      00000000 
 4021 00d8 00000000 		.quad	.LC172
 4021      00000000 
 4022 00e0 00000000 		.quad	.LC173
 4022      00000000 
 4023 00e8 00000000 		.quad	.LC174
 4023      00000000 
 4024 00f0 00000000 		.quad	.LC175
 4024      00000000 
 4025 00f8 00000000 		.quad	.LC176
 4025      00000000 
 4026 0100 00000000 		.quad	.LC177
 4026      00000000 
 4027 0108 00000000 		.quad	.LC178
 4027      00000000 
 4028 0110 00000000 		.quad	.LC179
 4028      00000000 
 4029 0118 00000000 		.quad	.LC180
 4029      00000000 
 4030 0120 00000000 		.quad	.LC181
 4030      00000000 
 4031              		.local	enableBenchmarking
 4032              		.comm	enableBenchmarking,1,1
 4033              		.local	ptr
 4034              		.comm	ptr,8,8
 4035              		.section	.rodata.cst8,"aM",@progbits,8
 4036              		.align 8
 4037              	.LC3:
 4038 0000 00000000 		.long	0
 4039 0004 80842E41 		.long	1093567616
 4040              		.align 8
 4041              	.LC4:
 4042 0008 00000000 		.long	0
 4043 000c 00003041 		.long	1093664768
 4044              		.section	.rodata.cst16,"aM",@progbits,16
 4045              		.align 16
 4046              	.LC11:
 4047 0000 01000000 		.long	1
 4048 0004 01000000 		.long	1
 4049 0008 01000000 		.long	1
 4050 000c 01000000 		.long	1
 4051              		.align 16
 4052              	.LC15:
 4053 0010 07000000 		.long	7
 4054 0014 07000000 		.long	7
 4055 0018 07000000 		.long	7
 4056 001c 07000000 		.long	7
 4057              		.align 16
 4058              	.LC16:
 4059 0020 34000000 		.long	52
 4060 0024 35000000 		.long	53
 4061 0028 36000000 		.long	54
 4062 002c 37000000 		.long	55
 4063              		.align 16
 4064              	.LC17:
 4065 0030 38000000 		.long	56
 4066 0034 39000000 		.long	57
 4067 0038 3A000000 		.long	58
 4068 003c 3B000000 		.long	59
 4069              		.align 16
 4070              	.LC18:
 4071 0040 3C000000 		.long	60
 4072 0044 3D000000 		.long	61
 4073 0048 3E000000 		.long	62
 4074 004c 3F000000 		.long	63
 4075              		.align 16
 4076              	.LC19:
 4085              		.align 16
 4086              	.LC20:
 4087 0060 00000000 		.long	0
 4088 0064 01000000 		.long	1
 4089 0068 02000000 		.long	2
 4090 006c 03000000 		.long	3
 4091              		.align 16
 4092              	.LC21:
 4093 0070 04000000 		.long	4
 4094 0074 05000000 		.long	5
 4095 0078 06000000 		.long	6
 4096 007c 07000000 		.long	7
 4097              		.align 16
 4098              	.LC22:
 4099 0080 08000000 		.long	8
 4100 0084 09000000 		.long	9
 4101 0088 0A000000 		.long	10
 4102 008c 0B000000 		.long	11
 4103              		.align 16
 4104              	.LC23:
 4105 0090 0C000000 		.long	12
 4106 0094 0D000000 		.long	13
 4107 0098 0E000000 		.long	14
 4108 009c 0F000000 		.long	15
 4109              		.align 16
 4110              	.LC24:
 4111 00a0 10000000 		.long	16
 4112 00a4 11000000 		.long	17
 4113 00a8 12000000 		.long	18
 4114 00ac 13000000 		.long	19
 4115              		.align 16
 4116              	.LC25:
 4117 00b0 14000000 		.long	20
 4118 00b4 15000000 		.long	21
 4119 00b8 16000000 		.long	22
 4120 00bc 17000000 		.long	23
 4121              		.align 16
 4122              	.LC26:
 4123 00c0 18000000 		.long	24
 4124 00c4 19000000 		.long	25
 4125 00c8 1A000000 		.long	26
 4126 00cc 1B000000 		.long	27
 4127              		.align 16
 4128              	.LC27:
 4129 00d0 1C000000 		.long	28
 4130 00d4 1D000000 		.long	29
 4131 00d8 1E000000 		.long	30
 4132 00dc 1F000000 		.long	31
 4133              		.align 16
 4134              	.LC28:
 4135 00e0 30000000 		.long	48
 4136 00e4 31000000 		.long	49
 4137 00e8 32000000 		.long	50
 4138 00ec 33000000 		.long	51
 4139              		.align 16
 4140              	.LC29:
 4141 00f0 20000000 		.long	32
 4142 00f4 21000000 		.long	33
 4143 00f8 22000000 		.long	34
 4144 00fc 23000000 		.long	35
 4145              		.align 16
 4146              	.LC30:
 4147 0100 24000000 		.long	36
 4148 0104 25000000 		.long	37
 4149 0108 26000000 		.long	38
 4150 010c 27000000 		.long	39
 4151              		.align 16
 4152              	.LC31:
 4153 0110 28000000 		.long	40
 4154 0114 29000000 		.long	41
 4155 0118 2A000000 		.long	42
 4156 011c 2B000000 		.long	43
 4157              		.align 16
 4158              	.LC32:
 4159 0120 2C000000 		.long	44
 4160 0124 2D000000 		.long	45
 4161 0128 2E000000 		.long	46
 4162 012c 2F000000 		.long	47
 4163              		.ident	"GCC: (Ubuntu 7.2.0-8ubuntu3.2) 7.2.0"
 4164              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccZ9C3p7.s:7      .text.unlikely:0000000000000000 doWrite
     /tmp/ccZ9C3p7.s:138    .text.unlikely:0000000000000100 parseLine
     /tmp/ccZ9C3p7.s:4034   .bss:0000000000000008 ptr
                             .bss:0000000000000000 enableBenchmarking
     /tmp/ccZ9C3p7.s:4017   .data.rel.ro.local:00000000000000c0 errMessages
     /tmp/ccZ9C3p7.s:958    .text:0000000000000000 popcount
     /tmp/ccZ9C3p7.s:974    .text:0000000000000010 pow1
     /tmp/ccZ9C3p7.s:1093   .text:0000000000000140 text_read
     /tmp/ccZ9C3p7.s:1634   .text:00000000000008f0 update_file
     /tmp/ccZ9C3p7.s:1729   .text:00000000000009b0 count1
     /tmp/ccZ9C3p7.s:1745   .text:00000000000009c0 neg
     /tmp/ccZ9C3p7.s:1757   .text:00000000000009d0 concat
     /tmp/ccZ9C3p7.s:1785   .text:0000000000000a00 bitXor
     /tmp/ccZ9C3p7.s:1797   .text:0000000000000a10 findki
     /tmp/ccZ9C3p7.s:1829   .text:0000000000000a40 findti
     /tmp/ccZ9C3p7.s:1896   .text:0000000000000ac0 findt
     /tmp/ccZ9C3p7.s:2004   .text:0000000000000ba0 encrypt
     /tmp/ccZ9C3p7.s:2071   .text.unlikely:0000000000000bed send_to_fpga
     /tmp/ccZ9C3p7.s:2157   .text:0000000000000c10 decrypt
     /tmp/ccZ9C3p7.s:2227   .text.unlikely:0000000000000c9e receive_from_fpga
     /tmp/ccZ9C3p7.s:2695   .text.startup:0000000000000000 main
     /tmp/ccZ9C3p7.s:3966   .data.rel.ro.local:0000000000000000 nibbles
     /tmp/ccZ9C3p7.s:4046   .rodata.cst16:0000000000000000 .LC11
     /tmp/ccZ9C3p7.s:1078   .rodata.str1.1:0000000000000036 .LC12
     /tmp/ccZ9C3p7.s:1082   .rodata.str1.8:0000000000000080 .LC13
     /tmp/ccZ9C3p7.s:4086   .rodata.cst16:0000000000000060 .LC20
     /tmp/ccZ9C3p7.s:4052   .rodata.cst16:0000000000000010 .LC15
     /tmp/ccZ9C3p7.s:4092   .rodata.cst16:0000000000000070 .LC21
     /tmp/ccZ9C3p7.s:4098   .rodata.cst16:0000000000000080 .LC22
     /tmp/ccZ9C3p7.s:4104   .rodata.cst16:0000000000000090 .LC23
     /tmp/ccZ9C3p7.s:4076   .rodata.cst16:0000000000000050 .LC19
     /tmp/ccZ9C3p7.s:4110   .rodata.cst16:00000000000000a0 .LC24
     /tmp/ccZ9C3p7.s:4116   .rodata.cst16:00000000000000b0 .LC25
     /tmp/ccZ9C3p7.s:4122   .rodata.cst16:00000000000000c0 .LC26
     /tmp/ccZ9C3p7.s:4128   .rodata.cst16:00000000000000d0 .LC27
     /tmp/ccZ9C3p7.s:4158   .rodata.cst16:0000000000000120 .LC32
     /tmp/ccZ9C3p7.s:4146   .rodata.cst16:0000000000000100 .LC30
     /tmp/ccZ9C3p7.s:4134   .rodata.cst16:00000000000000e0 .LC28
     /tmp/ccZ9C3p7.s:4140   .rodata.cst16:00000000000000f0 .LC29
     /tmp/ccZ9C3p7.s:4152   .rodata.cst16:0000000000000110 .LC31
     /tmp/ccZ9C3p7.s:4058   .rodata.cst16:0000000000000020 .LC16
     /tmp/ccZ9C3p7.s:4064   .rodata.cst16:0000000000000030 .LC17
     /tmp/ccZ9C3p7.s:4070   .rodata.cst16:0000000000000040 .LC18
     /tmp/ccZ9C3p7.s:1087   .rodata.str1.1:0000000000000046 .LC33
     /tmp/ccZ9C3p7.s:1085   .rodata.str1.1:0000000000000038 .LC14
     /tmp/ccZ9C3p7.s:1624   .rodata.str1.1:0000000000000055 .LC34
     /tmp/ccZ9C3p7.s:1628   .rodata.str1.1:000000000000006e .LC36
     /tmp/ccZ9C3p7.s:1626   .rodata.str1.1:0000000000000057 .LC35
     /tmp/ccZ9C3p7.s:3      .rodata.str1.1:0000000000000000 .LC0
     /tmp/ccZ9C3p7.s:114    .rodata.str1.1:000000000000000a .LC1
     /tmp/ccZ9C3p7.s:116    .rodata.str1.1:000000000000000d .LC2
     /tmp/ccZ9C3p7.s:120    .rodata.str1.8:0000000000000000 .LC5
     /tmp/ccZ9C3p7.s:4037   .rodata.cst8:0000000000000000 .LC3
     /tmp/ccZ9C3p7.s:4041   .rodata.cst8:0000000000000008 .LC4
     /tmp/ccZ9C3p7.s:123    .rodata.str1.1:0000000000000016 .LC6
     /tmp/ccZ9C3p7.s:127    .rodata.str1.8:0000000000000040 .LC7
     /tmp/ccZ9C3p7.s:132    .rodata.str1.1:0000000000000031 .LC9
     /tmp/ccZ9C3p7.s:130    .rodata.str1.1:0000000000000019 .LC8
     /tmp/ccZ9C3p7.s:134    .rodata.str1.1:0000000000000033 .LC10
     /tmp/ccZ9C3p7.s:2067   .rodata.str1.1:000000000000007e .LC37
     /tmp/ccZ9C3p7.s:2223   .rodata.str1.1:0000000000000082 .LC38
     /tmp/ccZ9C3p7.s:2359   .rodata.str1.8:00000000000000e0 .LC39
     /tmp/ccZ9C3p7.s:2362   .rodata.str1.1:0000000000000096 .LC40
     /tmp/ccZ9C3p7.s:2366   .rodata.str1.1:00000000000000a4 .LC42
     /tmp/ccZ9C3p7.s:2364   .rodata.str1.1:00000000000000a0 .LC41
     /tmp/ccZ9C3p7.s:2370   .rodata.str1.8:0000000000000118 .LC43
     /tmp/ccZ9C3p7.s:2373   .rodata.str1.1:00000000000000a6 .LC44
     /tmp/ccZ9C3p7.s:2375   .rodata.str1.1:00000000000000b6 .LC45
     /tmp/ccZ9C3p7.s:2377   .rodata.str1.1:00000000000000b9 .LC46
     /tmp/ccZ9C3p7.s:2381   .rodata.str1.8:0000000000000150 .LC47
     /tmp/ccZ9C3p7.s:2384   .rodata.str1.1:00000000000000bb .LC48
     /tmp/ccZ9C3p7.s:2386   .rodata.str1.1:00000000000000ca .LC49
     /tmp/ccZ9C3p7.s:2388   .rodata.str1.1:00000000000000cd .LC50
     /tmp/ccZ9C3p7.s:2392   .rodata.str1.8:0000000000000180 .LC51
     /tmp/ccZ9C3p7.s:2395   .rodata.str1.1:00000000000000cf .LC52
     /tmp/ccZ9C3p7.s:2397   .rodata.str1.1:00000000000000e2 .LC53
     /tmp/ccZ9C3p7.s:2399   .rodata.str1.1:00000000000000e8 .LC54
     /tmp/ccZ9C3p7.s:2401   .rodata.str1.1:00000000000000ea .LC55
     /tmp/ccZ9C3p7.s:2403   .rodata.str1.1:0000000000000108 .LC56
     /tmp/ccZ9C3p7.s:2405   .rodata.str1.1:0000000000000113 .LC57
     /tmp/ccZ9C3p7.s:2407   .rodata.str1.1:0000000000000119 .LC58
     /tmp/ccZ9C3p7.s:2409   .rodata.str1.1:000000000000011b .LC59
     /tmp/ccZ9C3p7.s:2411   .rodata.str1.1:0000000000000135 .LC60
     /tmp/ccZ9C3p7.s:2413   .rodata.str1.1:000000000000013e .LC61
     /tmp/ccZ9C3p7.s:2415   .rodata.str1.1:0000000000000146 .LC62
     /tmp/ccZ9C3p7.s:2419   .rodata.str1.8:00000000000001b0 .LC63
     /tmp/ccZ9C3p7.s:2422   .rodata.str1.1:0000000000000148 .LC64
     /tmp/ccZ9C3p7.s:2424   .rodata.str1.1:0000000000000152 .LC65
     /tmp/ccZ9C3p7.s:2426   .rodata.str1.1:000000000000015a .LC66
     /tmp/ccZ9C3p7.s:2430   .rodata.str1.8:00000000000001e8 .LC67
     /tmp/ccZ9C3p7.s:2433   .rodata.str1.1:000000000000015c .LC68
     /tmp/ccZ9C3p7.s:2435   .rodata.str1.1:000000000000016b .LC69
     /tmp/ccZ9C3p7.s:2437   .rodata.str1.1:0000000000000172 .LC70
     /tmp/ccZ9C3p7.s:2441   .rodata.str1.8:0000000000000210 .LC71
     /tmp/ccZ9C3p7.s:2444   .rodata.str1.1:0000000000000174 .LC72
     /tmp/ccZ9C3p7.s:2446   .rodata.str1.1:000000000000017a .LC73
     /tmp/ccZ9C3p7.s:2450   .rodata.str1.8:0000000000000250 .LC74
     /tmp/ccZ9C3p7.s:2453   .rodata.str1.1:000000000000017c .LC75
     /tmp/ccZ9C3p7.s:2455   .rodata.str1.1:0000000000000186 .LC76
     /tmp/ccZ9C3p7.s:2459   .rodata.str1.8:0000000000000288 .LC77
     /tmp/ccZ9C3p7.s:2462   .rodata.str1.1:0000000000000188 .LC78
     /tmp/ccZ9C3p7.s:2466   .rodata.str1.8:00000000000002b8 .LC79
     /tmp/ccZ9C3p7.s:2469   .rodata.str1.1:000000000000018e .LC80
     /tmp/ccZ9C3p7.s:2471   .rodata.str1.1:000000000000019c .LC81
     /tmp/ccZ9C3p7.s:2473   .rodata.str1.1:00000000000001a5 .LC82
     /tmp/ccZ9C3p7.s:2477   .rodata.str1.8:00000000000002e0 .LC83
     /tmp/ccZ9C3p7.s:2480   .rodata.str1.1:00000000000001a7 .LC84
     /tmp/ccZ9C3p7.s:2482   .rodata.str1.1:00000000000001ac .LC85
     /tmp/ccZ9C3p7.s:2486   .rodata.str1.8:0000000000000310 .LC86
     /tmp/ccZ9C3p7.s:2489   .rodata.str1.1:00000000000001ae .LC87
     /tmp/ccZ9C3p7.s:2491   .rodata.str1.1:00000000000001c2 .LC88
     /tmp/ccZ9C3p7.s:2495   .rodata.str1.8:0000000000000338 .LC89
     /tmp/ccZ9C3p7.s:2498   .rodata.str1.1:00000000000001c9 .LC90
     /tmp/ccZ9C3p7.s:2500   .rodata.str1.1:00000000000001db .LC91
     /tmp/ccZ9C3p7.s:2504   .rodata.str1.8:0000000000000368 .LC92
     /tmp/ccZ9C3p7.s:2507   .rodata.str1.1:00000000000001e2 .LC93
     /tmp/ccZ9C3p7.s:2509   .rodata.str1.1:00000000000001ef .LC94
     /tmp/ccZ9C3p7.s:2511   .rodata.str1.1:00000000000001f4 .LC95
     /tmp/ccZ9C3p7.s:2513   .rodata.str1.1:00000000000001f6 .LC96
     /tmp/ccZ9C3p7.s:2515   .rodata.str1.1:00000000000001fc .LC97
     /tmp/ccZ9C3p7.s:2533   .rodata.str1.8:0000000000000418 .LC102
     /tmp/ccZ9C3p7.s:2519   .rodata.str1.8:0000000000000398 .LC98
     /tmp/ccZ9C3p7.s:2522   .rodata.str1.1:0000000000000215 .LC99
     /tmp/ccZ9C3p7.s:2526   .rodata.str1.8:00000000000003f0 .LC100
     /tmp/ccZ9C3p7.s:2529   .rodata.str1.1:0000000000000217 .LC101
     /tmp/ccZ9C3p7.s:2536   .rodata.str1.8:0000000000000440 .LC103
     /tmp/ccZ9C3p7.s:2539   .rodata.str1.1:0000000000000223 .LC104
     /tmp/ccZ9C3p7.s:2541   .rodata.str1.1:0000000000000240 .LC105
     /tmp/ccZ9C3p7.s:2543   .rodata.str1.1:0000000000000256 .LC106
     /tmp/ccZ9C3p7.s:2547   .rodata.str1.8:0000000000000478 .LC107
     /tmp/ccZ9C3p7.s:2550   .rodata.str1.8:00000000000004b0 .LC108
     /tmp/ccZ9C3p7.s:2556   .rodata.str1.8:0000000000000540 .LC110
     /tmp/ccZ9C3p7.s:2559   .rodata.str1.1:0000000000000258 .LC111
     /tmp/ccZ9C3p7.s:2563   .rodata.str1.8:0000000000000590 .LC112
     /tmp/ccZ9C3p7.s:2592   .rodata.str1.8:00000000000006d8 .LC122
     /tmp/ccZ9C3p7.s:2595   .rodata.str1.1:0000000000000285 .LC123
     /tmp/ccZ9C3p7.s:2553   .rodata.str1.8:00000000000004f0 .LC109
     /tmp/ccZ9C3p7.s:2569   .rodata.str1.8:0000000000000618 .LC114
     /tmp/ccZ9C3p7.s:2566   .rodata.str1.8:00000000000005d0 .LC113
     /tmp/ccZ9C3p7.s:2605   .rodata.str1.1:000000000000028f .LC126
     /tmp/ccZ9C3p7.s:2609   .rodata.str1.8:00000000000007c0 .LC127
     /tmp/ccZ9C3p7.s:2575   .rodata.str1.1:000000000000025c .LC116
     /tmp/ccZ9C3p7.s:2577   .rodata.str1.1:0000000000000272 .LC117
     /tmp/ccZ9C3p7.s:2581   .rodata.str1.8:0000000000000698 .LC118
     /tmp/ccZ9C3p7.s:2584   .rodata.str1.1:0000000000000277 .LC119
     /tmp/ccZ9C3p7.s:2586   .rodata.str1.1:000000000000027b .LC120
     /tmp/ccZ9C3p7.s:2588   .rodata.str1.1:0000000000000280 .LC121
     /tmp/ccZ9C3p7.s:2602   .rodata.str1.8:0000000000000770 .LC125
     /tmp/ccZ9C3p7.s:2572   .rodata.str1.8:0000000000000658 .LC115
     /tmp/ccZ9C3p7.s:2612   .rodata.str1.8:0000000000000808 .LC128
     /tmp/ccZ9C3p7.s:2621   .rodata.str1.8:00000000000008d0 .LC131
     /tmp/ccZ9C3p7.s:2599   .rodata.str1.8:0000000000000718 .LC124
     /tmp/ccZ9C3p7.s:2618   .rodata.str1.8:0000000000000890 .LC130
     /tmp/ccZ9C3p7.s:2679   .rodata.str1.8:0000000000000a98 .LC150
     /tmp/ccZ9C3p7.s:2682   .rodata.str1.1:0000000000000352 .LC151
     /tmp/ccZ9C3p7.s:2631   .rodata.str1.8:0000000000000930 .LC134
     /tmp/ccZ9C3p7.s:2689   .rodata.str1.8:0000000000000b10 .LC153
     /tmp/ccZ9C3p7.s:2624   .rodata.str1.8:0000000000000910 .LC132
     /tmp/ccZ9C3p7.s:2627   .rodata.str1.1:00000000000002a6 .LC133
     /tmp/ccZ9C3p7.s:2686   .rodata.str1.8:0000000000000ac0 .LC152
     /tmp/ccZ9C3p7.s:2634   .rodata.str1.1:00000000000002c3 .LC135
     /tmp/ccZ9C3p7.s:2636   .rodata.str1.1:00000000000002d6 .LC136
     /tmp/ccZ9C3p7.s:2638   .rodata.str1.1:00000000000002ee .LC137
     /tmp/ccZ9C3p7.s:2640   .rodata.str1.1:0000000000000300 .LC138
     /tmp/ccZ9C3p7.s:2644   .rodata.str1.8:0000000000000968 .LC139
     /tmp/ccZ9C3p7.s:2647   .rodata.str1.8:0000000000000998 .LC140
     /tmp/ccZ9C3p7.s:2650   .rodata.str1.8:00000000000009c0 .LC141
     /tmp/ccZ9C3p7.s:2653   .rodata.str1.8:00000000000009e8 .LC142
     /tmp/ccZ9C3p7.s:2656   .rodata.str1.8:0000000000000a10 .LC143
     /tmp/ccZ9C3p7.s:2659   .rodata.str1.1:0000000000000315 .LC144
     /tmp/ccZ9C3p7.s:2615   .rodata.str1.8:0000000000000840 .LC129
     /tmp/ccZ9C3p7.s:2666   .rodata.str1.1:0000000000000318 .LC146
     /tmp/ccZ9C3p7.s:2670   .rodata.str1.8:0000000000000a70 .LC147
     /tmp/ccZ9C3p7.s:2673   .rodata.str1.1:0000000000000336 .LC148
     /tmp/ccZ9C3p7.s:2675   .rodata.str1.1:0000000000000339 .LC149
     /tmp/ccZ9C3p7.s:2663   .rodata.str1.8:0000000000000a38 .LC145

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
fread
flWriteChannelAsync
errPrefix
flAwaitAsyncWrites
__stack_chk_fail
bufInitialise
__errno_location
strtoul
malloc
strncpy
fopen
free
gettimeofday
flReadChannelAsyncSubmit
flReadChannelAsyncAwait
fwrite
__printf_chk
bufAppendConst
flReadChannel
fclose
flWriteChannel
flSelectConduit
dump
bufDestroy
stderr
__fprintf_chk
__popcountdi2
__isoc99_fscanf
flFreeError
arg_str0
arg_str1
arg_uint0
arg_lit0
arg_end
arg_nullcheck
flClose
arg_parse
stdout
arg_print_errors
arg_print_syntax
arg_print_glossary
flInitialise
flOpen
flLoadCustomFirmware
flSleep
fflush
flIsDeviceAvailable
flGetFirmwareVersion
flGetFirmwareID
strcmp
flFlashStandardFirmware
flIsNeroCapable
flIsCommCapable
jtagScanChain
flLoadStandardFirmware
flFlashCustomFirmware
flResetToggle
flMultiBitPortAccess
__sprintf_chk
flSaveFirmware
flIsFPGARunning
flProgram
readline
sigRegisterHandler
sigIsRaised
sleep
add_history
